<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="vamp-rdf-template-generator_8cpp" kind="file" language="C++">
    <compoundname>vamp-rdf-template-generator.cpp</compoundname>
    <includes refid="_plugin_host_adapter_8h" local="no">vamp-hostsdk/PluginHostAdapter.h</includes>
    <includes refid="_plugin_channel_adapter_8h" local="no">vamp-hostsdk/PluginChannelAdapter.h</includes>
    <includes refid="_plugin_input_domain_adapter_8h" local="no">vamp-hostsdk/PluginInputDomainAdapter.h</includes>
    <includes refid="_plugin_loader_8h" local="no">vamp-hostsdk/PluginLoader.h</includes>
    <includes refid="vamp_8h" local="no">vamp/vamp.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">sstream</includes>
    <includes local="no">cmath</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">cstring</includes>
    <incdepgraph>
      <node id="21650">
        <label>vamp-sdk/Plugin.h</label>
        <link refid="libvamp_2vamp-sdk_2plugin_8h"/>
        <childnode refid="21651" relation="include">
        </childnode>
        <childnode refid="21652" relation="include">
        </childnode>
        <childnode refid="21653" relation="include">
        </childnode>
        <childnode refid="21654" relation="include">
        </childnode>
        <childnode refid="21656" relation="include">
        </childnode>
        <childnode refid="21655" relation="include">
        </childnode>
      </node>
      <node id="21662">
        <label>vamp-hostsdk/PluginLoader.h</label>
        <link refid="_plugin_loader_8h"/>
        <childnode refid="21652" relation="include">
        </childnode>
        <childnode refid="21651" relation="include">
        </childnode>
        <childnode refid="21653" relation="include">
        </childnode>
        <childnode refid="21648" relation="include">
        </childnode>
        <childnode refid="21660" relation="include">
        </childnode>
      </node>
      <node id="21646">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp</label>
        <link refid="vamp-rdf-template-generator.cpp"/>
        <childnode refid="21647" relation="include">
        </childnode>
        <childnode refid="21659" relation="include">
        </childnode>
        <childnode refid="21661" relation="include">
        </childnode>
        <childnode refid="21662" relation="include">
        </childnode>
        <childnode refid="21658" relation="include">
        </childnode>
        <childnode refid="21657" relation="include">
        </childnode>
        <childnode refid="21663" relation="include">
        </childnode>
        <childnode refid="21664" relation="include">
        </childnode>
        <childnode refid="21665" relation="include">
        </childnode>
        <childnode refid="21666" relation="include">
        </childnode>
        <childnode refid="21667" relation="include">
        </childnode>
      </node>
      <node id="21658">
        <label>vamp/vamp.h</label>
        <link refid="vamp_8h"/>
      </node>
      <node id="21647">
        <label>vamp-hostsdk/PluginHostAdapter.h</label>
        <link refid="_plugin_host_adapter_8h"/>
        <childnode refid="21648" relation="include">
        </childnode>
        <childnode refid="21649" relation="include">
        </childnode>
        <childnode refid="21658" relation="include">
        </childnode>
        <childnode refid="21652" relation="include">
        </childnode>
      </node>
      <node id="21665">
        <label>cmath</label>
      </node>
      <node id="21651">
        <label>string</label>
      </node>
      <node id="21659">
        <label>vamp-hostsdk/PluginChannelAdapter.h</label>
        <link refid="_plugin_channel_adapter_8h"/>
        <childnode refid="21648" relation="include">
        </childnode>
        <childnode refid="21660" relation="include">
        </childnode>
      </node>
      <node id="21653">
        <label>map</label>
      </node>
      <node id="21661">
        <label>vamp-hostsdk/PluginInputDomainAdapter.h</label>
        <link refid="_plugin_input_domain_adapter_8h"/>
        <childnode refid="21648" relation="include">
        </childnode>
        <childnode refid="21660" relation="include">
        </childnode>
      </node>
      <node id="21663">
        <label>fstream</label>
      </node>
      <node id="21655">
        <label>plugguard.h</label>
        <link refid="plugguard_8h"/>
      </node>
      <node id="21654">
        <label>PluginBase.h</label>
        <link refid="vamp-sdk_2_plugin_base_8h"/>
        <childnode refid="21651" relation="include">
        </childnode>
        <childnode refid="21652" relation="include">
        </childnode>
        <childnode refid="21655" relation="include">
        </childnode>
      </node>
      <node id="21648">
        <label>hostguard.h</label>
        <link refid="hostguard_8h"/>
      </node>
      <node id="21660">
        <label>PluginWrapper.h</label>
        <link refid="_plugin_wrapper_8h"/>
        <childnode refid="21648" relation="include">
        </childnode>
        <childnode refid="21649" relation="include">
        </childnode>
      </node>
      <node id="21652">
        <label>vector</label>
      </node>
      <node id="21664">
        <label>sstream</label>
      </node>
      <node id="21656">
        <label>RealTime.h</label>
        <link refid="vamp-sdk_2_real_time_8h"/>
        <childnode refid="21657" relation="include">
        </childnode>
        <childnode refid="21651" relation="include">
        </childnode>
        <childnode refid="21655" relation="include">
        </childnode>
      </node>
      <node id="21666">
        <label>cstdlib</label>
      </node>
      <node id="21657">
        <label>iostream</label>
      </node>
      <node id="21649">
        <label>Plugin.h</label>
        <link refid="libvamp_2vamp-hostsdk_2plugin_8h"/>
        <childnode refid="21648" relation="include">
        </childnode>
        <childnode refid="21650" relation="include">
        </childnode>
      </node>
      <node id="21667">
        <label>cstring</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="vamp-rdf-template-generator_8cpp_1ae18b054ee657b919f1028fd8843cf383" prot="public" static="no" mutable="no">
        <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">string</ref></type>
        <definition>string programURI</definition>
        <argsstring></argsstring>
        <name>programURI</name>
        <initializer>= &quot;http://www.vamp-plugins.org/doap.rdf#template-generator&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp" line="34" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="vamp-rdf-template-generator_8cpp_1a2ef30c42cbc289d899a8be5d2d8f77d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void usage</definition>
        <argsstring>()</argsstring>
        <name>usage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp" line="36" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp" bodystart="36" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="vamp-rdf-template-generator_8cpp_1a5958fe1f3046eabfc75d689f2117315a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="xmltchar_8h_1a16a0f7e7053a679c9bf4289b441a2be7" kindref="member">T</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">string</ref></type>
        <definition>string to_string</definition>
        <argsstring>(const T &amp;t)</argsstring>
        <name>to_string</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltchar_8h_1a16a0f7e7053a679c9bf4289b441a2be7" kindref="member">T</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp" line="53" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp" bodystart="53" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="vamp-rdf-template-generator_8cpp_1a36fd94950a837dfc5c32782723122bb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">string</ref></type>
        <definition>string describe_namespaces</definition>
        <argsstring>(string pluginBundleBaseURI, string libname)</argsstring>
        <name>describe_namespaces</name>
        <param>
          <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">string</ref></type>
          <declname>pluginBundleBaseURI</declname>
        </param>
        <param>
          <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">string</ref></type>
          <declname>libname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp" line="60" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp" bodystart="60" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="vamp-rdf-template-generator_8cpp_1a76d5d8f056c4ed5da33622d2235c83d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">string</ref></type>
        <definition>string describe_doc</definition>
        <argsstring>(string describerURI, string pluginBundleBaseURI, string libname)</argsstring>
        <name>describe_doc</name>
        <param>
          <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">string</ref></type>
          <declname>describerURI</declname>
        </param>
        <param>
          <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">string</ref></type>
          <declname>pluginBundleBaseURI</declname>
        </param>
        <param>
          <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">string</ref></type>
          <declname>libname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp" line="77" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp" bodystart="77" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="vamp-rdf-template-generator_8cpp_1ae327ecd784dc0b8b57d91128883f8ef7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">string</ref></type>
        <definition>string describe_library</definition>
        <argsstring>(string libname, vector&lt; Plugin * &gt; plugins)</argsstring>
        <name>describe_library</name>
        <param>
          <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">string</ref></type>
          <declname>libname</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref> * &gt;</type>
          <declname>plugins</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp" line="92" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp" bodystart="92" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="vamp-rdf-template-generator_8cpp_1a93935d287b197f6b1a9a225339e61390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">string</ref></type>
        <definition>string describe_plugin</definition>
        <argsstring>(Plugin *plugin)</argsstring>
        <name>describe_plugin</name>
        <param>
          <type><ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref> *</type>
          <declname>plugin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp" line="109" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp" bodystart="109" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="vamp-rdf-template-generator_8cpp_1adf76aecc9b5a1f0943ea1283805a8017" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">string</ref></type>
        <definition>string describe_param</definition>
        <argsstring>(Plugin *plugin, Plugin::ParameterDescriptor p)</argsstring>
        <name>describe_param</name>
        <param>
          <type><ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref> *</type>
          <declname>plugin</declname>
        </param>
        <param>
          <type>Plugin::ParameterDescriptor</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp" line="142" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp" bodystart="142" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="vamp-rdf-template-generator_8cpp_1afc871c673e7b566e72fe6901540dce2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">string</ref></type>
        <definition>string describe_output</definition>
        <argsstring>(Plugin *plugin, Plugin::OutputDescriptor o)</argsstring>
        <name>describe_output</name>
        <param>
          <type><ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref> *</type>
          <declname>plugin</declname>
        </param>
        <param>
          <type>Plugin::OutputDescriptor</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp" line="197" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp" bodystart="197" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="vamp-rdf-template-generator_8cpp_1a01bcde0ed615408239a25743de52012c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">string</ref></type>
        <definition>string describe</definition>
        <argsstring>(vector&lt; Plugin * &gt; plugins, string pluginBundleBaseURI, string describerURI, string libname)</argsstring>
        <name>describe</name>
        <param>
          <type>vector&lt; <ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref> * &gt;</type>
          <declname>plugins</declname>
        </param>
        <param>
          <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">string</ref></type>
          <declname>pluginBundleBaseURI</declname>
        </param>
        <param>
          <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">string</ref></type>
          <declname>describerURI</declname>
        </param>
        <param>
          <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">string</ref></type>
          <declname>libname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp" line="354" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp" bodystart="354" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="vamp-rdf-template-generator_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp" line="381" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp" bodystart="381" bodyend="464"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/><sp/>vi:set<sp/>ts=8<sp/>sts=4<sp/>sw=4:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_plugin_host_adapter_8h" kindref="compound">vamp-hostsdk/PluginHostAdapter.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_plugin_channel_adapter_8h" kindref="compound">vamp-hostsdk/PluginChannelAdapter.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_plugin_input_domain_adapter_8h" kindref="compound">vamp-hostsdk/PluginInputDomainAdapter.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_plugin_loader_8h" kindref="compound">vamp-hostsdk/PluginLoader.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="vamp_8h" kindref="compound">vamp/vamp.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::cout;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::cin;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::cerr;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::getline;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::endl;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::vector;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::ofstream;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::ios;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_host_ext_1_1_plugin_loader" kindref="compound">Vamp::HostExt::PluginLoader</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin" kindref="compound">Vamp::Plugin</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//???</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="vamp-rdf-template-generator_8cpp_1ae18b054ee657b919f1028fd8843cf383" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="vamp-rdf-template-generator_8cpp_1ae18b054ee657b919f1028fd8843cf383" kindref="member">programURI</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;http://www.vamp-plugins.org/doap.rdf#template-generator&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="vamp-rdf-template-generator_8cpp_1a2ef30c42cbc289d899a8be5d2d8f77d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="vamp-rdf-template-generator_8cpp_1a2ef30c42cbc289d899a8be5d2d8f77d0" kindref="member">usage</ref>()</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;vamp-rdf-template-generator:<sp/>Create<sp/>a<sp/>skeleton<sp/>RDF<sp/>description<sp/>file<sp/>describing&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;a<sp/>Vamp<sp/>plugin<sp/>library<sp/>using<sp/>the<sp/>Vamp<sp/>ontology.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Usage:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vamp-rdf-template-generator<sp/>-i<sp/>vamp:soname[:plugin]<sp/>[vamp:soname[:plugin]<sp/>...]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vamp-rdf-template-generator<sp/>PLUGIN_BASE_URI<sp/>[<sp/>-m<sp/>YOUR_URI<sp/>]<sp/>[vamp:]soname[:plugin]<sp/>[[vamp:]soname[:plugin]<sp/>...]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Example:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>vamp-rdf-template-generator<sp/>http://vamp-plugins.org/rdf/plugins/<sp/>vamp-example-plugins&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(2);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="53" refid="vamp-rdf-template-generator_8cpp_1a5958fe1f3046eabfc75d689f2117315a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="vamp-rdf-template-generator_8cpp_1a5958fe1f3046eabfc75d689f2117315a" kindref="member">to_string</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="xmltchar_8h_1a16a0f7e7053a679c9bf4289b441a2be7" kindref="member">T</ref>&amp;<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vamp-sdk_2_real_time_8cpp_1af265757a67f4d68101c17dbc0ce1294e" kindref="member">std::stringstream</ref><sp/>ss;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="vamp-rdf-template-generator_8cpp_1a36fd94950a837dfc5c32782723122bb3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="vamp-rdf-template-generator_8cpp_1a36fd94950a837dfc5c32782723122bb3" kindref="member">describe_namespaces</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>pluginBundleBaseURI,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>libname)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>res=\</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;@prefix<sp/>rdfs:<sp/><sp/><sp/><sp/><sp/>&lt;http://www.w3.org/2000/01/rdf-schema#&gt;<sp/>.\n\</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral">@prefix<sp/>xsd:<sp/><sp/><sp/><sp/><sp/><sp/>&lt;http://www.w3.org/2001/XMLSchema#&gt;<sp/>.\n\</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral">@prefix<sp/>vamp:<sp/><sp/><sp/><sp/><sp/>&lt;http://purl.org/ontology/vamp/&gt;<sp/>.\n\</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral">@prefix<sp/>plugbase:<sp/>&lt;&quot;</highlight><highlight class="normal">+pluginBundleBaseURI+libname+</highlight><highlight class="stringliteral">&quot;#&gt;<sp/>.\n\</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral">@prefix<sp/>owl:<sp/><sp/><sp/><sp/><sp/><sp/>&lt;http://www.w3.org/2002/07/owl#&gt;<sp/>.\n\</highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral">@prefix<sp/>dc:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;http://purl.org/dc/elements/1.1/&gt;<sp/>.\n\</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral">@prefix<sp/>af:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;http://purl.org/ontology/af/&gt;<sp/>.\n\</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral">@prefix<sp/>foaf:<sp/><sp/><sp/><sp/><sp/>&lt;http://xmlns.com/foaf/0.1/&gt;<sp/>.\n\</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral">@prefix<sp/>cc:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;http://web.resource.org/cc/&gt;<sp/>.\n\</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral">@prefix<sp/>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;#&gt;<sp/>.\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="vamp-rdf-template-generator_8cpp_1a76d5d8f056c4ed5da33622d2235c83d7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="vamp-rdf-template-generator_8cpp_1a76d5d8f056c4ed5da33622d2235c83d7" kindref="member">describe_doc</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>describerURI,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>pluginBundleBaseURI,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>libname)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>res=\</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;&gt;<sp/><sp/>a<sp/><sp/><sp/>vamp:PluginDescription<sp/>;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(describerURI<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>foaf:maker<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&quot;</highlight><highlight class="normal">+describerURI+</highlight><highlight class="stringliteral">&quot;&gt;<sp/>;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>foaf:maker<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&quot;</highlight><highlight class="normal">+<ref refid="vamp-rdf-template-generator_8cpp_1ae18b054ee657b919f1028fd8843cf383" kindref="member">programURI</ref>+</highlight><highlight class="stringliteral">&quot;&gt;<sp/>;\n\</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>foaf:primaryTopic<sp/><sp/><sp/>&lt;&quot;</highlight><highlight class="normal">+pluginBundleBaseURI+libname+</highlight><highlight class="stringliteral">&quot;&gt;<sp/>.\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="vamp-rdf-template-generator_8cpp_1ae327ecd784dc0b8b57d91128883f8ef7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="vamp-rdf-template-generator_8cpp_1ae327ecd784dc0b8b57d91128883f8ef7" kindref="member">describe_library</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>libname,<sp/>vector&lt;Plugin<sp/>*&gt;<sp/>plugins)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>res=\</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">+libname+</highlight><highlight class="stringliteral">&quot;<sp/>a<sp/><sp/>vamp:PluginLibrary<sp/>;\n\</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:identifier<sp/>\&quot;&quot;</highlight><highlight class="normal">+libname+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>plugins.size();<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>;<sp/>\n\</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:available_plugin<sp/>plugbase:&quot;</highlight><highlight class="normal">+plugins[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;getIdentifier();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>;<sp/>\n\</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral">#<sp/><sp/><sp/>foaf:page<sp/>&lt;Place<sp/>more-information<sp/>HTML<sp/>page<sp/>URL<sp/>here<sp/>and<sp/>uncomment&gt;<sp/>;\n\</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>.\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="vamp-rdf-template-generator_8cpp_1a93935d287b197f6b1a9a225339e61390" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="vamp-rdf-template-generator_8cpp_1a93935d287b197f6b1a9a225339e61390" kindref="member">describe_plugin</ref>(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref>*<sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>res=\</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;plugbase:&quot;</highlight><highlight class="normal">+plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1a0d1947bb05097718af83eefe7a1910cd" kindref="member">getIdentifier</ref>()+</highlight><highlight class="stringliteral">&quot;<sp/>a<sp/><sp/><sp/>vamp:Plugin<sp/>;\n\</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dc:title<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;&quot;</highlight><highlight class="normal">+plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1ada907f5fa10e503005bdf445f03f7adf" kindref="member">getName</ref>()+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;&quot;</highlight><highlight class="normal">+plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1ada907f5fa10e503005bdf445f03f7adf" kindref="member">getName</ref>()+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dc:description<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;\&quot;\&quot;&quot;</highlight><highlight class="normal">+plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1ab210db7ce8f2eaa6cfddf2c7e64555ad" kindref="member">getDescription</ref>()+</highlight><highlight class="stringliteral">&quot;\&quot;\&quot;\&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>foaf:maker<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<sp/>foaf:name<sp/>\&quot;&quot;</highlight><highlight class="normal">+plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1a6d54bf690c421c7865dccdfd0dda23a8" kindref="member">getMaker</ref>()+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>]<sp/>;<sp/>#<sp/>FIXME<sp/>could<sp/>give<sp/>plugin<sp/>author&apos;s<sp/>URI<sp/>here\n\</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dc:rights<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;\&quot;\&quot;&quot;</highlight><highlight class="normal">+plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1ae20b78e081f13a5d71b17e89e05d48e2" kindref="member">getCopyright</ref>()+</highlight><highlight class="stringliteral">&quot;\&quot;\&quot;\&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral">#<sp/><sp/><sp/>cc:license<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;Place<sp/>plugin<sp/>license<sp/>URI<sp/>here<sp/>and<sp/>uncomment&gt;<sp/>;<sp/>\n\</highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:identifier<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;&quot;</highlight><highlight class="normal">+plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1a0d1947bb05097718af83eefe7a1910cd" kindref="member">getIdentifier</ref>()+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="120"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:vamp_API_version<sp/>vamp:api_version_&quot;</highlight><highlight class="normal">+<ref refid="vamp-rdf-template-generator_8cpp_1a5958fe1f3046eabfc75d689f2117315a" kindref="member">to_string</ref>(plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1a8fd2c48291c64b790f0efb8948508dcf" kindref="member">getVampApiVersion</ref>())+</highlight><highlight class="stringliteral">&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="121"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>owl:versionInfo<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;&quot;</highlight><highlight class="normal">+<ref refid="vamp-rdf-template-generator_8cpp_1a5958fe1f3046eabfc75d689f2117315a" kindref="member">to_string</ref>(plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1a315c884db72db5cef0891eaccb6d12cc" kindref="member">getPluginVersion</ref>())+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plugin-&gt;<ref refid="class_vamp_1_1_plugin_1adfbdde456a19b4751dfa65dfa72e5458" kindref="member">getInputDomain</ref>()<sp/>==<sp/><ref refid="class_vamp_1_1_plugin_1a39cb7649d6dcc20e4cb1640cd55907bcaa30e7877ab33f76acbdca28607e6ab53" kindref="member">Vamp::Plugin::FrequencyDomain</ref>)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>vamp:input_domain<sp/><sp/><sp/><sp/><sp/>vamp:FrequencyDomain<sp/>;\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>vamp:input_domain<sp/><sp/><sp/><sp/><sp/>vamp:TimeDomain<sp/>;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>Plugin::ParameterList<sp/><ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref><sp/>=<sp/>plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1aac3e49b3b66cacfbb768dfdf07444f21" kindref="member">getParameterDescriptors</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!params.empty())<sp/>res+=</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Plugin::ParameterList::const_iterator<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>params.begin();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>!=<sp/>params.end();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>vamp:parameter<sp/><sp/><sp/>plugbase:&quot;</highlight><highlight class="normal">+plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1a0d1947bb05097718af83eefe7a1910cd" kindref="member">getIdentifier</ref>()+</highlight><highlight class="stringliteral">&quot;_param_&quot;</highlight><highlight class="normal">+(*i).identifier+</highlight><highlight class="stringliteral">&quot;<sp/>;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!params.empty())<sp/>res+=</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>Plugin::OutputList<sp/>outputs<sp/>=<sp/>plugin-&gt;<ref refid="class_vamp_1_1_plugin_1a37b9f286c79c0d682c7fdfddaebf732a" kindref="member">getOutputDescriptors</ref>();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Plugin::OutputList::const_iterator<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>outputs.begin();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>!=<sp/>outputs.end();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>vamp:output<sp/><sp/><sp/><sp/><sp/><sp/>plugbase:&quot;</highlight><highlight class="normal">+plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1a0d1947bb05097718af83eefe7a1910cd" kindref="member">getIdentifier</ref>()+</highlight><highlight class="stringliteral">&quot;_output_&quot;</highlight><highlight class="normal">+(*i).identifier+</highlight><highlight class="stringliteral">&quot;<sp/>;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="vamp-rdf-template-generator_8cpp_1adf76aecc9b5a1f0943ea1283805a8017" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="vamp-rdf-template-generator_8cpp_1adf76aecc9b5a1f0943ea1283805a8017" kindref="member">describe_param</ref>(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/>Plugin::ParameterDescriptor<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//FIXME:<sp/>dc:format<sp/>and<sp/>vamp:unit<sp/>are<sp/>the<sp/>same???</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Should<sp/>be<sp/>a<sp/>QUantizedParameter<sp/>also<sp/>a<sp/>Parameter??</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p.isQuantized){</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>res=\</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;plugbase:&quot;</highlight><highlight class="normal">+plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1a0d1947bb05097718af83eefe7a1910cd" kindref="member">getIdentifier</ref>()+</highlight><highlight class="stringliteral">&quot;_param_&quot;</highlight><highlight class="normal">+p.identifier+</highlight><highlight class="stringliteral">&quot;<sp/>a<sp/><sp/>vamp:QuantizedParameter<sp/>;\n\</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:identifier<sp/><sp/><sp/><sp/><sp/>\&quot;&quot;</highlight><highlight class="normal">+p.identifier+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dc:title<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;&quot;</highlight><highlight class="normal">+p.name+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dc:format<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;&quot;</highlight><highlight class="normal">+p.unit+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:min_value<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">+<ref refid="vamp-rdf-template-generator_8cpp_1a5958fe1f3046eabfc75d689f2117315a" kindref="member">to_string</ref>(p.minValue)+</highlight><highlight class="stringliteral">&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:max_value<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">+<ref refid="vamp-rdf-template-generator_8cpp_1a5958fe1f3046eabfc75d689f2117315a" kindref="member">to_string</ref>(p.maxValue)+</highlight><highlight class="stringliteral">&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:unit<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;&quot;</highlight><highlight class="normal">+p.unit+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:quantize_step<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">+<ref refid="vamp-rdf-template-generator_8cpp_1a5958fe1f3046eabfc75d689f2117315a" kindref="member">to_string</ref>(p.quantizeStep)+</highlight><highlight class="stringliteral">&quot;<sp/><sp/>;\n\</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:default_value<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">+<ref refid="vamp-rdf-template-generator_8cpp_1a5958fe1f3046eabfc75d689f2117315a" kindref="member">to_string</ref>(p.defaultValue)+</highlight><highlight class="stringliteral">&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:value_names<sp/><sp/><sp/><sp/><sp/>(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i+1<sp/>&lt;<sp/>p.valueNames.size();<sp/>i++)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/>\&quot;&quot;</highlight><highlight class="normal">+p.valueNames[i]+</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(i<sp/>&lt;<sp/>p.valueNames.size())</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/>\&quot;&quot;</highlight><highlight class="normal">+p.valueNames[i]+</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;);\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>res=\</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;plugbase:&quot;</highlight><highlight class="normal">+plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1a0d1947bb05097718af83eefe7a1910cd" kindref="member">getIdentifier</ref>()+</highlight><highlight class="stringliteral">&quot;_param_&quot;</highlight><highlight class="normal">+p.identifier+</highlight><highlight class="stringliteral">&quot;<sp/>a<sp/><sp/>vamp:Parameter<sp/>;\n\</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:identifier<sp/><sp/><sp/><sp/><sp/>\&quot;&quot;</highlight><highlight class="normal">+p.identifier+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dc:title<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;&quot;</highlight><highlight class="normal">+p.name+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dc:format<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;&quot;</highlight><highlight class="normal">+p.unit+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:min_value<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">+<ref refid="vamp-rdf-template-generator_8cpp_1a5958fe1f3046eabfc75d689f2117315a" kindref="member">to_string</ref>(p.minValue)+</highlight><highlight class="stringliteral">&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:max_value<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">+<ref refid="vamp-rdf-template-generator_8cpp_1a5958fe1f3046eabfc75d689f2117315a" kindref="member">to_string</ref>(p.maxValue)+</highlight><highlight class="stringliteral">&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:unit<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;&quot;</highlight><highlight class="normal">+p.unit+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/><sp/>;\n\</highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:default_value<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">+<ref refid="vamp-rdf-template-generator_8cpp_1a5958fe1f3046eabfc75d689f2117315a" kindref="member">to_string</ref>(p.defaultValue)+</highlight><highlight class="stringliteral">&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:value_names<sp/><sp/><sp/><sp/><sp/>(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i+1<sp/>&lt;<sp/>p.valueNames.size();<sp/>i++)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/>\&quot;&quot;</highlight><highlight class="normal">+p.valueNames[i]+</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(i<sp/>&lt;<sp/>p.valueNames.size())</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/>\&quot;&quot;</highlight><highlight class="normal">+p.valueNames[i]+</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;);\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="vamp-rdf-template-generator_8cpp_1afc871c673e7b566e72fe6901540dce2f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="vamp-rdf-template-generator_8cpp_1afc871c673e7b566e72fe6901540dce2f" kindref="member">describe_output</ref>(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/>Plugin::OutputDescriptor<sp/><ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>)</highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>need<sp/>to<sp/>distinguish<sp/>here<sp/>between<sp/>different<sp/>output<sp/>types:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//Quantize<sp/>or<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//KnownExtents<sp/>or<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//Data<sp/>output<sp/>classification:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DenseOutput</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//SparseOutput</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TrackLevelOutput</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SparseOutput:<sp/>variable<sp/>sample<sp/>rate.<sp/>Events<sp/>are<sp/>not<sp/>evenly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>spaced<sp/>so<sp/>we<sp/>need<sp/>to<sp/>record<sp/>the<sp/>time<sp/>associated<sp/>with<sp/>the<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>it<sp/>its<sp/>not<sp/>ensured<sp/>that<sp/>we<sp/>have<sp/>an<sp/>event<sp/>after<sp/>the<sp/>next<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(but<sp/>there<sp/>is<sp/>not<sp/>time<sp/>to<sp/>set<sp/>the<sp/>duration,<sp/>it<sp/>has<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculated<sp/>as<sp/>the<sp/>different<sp/>between<sp/>2<sp/>different<sp/>events).<sp/>The</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>timestamp<sp/>must<sp/>be<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o.sampleType<sp/>==<sp/>Plugin::OutputDescriptor::VariableSampleRate<sp/>||</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!o.hasFixedBinCount)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res=\</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;plugbase:&quot;</highlight><highlight class="normal">+plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1a0d1947bb05097718af83eefe7a1910cd" kindref="member">getIdentifier</ref>()+</highlight><highlight class="stringliteral">&quot;_output_&quot;</highlight><highlight class="normal">+o.identifier+</highlight><highlight class="stringliteral">&quot;<sp/>a<sp/><sp/>vamp:SparseOutput<sp/>;\n\</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:identifier<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;&quot;</highlight><highlight class="normal">+o.identifier+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dc:title<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;&quot;</highlight><highlight class="normal">+o.name+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dc:description<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;\&quot;\&quot;&quot;</highlight><highlight class="normal">+o.description+</highlight><highlight class="stringliteral">&quot;\&quot;\&quot;\&quot;<sp/><sp/>;\n\</highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:fixed_bin_count<sp/><sp/>\&quot;&quot;</highlight><highlight class="normal">+(o.hasFixedBinCount<sp/>==<sp/>1<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">)+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="229"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:unit<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;&quot;</highlight><highlight class="normal">+(o.unit)+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//another<sp/>type<sp/>of<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(o.isQuantized){</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>a<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vamp:QuantizedOutput<sp/>;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>vamp:quantize_step<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">+<ref refid="vamp-rdf-template-generator_8cpp_1a5958fe1f3046eabfc75d689f2117315a" kindref="member">to_string</ref>(o.quantizeStep)+</highlight><highlight class="stringliteral">&quot;<sp/><sp/>;\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>yet<sp/>another<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(o.hasKnownExtents){</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>a<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vamp:KnownExtentsOutput<sp/>;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>vamp:min_value<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">+<ref refid="vamp-rdf-template-generator_8cpp_1a5958fe1f3046eabfc75d689f2117315a" kindref="member">to_string</ref>(o.minValue)+</highlight><highlight class="stringliteral">&quot;<sp/><sp/>;\n&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>vamp:max_value<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">+<ref refid="vamp-rdf-template-generator_8cpp_1a5958fe1f3046eabfc75d689f2117315a" kindref="member">to_string</ref>(o.maxValue)+</highlight><highlight class="stringliteral">&quot;<sp/><sp/>;\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>?<sp/>Bin<sp/>names<sp/>may<sp/>vary<sp/>based<sp/>on<sp/>plugin<sp/>setup,<sp/>so<sp/>including<sp/>them<sp/>here<sp/>might<sp/>be<sp/>misleading...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o.hasFixedBinCount)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>vamp:bin_count<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">+<ref refid="vamp-rdf-template-generator_8cpp_1a5958fe1f3046eabfc75d689f2117315a" kindref="member">to_string</ref>(o.binCount)+</highlight><highlight class="stringliteral">&quot;<sp/>;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveBinNames<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>o.binNames.size();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o.binNames[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveBinNames<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haveBinNames)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>vamp:bin_names<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i+1<sp/>&lt;<sp/>o.binNames.size();<sp/>i++)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/>\&quot;&quot;</highlight><highlight class="normal">+o.binNames[i]+</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(i<sp/>&lt;<sp/>o.binNames.size())</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/>\&quot;&quot;</highlight><highlight class="normal">+o.binNames[i]+</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;);\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>vamp:sample_type<sp/><sp/><sp/><sp/><sp/><sp/>vamp:VariableSampleRate<sp/>;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o.sampleRate<sp/>&gt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>vamp:sample_rate<sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">+<ref refid="vamp-rdf-template-generator_8cpp_1a5958fe1f3046eabfc75d689f2117315a" kindref="member">to_string</ref>(o.sampleRate)+</highlight><highlight class="stringliteral">&quot;<sp/>;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>we<sp/>do<sp/>not<sp/>have<sp/>SparseOutput,<sp/>then<sp/>we<sp/>have<sp/>DenseOutput.<sp/>TrackLevelOutput<sp/>can<sp/>not<sp/>be<sp/>inferred<sp/>from<sp/>the<sp/>plugin<sp/>directly<sp/>without<sp/>actually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//running<sp/>the<sp/>plugin.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res=\</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;plugbase:&quot;</highlight><highlight class="normal">+plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1a0d1947bb05097718af83eefe7a1910cd" kindref="member">getIdentifier</ref>()+</highlight><highlight class="stringliteral">&quot;_output_&quot;</highlight><highlight class="normal">+o.identifier+</highlight><highlight class="stringliteral">&quot;<sp/>a<sp/><sp/>vamp:DenseOutput<sp/>;\n\</highlight></codeline>
<codeline lineno="284"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:identifier<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;&quot;</highlight><highlight class="normal">+o.identifier+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="285"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dc:title<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;&quot;</highlight><highlight class="normal">+o.name+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="286"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dc:description<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;\&quot;\&quot;&quot;</highlight><highlight class="normal">+o.description+</highlight><highlight class="stringliteral">&quot;\&quot;\&quot;\&quot;<sp/><sp/>;\n\</highlight></codeline>
<codeline lineno="287"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:fixed_bin_count<sp/><sp/>\&quot;&quot;</highlight><highlight class="normal">+(o.hasFixedBinCount<sp/>==<sp/>1<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">)+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>;\n\</highlight></codeline>
<codeline lineno="288"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vamp:unit<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\&quot;&quot;</highlight><highlight class="normal">+(o.unit)+</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//another<sp/>type<sp/>of<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(o.isQuantized){</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>a<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vamp:QuantizedOutput<sp/>;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>vamp:quantize_step<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">+<ref refid="vamp-rdf-template-generator_8cpp_1a5958fe1f3046eabfc75d689f2117315a" kindref="member">to_string</ref>(o.quantizeStep)+</highlight><highlight class="stringliteral">&quot;<sp/><sp/>;\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>yet<sp/>another<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(o.hasKnownExtents){</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>a<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vamp:KnownExtentsOutput<sp/>;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>vamp:min_value<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">+<ref refid="vamp-rdf-template-generator_8cpp_1a5958fe1f3046eabfc75d689f2117315a" kindref="member">to_string</ref>(o.minValue)+</highlight><highlight class="stringliteral">&quot;<sp/><sp/>;\n&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>vamp:max_value<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">+<ref refid="vamp-rdf-template-generator_8cpp_1a5958fe1f3046eabfc75d689f2117315a" kindref="member">to_string</ref>(o.maxValue)+</highlight><highlight class="stringliteral">&quot;<sp/><sp/>;\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>?<sp/>Bin<sp/>names<sp/>may<sp/>vary<sp/>based<sp/>on<sp/>plugin<sp/>setup,<sp/>so<sp/>including<sp/>them<sp/>here<sp/>might<sp/>be<sp/>misleading...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o.hasFixedBinCount)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>vamp:bin_count<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">+<ref refid="vamp-rdf-template-generator_8cpp_1a5958fe1f3046eabfc75d689f2117315a" kindref="member">to_string</ref>(o.binCount)+</highlight><highlight class="stringliteral">&quot;<sp/>;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveBinNames<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>o.binNames.size();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o.binNames[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveBinNames<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haveBinNames)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>vamp:bin_names<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i+1<sp/>&lt;<sp/>o.binNames.size();<sp/>i++)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/>\&quot;&quot;</highlight><highlight class="normal">+o.binNames[i]+</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(i<sp/>&lt;<sp/>o.binNames.size())</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/>\&quot;&quot;</highlight><highlight class="normal">+o.binNames[i]+</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;);\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o.sampleType<sp/>==<sp/>Plugin::OutputDescriptor::FixedSampleRate)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>vamp:sample_type<sp/><sp/><sp/><sp/><sp/><sp/>vamp:FixedSampleRate<sp/>;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>vamp:sample_rate<sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">+<ref refid="vamp-rdf-template-generator_8cpp_1a5958fe1f3046eabfc75d689f2117315a" kindref="member">to_string</ref>(o.sampleRate)+</highlight><highlight class="stringliteral">&quot;<sp/>;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o.sampleType<sp/>==<sp/>Plugin::OutputDescriptor::OneSamplePerStep)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>vamp:sample_type<sp/><sp/><sp/><sp/><sp/><sp/>vamp:OneSamplePerStep<sp/>;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Incomprehensible<sp/>sampleType<sp/>for<sp/>output<sp/>descriptor<sp/>&quot;</highlight><highlight class="normal">+o.identifier&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>!&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//There<sp/>is<sp/>no<sp/>way<sp/>to<sp/>know<sp/>this<sp/>in<sp/>advance,<sp/>but<sp/>we<sp/>can<sp/>use<sp/>the<sp/>km<sp/>a<sp/>bit<sp/>for<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;#<sp/><sp/><sp/>vamp:computes_event_type<sp/><sp/><sp/>&lt;Place<sp/>event<sp/>type<sp/>URI<sp/>here<sp/>and<sp/>uncomment&gt;<sp/>;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;#<sp/><sp/><sp/>vamp:computes_feature<sp/><sp/><sp/><sp/><sp/><sp/>&lt;Place<sp/>feature<sp/>attribute<sp/>URI<sp/>here<sp/>and<sp/>uncomment&gt;<sp/>;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;#<sp/><sp/><sp/>vamp:computes_signal_type<sp/><sp/>&lt;Place<sp/>signal<sp/>type<sp/>URI<sp/>here<sp/>and<sp/>uncomment&gt;<sp/>;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>res+=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="vamp-rdf-template-generator_8cpp_1a01bcde0ed615408239a25743de52012c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="vamp-rdf-template-generator_8cpp_1a01bcde0ed615408239a25743de52012c" kindref="member">describe</ref>(vector&lt;Plugin<sp/>*&gt;<sp/>plugins,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>pluginBundleBaseURI,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>describerURI,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>libname)</highlight></codeline>
<codeline lineno="356"><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>res<sp/>=<sp/><ref refid="vamp-rdf-template-generator_8cpp_1a36fd94950a837dfc5c32782723122bb3" kindref="member">describe_namespaces</ref>(pluginBundleBaseURI,<sp/>libname);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>+=<sp/><ref refid="vamp-rdf-template-generator_8cpp_1a76d5d8f056c4ed5da33622d2235c83d7" kindref="member">describe_doc</ref>(describerURI,<sp/>pluginBundleBaseURI,<sp/>libname);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>+=<sp/><ref refid="vamp-rdf-template-generator_8cpp_1ae327ecd784dc0b8b57d91128883f8ef7" kindref="member">describe_library</ref>(libname,<sp/>plugins);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>plugins.size();<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref><sp/>=<sp/>plugins[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>+=<sp/><ref refid="vamp-rdf-template-generator_8cpp_1a93935d287b197f6b1a9a225339e61390" kindref="member">describe_plugin</ref>(plugin);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Plugin::ParameterList<sp/><ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref><sp/>=<sp/>plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1aac3e49b3b66cacfbb768dfdf07444f21" kindref="member">getParameterDescriptors</ref>();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Plugin::ParameterList::const_iterator<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>params.begin();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>!=<sp/>params.end();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>+=<sp/><ref refid="vamp-rdf-template-generator_8cpp_1adf76aecc9b5a1f0943ea1283805a8017" kindref="member">describe_param</ref>(plugin,<sp/>*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Plugin::OutputList<sp/>outputs<sp/>=<sp/>plugin-&gt;<ref refid="class_vamp_1_1_plugin_1a37b9f286c79c0d682c7fdfddaebf732a" kindref="member">getOutputDescriptors</ref>();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Plugin::OutputList::const_iterator<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>outputs.begin();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>!=<sp/>outputs.end();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>+=<sp/><ref refid="vamp-rdf-template-generator_8cpp_1afc871c673e7b566e72fe6901540dce2f" kindref="member">describe_output</ref>(plugin,<sp/>*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="vamp-rdf-template-generator_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="vamp-rdf-template-generator_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>)</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&lt;<sp/>3)<sp/><ref refid="vamp-rdf-template-generator_8cpp_1a2ef30c42cbc289d899a8be5d2d8f77d0" kindref="member">usage</ref>();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>interactive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(argv[1],<sp/></highlight><highlight class="stringliteral">&quot;-i&quot;</highlight><highlight class="normal">))<sp/>interactive<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!interactive<sp/>&amp;&amp;<sp/>argc<sp/>&lt;<sp/>3)<sp/><ref refid="vamp-rdf-template-generator_8cpp_1a2ef30c42cbc289d899a8be5d2d8f77d0" kindref="member">usage</ref>();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>pluginBundleBaseURI,<sp/>describerURI;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argidx<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!interactive)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pluginBundleBaseURI<sp/>=<sp/>argv[1];</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(argv[2],<sp/></highlight><highlight class="stringliteral">&quot;-m&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&lt;<sp/>5)<sp/><ref refid="vamp-rdf-template-generator_8cpp_1a2ef30c42cbc289d899a8be5d2d8f77d0" kindref="member">usage</ref>();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>describerURI<sp/>=<sp/>argv[3];</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argidx<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>the<sp/>base<sp/>URI<sp/>for<sp/>the<sp/>plugin<sp/>bundle<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getline(cin,<sp/>pluginBundleBaseURI);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>your<sp/>URI<sp/>(empty<sp/>to<sp/>omit)<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getline(cin,<sp/>describerURI);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;Plugin<sp/>*&gt;<sp/>plugins;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>libname;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_host_ext_1_1_plugin_loader" kindref="compound">PluginLoader</ref><sp/>*loader<sp/>=<sp/>PluginLoader::getInstance();</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(argidx<sp/>&lt;<sp/>argc)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>pluginName<sp/>=<sp/>argv[argidx];</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pluginName.substr(0,<sp/>5)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;vamp:&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pluginName<sp/>=<sp/>pluginName.substr(5);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>mylibname<sp/>=<sp/>pluginName.substr(0,<sp/>pluginName.find(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libname<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>libname<sp/>=<sp/>mylibname;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(libname<sp/>!=<sp/>mylibname)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>All<sp/>plugins<sp/>specified<sp/>on<sp/>command<sp/>line<sp/>must<sp/>originate<sp/>in<sp/>the<sp/>same<sp/>library&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mylibname<sp/>==<sp/>pluginName)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>pluginName<sp/>is<sp/>a<sp/>library,<sp/>not<sp/>a<sp/>plugin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PluginLoader::PluginKeyList<sp/>list<sp/>=<sp/>loader-&gt;<ref refid="class_vamp_1_1_host_ext_1_1_plugin_loader_1aec450c2928b1ae5318d45972722dd16b" kindref="member">listPlugins</ref>();</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>list.size();<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>thislibname<sp/>=<sp/>list[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].substr(0,<sp/>list[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].find(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(thislibname<sp/>!=<sp/>mylibname)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref><sp/>=<sp/>loader-&gt;<ref refid="class_vamp_1_1_host_ext_1_1_plugin_loader_1a2154970381343edef629482bdafea7e2" kindref="member">loadPlugin</ref>(list[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<sp/>44100);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!plugin)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>Plugin<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>list[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>could<sp/>not<sp/>be<sp/>loaded&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plugins.push_back(plugin);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plugins.empty())<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>Plugin<sp/>library<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mylibname<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>does<sp/>not<sp/>exist,<sp/>could<sp/>not<sp/>be<sp/>opened,<sp/>or<sp/>contains<sp/>no<sp/>plugins&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>pluginName<sp/>is<sp/>a<sp/>plugin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref><sp/>=<sp/>loader-&gt;<ref refid="class_vamp_1_1_host_ext_1_1_plugin_loader_1a2154970381343edef629482bdafea7e2" kindref="member">loadPlugin</ref>(pluginName,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(44100));</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!plugin)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>Plugin<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pluginName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>could<sp/>not<sp/>be<sp/>loaded&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plugins.push_back(plugin);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++argidx;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/><ref refid="vamp-rdf-template-generator_8cpp_1a01bcde0ed615408239a25743de52012c" kindref="member">describe</ref>(plugins,<sp/>pluginBundleBaseURI,<sp/>describerURI,<sp/>libname)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/rdf/generator/vamp-rdf-template-generator.cpp"/>
  </compounddef>
</doxygen>
