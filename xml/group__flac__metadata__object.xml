<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="group__flac__metadata__object" kind="group">
    <compoundname>flac_metadata_object</compoundname>
    <title>FLAC/metadata.h: metadata object methods</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__flac__metadata__object_1ga0d21a62648d8c5321b4b47f8ee5a52f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
        <definition>FLAC_API FLAC__StreamMetadata* FLAC__metadata_object_new</definition>
        <argsstring>(FLAC__MetadataType type)</argsstring>
        <name>FLAC__metadata_object_new</name>
        <param>
          <type><ref refid="group__flac__format_1gac71714ba8ddbbd66d26bb78a427fac01" kindref="member">FLAC__MetadataType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new metadata object instance of the given type.</para><para>The object will be &quot;empty&quot;; i.e. values and data pointers will be <computeroutput>0</computeroutput>, with the exception of FLAC__METADATA_TYPE_VORBIS_COMMENT, which will have the vendor string set (but zero comments).</para><para>Do not pass in a value greater than or equal to <emphasis>FLAC__METADATA_TYPE_UNDEFINED</emphasis> unless you really know what you&apos;re doing.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of object to create </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__StreamMetadata*</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>NULL</computeroutput> if there was an error allocating memory or the type code is greater than FLAC__MAX_METADATA_TYPE_CODE, else the new instance. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1313" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="439" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga16b828b246e9af941e3e616e6bcd74c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
        <definition>FLAC_API FLAC__StreamMetadata* FLAC__metadata_object_clone</definition>
        <argsstring>(const FLAC__StreamMetadata *object)</argsstring>
        <name>FLAC__metadata_object_clone</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a copy of an existing metadata object.</para><para>The copy is a &quot;deep&quot; copy, i.e. dynamically allocated data within the object is also copied. The caller takes ownership of the new block and is responsible for freeing it with <ref refid="group__flac__metadata__object_1ga66bbe27dba68ba77be5af83986a280ea" kindref="member">FLAC__metadata_object_delete()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to object to copy.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__StreamMetadata*</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>NULL</computeroutput> if there was an error allocating memory, else the new instance. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1327" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="530" bodyend="635"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga66bbe27dba68ba77be5af83986a280ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>FLAC_API void FLAC__metadata_object_delete</definition>
        <argsstring>(FLAC__StreamMetadata *object)</argsstring>
        <name>FLAC__metadata_object_delete</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free a metadata object. Deletes the object pointed to by <emphasis>object</emphasis>.</para><para>The delete is a &quot;deep&quot; delete, i.e. dynamically allocated data within the object is also deleted.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing object.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1338" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="696" bodyend="700"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1gac834137d4837c304ca5db4c8407900bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_is_equal</definition>
        <argsstring>(const FLAC__StreamMetadata *block1, const FLAC__StreamMetadata *block2)</argsstring>
        <name>FLAC__metadata_object_is_equal</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>block1</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>block2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compares two metadata objects.</para><para>The compare is &quot;deep&quot;, i.e. dynamically allocated data within the object is also compared.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>block1</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block2</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing object.  <programlisting><codeline><highlight class="normal">block1<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">block2<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> if objects are identical, else <computeroutput>false</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1353" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="875" bodyend="907"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga8f7fbaa68d5637e2409a053ec2ff744d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_application_set_data</definition>
        <argsstring>(FLAC__StreamMetadata *object, FLAC__byte *data, unsigned length, FLAC__bool copy)</argsstring>
        <name>FLAC__metadata_object_application_set_data</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the application data of an APPLICATION block.</para><para>If <emphasis>copy</emphasis> is <computeroutput>true</computeroutput>, a copy of the data is stored; otherwise, the object takes ownership of the pointer. The existing data will be freed if this function is successful, otherwise the original data will remain if <emphasis>copy</emphasis> is <computeroutput>true</computeroutput> and malloc() fails.</para><para><simplesect kind="note"><para>It is safe to pass a const pointer to <emphasis>data</emphasis> if <emphasis>copy</emphasis> is <computeroutput>true</computeroutput>.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing APPLICATION object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the data to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of <emphasis>data</emphasis> in bytes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>See above.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_APPLICATION<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal"><sp/>(data<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>length<sp/>&gt;<sp/>0)<sp/>||</highlight></codeline>
<codeline><highlight class="normal">(data<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>length<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>copy<sp/>==<sp/>false)<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if <emphasis>copy</emphasis> is <computeroutput>true</computeroutput> and malloc() fails, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1376" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="909" bodyend="933"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga836f94fa622ece4f50dadf27c7ec107a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_seektable_resize_points</definition>
        <argsstring>(FLAC__StreamMetadata *object, unsigned new_num_points)</argsstring>
        <name>FLAC__metadata_object_seektable_resize_points</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>new_num_points</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resize the seekpoint array.</para><para>If the size shrinks, elements will truncated; if it grows, new placeholder points will be added to the end.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing SEEKTABLE object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_num_points</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired length of the array; may be <computeroutput>0</computeroutput>.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_SEEKTABLE<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal"><sp/>(object-&gt;data.seek_table.points<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>object-&gt;data.seek_table.num_points<sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline><highlight class="normal">(object-&gt;data.seek_table.points<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>object-&gt;data.seek_table.num_points<sp/>&gt;<sp/>0)<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if memory allocation error, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1393" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="935" bodyend="979"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1gae2c58ebdfb9f2b238d45971b14600944" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>FLAC_API void FLAC__metadata_object_seektable_set_point</definition>
        <argsstring>(FLAC__StreamMetadata *object, unsigned point_num, FLAC__StreamMetadata_SeekPoint point)</argsstring>
        <name>FLAC__metadata_object_seektable_set_point</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>point_num</declname>
        </param>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata___seek_point" kindref="compound">FLAC__StreamMetadata_SeekPoint</ref></type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a seekpoint in a seektable.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing SEEKTABLE object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Index into seekpoint array to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>The point to set.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_SEEKTABLE<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;data.seek_table.num_points<sp/>&gt;<sp/>point_num<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1405" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="981" bodyend="988"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga0c658260aaffb126486f5d1e211b53e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_seektable_insert_point</definition>
        <argsstring>(FLAC__StreamMetadata *object, unsigned point_num, FLAC__StreamMetadata_SeekPoint point)</argsstring>
        <name>FLAC__metadata_object_seektable_insert_point</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>point_num</declname>
        </param>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata___seek_point" kindref="compound">FLAC__StreamMetadata_SeekPoint</ref></type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert a seekpoint into a seektable.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing SEEKTABLE object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Index into seekpoint array to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>The point to set.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_SEEKTABLE<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;data.seek_table.num_points<sp/>&gt;=<sp/>point_num<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if memory allocation error, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1419" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="990" bodyend="1008"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga5a865f792845cbf22b5935c3d96568d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_seektable_delete_point</definition>
        <argsstring>(FLAC__StreamMetadata *object, unsigned point_num)</argsstring>
        <name>FLAC__metadata_object_seektable_delete_point</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>point_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete a seekpoint from a seektable.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing SEEKTABLE object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Index into seekpoint array to set.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_SEEKTABLE<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;data.seek_table.num_points<sp/>&gt;<sp/>point_num<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if memory allocation error, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1432" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1010" bodyend="1023"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga08f33e2ef85d72363dda82de3208ed1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_seektable_is_legal</definition>
        <argsstring>(const FLAC__StreamMetadata *object)</argsstring>
        <name>FLAC__metadata_object_seektable_is_legal</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check a seektable to see if it conforms to the <ref refid="namespace_f_l_a_c" kindref="compound">FLAC</ref> specification. See the format specification for limits on the contents of the seektable.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing SEEKTABLE object.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_SEEKTABLE<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if seek table is illegal, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1445" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1025" bodyend="1031"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1gae9d8c43dc78bde9778c4e57c5f74b025" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_seektable_template_append_placeholders</definition>
        <argsstring>(FLAC__StreamMetadata *object, unsigned num)</argsstring>
        <name>FLAC__metadata_object_seektable_template_append_placeholders</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Append a number of placeholder points to the end of a seek table.</para><para><simplesect kind="note"><para>As with the other ..._seektable_template_... functions, you should call <ref refid="group__flac__metadata__object_1gaee6a1f08321b56a3fa65af94dd7830cd" kindref="member">FLAC__metadata_object_seektable_template_sort()</ref> when finished to make the seek table legal.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing SEEKTABLE object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of placeholder points to append.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_SEEKTABLE<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if memory allocation fails, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1462" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1033" bodyend="1043"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga9ce1940ca29d71739316cf104256c078" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_seektable_template_append_point</definition>
        <argsstring>(FLAC__StreamMetadata *object, FLAC__uint64 sample_number)</argsstring>
        <name>FLAC__metadata_object_seektable_template_append_point</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref></type>
          <declname>sample_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Append a specific seek point template to the end of a seek table.</para><para><simplesect kind="note"><para>As with the other ..._seektable_template_... functions, you should call <ref refid="group__flac__metadata__object_1gaee6a1f08321b56a3fa65af94dd7830cd" kindref="member">FLAC__metadata_object_seektable_template_sort()</ref> when finished to make the seek table legal.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing SEEKTABLE object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sample_number</parametername>
</parameternamelist>
<parameterdescription>
<para>The sample number of the seek point template.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_SEEKTABLE<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if memory allocation fails, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1479" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1045" bodyend="1062"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1gac27a59879fa8cdf47b75f8d73de82f0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_seektable_template_append_points</definition>
        <argsstring>(FLAC__StreamMetadata *object, FLAC__uint64 sample_numbers[], unsigned num)</argsstring>
        <name>FLAC__metadata_object_seektable_template_append_points</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref></type>
          <declname>sample_numbers</declname>
          <array>[]</array>
        </param>
        <param>
          <type>unsigned</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Append specific seek point templates to the end of a seek table.</para><para><simplesect kind="note"><para>As with the other ..._seektable_template_... functions, you should call <ref refid="group__flac__metadata__object_1gaee6a1f08321b56a3fa65af94dd7830cd" kindref="member">FLAC__metadata_object_seektable_template_sort()</ref> when finished to make the seek table legal.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing SEEKTABLE object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sample_numbers</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of sample numbers for the seek points. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of seek point templates to append.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_SEEKTABLE<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if memory allocation fails, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1497" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1064" bodyend="1087"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1gab96c6585578c87f6853731860e2872e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_seektable_template_append_spaced_points</definition>
        <argsstring>(FLAC__StreamMetadata *object, unsigned num, FLAC__uint64 total_samples)</argsstring>
        <name>FLAC__metadata_object_seektable_template_append_spaced_points</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>num</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref></type>
          <declname>total_samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Append a set of evenly-spaced seek point templates to the end of a seek table.</para><para><simplesect kind="note"><para>As with the other ..._seektable_template_... functions, you should call <ref refid="group__flac__metadata__object_1gaee6a1f08321b56a3fa65af94dd7830cd" kindref="member">FLAC__metadata_object_seektable_template_sort()</ref> when finished to make the seek table legal.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing SEEKTABLE object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of placeholder points to append. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>total_samples</parametername>
</parameternamelist>
<parameterdescription>
<para>The total number of samples to be encoded; the seekpoints will be spaced approximately <emphasis>total_samples</emphasis> / <emphasis>num</emphasis> samples apart.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_SEEKTABLE<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">total_samples<sp/>&gt;<sp/>0<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if memory allocation fails, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1519" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1089" bodyend="1112"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1gabf797b64b96808cabf1d995573680fe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_seektable_template_append_spaced_points_by_samples</definition>
        <argsstring>(FLAC__StreamMetadata *object, unsigned samples, FLAC__uint64 total_samples)</argsstring>
        <name>FLAC__metadata_object_seektable_template_append_spaced_points_by_samples</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>samples</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref></type>
          <declname>total_samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Append a set of evenly-spaced seek point templates to the end of a seek table.</para><para><simplesect kind="note"><para>As with the other ..._seektable_template_... functions, you should call <ref refid="group__flac__metadata__object_1gaee6a1f08321b56a3fa65af94dd7830cd" kindref="member">FLAC__metadata_object_seektable_template_sort()</ref> when finished to make the seek table legal.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing SEEKTABLE object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>samples</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of samples apart to space the placeholder points. The first point will be at sample <computeroutput>0</computeroutput>, the second at sample <emphasis>samples</emphasis>, then 2*<emphasis>samples</emphasis>, and so on. As long as <emphasis>samples</emphasis> and <emphasis>total_samples</emphasis> are greater than <computeroutput>0</computeroutput>, there will always be at least one seekpoint at sample <computeroutput>0</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>total_samples</parametername>
</parameternamelist>
<parameterdescription>
<para>The total number of samples to be encoded; the seekpoints will be spaced <emphasis>samples</emphasis> samples apart.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_SEEKTABLE<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">samples<sp/>&gt;<sp/>0<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">total_samples<sp/>&gt;<sp/>0<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if memory allocation fails, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1547" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1114" bodyend="1145"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1gaee6a1f08321b56a3fa65af94dd7830cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_seektable_template_sort</definition>
        <argsstring>(FLAC__StreamMetadata *object, FLAC__bool compact)</argsstring>
        <name>FLAC__metadata_object_seektable_template_sort</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
          <declname>compact</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sort a seek table&apos;s seek points according to the format specification, removing duplicates.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a seek table to be sorted. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>compact</parametername>
</parameternamelist>
<parameterdescription>
<para>If <computeroutput>false</computeroutput>, behaves like <ref refid="group__flac__format_1gad1b0090d45a6d65a696a81261bd7fbf6" kindref="member">FLAC__format_seektable_sort()</ref>. If <computeroutput>true</computeroutput>, duplicates are deleted and the seek table is shrunk appropriately; the number of placeholder points present in the seek table will be the same after the call as before.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_SEEKTABLE<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if realloc() fails, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1564" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1147" bodyend="1157"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1gabfc6277c08a86329efd19572695b57e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_vorbiscomment_set_vendor_string</definition>
        <argsstring>(FLAC__StreamMetadata *object, FLAC__StreamMetadata_VorbisComment_Entry entry, FLAC__bool copy)</argsstring>
        <name>FLAC__metadata_object_vorbiscomment_set_vendor_string</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata___vorbis_comment___entry" kindref="compound">FLAC__StreamMetadata_VorbisComment_Entry</ref></type>
          <declname>entry</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the vendor string in a VORBIS_COMMENT block.</para><para>For convenience, a trailing NUL is added to the entry if it doesn&apos;t have one already.</para><para>If <emphasis>copy</emphasis> is <computeroutput>true</computeroutput>, a copy of the entry is stored; otherwise, the object takes ownership of the <computeroutput>entry.entry</computeroutput> pointer.</para><para><simplesect kind="note"><para>If this function returns <computeroutput>false</computeroutput>, the caller still owns the pointer.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing VORBIS_COMMENT object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>The entry to set the vendor string to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>See above.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_VORBIS_COMMENT<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal"><sp/>(entry.entry<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>entry.length<sp/>&gt;<sp/>0)<sp/>||</highlight></codeline>
<codeline><highlight class="normal">(entry.entry<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>entry.length<sp/>==<sp/>0)<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if memory allocation fails or <emphasis>entry</emphasis> does not comply with the Vorbis comment specification, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1589" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1159" bodyend="1164"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga264611f0af9b5e09d083c1ca5495f1c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_vorbiscomment_resize_comments</definition>
        <argsstring>(FLAC__StreamMetadata *object, unsigned new_num_comments)</argsstring>
        <name>FLAC__metadata_object_vorbiscomment_resize_comments</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>new_num_comments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resize the comment array.</para><para>If the size shrinks, elements will truncated; if it grows, new empty fields will be added to the end.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing VORBIS_COMMENT object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_num_comments</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired length of the array; may be <computeroutput>0</computeroutput>.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_VORBIS_COMMENT<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal"><sp/>(object-&gt;data.vorbis_comment.comments<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>object-&gt;data.vorbis_comment.num_comments<sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline><highlight class="normal">(object-&gt;data.vorbis_comment.comments<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>object-&gt;data.vorbis_comment.num_comments<sp/>&gt;<sp/>0)<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if memory allocation fails, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1606" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1166" bodyend="1212"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1gadf034b2c385e7932c6be2d724a0deae3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_vorbiscomment_set_comment</definition>
        <argsstring>(FLAC__StreamMetadata *object, unsigned comment_num, FLAC__StreamMetadata_VorbisComment_Entry entry, FLAC__bool copy)</argsstring>
        <name>FLAC__metadata_object_vorbiscomment_set_comment</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>comment_num</declname>
        </param>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata___vorbis_comment___entry" kindref="compound">FLAC__StreamMetadata_VorbisComment_Entry</ref></type>
          <declname>entry</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets a comment in a VORBIS_COMMENT block.</para><para>For convenience, a trailing NUL is added to the entry if it doesn&apos;t have one already.</para><para>If <emphasis>copy</emphasis> is <computeroutput>true</computeroutput>, a copy of the entry is stored; otherwise, the object takes ownership of the <computeroutput>entry.entry</computeroutput> pointer.</para><para><simplesect kind="note"><para>If this function returns <computeroutput>false</computeroutput>, the caller still owns the pointer.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing VORBIS_COMMENT object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comment_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Index into comment array to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>The entry to set the comment to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>See above.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_VORBIS_COMMENT<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">comment_num<sp/>&lt;<sp/>object-&gt;data.vorbis_comment.num_comments<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal"><sp/>(entry.entry<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>entry.length<sp/>&gt;<sp/>0)<sp/>||</highlight></codeline>
<codeline><highlight class="normal">(entry.entry<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>entry.length<sp/>==<sp/>0)<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if memory allocation fails or <emphasis>entry</emphasis> does not comply with the Vorbis comment specification, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1633" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1214" bodyend="1222"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga0c23f59f465f302b35a2d3ab1eae07e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_vorbiscomment_insert_comment</definition>
        <argsstring>(FLAC__StreamMetadata *object, unsigned comment_num, FLAC__StreamMetadata_VorbisComment_Entry entry, FLAC__bool copy)</argsstring>
        <name>FLAC__metadata_object_vorbiscomment_insert_comment</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>comment_num</declname>
        </param>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata___vorbis_comment___entry" kindref="compound">FLAC__StreamMetadata_VorbisComment_Entry</ref></type>
          <declname>entry</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert a comment in a VORBIS_COMMENT block at the given index.</para><para>For convenience, a trailing NUL is added to the entry if it doesn&apos;t have one already.</para><para>If <emphasis>copy</emphasis> is <computeroutput>true</computeroutput>, a copy of the entry is stored; otherwise, the object takes ownership of the <computeroutput>entry.entry</computeroutput> pointer.</para><para><simplesect kind="note"><para>If this function returns <computeroutput>false</computeroutput>, the caller still owns the pointer.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing VORBIS_COMMENT object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comment_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The index at which to insert the comment. The comments at and after <emphasis>comment_num</emphasis> move right one position. To append a comment to the end, set <emphasis>comment_num</emphasis> to <computeroutput>object-&gt;data.vorbis_comment.num_comments</computeroutput> . </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>The comment to insert. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>See above.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_VORBIS_COMMENT<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;data.vorbis_comment.num_comments<sp/>&gt;=<sp/>comment_num<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal"><sp/>(entry.entry<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>entry.length<sp/>&gt;<sp/>0)<sp/>||</highlight></codeline>
<codeline><highlight class="normal">(entry.entry<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>entry.length<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>copy<sp/>==<sp/>false)<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if memory allocation fails or <emphasis>entry</emphasis> does not comply with the Vorbis comment specification, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1663" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1224" bodyend="1246"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1gad04ef80ae5f852db8f3729a6ef8c1631" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_vorbiscomment_append_comment</definition>
        <argsstring>(FLAC__StreamMetadata *object, FLAC__StreamMetadata_VorbisComment_Entry entry, FLAC__bool copy)</argsstring>
        <name>FLAC__metadata_object_vorbiscomment_append_comment</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata___vorbis_comment___entry" kindref="compound">FLAC__StreamMetadata_VorbisComment_Entry</ref></type>
          <declname>entry</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Appends a comment to a VORBIS_COMMENT block.</para><para>For convenience, a trailing NUL is added to the entry if it doesn&apos;t have one already.</para><para>If <emphasis>copy</emphasis> is <computeroutput>true</computeroutput>, a copy of the entry is stored; otherwise, the object takes ownership of the <computeroutput>entry.entry</computeroutput> pointer.</para><para><simplesect kind="note"><para>If this function returns <computeroutput>false</computeroutput>, the caller still owns the pointer.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing VORBIS_COMMENT object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>The comment to insert. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>See above.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_VORBIS_COMMENT<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal"><sp/>(entry.entry<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>entry.length<sp/>&gt;<sp/>0)<sp/>||</highlight></codeline>
<codeline><highlight class="normal">(entry.entry<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>entry.length<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>copy<sp/>==<sp/>false)<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if memory allocation fails or <emphasis>entry</emphasis> does not comply with the Vorbis comment specification, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1688" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1248" bodyend="1253"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1gabef3625575b7e4c7257617a27220959a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_vorbiscomment_replace_comment</definition>
        <argsstring>(FLAC__StreamMetadata *object, FLAC__StreamMetadata_VorbisComment_Entry entry, FLAC__bool all, FLAC__bool copy)</argsstring>
        <name>FLAC__metadata_object_vorbiscomment_replace_comment</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata___vorbis_comment___entry" kindref="compound">FLAC__StreamMetadata_VorbisComment_Entry</ref></type>
          <declname>entry</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
          <declname>all</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replaces comments in a VORBIS_COMMENT block with a new one.</para><para>For convenience, a trailing NUL is added to the entry if it doesn&apos;t have one already.</para><para>Depending on the the value of <emphasis>all</emphasis>, either all or just the first comment whose field name(s) match the given entry&apos;s name will be replaced by the given entry. If no comments match, <emphasis>entry</emphasis> will simply be appended.</para><para>If <emphasis>copy</emphasis> is <computeroutput>true</computeroutput>, a copy of the entry is stored; otherwise, the object takes ownership of the <computeroutput>entry.entry</computeroutput> pointer.</para><para><simplesect kind="note"><para>If this function returns <computeroutput>false</computeroutput>, the caller still owns the pointer.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing VORBIS_COMMENT object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>The comment to insert. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>all</parametername>
</parameternamelist>
<parameterdescription>
<para>If <computeroutput>true</computeroutput>, all comments whose field name matches <emphasis>entry&apos;s</emphasis> field name will be removed, and <emphasis>entry</emphasis> will be inserted at the position of the first matching comment. If <computeroutput>false</computeroutput>, only the first comment whose field name matches <emphasis>entry&apos;s</emphasis> field name will be replaced with <emphasis>entry</emphasis>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>See above.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_VORBIS_COMMENT<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal"><sp/>(entry.entry<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>entry.length<sp/>&gt;<sp/>0)<sp/>||</highlight></codeline>
<codeline><highlight class="normal">(entry.entry<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>entry.length<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>copy<sp/>==<sp/>false)<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if memory allocation fails or <emphasis>entry</emphasis> does not comply with the Vorbis comment specification, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1723" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1255" bodyend="1298"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga2d1b309d4ca207039ad6d19bd779800f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_vorbiscomment_delete_comment</definition>
        <argsstring>(FLAC__StreamMetadata *object, unsigned comment_num)</argsstring>
        <name>FLAC__metadata_object_vorbiscomment_delete_comment</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>comment_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete a comment in a VORBIS_COMMENT block at the given index.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing VORBIS_COMMENT object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comment_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the comment to delete.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_VORBIS_COMMENT<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;data.vorbis_comment.num_comments<sp/>&gt;<sp/>comment_num<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if realloc() fails, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1736" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1300" bodyend="1320"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga0ec0c7ddd3a8832ee7a75bf47956b1c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_vorbiscomment_entry_from_name_value_pair</definition>
        <argsstring>(FLAC__StreamMetadata_VorbisComment_Entry *entry, const char *field_name, const char *field_value)</argsstring>
        <name>FLAC__metadata_object_vorbiscomment_entry_from_name_value_pair</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata___vorbis_comment___entry" kindref="compound">FLAC__StreamMetadata_VorbisComment_Entry</ref> *</type>
          <declname>entry</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>field_name</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>field_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a Vorbis comment entry from NUL-terminated name and value strings.</para><para>On return, the filled-in <emphasis>entry-&gt;entry</emphasis> pointer will point to malloc()ed memory and shall be owned by the caller. For convenience the entry will have a terminating NUL.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a Vorbis comment entry. The entry&apos;s <computeroutput>entry</computeroutput> pointer should not point to allocated memory as it will be overwritten. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The field name in ASCII, <computeroutput>NUL</computeroutput> terminated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The field value in UTF-8, <computeroutput>NUL</computeroutput> terminated.  <programlisting><codeline><highlight class="normal">entry<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">field_name<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">field_value<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if malloc() fails, or if <emphasis>field_name</emphasis> or <emphasis>field_value</emphasis> does not comply with the Vorbis comment specification, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1757" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1322" bodyend="1346"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1gaca557b35c7c1ac19e30794bcf529746b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_vorbiscomment_entry_to_name_value_pair</definition>
        <argsstring>(const FLAC__StreamMetadata_VorbisComment_Entry entry, char **field_name, char **field_value)</argsstring>
        <name>FLAC__metadata_object_vorbiscomment_entry_to_name_value_pair</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_f_l_a_c_____stream_metadata___vorbis_comment___entry" kindref="compound">FLAC__StreamMetadata_VorbisComment_Entry</ref></type>
          <declname>entry</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>field_name</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>field_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Splits a Vorbis comment entry into NUL-terminated name and value strings.</para><para>The returned pointers to name and value will be allocated by malloc() and shall be owned by the caller.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>An existing Vorbis comment entry. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of where the returned pointer to the field name will be stored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of where the returned pointer to the field value will be stored.  <programlisting><codeline><highlight class="normal">(entry.entry<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>entry.length<sp/>&gt;<sp/>0)<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">memchr(entry.entry,<sp/>&apos;=&apos;,<sp/>entry.length)<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">field_name<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">field_value<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if memory allocation fails or <emphasis>entry</emphasis> does not comply with the Vorbis comment specification, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1778" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1348" bodyend="1377"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1gac31ee3de9f9931628f120cb611bb0f20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_vorbiscomment_entry_matches</definition>
        <argsstring>(const FLAC__StreamMetadata_VorbisComment_Entry entry, const char *field_name, unsigned field_name_length)</argsstring>
        <name>FLAC__metadata_object_vorbiscomment_entry_matches</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_f_l_a_c_____stream_metadata___vorbis_comment___entry" kindref="compound">FLAC__StreamMetadata_VorbisComment_Entry</ref></type>
          <declname>entry</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>field_name</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>field_name_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the given Vorbis comment entry&apos;s field name matches the given field name.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>An existing Vorbis comment entry. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The field name to check. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field_name_length</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of <emphasis>field_name</emphasis>, not including the terminating <computeroutput>NUL</computeroutput>.  <programlisting><codeline><highlight class="normal">(entry.entry<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>entry.length<sp/>&gt;<sp/>0)<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> if the field names match, else <computeroutput>false</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1792" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1379" bodyend="1386"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1gae094c1ce4f248d49e8c099661bd5288e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>FLAC_API int FLAC__metadata_object_vorbiscomment_find_entry_from</definition>
        <argsstring>(const FLAC__StreamMetadata *object, unsigned offset, const char *field_name)</argsstring>
        <name>FLAC__metadata_object_vorbiscomment_find_entry_from</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>field_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find a Vorbis comment with the given field name.</para><para>The search begins at entry number <emphasis>offset</emphasis>; use an offset of 0 to search from the beginning of the comment array.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing VORBIS_COMMENT object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset into the comment array from where to start the search. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The field name of the comment to find.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_VORBIS_COMMENT<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">field_name<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the comment array of the first comment whose field name matches <emphasis>field_name</emphasis>, or <computeroutput>-1</computeroutput> if no match was found. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1811" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1388" bodyend="1393"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga6812052a110800bef2f4139017501507" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>FLAC_API int FLAC__metadata_object_vorbiscomment_remove_entry_matching</definition>
        <argsstring>(FLAC__StreamMetadata *object, const char *field_name)</argsstring>
        <name>FLAC__metadata_object_vorbiscomment_remove_entry_matching</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>field_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove first Vorbis comment matching the given field name.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing VORBIS_COMMENT object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The field name of comment to delete.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_VORBIS_COMMENT<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>-1</computeroutput> for memory allocation error, <computeroutput>0</computeroutput> for no matching entries, <computeroutput>1</computeroutput> for one matching entry deleted. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1824" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1395" bodyend="1413"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga525525f5f21b1caee776cba3cfb6d72f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>FLAC_API int FLAC__metadata_object_vorbiscomment_remove_entries_matching</definition>
        <argsstring>(FLAC__StreamMetadata *object, const char *field_name)</argsstring>
        <name>FLAC__metadata_object_vorbiscomment_remove_entries_matching</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>field_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove all Vorbis comments matching the given field name.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing VORBIS_COMMENT object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The field name of comments to delete.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_VORBIS_COMMENT<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>-1</computeroutput> for memory allocation error, <computeroutput>0</computeroutput> for no matching entries, else the number of matching entries deleted. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1837" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1415" bodyend="1434"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga9bc27c6ed075c29d12027079e00d9997" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="struct_f_l_a_c_____stream_metadata___cue_sheet___track" kindref="compound">FLAC__StreamMetadata_CueSheet_Track</ref> *</type>
        <definition>FLAC_API FLAC__StreamMetadata_CueSheet_Track* FLAC__metadata_object_cuesheet_track_new</definition>
        <argsstring>(void)</argsstring>
        <name>FLAC__metadata_object_cuesheet_track_new</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new CUESHEET track instance.</para><para>The object will be &quot;empty&quot;; i.e. values and data pointers will be <computeroutput>0</computeroutput>.</para><para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__StreamMetadata_CueSheet_Track*</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>NULL</computeroutput> if there was an error allocating memory, else the new instance. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1846" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1436" bodyend="1439"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1gaf085bed12af15034839307ca04286d4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="struct_f_l_a_c_____stream_metadata___cue_sheet___track" kindref="compound">FLAC__StreamMetadata_CueSheet_Track</ref> *</type>
        <definition>FLAC_API FLAC__StreamMetadata_CueSheet_Track* FLAC__metadata_object_cuesheet_track_clone</definition>
        <argsstring>(const FLAC__StreamMetadata_CueSheet_Track *object)</argsstring>
        <name>FLAC__metadata_object_cuesheet_track_clone</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_f_l_a_c_____stream_metadata___cue_sheet___track" kindref="compound">FLAC__StreamMetadata_CueSheet_Track</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a copy of an existing CUESHEET track object.</para><para>The copy is a &quot;deep&quot; copy, i.e. dynamically allocated data within the object is also copied. The caller takes ownership of the new object and is responsible for freeing it with <ref refid="group__flac__metadata__object_1ga8fbf8912add405a4b1acd510b6e27c89" kindref="member">FLAC__metadata_object_cuesheet_track_delete()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to object to copy.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__StreamMetadata_CueSheet_Track*</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>NULL</computeroutput> if there was an error allocating memory, else the new instance. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1861" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1441" bodyend="1455"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga8fbf8912add405a4b1acd510b6e27c89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>FLAC_API void FLAC__metadata_object_cuesheet_track_delete</definition>
        <argsstring>(FLAC__StreamMetadata_CueSheet_Track *object)</argsstring>
        <name>FLAC__metadata_object_cuesheet_track_delete</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata___cue_sheet___track" kindref="compound">FLAC__StreamMetadata_CueSheet_Track</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete a CUESHEET track object</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing CUESHEET track object.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1869" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1467" bodyend="1471"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga57dfba89ba704574bde4e3fcd925d473" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_cuesheet_track_resize_indices</definition>
        <argsstring>(FLAC__StreamMetadata *object, unsigned track_num, unsigned new_num_indices)</argsstring>
        <name>FLAC__metadata_object_cuesheet_track_resize_indices</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>track_num</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>new_num_indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resize a track&apos;s index point array.</para><para>If the size shrinks, elements will truncated; if it grows, new blank indices will be added to the end.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing CUESHEET object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>track_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the track to modify. NOTE: this is not necessarily the same as the track&apos;s <emphasis>number</emphasis> field. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_num_indices</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired length of the array; may be <computeroutput>0</computeroutput>.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_CUESHEET<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;data.cue_sheet.num_tracks<sp/>&gt;<sp/>track_num<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal"><sp/>(object-&gt;data.cue_sheet.tracks[track_num].indices<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>object-&gt;data.cue_sheet.tracks[track_num].num_indices<sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline><highlight class="normal">(object-&gt;data.cue_sheet.tracks[track_num].indices<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>object-&gt;data.cue_sheet.tracks[track_num].num_indices<sp/>&gt;<sp/>0)<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if memory allocation error, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1889" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1473" bodyend="1515"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga2f8c5d80c409eff5ebd53ccd0c6f0984" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_cuesheet_track_insert_index</definition>
        <argsstring>(FLAC__StreamMetadata *object, unsigned track_num, unsigned index_num, FLAC__StreamMetadata_CueSheet_Index index)</argsstring>
        <name>FLAC__metadata_object_cuesheet_track_insert_index</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>track_num</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>index_num</declname>
        </param>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata___cue_sheet___index" kindref="compound">FLAC__StreamMetadata_CueSheet_Index</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert an index point in a CUESHEET track at the given index.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing CUESHEET object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>track_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the track to modify. NOTE: this is not necessarily the same as the track&apos;s <emphasis>number</emphasis> field. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The index into the track&apos;s index array at which to insert the index point. NOTE: this is not necessarily the same as the index point&apos;s <emphasis>number</emphasis> field. The indices at and after <emphasis>index_num</emphasis> move right one position. To append an index point to the end, set <emphasis>index_num</emphasis> to <computeroutput>object-&gt;data.cue_sheet.tracks</computeroutput>[track_num].num_indices . </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index point to insert.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_CUESHEET<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;data.cue_sheet.num_tracks<sp/>&gt;<sp/>track_num<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;data.cue_sheet.tracks[track_num].num_indices<sp/>&gt;=<sp/>index_num<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if realloc() fails, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1912" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1517" bodyend="1537"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1gaa1401ea99e4dc61d3eb034aed7d99602" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_cuesheet_track_insert_blank_index</definition>
        <argsstring>(FLAC__StreamMetadata *object, unsigned track_num, unsigned index_num)</argsstring>
        <name>FLAC__metadata_object_cuesheet_track_insert_blank_index</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>track_num</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>index_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert a blank index point in a CUESHEET track at the given index.</para><para>A blank index point is one in which all field values are zero.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing CUESHEET object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>track_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the track to modify. NOTE: this is not necessarily the same as the track&apos;s <emphasis>number</emphasis> field. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The index into the track&apos;s index array at which to insert the index point. NOTE: this is not necessarily the same as the index point&apos;s <emphasis>number</emphasis> field. The indices at and after <emphasis>index_num</emphasis> move right one position. To append an index point to the end, set <emphasis>index_num</emphasis> to <computeroutput>object-&gt;data.cue_sheet.tracks</computeroutput>[track_num].num_indices .  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_CUESHEET<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;data.cue_sheet.num_tracks<sp/>&gt;<sp/>track_num<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;data.cue_sheet.tracks[track_num].num_indices<sp/>&gt;=<sp/>index_num<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if realloc() fails, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1936" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1539" bodyend="1544"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga9cba3429dcc863714ceb1de6952c4737" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_cuesheet_track_delete_index</definition>
        <argsstring>(FLAC__StreamMetadata *object, unsigned track_num, unsigned index_num)</argsstring>
        <name>FLAC__metadata_object_cuesheet_track_delete_index</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>track_num</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>index_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete an index point in a CUESHEET track at the given index.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing CUESHEET object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>track_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The index into the track array of the track to modify. NOTE: this is not necessarily the same as the track&apos;s <emphasis>number</emphasis> field. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The index into the track&apos;s index array of the index to delete. NOTE: this is not necessarily the same as the index&apos;s <emphasis>number</emphasis> field.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_CUESHEET<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;data.cue_sheet.num_tracks<sp/>&gt;<sp/>track_num<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;data.cue_sheet.tracks[track_num].num_indices<sp/>&gt;<sp/>index_num<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if realloc() fails, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1955" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1546" bodyend="1563"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1gafb0e09fdcfb08c466ceb1f6bca961177" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_cuesheet_resize_tracks</definition>
        <argsstring>(FLAC__StreamMetadata *object, unsigned new_num_tracks)</argsstring>
        <name>FLAC__metadata_object_cuesheet_resize_tracks</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>new_num_tracks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resize the track array.</para><para>If the size shrinks, elements will truncated; if it grows, new blank tracks will be added to the end.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing CUESHEET object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_num_tracks</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired length of the array; may be <computeroutput>0</computeroutput>.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_CUESHEET<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal"><sp/>(object-&gt;data.cue_sheet.tracks<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>object-&gt;data.cue_sheet.num_tracks<sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline><highlight class="normal">(object-&gt;data.cue_sheet.tracks<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>object-&gt;data.cue_sheet.num_tracks<sp/>&gt;<sp/>0)<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if memory allocation error, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1972" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1565" bodyend="1611"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga682176f845b99956b3974bcc1bb63a20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_cuesheet_set_track</definition>
        <argsstring>(FLAC__StreamMetadata *object, unsigned track_num, FLAC__StreamMetadata_CueSheet_Track *track, FLAC__bool copy)</argsstring>
        <name>FLAC__metadata_object_cuesheet_set_track</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>track_num</declname>
        </param>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata___cue_sheet___track" kindref="compound">FLAC__StreamMetadata_CueSheet_Track</ref> *</type>
          <declname>track</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets a track in a CUESHEET block.</para><para>If <emphasis>copy</emphasis> is <computeroutput>true</computeroutput>, a copy of the track is stored; otherwise, the object takes ownership of the <emphasis>track</emphasis> pointer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing CUESHEET object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>track_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Index into track array to set. NOTE: this is not necessarily the same as the track&apos;s <emphasis>number</emphasis> field. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>track</parametername>
</parameternamelist>
<parameterdescription>
<para>The track to set the track to. You may safely pass in a const pointer if <emphasis>copy</emphasis> is <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>See above.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_CUESHEET<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">track_num<sp/>&lt;<sp/>object-&gt;data.cue_sheet.num_tracks<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal"><sp/>(track-&gt;indices<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>track-&gt;num_indices<sp/>&gt;<sp/>0)<sp/>||</highlight></codeline>
<codeline><highlight class="normal">(track-&gt;indices<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>track-&gt;num_indices<sp/>==<sp/>0)<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if <emphasis>copy</emphasis> is <computeroutput>true</computeroutput> and malloc() fails, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="1994" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1613" bodyend="1619"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga5dbdffac2cd7e327f711103c15e015ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_cuesheet_insert_track</definition>
        <argsstring>(FLAC__StreamMetadata *object, unsigned track_num, FLAC__StreamMetadata_CueSheet_Track *track, FLAC__bool copy)</argsstring>
        <name>FLAC__metadata_object_cuesheet_insert_track</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>track_num</declname>
        </param>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata___cue_sheet___track" kindref="compound">FLAC__StreamMetadata_CueSheet_Track</ref> *</type>
          <declname>track</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert a track in a CUESHEET block at the given index.</para><para>If <emphasis>copy</emphasis> is <computeroutput>true</computeroutput>, a copy of the track is stored; otherwise, the object takes ownership of the <emphasis>track</emphasis> pointer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing CUESHEET object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>track_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The index at which to insert the track. NOTE: this is not necessarily the same as the track&apos;s <emphasis>number</emphasis> field. The tracks at and after <emphasis>track_num</emphasis> move right one position. To append a track to the end, set <emphasis>track_num</emphasis> to <computeroutput>object-&gt;data.cue_sheet.num_tracks</computeroutput> . </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>track</parametername>
</parameternamelist>
<parameterdescription>
<para>The track to insert. You may safely pass in a const pointer if <emphasis>copy</emphasis> is <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>See above.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_CUESHEET<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;data.cue_sheet.num_tracks<sp/>&gt;=<sp/>track_num<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if <emphasis>copy</emphasis> is <computeroutput>true</computeroutput> and malloc() fails, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="2017" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1621" bodyend="1640"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga87855591d933cd6371010a675f0bc629" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_cuesheet_insert_blank_track</definition>
        <argsstring>(FLAC__StreamMetadata *object, unsigned track_num)</argsstring>
        <name>FLAC__metadata_object_cuesheet_insert_blank_track</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>track_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert a blank track in a CUESHEET block at the given index.</para><para>A blank track is one in which all field values are zero.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing CUESHEET object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>track_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The index at which to insert the track. NOTE: this is not necessarily the same as the track&apos;s <emphasis>number</emphasis> field. The tracks at and after <emphasis>track_num</emphasis> move right one position. To append a track to the end, set <emphasis>track_num</emphasis> to <computeroutput>object-&gt;data.cue_sheet.num_tracks</computeroutput> .  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_CUESHEET<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;data.cue_sheet.num_tracks<sp/>&gt;=<sp/>track_num<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if <emphasis>copy</emphasis> is <computeroutput>true</computeroutput> and malloc() fails, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="2036" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1642" bodyend="1647"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga3232bae96f19722bee19afd37fdc214d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_cuesheet_delete_track</definition>
        <argsstring>(FLAC__StreamMetadata *object, unsigned track_num)</argsstring>
        <name>FLAC__metadata_object_cuesheet_delete_track</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>track_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete a track in a CUESHEET block at the given index.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing CUESHEET object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>track_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The index into the track array of the track to delete. NOTE: this is not necessarily the same as the track&apos;s <emphasis>number</emphasis> field.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_CUESHEET<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;data.cue_sheet.num_tracks<sp/>&gt;<sp/>track_num<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if realloc() fails, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="2051" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1649" bodyend="1669"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga1160f85e437c1a763ec0a8f372cb1390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_cuesheet_is_legal</definition>
        <argsstring>(const FLAC__StreamMetadata *object, FLAC__bool check_cd_da_subset, const char **violation)</argsstring>
        <name>FLAC__metadata_object_cuesheet_is_legal</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
          <declname>check_cd_da_subset</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char **</type>
          <declname>violation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check a cue sheet to see if it conforms to the <ref refid="namespace_f_l_a_c" kindref="compound">FLAC</ref> specification. See the format specification for limits on the contents of the cue sheet.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing CUESHEET object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>check_cd_da_subset</parametername>
</parameternamelist>
<parameterdescription>
<para>If <computeroutput>true</computeroutput>, check CUESHEET against more stringent requirements for a CD-DA (audio) disc. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>violation</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of a pointer to a string. If there is a violation, a pointer to a string explanation of the violation will be returned here. <emphasis>violation</emphasis> may be <computeroutput>NULL</computeroutput> if you don&apos;t need the returned string. Do not free the returned string; it will always point to static data.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_CUESHEET<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if cue sheet is illegal, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="2072" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1671" bodyend="1677"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga897138ca0a985d8741f73d6657f38845" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref></type>
        <definition>FLAC_API FLAC__uint32 FLAC__metadata_object_cuesheet_calculate_cddb_id</definition>
        <argsstring>(const FLAC__StreamMetadata *object)</argsstring>
        <name>FLAC__metadata_object_cuesheet_calculate_cddb_id</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate and return the CDDB/freedb ID for a cue sheet. The function assumes the cue sheet corresponds to a CD; the result is undefined if the cuesheet&apos;s is_cd bit is not set.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing CUESHEET object.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_CUESHEET<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__uint32</parametername>
</parameternamelist>
<parameterdescription>
<para>The unsigned integer representation of the CDDB/freedb ID </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="2085" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1704" bodyend="1724"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga5db3363648b6e7693e032f200f241e85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_picture_set_mime_type</definition>
        <argsstring>(FLAC__StreamMetadata *object, char *mime_type, FLAC__bool copy)</argsstring>
        <name>FLAC__metadata_object_picture_set_mime_type</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>mime_type</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the MIME type of a PICTURE block.</para><para>If <emphasis>copy</emphasis> is <computeroutput>true</computeroutput>, a copy of the string is stored; otherwise, the object takes ownership of the pointer. The existing string will be freed if this function is successful, otherwise the original string will remain if <emphasis>copy</emphasis> is <computeroutput>true</computeroutput> and malloc() fails.</para><para><simplesect kind="note"><para>It is safe to pass a const pointer to <emphasis>mime_type</emphasis> if <emphasis>copy</emphasis> is <computeroutput>true</computeroutput>.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing PICTURE object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mime_type</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the MIME type string. The string must be ASCII characters 0x20-0x7e, NUL-terminated. No validation is done. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>See above.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_PICTURE<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">(mime_type<sp/>!=<sp/>NULL)<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if <emphasis>copy</emphasis> is <computeroutput>true</computeroutput> and malloc() fails, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="2108" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1726" bodyend="1756"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga5582649e395e70a4b3df510a39d70cc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_picture_set_description</definition>
        <argsstring>(FLAC__StreamMetadata *object, FLAC__byte *description, FLAC__bool copy)</argsstring>
        <name>FLAC__metadata_object_picture_set_description</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref> *</type>
          <declname>description</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the description of a PICTURE block.</para><para>If <emphasis>copy</emphasis> is <computeroutput>true</computeroutput>, a copy of the string is stored; otherwise, the object takes ownership of the pointer. The existing string will be freed if this function is successful, otherwise the original string will remain if <emphasis>copy</emphasis> is <computeroutput>true</computeroutput> and malloc() fails.</para><para><simplesect kind="note"><para>It is safe to pass a const pointer to <emphasis>description</emphasis> if <emphasis>copy</emphasis> is <computeroutput>true</computeroutput>.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing PICTURE object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>description</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the description string. The string must be valid UTF-8, NUL-terminated. No validation is done. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>See above.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_PICTURE<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">(description<sp/>!=<sp/>NULL)<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if <emphasis>copy</emphasis> is <computeroutput>true</computeroutput> and malloc() fails, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="2130" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1758" bodyend="1788"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga07e5950094528e2954c06d7991d543a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_picture_set_data</definition>
        <argsstring>(FLAC__StreamMetadata *object, FLAC__byte *data, FLAC__uint32 length, FLAC__bool copy)</argsstring>
        <name>FLAC__metadata_object_picture_set_data</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the picture data of a PICTURE block.</para><para>If <emphasis>copy</emphasis> is <computeroutput>true</computeroutput>, a copy of the data is stored; otherwise, the object takes ownership of the pointer. Also sets the <emphasis>data_length</emphasis> field of the metadata object to what is passed in as the <emphasis>length</emphasis> parameter. The existing data will be freed if this function is successful, otherwise the original data and data_length will remain if <emphasis>copy</emphasis> is <computeroutput>true</computeroutput> and malloc() fails.</para><para><simplesect kind="note"><para>It is safe to pass a const pointer to <emphasis>data</emphasis> if <emphasis>copy</emphasis> is <computeroutput>true</computeroutput>.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing PICTURE object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the data to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of <emphasis>data</emphasis> in bytes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>See above.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_PICTURE<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal"><sp/>(data<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>length<sp/>&gt;<sp/>0)<sp/>||</highlight></codeline>
<codeline><highlight class="normal">(data<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>length<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>copy<sp/>==<sp/>false)<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if <emphasis>copy</emphasis> is <computeroutput>true</computeroutput> and malloc() fails, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="2155" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1790" bodyend="1816"/>
      </memberdef>
      <memberdef kind="function" id="group__flac__metadata__object_1ga2e389272f4df904e1652e79c89ca55c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__export_1ga56ca07df8a23310707732b1c0007d6f5" kindref="member">FLAC_API</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC_API FLAC__bool FLAC__metadata_object_picture_is_legal</definition>
        <argsstring>(const FLAC__StreamMetadata *object, const char **violation)</argsstring>
        <name>FLAC__metadata_object_picture_is_legal</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char **</type>
          <declname>violation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check a PICTURE block to see if it conforms to the <ref refid="namespace_f_l_a_c" kindref="compound">FLAC</ref> specification. See the format specification for limits on the contents of the PICTURE block.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to existing PICTURE block to be checked. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>violation</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of a pointer to a string. If there is a violation, a pointer to a string explanation of the violation will be returned here. <emphasis>violation</emphasis> may be <computeroutput>NULL</computeroutput> if you don&apos;t need the returned string. Do not free the returned string; it will always point to static data.  <programlisting><codeline><highlight class="normal">object<sp/>!=<sp/>NULL<sp/></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">object-&gt;type<sp/>==<sp/>FLAC__METADATA_TYPE_PICTURE<sp/></highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FLAC__bool</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>false</computeroutput> if PICTURE block is illegal, else <computeroutput>true</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/FLAC/metadata.h" line="2174" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/metadata_object.c" bodystart="1818" bodyend="1824"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This module contains methods for manipulating <ref refid="namespace_f_l_a_c" kindref="compound">FLAC</ref> metadata objects. </para>    </briefdescription>
    <detaileddescription>
<para>Since many are variable length we have to be careful about the memory management. We decree that all pointers to data in the object are owned by the object and memory-managed by the object.</para><para>Use the <ref refid="group__flac__metadata__object_1ga0d21a62648d8c5321b4b47f8ee5a52f0" kindref="member">FLAC__metadata_object_new()</ref> and <ref refid="group__flac__metadata__object_1ga66bbe27dba68ba77be5af83986a280ea" kindref="member">FLAC__metadata_object_delete()</ref> functions to create all instances. When using the FLAC__metadata_object_set_*() functions to set pointers to data, set <emphasis>copy</emphasis> to <computeroutput>true</computeroutput> to have the function make it&apos;s own copy of the data, or to <computeroutput>false</computeroutput> to give the object ownership of your data. In the latter case your pointer must be freeable by free() and will be free()d when the object is <ref refid="group__flac__metadata__object_1ga66bbe27dba68ba77be5af83986a280ea" kindref="member">FLAC__metadata_object_delete()</ref>d. It is legal to pass a null pointer as the data pointer to a FLAC__metadata_object_set_*() function as long as the length argument is 0 and the <emphasis>copy</emphasis> argument is <computeroutput>false</computeroutput>.</para><para>The <ref refid="group__flac__metadata__object_1ga0d21a62648d8c5321b4b47f8ee5a52f0" kindref="member">FLAC__metadata_object_new()</ref> and <ref refid="group__flac__metadata__object_1ga16b828b246e9af941e3e616e6bcd74c0" kindref="member">FLAC__metadata_object_clone()</ref> function will return <computeroutput>NULL</computeroutput> in the case of a memory allocation error, otherwise a new object. The FLAC__metadata_object_set_*() functions return <computeroutput>false</computeroutput> in the case of a memory allocation error.</para><para>We don&apos;t have the convenience of C++ here, so note that the library relies on you to keep the types straight. In other words, if you pass, for example, a FLAC__StreamMetadata* that represents a STREAMINFO block to <ref refid="group__flac__metadata__object_1ga8f7fbaa68d5637e2409a053ec2ff744d" kindref="member">FLAC__metadata_object_application_set_data()</ref>, you will get an assertion failure.</para><para>For convenience the FLAC__metadata_object_vorbiscomment_*() functions maintain a trailing NUL on each Vorbis comment entry. This is not counted toward the length or stored in the stream, but it can make working with plain comments (those that don&apos;t contain embedded-NULs in the value) easier. Entries passed into these functions have trailing NULs added if missing, and returned entries are guaranteed to have a trailing NUL.</para><para>The FLAC__metadata_object_vorbiscomment_*() functions that take a Vorbis comment entry/name/value will first validate that it complies with the Vorbis comment specification and return false if it does not.</para><para>There is no need to recalculate the length field on metadata blocks you have modified. They will be calculated automatically before they are written back to a file. </para>    </detaileddescription>
  </compounddef>
</doxygen>
