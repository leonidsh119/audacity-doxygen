<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="test__conversions_8c" kind="file" language="C++">
    <compoundname>test_conversions.c</compoundname>
    <includes refid="sfconfig_8h" local="yes">sfconfig.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">inttypes.h</includes>
    <includes refid="libsndfile_2src_2common_8h" local="yes">common.h</includes>
    <includes refid="test__main_8h" local="yes">test_main.h</includes>
    <incdepgraph>
      <node id="20289">
        <label>stdarg.h</label>
      </node>
      <node id="20287">
        <label>stdlib.h</label>
      </node>
      <node id="20290">
        <label>errno.h</label>
      </node>
      <node id="20283">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_conversions.c</label>
        <link refid="test_conversions.c"/>
        <childnode refid="20284" relation="include">
        </childnode>
        <childnode refid="20286" relation="include">
        </childnode>
        <childnode refid="20287" relation="include">
        </childnode>
        <childnode refid="20288" relation="include">
        </childnode>
        <childnode refid="20289" relation="include">
        </childnode>
        <childnode refid="20290" relation="include">
        </childnode>
        <childnode refid="20291" relation="include">
        </childnode>
        <childnode refid="20292" relation="include">
        </childnode>
        <childnode refid="20294" relation="include">
        </childnode>
      </node>
      <node id="20293">
        <label>sndfile.h</label>
      </node>
      <node id="20288">
        <label>string.h</label>
      </node>
      <node id="20284">
        <label>sfconfig.h</label>
        <link refid="sfconfig_8h"/>
        <childnode refid="20285" relation="include">
        </childnode>
      </node>
      <node id="20292">
        <label>common.h</label>
        <link refid="libsndfile_2src_2common_8h"/>
        <childnode refid="20284" relation="include">
        </childnode>
        <childnode refid="20287" relation="include">
        </childnode>
        <childnode refid="20288" relation="include">
        </childnode>
        <childnode refid="20293" relation="include">
        </childnode>
      </node>
      <node id="20294">
        <label>test_main.h</label>
        <link refid="test__main_8h"/>
      </node>
      <node id="20285">
        <label>config.h</label>
      </node>
      <node id="20286">
        <label>stdio.h</label>
      </node>
      <node id="20291">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="test__conversions_8c_1ad4032ef8a0c9ff23b0a2cb55a516d24d" prot="public" static="no">
        <name>cmp_test</name>
        <param><defname>line</defname></param>
        <param><defname>ival</defname></param>
        <param><defname>tval</defname></param>
        <param><defname>str</defname></param>
        <initializer><ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref> (ival != tval) \
	{	<ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref> (<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>, <ref refid="seqread_8c_1aad9ebcdde542d8b2075615388ff15a9c" kindref="member">line</ref>, ival, tval) ; \
		exit (1) ; \
		} ;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_conversions.c" line="36" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_conversions.c" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__conversions_8c_1ac3dcd4b19663b8ff51aba0a25d84247c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void conversion_test</definition>
        <argsstring>(char endian)</argsstring>
        <name>conversion_test</name>
        <param>
          <type>char</type>
          <declname>endian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_conversions.c" line="43" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_conversions.c" bodystart="43" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8c_1ac5851b63c32809e725e1fadbec137224" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void test_conversions</definition>
        <argsstring>(void)</argsstring>
        <name>test_conversions</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_conversions.c" line="105" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_conversions.c" bodystart="105" bodyend="109"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>Copyright<sp/>(C)<sp/>2006-2011<sp/>Erik<sp/>de<sp/>Castro<sp/>Lopo<sp/>&lt;erikd@mega-nerd.com&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment">**<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sfconfig_8h" kindref="compound">sfconfig.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libsndfile_2src_2common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="test__main_8h" kindref="compound">test_main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="33"><highlight class="comment">**<sp/>This<sp/>is<sp/>a<sp/>bit<sp/>rough,<sp/>but<sp/>it<sp/>is<sp/>the<sp/>nicest<sp/>way<sp/>to<sp/>do<sp/>it.</highlight></codeline>
<codeline lineno="34"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="test__conversions_8c_1ad4032ef8a0c9ff23b0a2cb55a516d24d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cmp_test(line,ival,tval,str)<sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(ival<sp/>!=<sp/>tval)<sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>printf<sp/>(str,<sp/>line,<sp/>ival,<sp/>tval)<sp/>;<sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;<sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">conversion_test<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>endian)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/><sp/>sf_private,<sp/>*psf<sp/>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;conversion.bin&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>i64<sp/>=<sp/>SF_PLATFORM_S64<sp/>(0x0123456789abcdef),<sp/>t64<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>format_str<sp/>[16]<sp/>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>test_name<sp/>[64]<sp/>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>i8<sp/>=<sp/>12,<sp/>t8<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>i16<sp/>=<sp/>0x123,<sp/>t16<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i24<sp/>=<sp/>0x23456,<sp/>t24<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i32<sp/>=<sp/>0x0a0b0c0d,<sp/>t32<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes<sp/>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref><sp/>(format_str,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(format_str),<sp/></highlight><highlight class="stringliteral">&quot;%c12348&quot;</highlight><highlight class="normal">,<sp/>endian)<sp/>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref><sp/>(test_name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(test_name),<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>%s<sp/>conversions&quot;</highlight><highlight class="normal">,<sp/>endian<sp/>==<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal"><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;little<sp/>endian&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;big<sp/>endian&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetest-sndfile-metadata-set_1a7eadfb659f8e3c097dcb1bbc6525dd4d" kindref="member">print_test_name</ref><sp/>(test_name)<sp/>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>psf<sp/>=<sp/>&amp;sf_private<sp/>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(psf,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(sf_private))<sp/>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a79dc5fc1f9c6e1da23a11014d105e7fd" kindref="member">mode</ref><sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a449991ce14cb1b9715cf444ffdb9e4a0" kindref="member">SFM_WRITE</ref><sp/>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1ae23a10ddaa8dcb2be3c278d9a639bfcd" kindref="member">path</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a5e8ec1f9af1c66d1680de3fdae2e32db" kindref="member">c</ref>,<sp/>sizeof<sp/>(psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1ae23a10ddaa8dcb2be3c278d9a639bfcd" kindref="member">path</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a5e8ec1f9af1c66d1680de3fdae2e32db" kindref="member">c</ref>),<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>filename)<sp/>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="libsndfile_2src_2common_8h_1a7d4ef7027c08e062571fdf366a4998e3" kindref="member">psf_fopen</ref><sp/>(psf)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nError<sp/>:<sp/>failed<sp/>to<sp/>open<sp/>file<sp/>&apos;%s&apos;<sp/>for<sp/>write.\n\n&quot;</highlight><highlight class="normal">,<sp/>filename)<sp/>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1af85d67adae7853e7b1fb48921e23acbe" kindref="member">psf_binheader_writef</ref><sp/>(psf,<sp/>format_str,<sp/>i8,<sp/>i16,<sp/>i24,<sp/>i32,<sp/>i64)<sp/>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2common_8h_1a183f23ab33e38e7e1c88034f3e69272d" kindref="member">psf_fwrite</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>,<sp/>1,<sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>,<sp/>psf)<sp/>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2common_8h_1a710de78ffb1aae74d9c32137f85d110f" kindref="member">psf_fclose</ref><sp/>(psf)<sp/>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(psf,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(sf_private))<sp/>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a79dc5fc1f9c6e1da23a11014d105e7fd" kindref="member">mode</ref><sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a125531fe9c895237bccd35736370e815" kindref="member">SFM_READ</ref><sp/>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1ae23a10ddaa8dcb2be3c278d9a639bfcd" kindref="member">path</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a5e8ec1f9af1c66d1680de3fdae2e32db" kindref="member">c</ref>,<sp/>sizeof<sp/>(psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1ae23a10ddaa8dcb2be3c278d9a639bfcd" kindref="member">path</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a5e8ec1f9af1c66d1680de3fdae2e32db" kindref="member">c</ref>),<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>filename)<sp/>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="libsndfile_2src_2common_8h_1a7d4ef7027c08e062571fdf366a4998e3" kindref="member">psf_fopen</ref><sp/>(psf)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nError<sp/>:<sp/>failed<sp/>to<sp/>open<sp/>file<sp/>&apos;%s&apos;<sp/>for<sp/>read.\n\n&quot;</highlight><highlight class="normal">,<sp/>filename)<sp/>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes<sp/>=<sp/><ref refid="src_2common_8c_1a11addd311cf26a4d8a0e775520e1ab8b" kindref="member">psf_binheader_readf</ref><sp/>(psf,<sp/>format_str,<sp/>&amp;t8,<sp/>&amp;t16,<sp/>&amp;t24,<sp/>&amp;t32,<sp/>&amp;t64)<sp/>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2common_8h_1a710de78ffb1aae74d9c32137f85d110f" kindref="member">psf_fclose</ref><sp/>(psf)<sp/>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes<sp/>!=<sp/>18)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d<sp/>:<sp/>read<sp/>%d<sp/>bytes.\n\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__,<sp/>bytes)<sp/>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="test__conversions_8c_1ad4032ef8a0c9ff23b0a2cb55a516d24d" kindref="member">cmp_test</ref><sp/>(__LINE__,<sp/>i8,<sp/>t8,<sp/></highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d<sp/>:<sp/>8<sp/>bit<sp/>int<sp/>failed<sp/>%d<sp/>-&gt;<sp/>%d.\n\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="test__conversions_8c_1ad4032ef8a0c9ff23b0a2cb55a516d24d" kindref="member">cmp_test</ref><sp/>(__LINE__,<sp/>i16,<sp/>t16,<sp/></highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d<sp/>:<sp/>16<sp/>bit<sp/>int<sp/>failed<sp/>0x%x<sp/>-&gt;<sp/>0x%x.\n\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="test__conversions_8c_1ad4032ef8a0c9ff23b0a2cb55a516d24d" kindref="member">cmp_test</ref><sp/>(__LINE__,<sp/>i24,<sp/>t24,<sp/></highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d<sp/>:<sp/>24<sp/>bit<sp/>int<sp/>failed<sp/>0x%x<sp/>-&gt;<sp/>0x%x.\n\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="test__conversions_8c_1ad4032ef8a0c9ff23b0a2cb55a516d24d" kindref="member">cmp_test</ref><sp/>(__LINE__,<sp/>i32,<sp/>t32,<sp/></highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d<sp/>:<sp/>32<sp/>bit<sp/>int<sp/>failed<sp/>0x%x<sp/>-&gt;<sp/>0x%x.\n\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="test__conversions_8c_1ad4032ef8a0c9ff23b0a2cb55a516d24d" kindref="member">cmp_test</ref><sp/>(__LINE__,<sp/>i64,<sp/>t64,<sp/></highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d<sp/>:<sp/>64<sp/>bit<sp/>int<sp/>failed<sp/>0x%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1aba38357387a474f439428dee1984fc5a" kindref="member">PRIx64</ref><sp/></highlight><highlight class="stringliteral">&quot;x<sp/>-&gt;<sp/>0x%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1aba38357387a474f439428dee1984fc5a" kindref="member">PRIx64</ref><sp/></highlight><highlight class="stringliteral">&quot;x.\n\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal"><sp/>(<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>)<sp/>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;ok&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>conversion_test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="test__main_8h_1ac5851b63c32809e725e1fadbec137224" refkind="member"><highlight class="normal"><ref refid="test__conversions_8c_1ac5851b63c32809e725e1fadbec137224" kindref="member">test_conversions</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>conversion_test<sp/>(</highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>conversion_test<sp/>(</highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>test_conversion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_conversions.c"/>
  </compounddef>
</doxygen>
