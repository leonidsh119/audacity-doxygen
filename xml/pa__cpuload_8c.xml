<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="pa__cpuload_8c" kind="file" language="C++">
    <compoundname>pa_cpuload.c</compoundname>
    <includes refid="pa__cpuload_8h" local="yes">pa_cpuload.h</includes>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes refid="pa__util_8h" local="yes">pa_util.h</includes>
    <incdepgraph>
      <node id="29385">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_cpuload.c</label>
        <link refid="pa_cpuload.c"/>
        <childnode refid="29386" relation="include">
        </childnode>
        <childnode refid="29387" relation="include">
        </childnode>
        <childnode refid="29388" relation="include">
        </childnode>
      </node>
      <node id="29386">
        <label>pa_cpuload.h</label>
        <link refid="pa__cpuload_8h"/>
      </node>
      <node id="29387">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="29389">
        <label>portaudio.h</label>
        <link refid="portaudio_8h"/>
      </node>
      <node id="29388">
        <label>pa_util.h</label>
        <link refid="pa__util_8h"/>
        <childnode refid="29389" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="pa__cpuload_8c_1ad7bc948ad89f917a6c3602a85f7900f2" prot="public" static="no">
        <name>LOWPASS_COEFFICIENT_0</name>
        <initializer>(0.9)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_cpuload.c" line="93" column="9"/>
      </memberdef>
      <memberdef kind="define" id="pa__cpuload_8c_1a140596284a7429f84f15197b400bd73e" prot="public" static="no">
        <name>LOWPASS_COEFFICIENT_1</name>
        <initializer>(0.99999 - <ref refid="pa__cpuload_8c_1ad7bc948ad89f917a6c3602a85f7900f2" kindref="member">LOWPASS_COEFFICIENT_0</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_cpuload.c" line="94" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pa__cpuload_8c_1a8cffac188367367b6c5c5ed8e0b1fe46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_InitializeCpuLoadMeasurer</definition>
        <argsstring>(PaUtilCpuLoadMeasurer *measurer, double sampleRate)</argsstring>
        <name>PaUtil_InitializeCpuLoadMeasurer</name>
        <param>
          <type><ref refid="struct_pa_util_cpu_load_measurer" kindref="compound">PaUtilCpuLoadMeasurer</ref> *</type>
          <declname>measurer</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sampleRate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_cpuload.c" line="60" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_cpuload.c" bodystart="60" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="pa__cpuload_8c_1a31e622efc7504297b2191c3fe616b2ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_ResetCpuLoadMeasurer</definition>
        <argsstring>(PaUtilCpuLoadMeasurer *measurer)</argsstring>
        <name>PaUtil_ResetCpuLoadMeasurer</name>
        <param>
          <type><ref refid="struct_pa_util_cpu_load_measurer" kindref="compound">PaUtilCpuLoadMeasurer</ref> *</type>
          <declname>measurer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_cpuload.c" line="68" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_cpuload.c" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="pa__cpuload_8c_1a83fdceefb7dff41725ba4f1f13a80f79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_BeginCpuLoadMeasurement</definition>
        <argsstring>(PaUtilCpuLoadMeasurer *measurer)</argsstring>
        <name>PaUtil_BeginCpuLoadMeasurement</name>
        <param>
          <type><ref refid="struct_pa_util_cpu_load_measurer" kindref="compound">PaUtilCpuLoadMeasurer</ref> *</type>
          <declname>measurer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_cpuload.c" line="73" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_cpuload.c" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="pa__cpuload_8c_1a8c29cc1cf3b6fd9bf18a2c3fc9f0ef2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_EndCpuLoadMeasurement</definition>
        <argsstring>(PaUtilCpuLoadMeasurer *measurer, unsigned long framesProcessed)</argsstring>
        <name>PaUtil_EndCpuLoadMeasurement</name>
        <param>
          <type><ref refid="struct_pa_util_cpu_load_measurer" kindref="compound">PaUtilCpuLoadMeasurer</ref> *</type>
          <declname>measurer</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>framesProcessed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>FIXME<xrefsect id="todo_1_todo000011"><xreftitle>Todo</xreftitle><xrefdescription><para>these coefficients shouldn&apos;t be hardwired see: <ulink url="http://www.portaudio.com/trac/ticket/113">http://www.portaudio.com/trac/ticket/113</ulink> </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_cpuload.c" line="79" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_cpuload.c" bodystart="79" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="pa__cpuload_8c_1af7bff59bbfe46a388e21633bf49ea0d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double PaUtil_GetCpuLoad</definition>
        <argsstring>(PaUtilCpuLoadMeasurer *measurer)</argsstring>
        <name>PaUtil_GetCpuLoad</name>
        <param>
          <type><ref refid="struct_pa_util_cpu_load_measurer" kindref="compound">PaUtilCpuLoadMeasurer</ref> *</type>
          <declname>measurer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_cpuload.c" line="102" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_cpuload.c" bodystart="102" bodyend="105"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Functions to assist in measuring the CPU utilization of a callback stream. Used to implement the <ref refid="portaudio_8h_1a83b8c624464dd7bb6a01b06ab596c115" kindref="member">Pa_GetStreamCpuLoad()</ref> function. </para>    </briefdescription>
    <detaileddescription>
<para><xrefsect id="todo_1_todo000010"><xreftitle>Todo</xreftitle><xrefdescription><para>Dynamically calculate the coefficients used to smooth the CPU Load Measurements over time to provide a uniform characterisation of CPU Load independent of rate at which PaUtil_BeginCpuLoadMeasurement / PaUtil_EndCpuLoadMeasurement are called. see <ulink url="http://www.portaudio.com/trac/ticket/113">http://www.portaudio.com/trac/ticket/113</ulink> </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>pa_cpuload.c<sp/>1577<sp/>2011-02-01<sp/>13:03:45Z<sp/>rossb<sp/>$</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Portable<sp/>Audio<sp/>I/O<sp/>Library<sp/>CPU<sp/>Load<sp/>measurement<sp/>functions</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Portable<sp/>CPU<sp/>load<sp/>measurement<sp/>facility.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Based<sp/>on<sp/>the<sp/>Open<sp/>Source<sp/>API<sp/>proposed<sp/>by<sp/>Ross<sp/>Bencina</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2002<sp/>Ross<sp/>Bencina</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>The<sp/>text<sp/>above<sp/>constitutes<sp/>the<sp/>entire<sp/>PortAudio<sp/>license;<sp/>however,<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>the<sp/>PortAudio<sp/>community<sp/>also<sp/>makes<sp/>the<sp/>following<sp/>non-binding<sp/>requests:</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>Any<sp/>person<sp/>wishing<sp/>to<sp/>distribute<sp/>modifications<sp/>to<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>requested<sp/>to<sp/>send<sp/>the<sp/>modifications<sp/>to<sp/>the<sp/>original<sp/>developer<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>they<sp/>can<sp/>be<sp/>incorporated<sp/>into<sp/>the<sp/>canonical<sp/>version.<sp/>It<sp/>is<sp/>also<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>requested<sp/>that<sp/>these<sp/>non-binding<sp/>requests<sp/>be<sp/>included<sp/>along<sp/>with<sp/>the<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>license<sp/>above.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__cpuload_8h" kindref="compound">pa_cpuload.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__util_8h" kindref="compound">pa_util.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>PaUtil_GetTime()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="pa__cpuload_8h_1a8cffac188367367b6c5c5ed8e0b1fe46" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__cpuload_8c_1a8cffac188367367b6c5c5ed8e0b1fe46" kindref="member">PaUtil_InitializeCpuLoadMeasurer</ref>(<sp/><ref refid="struct_pa_util_cpu_load_measurer" kindref="compound">PaUtilCpuLoadMeasurer</ref>*<sp/>measurer,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref><sp/>)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>sampleRate<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>measurer-&gt;<ref refid="struct_pa_util_cpu_load_measurer_1a302323c24d72fb4d07c81150121484a0" kindref="member">samplingPeriod</ref><sp/>=<sp/>1.<sp/>/<sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>measurer-&gt;<ref refid="struct_pa_util_cpu_load_measurer_1acca79b65aa1cce1c1dd4879bbbc79150" kindref="member">averageLoad</ref><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="pa__cpuload_8h_1a31e622efc7504297b2191c3fe616b2ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__cpuload_8c_1a31e622efc7504297b2191c3fe616b2ee" kindref="member">PaUtil_ResetCpuLoadMeasurer</ref>(<sp/><ref refid="struct_pa_util_cpu_load_measurer" kindref="compound">PaUtilCpuLoadMeasurer</ref>*<sp/>measurer<sp/>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>measurer-&gt;<ref refid="struct_pa_util_cpu_load_measurer_1acca79b65aa1cce1c1dd4879bbbc79150" kindref="member">averageLoad</ref><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="pa__cpuload_8h_1a83fdceefb7dff41725ba4f1f13a80f79" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__cpuload_8c_1a83fdceefb7dff41725ba4f1f13a80f79" kindref="member">PaUtil_BeginCpuLoadMeasurement</ref>(<sp/><ref refid="struct_pa_util_cpu_load_measurer" kindref="compound">PaUtilCpuLoadMeasurer</ref>*<sp/>measurer<sp/>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>measurer-&gt;<ref refid="struct_pa_util_cpu_load_measurer_1add48e8254754c024b704b06cd0251b23" kindref="member">measurementStartTime</ref><sp/>=<sp/><ref refid="pa__util_8h_1a9598384d28d22d589f607ca1069cc04c" kindref="member">PaUtil_GetTime</ref>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="pa__cpuload_8h_1a8c29cc1cf3b6fd9bf18a2c3fc9f0ef2a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__cpuload_8c_1a8c29cc1cf3b6fd9bf18a2c3fc9f0ef2a" kindref="member">PaUtil_EndCpuLoadMeasurement</ref>(<sp/><ref refid="struct_pa_util_cpu_load_measurer" kindref="compound">PaUtilCpuLoadMeasurer</ref>*<sp/>measurer,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesProcessed<sp/>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>measurementEndTime,<sp/>secondsFor100Percent,<sp/>measuredLoad;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesProcessed<sp/>&gt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurementEndTime<sp/>=<sp/><ref refid="pa__util_8h_1a9598384d28d22d589f607ca1069cc04c" kindref="member">PaUtil_GetTime</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>framesProcessed<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secondsFor100Percent<sp/>=<sp/>framesProcessed<sp/>*<sp/>measurer-&gt;<ref refid="struct_pa_util_cpu_load_measurer_1a302323c24d72fb4d07c81150121484a0" kindref="member">samplingPeriod</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measuredLoad<sp/>=<sp/>(measurementEndTime<sp/>-<sp/>measurer-&gt;<ref refid="struct_pa_util_cpu_load_measurer_1add48e8254754c024b704b06cd0251b23" kindref="member">measurementStartTime</ref>)<sp/>/<sp/>secondsFor100Percent;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Low<sp/>pass<sp/>filter<sp/>the<sp/>calculated<sp/>CPU<sp/>load<sp/>to<sp/>reduce<sp/>jitter<sp/>using<sp/>a<sp/>simple<sp/>IIR<sp/>low<sp/>pass<sp/>filter.<sp/>*/</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor">#define<sp/>LOWPASS_COEFFICIENT_0<sp/><sp/><sp/>(0.9)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOWPASS_COEFFICIENT_1<sp/><sp/><sp/>(0.99999<sp/>-<sp/>LOWPASS_COEFFICIENT_0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurer-&gt;<ref refid="struct_pa_util_cpu_load_measurer_1acca79b65aa1cce1c1dd4879bbbc79150" kindref="member">averageLoad</ref><sp/>=<sp/>(<ref refid="pa__cpuload_8c_1ad7bc948ad89f917a6c3602a85f7900f2" kindref="member">LOWPASS_COEFFICIENT_0</ref><sp/>*<sp/>measurer-&gt;<ref refid="struct_pa_util_cpu_load_measurer_1acca79b65aa1cce1c1dd4879bbbc79150" kindref="member">averageLoad</ref>)<sp/>+</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pa__cpuload_8c_1a140596284a7429f84f15197b400bd73e" kindref="member">LOWPASS_COEFFICIENT_1</ref><sp/>*<sp/>measuredLoad);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="pa__cpuload_8h_1af7bff59bbfe46a388e21633bf49ea0d6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="pa__cpuload_8c_1af7bff59bbfe46a388e21633bf49ea0d6" kindref="member">PaUtil_GetCpuLoad</ref>(<sp/><ref refid="struct_pa_util_cpu_load_measurer" kindref="compound">PaUtilCpuLoadMeasurer</ref>*<sp/>measurer<sp/>)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>measurer-&gt;<ref refid="struct_pa_util_cpu_load_measurer_1acca79b65aa1cce1c1dd4879bbbc79150" kindref="member">averageLoad</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_cpuload.c"/>
  </compounddef>
</doxygen>
