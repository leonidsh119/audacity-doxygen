<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="group__lavc__picture" kind="group">
    <compoundname>lavc_picture</compoundname>
    <title>AVPicture</title>
    <innerclass refid="struct_a_v_picture" prot="public">AVPicture</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__lavc__picture_1ga39851aa8a2053ff2bafc5b292505fb78" prot="public" static="no">
        <type>struct <ref refid="struct_a_v_picture" kindref="compound">AVPicture</ref></type>
        <definition>typedef struct AVPicture  AVPicture</definition>
        <argsstring></argsstring>
        <name>AVPicture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Picture data structure.</para><para>Up to four components can be stored into it, the last component is alpha. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3247" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__lavc__picture_1ga03b764a93c34d00e5a33a5ebb0b4a81b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avpicture_alloc</definition>
        <argsstring>(AVPicture *picture, enum AVPixelFormat pix_fmt, int width, int height)</argsstring>
        <name>avpicture_alloc</name>
        <param>
          <type><ref refid="struct_a_v_picture" kindref="compound">AVPicture</ref> *</type>
          <declname>picture</declname>
        </param>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>pix_fmt</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate memory for the pixels of a picture and setup the <ref refid="struct_a_v_picture" kindref="compound">AVPicture</ref> fields for it.</para><para>Call <ref refid="group__lavc__picture_1gaf4ad71a7e39b54ee70f18cc451de956f" kindref="member">avpicture_free()</ref> to free it.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>picture</parametername>
</parameternamelist>
<parameterdescription>
<para>the picture structure to be filled in </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pix_fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>the pixel format of the picture </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>the width of the picture </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>the height of the picture </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if successful, a negative error code otherwise</para></simplesect>
<simplesect kind="see"><para><ref refid="group__lavu__picture_1ga841e0a89a642e24141af1918a2c10448" kindref="member">av_image_alloc()</ref>, <ref refid="group__lavc__picture_1gac1b22e9b246cb8b0928cca8f5fa524d4" kindref="member">avpicture_fill()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4505" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__picture_1gaf4ad71a7e39b54ee70f18cc451de956f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void avpicture_free</definition>
        <argsstring>(AVPicture *picture)</argsstring>
        <name>avpicture_free</name>
        <param>
          <type><ref refid="struct_a_v_picture" kindref="compound">AVPicture</ref> *</type>
          <declname>picture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free a picture previously allocated by <ref refid="group__lavc__picture_1ga03b764a93c34d00e5a33a5ebb0b4a81b" kindref="member">avpicture_alloc()</ref>. The data buffer used by the <ref refid="struct_a_v_picture" kindref="compound">AVPicture</ref> is freed, but the <ref refid="struct_a_v_picture" kindref="compound">AVPicture</ref> structure itself is not.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>picture</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="struct_a_v_picture" kindref="compound">AVPicture</ref> to be freed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4514" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__picture_1gac1b22e9b246cb8b0928cca8f5fa524d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avpicture_fill</definition>
        <argsstring>(AVPicture *picture, const uint8_t *ptr, enum AVPixelFormat pix_fmt, int width, int height)</argsstring>
        <name>avpicture_fill</name>
        <param>
          <type><ref refid="struct_a_v_picture" kindref="compound">AVPicture</ref> *</type>
          <declname>picture</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>pix_fmt</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup the picture fields based on the specified image parameters and the provided image data buffer.</para><para>The picture fields are filled in by using the image data buffer pointed to by ptr.</para><para>If ptr is NULL, the function will fill only the picture linesize array and return the required size for the image buffer.</para><para>To allocate an image buffer and fill the picture data in one call, use <ref refid="group__lavc__picture_1ga03b764a93c34d00e5a33a5ebb0b4a81b" kindref="member">avpicture_alloc()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>picture</parametername>
</parameternamelist>
<parameterdescription>
<para>the picture to be filled in </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer where the image data is stored, or NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pix_fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>the pixel format of the image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>the width of the image in pixels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>the height of the image in pixels </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the size in bytes required for src, a negative error code in case of failure</para></simplesect>
<simplesect kind="see"><para><ref refid="group__lavu__picture_1ga5b6ead346a70342ae8a303c16d2b3629" kindref="member">av_image_fill_arrays()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4539" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__picture_1ga99bc554a84681f7ee6422a384007a4ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avpicture_layout</definition>
        <argsstring>(const AVPicture *src, enum AVPixelFormat pix_fmt, int width, int height, unsigned char *dest, int dest_size)</argsstring>
        <name>avpicture_layout</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_picture" kindref="compound">AVPicture</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>pix_fmt</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>height</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>dest_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy pixel data from an <ref refid="struct_a_v_picture" kindref="compound">AVPicture</ref> into a buffer.</para><para><ref refid="group__lavc__picture_1ga18a08bcb237767ef442fd5d3d1dd2084" kindref="member">avpicture_get_size()</ref> can be used to compute the required size for the buffer to fill.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>source picture with filled data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pix_fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>picture pixel format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>picture width </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>picture height </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>destination buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dest_size</parametername>
</parameternamelist>
<parameterdescription>
<para>destination buffer size in bytes </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of bytes written to dest, or a negative value (error code) on error, for example if the destination buffer is not big enough</para></simplesect>
<simplesect kind="see"><para><ref refid="group__lavu__picture_1ga6f8576f1ef0c2d9a9f7c5ac7f9a28c52" kindref="member">av_image_copy_to_buffer()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4560" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__picture_1ga18a08bcb237767ef442fd5d3d1dd2084" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avpicture_get_size</definition>
        <argsstring>(enum AVPixelFormat pix_fmt, int width, int height)</argsstring>
        <name>avpicture_get_size</name>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>pix_fmt</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the size in bytes that a picture of the given width and height would occupy if stored in the given picture format.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pix_fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>picture pixel format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>picture width </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>picture height </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the computed picture buffer size or a negative error code in case of error</para></simplesect>
<simplesect kind="see"><para><ref refid="group__lavu__picture_1ga24a67963c3ae0054a2a4bab35930e694" kindref="member">av_image_get_buffer_size()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4576" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__picture_1gafae4ce3eea8607e0c0c14ef73ff1902f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>attribute_deprecated int avpicture_deinterlace</definition>
        <argsstring>(AVPicture *dst, const AVPicture *src, enum AVPixelFormat pix_fmt, int width, int height)</argsstring>
        <name>avpicture_deinterlace</name>
        <param>
          <type><ref refid="struct_a_v_picture" kindref="compound">AVPicture</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_picture" kindref="compound">AVPicture</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>pix_fmt</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>deinterlace - if not supported return -1</para><para><xrefsect id="deprecated_1_deprecated000011"><xreftitle>Deprecated</xreftitle><xrefdescription><para><itemizedlist>
<listitem><para>use yadif (in libavfilter) instead </para></listitem></itemizedlist>
</para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4585" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__picture_1gaa55e61985bbede1135135e39a40a4ac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_picture_copy</definition>
        <argsstring>(AVPicture *dst, const AVPicture *src, enum AVPixelFormat pix_fmt, int width, int height)</argsstring>
        <name>av_picture_copy</name>
        <param>
          <type><ref refid="struct_a_v_picture" kindref="compound">AVPicture</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_picture" kindref="compound">AVPicture</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>pix_fmt</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy image src to dst. Wraps <ref refid="group__lavu__picture_1ga6b5a267e202daadf81cbde6584055d1e" kindref="member">av_image_copy()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4591" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__picture_1gadeee38e47bd67bb3cce616ce4979e9be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_picture_crop</definition>
        <argsstring>(AVPicture *dst, const AVPicture *src, enum AVPixelFormat pix_fmt, int top_band, int left_band)</argsstring>
        <name>av_picture_crop</name>
        <param>
          <type><ref refid="struct_a_v_picture" kindref="compound">AVPicture</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_picture" kindref="compound">AVPicture</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>pix_fmt</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>top_band</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>left_band</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Crop image top and left side. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4597" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__picture_1ga9b2a864f48cb9d8eac48bd71ec195125" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_picture_pad</definition>
        <argsstring>(AVPicture *dst, const AVPicture *src, int height, int width, enum AVPixelFormat pix_fmt, int padtop, int padbottom, int padleft, int padright, int *color)</argsstring>
        <name>av_picture_pad</name>
        <param>
          <type><ref refid="struct_a_v_picture" kindref="compound">AVPicture</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_picture" kindref="compound">AVPicture</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>pix_fmt</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>padtop</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>padbottom</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>padleft</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>padright</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pad image. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4603" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Functions for working with <ref refid="struct_a_v_picture" kindref="compound">AVPicture</ref> </para>    </detaileddescription>
  </compounddef>
</doxygen>
