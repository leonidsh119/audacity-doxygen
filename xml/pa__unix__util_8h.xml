<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="pa__unix__util_8h" kind="file" language="C++">
    <compoundname>pa_unix_util.h</compoundname>
    <includes refid="pa__cpuload_8h" local="yes">pa_cpuload.h</includes>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes local="no">pthread.h</includes>
    <includes local="no">signal.h</includes>
    <includedby refid="pa__linux__alsa_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c</includedby>
    <includedby refid="pa__linux__asihpi_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/asihpi/pa_linux_asihpi.c</includedby>
    <includedby refid="pa__unix__oss_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/oss/pa_unix_oss.c</includedby>
    <includedby refid="pa__unix__util_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.c</includedby>
    <incdepgraph>
      <node id="30415">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h</label>
        <link refid="pa_unix_util.h"/>
        <childnode refid="30416" relation="include">
        </childnode>
        <childnode refid="30417" relation="include">
        </childnode>
        <childnode refid="30418" relation="include">
        </childnode>
        <childnode refid="30419" relation="include">
        </childnode>
      </node>
      <node id="30416">
        <label>pa_cpuload.h</label>
        <link refid="pa__cpuload_8h"/>
      </node>
      <node id="30417">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="30418">
        <label>pthread.h</label>
      </node>
      <node id="30419">
        <label>signal.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="30424">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.c</label>
        <link refid="pa__unix__util_8c"/>
      </node>
      <node id="30420">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h</label>
        <link refid="pa_unix_util.h"/>
        <childnode refid="30421" relation="include">
        </childnode>
        <childnode refid="30422" relation="include">
        </childnode>
        <childnode refid="30423" relation="include">
        </childnode>
        <childnode refid="30424" relation="include">
        </childnode>
      </node>
      <node id="30423">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/oss/pa_unix_oss.c</label>
        <link refid="pa__unix__oss_8c"/>
      </node>
      <node id="30421">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c</label>
        <link refid="pa__linux__alsa_8c"/>
      </node>
      <node id="30422">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/asihpi/pa_linux_asihpi.c</label>
        <link refid="pa__linux__asihpi_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_pa_util_threading" prot="public">PaUtilThreading</innerclass>
    <innerclass refid="struct_pa_unix_mutex" prot="public">PaUnixMutex</innerclass>
    <innerclass refid="struct_pa_unix_thread" prot="public">PaUnixThread</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="pa__unix__util_8h_1aea604351950df064043e9512ef7a222f" prot="public" static="no">
        <name>PA_MIN</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>( (x) &lt; (y) ? (x) : (y) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="57" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__unix__util_8h_1a4bc529f0326c76adbfea99f629a119bf" prot="public" static="no">
        <name>PA_MAX</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>( (x) &gt; (y) ? (x) : (y) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="58" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__unix__util_8h_1a9acc330d508b9a3b775cfdf7ce405e7d" prot="public" static="no">
        <name>UNLIKELY</name>
        <param><defname>expr</defname></param>
        <initializer>(expr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="64" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__unix__util_8h_1a5e9dbdaa9b7f8c085c47d5956bde3691" prot="public" static="no">
        <name>STRINGIZE_HELPER</name>
        <param><defname>expr</defname></param>
        <initializer>#expr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="67" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__unix__util_8h_1a8fdb5acc9bc207e117671b79ddf1df0f" prot="public" static="no">
        <name>STRINGIZE</name>
        <param><defname>expr</defname></param>
        <initializer><ref refid="pa__unix__util_8h_1a5e9dbdaa9b7f8c085c47d5956bde3691" kindref="member">STRINGIZE_HELPER</ref>(expr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="68" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" prot="public" static="no">
        <name>PA_UNLESS</name>
        <param><defname>expr</defname></param>
        <param><defname>code</defname></param>
        <initializer>do { \
        <ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref>( <ref refid="pa__unix__util_8h_1a9acc330d508b9a3b775cfdf7ce405e7d" kindref="member">UNLIKELY</ref>( (expr) == 0 ) ) \
        { \
            <ref refid="pa__debugprint_8h_1a775ad90aa83e8a15e724f1b0fc55a0d3" kindref="member">PaUtil_DebugPrint</ref>(( &quot;Expression &apos;&quot; #expr &quot;&apos; failed <ref refid="latency_8c_1a7d946209d777cb95fe30364b8d321207" kindref="member">in</ref> &apos;&quot; __FILE__ &quot;&apos;, line: &quot; STRINGIZE( __LINE__ ) &quot;\n&quot; )); \
            result = (code); \
            goto <ref refid="sndfile__save_8m_1ada4b423bc19e6ff5c5b514e55f518a82" kindref="member">error</ref>; \
        } \
    } while (0);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="70" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" prot="public" static="no">
        <name>PA_ENSURE</name>
        <param><defname>expr</defname></param>
        <initializer>do { \
        <ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref>( <ref refid="pa__unix__util_8h_1a9acc330d508b9a3b775cfdf7ce405e7d" kindref="member">UNLIKELY</ref>( (paUtilErr_ = (expr)) &lt; <ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref> ) ) \
        { \
            <ref refid="pa__debugprint_8h_1a775ad90aa83e8a15e724f1b0fc55a0d3" kindref="member">PaUtil_DebugPrint</ref>(( &quot;Expression &apos;&quot; #expr &quot;&apos; failed <ref refid="latency_8c_1a7d946209d777cb95fe30364b8d321207" kindref="member">in</ref> &apos;&quot; __FILE__ &quot;&apos;, line: &quot; STRINGIZE( __LINE__ ) &quot;\n&quot; )); \
            result = paUtilErr_; \
            goto <ref refid="sndfile__save_8m_1ada4b423bc19e6ff5c5b514e55f518a82" kindref="member">error</ref>; \
        } \
    } while (0);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="83" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__unix__util_8h_1a70a9602df8dcb5495c3ea6d967a0e807" prot="public" static="no">
        <name>PA_ASSERT_CALL</name>
        <param><defname>expr</defname></param>
        <param><defname>success</defname></param>
        <initializer>paUtilErr_ = (expr); \
    <ref refid="libmad_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>( success == paUtilErr_ );</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="93" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__unix__util_8h_1aba9526ea8f0dd5b0603f3c81e5e1f9b8" prot="public" static="no">
        <name>PA_ENSURE_SYSTEM</name>
        <param><defname>expr</defname></param>
        <param><defname>success</defname></param>
        <initializer>do { \
        <ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref>( <ref refid="pa__unix__util_8h_1a9acc330d508b9a3b775cfdf7ce405e7d" kindref="member">UNLIKELY</ref>( (paUtilErr_ = (expr)) != success ) ) \
        { \
            /* <ref refid="pa__util_8h_1a9c3ad627c13c1d695fef054c216667f7" kindref="member">PaUtil_SetLastHostErrorInfo</ref> should only be used <ref refid="latency_8c_1a7d946209d777cb95fe30364b8d321207" kindref="member">in</ref> <ref refid="nasm_8h_1aaf57ffcfef0bee04f46c6ada2a905a8c" kindref="member">the</ref> <ref refid="_simple_block_file_test_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref> thread */ \
            <ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref>( pthread_equal(pthread_self(), <ref refid="pa__unix__util_8h_1a786fbebfd9d315bc39dec32568a4dfe1" kindref="member">paUnixMainThread</ref>) ) \
            { \
                <ref refid="pa__util_8h_1a9c3ad627c13c1d695fef054c216667f7" kindref="member">PaUtil_SetLastHostErrorInfo</ref>( <ref refid="portaudio_8h_1a8eaebe3d39c5ea45598da8f86dc2e5aea5fb23d8b2cf3e2e714298de5ab1b83e1" kindref="member">paALSA</ref>, paUtilErr_, strerror( paUtilErr_ ) ); \
            } \
            <ref refid="pa__debugprint_8h_1a775ad90aa83e8a15e724f1b0fc55a0d3" kindref="member">PaUtil_DebugPrint</ref>( &quot;Expression &apos;&quot; #expr &quot;&apos; failed <ref refid="latency_8c_1a7d946209d777cb95fe30364b8d321207" kindref="member">in</ref> &apos;&quot; __FILE__ &quot;&apos;, line: &quot; STRINGIZE( __LINE__ ) &quot;\n&quot; ); \
            result = <ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref>; \
            goto <ref refid="sndfile__save_8m_1ada4b423bc19e6ff5c5b514e55f518a82" kindref="member">error</ref>; \
        } \
    } while( 0 );</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="97" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__unix__util_8h_1a055995dcdc8dc582299a32f56500f0e1" prot="public" static="no">
        <name>PaUnixThreading_EXIT</name>
        <param><defname>result</defname></param>
        <initializer>do { \
        <ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref>* pres = <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>; \
        <ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref>( <ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref> != (result) ) \
        { \
            pres = malloc( sizeof (<ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref>) ); \
            *pres = (result); \
        } \
        pthread_exit( pres ); \
    } while (0);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perish, passing on eventual error code.</para><para>A thin wrapper around pthread_exit, will automatically pass on any error code to the joining thread. If the result indicates an error, i.e. it is not equal to paNoError, this function will automatically allocate a pointer so the error is passed on with pthread_exit. If the result indicates that all is well however, only a NULL pointer will be handed to pthread_exit. Thus, the joining thread should check whether a non-NULL result pointer is obtained from pthread_join and make sure to free it. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>The error code to pass on to the joining thread. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="171" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pa__unix__util_8h_1a3463ef9865dffadd3d00ae7b5975ca52" prot="public" static="yes" mutable="no">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>PaError paUtilErr_</definition>
        <argsstring></argsstring>
        <name>paUtilErr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="80" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pa__unix__util_8h_1a786fbebfd9d315bc39dec32568a4dfe1" prot="public" static="no" mutable="no">
        <type>pthread_t</type>
        <definition>pthread_t paUnixMainThread</definition>
        <argsstring></argsstring>
        <name>paUnixMainThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="135" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.c" bodystart="236" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pa__unix__util_8h_1abec767adc928dfb8a8afa46a596cd828" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>PaError PaUtil_InitializeThreading</definition>
        <argsstring>(PaUtilThreading *threading)</argsstring>
        <name>PaUtil_InitializeThreading</name>
        <param>
          <type><ref refid="struct_pa_util_threading" kindref="compound">PaUtilThreading</ref> *</type>
          <declname>threading</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="116" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.c" bodystart="172" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="pa__unix__util_8h_1a2c519ba45de8cb5907a5f0648405b9cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_TerminateThreading</definition>
        <argsstring>(PaUtilThreading *threading)</argsstring>
        <name>PaUtil_TerminateThreading</name>
        <param>
          <type><ref refid="struct_pa_util_threading" kindref="compound">PaUtilThreading</ref> *</type>
          <declname>threading</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="117" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.c" bodystart="178" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="pa__unix__util_8h_1a8e9b99116311cbfda679ce1d252562d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>PaError PaUtil_StartThreading</definition>
        <argsstring>(PaUtilThreading *threading, void *(*threadRoutine)(void *), void *data)</argsstring>
        <name>PaUtil_StartThreading</name>
        <param>
          <type><ref refid="struct_pa_util_threading" kindref="compound">PaUtilThreading</ref> *</type>
          <declname>threading</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *(*)(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *)</type>
          <declname>threadRoutine</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="118" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.c" bodystart="182" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="pa__unix__util_8h_1a02b4c61d57c95e1ae0768cd21bf04538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>PaError PaUtil_CancelThreading</definition>
        <argsstring>(PaUtilThreading *threading, int wait, PaError *exitResult)</argsstring>
        <name>PaUtil_CancelThreading</name>
        <param>
          <type><ref refid="struct_pa_util_threading" kindref="compound">PaUtilThreading</ref> *</type>
          <declname>threading</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>wait</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref> *</type>
          <declname>exitResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="119" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.c" bodystart="188" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="pa__unix__util_8h_1a8404184f8c9faff3dd921a12f79d836d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>PaError PaUnixMutex_Initialize</definition>
        <argsstring>(PaUnixMutex *self)</argsstring>
        <name>PaUnixMutex_Initialize</name>
        <param>
          <type><ref refid="struct_pa_unix_mutex" kindref="compound">PaUnixMutex</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="142" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.c" bodystart="500" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="pa__unix__util_8h_1a02e089c1b5a1dfef9b11462c65c280f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>PaError PaUnixMutex_Terminate</definition>
        <argsstring>(PaUnixMutex *self)</argsstring>
        <name>PaUnixMutex_Terminate</name>
        <param>
          <type><ref refid="struct_pa_unix_mutex" kindref="compound">PaUnixMutex</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="143" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.c" bodystart="507" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="pa__unix__util_8h_1a254077b3b33653765a397e41fa59a4d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>PaError PaUnixMutex_Lock</definition>
        <argsstring>(PaUnixMutex *self)</argsstring>
        <name>PaUnixMutex_Lock</name>
        <param>
          <type><ref refid="struct_pa_unix_mutex" kindref="compound">PaUnixMutex</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Lock mutex.</para><para>We&apos;re disabling thread cancellation while the thread is holding a lock, so mutexes are properly unlocked at termination time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="144" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.c" bodystart="519" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="pa__unix__util_8h_1a32dd4f5abd53fb23a2f5349fa5c63d5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>PaError PaUnixMutex_Unlock</definition>
        <argsstring>(PaUnixMutex *self)</argsstring>
        <name>PaUnixMutex_Unlock</name>
        <param>
          <type><ref refid="struct_pa_unix_mutex" kindref="compound">PaUnixMutex</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unlock mutex.</para><para>Thread cancellation is enabled again after the mutex is properly unlocked. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="145" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.c" bodystart="537" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="pa__unix__util_8h_1a1d6b7ffc7a2a08e24900258ef8e3a35a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>PaError PaUnixThreading_Initialize</definition>
        <argsstring>()</argsstring>
        <name>PaUnixThreading_Initialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize global threading state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="160" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.c" bodystart="239" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="pa__unix__util_8h_1a1ea876bbbde993a851b1081065e4d5d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>PaError PaUnixThread_New</definition>
        <argsstring>(PaUnixThread *self, void *(*threadFunc)(void *), void *threadArg, PaTime waitForChild, int rtSched)</argsstring>
        <name>PaUnixThread_New</name>
        <param>
          <type><ref refid="struct_pa_unix_thread" kindref="compound">PaUnixThread</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *(*)(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *)</type>
          <declname>threadFunc</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>threadArg</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref></type>
          <declname>waitForChild</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>rtSched</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Spawn a thread.</para><para>Intended for spawning the callback thread from the main thread. This function can even block (for a certain time or indefinitely) untill notified by the callback thread (using PaUnixThread_NotifyParent), which can be useful in order to make sure that callback has commenced before returning from Pa_StartStream. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>threadFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>The function to be executed in the child thread. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>waitForChild</parametername>
</parameternamelist>
<parameterdescription>
<para>If not 0, wait for child thread to call PaUnixThread_NotifyParent. Less than 0 means wait for ever, greater than 0 wait for the specified time. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rtSched</parametername>
</parameternamelist>
<parameterdescription>
<para>Enable realtime scheduling? </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: If timed out waiting on child, paTimedOut. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="193" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.c" bodystart="268" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="pa__unix__util_8h_1a2f251ad2c037e1a573c1a5cb564b1afe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>PaError PaUnixThread_Terminate</definition>
        <argsstring>(PaUnixThread *self, int wait, PaError *exitResult)</argsstring>
        <name>PaUnixThread_Terminate</name>
        <param>
          <type><ref refid="struct_pa_unix_thread" kindref="compound">PaUnixThread</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>wait</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref> *</type>
          <declname>exitResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Terminate thread.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wait</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, request that background thread stop and wait untill it does, else cancel it. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exitResult</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null this will upon return contain the exit status of the thread. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="201" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.c" bodystart="402" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="pa__unix__util_8h_1ab4ffae4c3e89df03d105effda5f29434" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>PaError PaUnixThread_PrepareNotify</definition>
        <argsstring>(PaUnixThread *self)</argsstring>
        <name>PaUnixThread_PrepareNotify</name>
        <param>
          <type><ref refid="struct_pa_unix_thread" kindref="compound">PaUnixThread</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Prepare to notify waiting parent thread.</para><para>An internal lock must be held before the parent is notified in PaUnixThread_NotifyParent, call this to acquire it beforehand. <simplesect kind="return"><para>: If parent is not waiting, paInternalError. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="209" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.c" bodystart="464" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="pa__unix__util_8h_1a75d9c22a1e8e18d99cb532a5cf3da8d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>PaError PaUnixThread_NotifyParent</definition>
        <argsstring>(PaUnixThread *self)</argsstring>
        <name>PaUnixThread_NotifyParent</name>
        <param>
          <type><ref refid="struct_pa_unix_thread" kindref="compound">PaUnixThread</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Notify waiting parent thread.</para><para><simplesect kind="return"><para>: If parent timed out waiting, paTimedOut. If parent was never waiting, paInternalError. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="215" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.c" bodystart="476" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="pa__unix__util_8h_1a80a12f3ba5d557f3b16177737817ae19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PaUnixThread_StopRequested</definition>
        <argsstring>(PaUnixThread *self)</argsstring>
        <name>PaUnixThread_StopRequested</name>
        <param>
          <type><ref refid="struct_pa_unix_thread" kindref="compound">PaUnixThread</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Has the parent thread requested this thread to stop? </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h" line="219" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.c" bodystart="495" bodyend="498"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>pa_unix_util.h<sp/>1241<sp/>2007-07-23<sp/>20:08:31Z<sp/>aknudsen<sp/>$</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Portable<sp/>Audio<sp/>I/O<sp/>Library</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>UNIX<sp/>platform-specific<sp/>support<sp/>functions</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Based<sp/>on<sp/>the<sp/>Open<sp/>Source<sp/>API<sp/>proposed<sp/>by<sp/>Ross<sp/>Bencina</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2000<sp/>Ross<sp/>Bencina</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>The<sp/>text<sp/>above<sp/>constitutes<sp/>the<sp/>entire<sp/>PortAudio<sp/>license;<sp/>however,<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>the<sp/>PortAudio<sp/>community<sp/>also<sp/>makes<sp/>the<sp/>following<sp/>non-binding<sp/>requests:</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>Any<sp/>person<sp/>wishing<sp/>to<sp/>distribute<sp/>modifications<sp/>to<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>requested<sp/>to<sp/>send<sp/>the<sp/>modifications<sp/>to<sp/>the<sp/>original<sp/>developer<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>they<sp/>can<sp/>be<sp/>incorporated<sp/>into<sp/>the<sp/>canonical<sp/>version.<sp/>It<sp/>is<sp/>also<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>requested<sp/>that<sp/>these<sp/>non-binding<sp/>requests<sp/>be<sp/>included<sp/>along<sp/>with<sp/>the<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>license<sp/>above.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor">#ifndef<sp/>PA_UNIX_UTIL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PA_UNIX_UTIL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__cpuload_8h" kindref="compound">pa_cpuload.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="pa__unix__util_8h_1aea604351950df064043e9512ef7a222f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PA_MIN(x,y)<sp/>(<sp/>(x)<sp/>&lt;<sp/>(y)<sp/>?<sp/>(x)<sp/>:<sp/>(y)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="pa__unix__util_8h_1a4bc529f0326c76adbfea99f629a119bf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PA_MAX(x,y)<sp/>(<sp/>(x)<sp/>&gt;<sp/>(y)<sp/>?<sp/>(x)<sp/>:<sp/>(y)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Utilize<sp/>GCC<sp/>branch<sp/>prediction<sp/>for<sp/>error<sp/>tests<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>__GNUC__<sp/>&amp;&amp;<sp/>__GNUC__<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNLIKELY(expr)<sp/>__builtin_expect(<sp/>(expr),<sp/>0<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="pa__unix__util_8h_1a9acc330d508b9a3b775cfdf7ce405e7d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNLIKELY(expr)<sp/>(expr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="pa__unix__util_8h_1a5e9dbdaa9b7f8c085c47d5956bde3691" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STRINGIZE_HELPER(expr)<sp/>#expr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="pa__unix__util_8h_1a8fdb5acc9bc207e117671b79ddf1df0f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STRINGIZE(expr)<sp/>STRINGIZE_HELPER(expr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PA_UNLESS(expr,<sp/>code)<sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>UNLIKELY(<sp/>(expr)<sp/>==<sp/>0<sp/>)<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PaUtil_DebugPrint((<sp/>&quot;Expression<sp/>&apos;&quot;<sp/>#expr<sp/>&quot;&apos;<sp/>failed<sp/>in<sp/>&apos;&quot;<sp/>__FILE__<sp/>&quot;&apos;,<sp/>line:<sp/>&quot;<sp/>STRINGIZE(<sp/>__LINE__<sp/>)<sp/>&quot;\n&quot;<sp/>));<sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(code);<sp/>\</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goto<sp/>error;<sp/>\</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>paUtilErr_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Used<sp/>with<sp/>PA_ENSURE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Check<sp/>PaError<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PA_ENSURE(expr)<sp/>\</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>UNLIKELY(<sp/>(paUtilErr_<sp/>=<sp/>(expr))<sp/>&lt;<sp/>paNoError<sp/>)<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PaUtil_DebugPrint((<sp/>&quot;Expression<sp/>&apos;&quot;<sp/>#expr<sp/>&quot;&apos;<sp/>failed<sp/>in<sp/>&apos;&quot;<sp/>__FILE__<sp/>&quot;&apos;,<sp/>line:<sp/>&quot;<sp/>STRINGIZE(<sp/>__LINE__<sp/>)<sp/>&quot;\n&quot;<sp/>));<sp/>\</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>paUtilErr_;<sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goto<sp/>error;<sp/>\</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="pa__unix__util_8h_1a70a9602df8dcb5495c3ea6d967a0e807" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PA_ASSERT_CALL(expr,<sp/>success)<sp/>\</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>paUtilErr_<sp/>=<sp/>(expr);<sp/>\</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>assert(<sp/>success<sp/>==<sp/>paUtilErr_<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="pa__unix__util_8h_1aba9526ea8f0dd5b0603f3c81e5e1f9b8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PA_ENSURE_SYSTEM(expr,<sp/>success)<sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>UNLIKELY(<sp/>(paUtilErr_<sp/>=<sp/>(expr))<sp/>!=<sp/>success<sp/>)<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PaUtil_SetLastHostErrorInfo<sp/>should<sp/>only<sp/>be<sp/>used<sp/>in<sp/>the<sp/>main<sp/>thread<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>pthread_equal(pthread_self(),<sp/>paUnixMainThread)<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PaUtil_SetLastHostErrorInfo(<sp/>paALSA,<sp/>paUtilErr_,<sp/>strerror(<sp/>paUtilErr_<sp/>)<sp/>);<sp/>\</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PaUtil_DebugPrint(<sp/>&quot;Expression<sp/>&apos;&quot;<sp/>#expr<sp/>&quot;&apos;<sp/>failed<sp/>in<sp/>&apos;&quot;<sp/>__FILE__<sp/>&quot;&apos;,<sp/>line:<sp/>&quot;<sp/>STRINGIZE(<sp/>__LINE__<sp/>)<sp/>&quot;\n&quot;<sp/>);<sp/>\</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>paUnanticipatedHostError;<sp/>\</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goto<sp/>error;<sp/>\</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while(<sp/>0<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="struct_pa_util_threading" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="113" refid="struct_pa_util_threading_1a9553eb5e28d393f7fd8a2e8517aa5e50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_t<sp/><ref refid="struct_pa_util_threading_1a9553eb5e28d393f7fd8a2e8517aa5e50" kindref="member">callbackThread</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}<sp/><ref refid="struct_pa_util_threading" kindref="compound">PaUtilThreading</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/><ref refid="pa__unix__util_8h_1abec767adc928dfb8a8afa46a596cd828" kindref="member">PaUtil_InitializeThreading</ref>(<sp/><ref refid="struct_pa_util_threading" kindref="compound">PaUtilThreading</ref><sp/>*<ref refid="namespacewaflib_1_1_tools_1_1vala_1a5324237aeb8614255136caaa81f95154" kindref="member">threading</ref><sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__unix__util_8h_1a2c519ba45de8cb5907a5f0648405b9cd" kindref="member">PaUtil_TerminateThreading</ref>(<sp/><ref refid="struct_pa_util_threading" kindref="compound">PaUtilThreading</ref><sp/>*<ref refid="namespacewaflib_1_1_tools_1_1vala_1a5324237aeb8614255136caaa81f95154" kindref="member">threading</ref><sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/><ref refid="pa__unix__util_8h_1a8e9b99116311cbfda679ce1d252562d4" kindref="member">PaUtil_StartThreading</ref>(<sp/><ref refid="struct_pa_util_threading" kindref="compound">PaUtilThreading</ref><sp/>*<ref refid="namespacewaflib_1_1_tools_1_1vala_1a5324237aeb8614255136caaa81f95154" kindref="member">threading</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*threadRoutine)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/><ref refid="pa__unix__util_8h_1a02b4c61d57c95e1ae0768cd21bf04538" kindref="member">PaUtil_CancelThreading</ref>(<sp/><ref refid="struct_pa_util_threading" kindref="compound">PaUtilThreading</ref><sp/>*threading,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wait,<sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>*exitResult<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>State<sp/>accessed<sp/>by<sp/>utility<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="124"><highlight class="comment">void<sp/>PaUnix_SetRealtimeScheduling(<sp/>int<sp/>rt<sp/>);</highlight></codeline>
<codeline lineno="125"><highlight class="comment"></highlight></codeline>
<codeline lineno="126"><highlight class="comment">void<sp/>PaUtil_InitializeThreading(<sp/>PaUtilThreading<sp/>*th,<sp/>PaUtilCpuLoadMeasurer<sp/>*clm<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="comment"></highlight></codeline>
<codeline lineno="128"><highlight class="comment">PaError<sp/>PaUtil_CreateCallbackThread(<sp/>PaUtilThreading<sp/>*th,<sp/>void<sp/>*(*CallbackThreadFunc)(<sp/>void<sp/>*<sp/>),<sp/>PaStream<sp/>*s<sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="comment"></highlight></codeline>
<codeline lineno="130"><highlight class="comment">PaError<sp/>PaUtil_KillCallbackThread(<sp/>PaUtilThreading<sp/>*th,<sp/>PaError<sp/>*exitResult<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="comment"></highlight></codeline>
<codeline lineno="132"><highlight class="comment">void<sp/>PaUtil_CallbackUpdate(<sp/>PaUtilThreading<sp/>*th<sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>pthread_t<sp/><ref refid="pa__unix__util_8h_1a786fbebfd9d315bc39dec32568a4dfe1" kindref="member">paUnixMainThread</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="struct_pa_unix_mutex" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139" refid="struct_pa_unix_mutex_1acd8b70e0869bfe5b0c4ce4e9c459abc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_t<sp/><ref refid="struct_pa_unix_mutex_1acd8b70e0869bfe5b0c4ce4e9c459abc2" kindref="member">mtx</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}<sp/><ref refid="struct_pa_unix_mutex" kindref="compound">PaUnixMutex</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/><ref refid="pa__unix__util_8h_1a8404184f8c9faff3dd921a12f79d836d" kindref="member">PaUnixMutex_Initialize</ref>(<sp/><ref refid="struct_pa_unix_mutex" kindref="compound">PaUnixMutex</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/><ref refid="pa__unix__util_8h_1a02e089c1b5a1dfef9b11462c65c280f2" kindref="member">PaUnixMutex_Terminate</ref>(<sp/><ref refid="struct_pa_unix_mutex" kindref="compound">PaUnixMutex</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/><ref refid="pa__unix__util_8h_1a254077b3b33653765a397e41fa59a4d1" kindref="member">PaUnixMutex_Lock</ref>(<sp/><ref refid="struct_pa_unix_mutex" kindref="compound">PaUnixMutex</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/><ref refid="pa__unix__util_8h_1a32dd4f5abd53fb23a2f5349fa5c63d5e" kindref="member">PaUnixMutex_Unlock</ref>(<sp/><ref refid="struct_pa_unix_mutex" kindref="compound">PaUnixMutex</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="struct_pa_unix_thread" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149" refid="struct_pa_unix_thread_1ad00e0ea927d1c0f830984c9d7c70d41b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_t<sp/><ref refid="struct_pa_unix_thread_1ad00e0ea927d1c0f830984c9d7c70d41b" kindref="member">thread</ref>;</highlight></codeline>
<codeline lineno="150" refid="struct_pa_unix_thread_1a1a0caeed9f5d8be47721158331702d0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_unix_thread_1a1a0caeed9f5d8be47721158331702d0b" kindref="member">parentWaiting</ref>;</highlight></codeline>
<codeline lineno="151" refid="struct_pa_unix_thread_1a2a258652e189a8f35af9726192713773" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_unix_thread_1a2a258652e189a8f35af9726192713773" kindref="member">stopRequested</ref>;</highlight></codeline>
<codeline lineno="152" refid="struct_pa_unix_thread_1af9983a628000e65ff4740f65eb81002f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_unix_thread_1af9983a628000e65ff4740f65eb81002f" kindref="member">locked</ref>;</highlight></codeline>
<codeline lineno="153" refid="struct_pa_unix_thread_1a37549f65c3b18dc1d0a3620508536c1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_unix_mutex" kindref="compound">PaUnixMutex</ref><sp/><ref refid="struct_pa_unix_thread_1a37549f65c3b18dc1d0a3620508536c1e" kindref="member">mtx</ref>;</highlight></codeline>
<codeline lineno="154" refid="struct_pa_unix_thread_1a299169d46cc51d9a198f97d55e0b8548" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_t<sp/><ref refid="struct_pa_unix_thread_1a299169d46cc51d9a198f97d55e0b8548" kindref="member">cond</ref>;</highlight></codeline>
<codeline lineno="155" refid="struct_pa_unix_thread_1a32c4ee3320efe420b56a6ccf42097627" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>sig_atomic_t<sp/><ref refid="struct_pa_unix_thread_1a32c4ee3320efe420b56a6ccf42097627" kindref="member">stopRequest</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}<sp/><ref refid="struct_pa_unix_thread" kindref="compound">PaUnixThread</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/><ref refid="pa__unix__util_8h_1a1d6b7ffc7a2a08e24900258ef8e3a35a" kindref="member">PaUnixThreading_Initialize</ref>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="pa__unix__util_8h_1a055995dcdc8dc582299a32f56500f0e1" refkind="member"><highlight class="preprocessor">#define<sp/>PaUnixThreading_EXIT(result)<sp/>\</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PaError*<sp/>pres<sp/>=<sp/>NULL;<sp/>\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>paNoError<sp/>!=<sp/>(result)<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pres<sp/>=<sp/>malloc(<sp/>sizeof<sp/>(PaError)<sp/>);<sp/>\</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pres<sp/>=<sp/>(result);<sp/>\</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_exit(<sp/>pres<sp/>);<sp/>\</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/><ref refid="pa__unix__util_8h_1a1ea876bbbde993a851b1081065e4d5d8" kindref="member">PaUnixThread_New</ref>(<sp/><ref refid="struct_pa_unix_thread" kindref="compound">PaUnixThread</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>(*threadFunc)(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>threadArg,<sp/><ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref><sp/>waitForChild,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtSched<sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/><ref refid="pa__unix__util_8h_1a2f251ad2c037e1a573c1a5cb564b1afe" kindref="member">PaUnixThread_Terminate</ref>(<sp/><ref refid="struct_pa_unix_thread" kindref="compound">PaUnixThread</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wait,<sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref>*<sp/>exitResult<sp/>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/><ref refid="pa__unix__util_8h_1ab4ffae4c3e89df03d105effda5f29434" kindref="member">PaUnixThread_PrepareNotify</ref>(<sp/><ref refid="struct_pa_unix_thread" kindref="compound">PaUnixThread</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/><ref refid="pa__unix__util_8h_1a75d9c22a1e8e18d99cb532a5cf3da8d0" kindref="member">PaUnixThread_NotifyParent</ref>(<sp/><ref refid="struct_pa_unix_thread" kindref="compound">PaUnixThread</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pa__unix__util_8h_1a80a12f3ba5d557f3b16177737817ae19" kindref="member">PaUnixThread_StopRequested</ref>(<sp/><ref refid="struct_pa_unix_thread" kindref="compound">PaUnixThread</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/unix/pa_unix_util.h"/>
  </compounddef>
</doxygen>
