<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="termtest_8c" kind="file" language="C++">
    <compoundname>termtest.c</compoundname>
    <includes refid="term_8h" local="yes">term.h</includes>
    <includes local="no">signal.h</includes>
    <incdepgraph>
      <node id="15958">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/termtest.c</label>
        <link refid="termtest.c"/>
        <childnode refid="15959" relation="include">
        </childnode>
        <childnode refid="15960" relation="include">
        </childnode>
      </node>
      <node id="15960">
        <label>signal.h</label>
      </node>
      <node id="15959">
        <label>term.h</label>
        <link refid="term_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="termtest_8c_1a69eaa5259d86ae3b370969f776ab89e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void ctcinit</definition>
        <argsstring>()</argsstring>
        <name>ctcinit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/termtest.c" line="9" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/termtest.c" bodystart="9" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="termtest_8c_1a51af30a60f9f02777c6396b8247e356f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/termtest.c" line="15" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/termtest.c" bodystart="15" bodyend="27"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>this<sp/>was<sp/>written<sp/>to<sp/>test<sp/>the<sp/>term.c<sp/>code,<sp/>which<sp/>was</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/>found<sp/>on<sp/>the<sp/>web<sp/>for<sp/>use<sp/>in<sp/>XLisp<sp/>to<sp/>enable<sp/>^C<sp/>and<sp/>other</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/>character-by-character<sp/>handling<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="term_8h" kindref="compound">term.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="termtest_8c_1a69eaa5259d86ae3b370969f776ab89e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="termtest_8c_1a69eaa5259d86ae3b370969f776ab89e4" kindref="member">ctcinit</ref>()</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>signal(SIGINT,<sp/><ref refid="term_8c_1ab1e8e59996de7dc367c466841c31594d" kindref="member">term_exit</ref>);</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="termtest_8c_1a51af30a60f9f02777c6396b8247e356f" refkind="member"><highlight class="normal"><ref refid="termtest_8c_1a51af30a60f9f02777c6396b8247e356f" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="term_8c_1ac7072b9c76dd77ce9900197d0133b0ba" kindref="member">term_init</ref>();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="term_8c_1ad60143345e2fe0b73e88d0af697044dd" kindref="member">term_character</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/><ref refid="term_8c_1a139c382b0ac17a0af5e6d39e0bad1d6d" kindref="member">term_testchar</ref>())<sp/>==<sp/>-2)<sp/>count++;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;got<sp/>%c<sp/>after<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>c,<sp/>count);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>getchar())<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;got<sp/>&apos;%c&apos;<sp/>=<sp/>%x\n&quot;</highlight><highlight class="normal">,<sp/>c,<sp/>c);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="term_8c_1ab1e8e59996de7dc367c466841c31594d" kindref="member">term_exit</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/termtest.c"/>
  </compounddef>
</doxygen>
