<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_import_8cpp" kind="file" language="C++">
    <compoundname>Import.cpp</compoundname>
    <includes refid="_audacity_8h" local="yes">../Audacity.h</includes>
    <includes refid="_import_8h" local="yes">Import.h</includes>
    <includes refid="_import_plugin_8h" local="yes">ImportPlugin.h</includes>
    <includes local="no">wx/textctrl.h</includes>
    <includes local="no">wx/msgdlg.h</includes>
    <includes local="no">wx/string.h</includes>
    <includes local="no">wx/intl.h</includes>
    <includes local="no">wx/log.h</includes>
    <includes local="no">wx/sizer.h</includes>
    <includes local="no">wx/arrimpl.cpp</includes>
    <includes local="no">wx/listimpl.cpp</includes>
    <includes refid="_shuttle_gui_8h" local="yes">../ShuttleGui.h</includes>
    <includes refid="_project_8h" local="yes">../Project.h</includes>
    <includes refid="_import_p_c_m_8h" local="yes">ImportPCM.h</includes>
    <includes refid="_import_m_p3_8h" local="yes">ImportMP3.h</includes>
    <includes refid="_import_o_g_g_8h" local="yes">ImportOGG.h</includes>
    <includes refid="_import_q_t_8h" local="yes">ImportQT.h</includes>
    <includes refid="_import_raw_8h" local="yes">ImportRaw.h</includes>
    <includes refid="_import_l_o_f_8h" local="yes">ImportLOF.h</includes>
    <includes refid="_import_f_l_a_c_8h" local="yes">ImportFLAC.h</includes>
    <includes refid="_import_f_fmpeg_8h" local="yes">ImportFFmpeg.h</includes>
    <includes refid="_import_g_streamer_8h" local="yes">ImportGStreamer.h</includes>
    <includes refid="_prefs_8h" local="yes">../Prefs.h</includes>
    <incdepgraph>
      <node id="46580">
        <label>wx/dir.h</label>
      </node>
      <node id="46587">
        <label>wx/choice.h</label>
      </node>
      <node id="46562">
        <label>wx/hashmap.h</label>
      </node>
      <node id="46610">
        <label>toolbars/SelectionBarListener.h</label>
        <link refid="_selection_bar_listener_8h"/>
      </node>
      <node id="46545">
        <label>wx/gauge.h</label>
      </node>
      <node id="46581">
        <label>wx/event.h</label>
      </node>
      <node id="46568">
        <label>wx/ffile.h</label>
      </node>
      <node id="46601">
        <label>audacity/ModuleInterface.h</label>
        <link refid="_module_interface_8h"/>
        <childnode refid="46563" relation="include">
        </childnode>
        <childnode refid="46593" relation="include">
        </childnode>
        <childnode refid="46602" relation="include">
        </childnode>
      </node>
      <node id="46615">
        <label>wx/dcclient.h</label>
      </node>
      <node id="46579">
        <label>wx/cmdline.h</label>
      </node>
      <node id="46592">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="46563" relation="include">
        </childnode>
        <childnode refid="46593" relation="include">
        </childnode>
        <childnode refid="46594" relation="include">
        </childnode>
        <childnode refid="46595" relation="include">
        </childnode>
        <childnode refid="46534" relation="include">
        </childnode>
      </node>
      <node id="46623">
        <label>ImportFLAC.h</label>
        <link refid="_import_f_l_a_c_8h"/>
      </node>
      <node id="46608">
        <label>../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="46532" relation="include">
        </childnode>
        <childnode refid="46533" relation="include">
        </childnode>
        <childnode refid="46609" relation="include">
        </childnode>
      </node>
      <node id="46564">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="46529" relation="include">
        </childnode>
        <childnode refid="46533" relation="include">
        </childnode>
        <childnode refid="46565" relation="include">
        </childnode>
        <childnode refid="46566" relation="include">
        </childnode>
      </node>
      <node id="46573">
        <label>TrackPanelListener.h</label>
        <link refid="_track_panel_listener_8h"/>
      </node>
      <node id="46571">
        <label>wx/wxchar.h</label>
      </node>
      <node id="46614">
        <label>wx/frame.h</label>
      </node>
      <node id="46589">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="46590" relation="include">
        </childnode>
        <childnode refid="46529" relation="include">
        </childnode>
      </node>
      <node id="46594">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="46563" relation="include">
        </childnode>
      </node>
      <node id="46547">
        <label>wx/utils.h</label>
      </node>
      <node id="46530">
        <label>Import.h</label>
        <link refid="_import_8h"/>
        <childnode refid="46531" relation="include">
        </childnode>
        <childnode refid="46532" relation="include">
        </childnode>
        <childnode refid="46533" relation="include">
        </childnode>
        <childnode refid="46534" relation="include">
        </childnode>
        <childnode refid="46535" relation="include">
        </childnode>
        <childnode refid="46536" relation="include">
        </childnode>
      </node>
      <node id="46544">
        <label>wx/evtloop.h</label>
      </node>
      <node id="46560">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="46543" relation="include">
        </childnode>
      </node>
      <node id="46557">
        <label>WrappedType.h</label>
        <link refid="_wrapped_type_8h"/>
        <childnode refid="46529" relation="include">
        </childnode>
      </node>
      <node id="46585">
        <label>wx/timer.h</label>
      </node>
      <node id="46569">
        <label>ViewInfo.h</label>
        <link refid="_view_info_8h"/>
        <childnode refid="46531" relation="include">
        </childnode>
        <childnode refid="46570" relation="include">
        </childnode>
      </node>
      <node id="46607">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="46597">
        <label>wx/fileconf.h</label>
      </node>
      <node id="46599">
        <label>map</label>
      </node>
      <node id="46602">
        <label>audacity/PluginInterface.h</label>
        <link refid="_plugin_interface_8h"/>
        <childnode refid="46563" relation="include">
        </childnode>
        <childnode refid="46594" relation="include">
        </childnode>
        <childnode refid="46592" relation="include">
        </childnode>
        <childnode refid="46593" relation="include">
        </childnode>
        <childnode refid="46600" relation="include">
        </childnode>
        <childnode refid="46601" relation="include">
        </childnode>
      </node>
      <node id="46625">
        <label>ImportGStreamer.h</label>
        <link refid="_import_g_streamer_8h"/>
        <childnode refid="46537" relation="include">
        </childnode>
      </node>
      <node id="46558">
        <label>wx/scrolbar.h</label>
      </node>
      <node id="46611">
        <label>toolbars/SpectralSelectionBarListener.h</label>
        <link refid="_spectral_selection_bar_listener_8h"/>
        <childnode refid="46529" relation="include">
        </childnode>
      </node>
      <node id="46546">
        <label>wx/stattext.h</label>
      </node>
      <node id="46584">
        <label>wx/socket.h</label>
      </node>
      <node id="46613">
        <label>wx/generic/dragimgg.h</label>
      </node>
      <node id="46593">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="46563" relation="include">
        </childnode>
      </node>
      <node id="46539">
        <label>wx/list.h</label>
      </node>
      <node id="46618">
        <label>ImportMP3.h</label>
        <link refid="_import_m_p3_8h"/>
      </node>
      <node id="46576">
        <label>wx/menu.h</label>
      </node>
      <node id="46543">
        <label>wx/defs.h</label>
      </node>
      <node id="46588">
        <label>wx/window.h</label>
      </node>
      <node id="46550">
        <label>wx/intl.h</label>
      </node>
      <node id="46542">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="46529" relation="include">
        </childnode>
        <childnode refid="46543" relation="include">
        </childnode>
        <childnode refid="46534" relation="include">
        </childnode>
        <childnode refid="46544" relation="include">
        </childnode>
        <childnode refid="46545" relation="include">
        </childnode>
        <childnode refid="46546" relation="include">
        </childnode>
        <childnode refid="46547" relation="include">
        </childnode>
      </node>
      <node id="46605">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="46563">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="46533" relation="include">
        </childnode>
        <childnode refid="46532" relation="include">
        </childnode>
      </node>
      <node id="46598">
        <label>../PluginManager.h</label>
        <link refid="_plugin_manager_8h"/>
        <childnode refid="46543" relation="include">
        </childnode>
        <childnode refid="46567" relation="include">
        </childnode>
        <childnode refid="46597" relation="include">
        </childnode>
        <childnode refid="46533" relation="include">
        </childnode>
        <childnode refid="46599" relation="include">
        </childnode>
        <childnode refid="46592" relation="include">
        </childnode>
        <childnode refid="46600" relation="include">
        </childnode>
        <childnode refid="46601" relation="include">
        </childnode>
        <childnode refid="46602" relation="include">
        </childnode>
      </node>
      <node id="46534">
        <label>wx/dialog.h</label>
      </node>
      <node id="46538">
        <label>wx/filename.h</label>
      </node>
      <node id="46591">
        <label>effects/EffectManager.h</label>
        <link refid="_effect_manager_8h"/>
        <childnode refid="46560" relation="include">
        </childnode>
        <childnode refid="46587" relation="include">
        </childnode>
        <childnode refid="46534" relation="include">
        </childnode>
        <childnode refid="46581" relation="include">
        </childnode>
        <childnode refid="46535" relation="include">
        </childnode>
        <childnode refid="46533" relation="include">
        </childnode>
        <childnode refid="46592" relation="include">
        </childnode>
        <childnode refid="46598" relation="include">
        </childnode>
        <childnode refid="46603" relation="include">
        </childnode>
      </node>
      <node id="46595">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="46596" relation="include">
        </childnode>
        <childnode refid="46579" relation="include">
        </childnode>
        <childnode refid="46597" relation="include">
        </childnode>
        <childnode refid="46550" relation="include">
        </childnode>
      </node>
      <node id="46626">
        <label>../Prefs.h</label>
        <link refid="_prefs_8h"/>
        <childnode refid="46529" relation="include">
        </childnode>
        <childnode refid="46627" relation="include">
        </childnode>
        <childnode refid="46597" relation="include">
        </childnode>
      </node>
      <node id="46536">
        <label>wx/tokenzr.h</label>
      </node>
      <node id="46575">
        <label>commands/CommandManager.h</label>
        <link refid="_command_manager_8h"/>
        <childnode refid="46560" relation="include">
        </childnode>
        <childnode refid="46540" relation="include">
        </childnode>
        <childnode refid="46531" relation="include">
        </childnode>
        <childnode refid="46533" relation="include">
        </childnode>
        <childnode refid="46567" relation="include">
        </childnode>
        <childnode refid="46576" relation="include">
        </childnode>
        <childnode refid="46562" relation="include">
        </childnode>
        <childnode refid="46577" relation="include">
        </childnode>
        <childnode refid="46564" relation="include">
        </childnode>
        <childnode refid="46563" relation="include">
        </childnode>
      </node>
      <node id="46620">
        <label>ImportQT.h</label>
        <link refid="_import_q_t_8h"/>
      </node>
      <node id="46529">
        <label>../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="46556">
        <label>wx/grid.h</label>
      </node>
      <node id="46531">
        <label>vector</label>
      </node>
      <node id="46603">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="46529" relation="include">
        </childnode>
        <childnode refid="46540" relation="include">
        </childnode>
        <childnode refid="46604" relation="include">
        </childnode>
        <childnode refid="46605" relation="include">
        </childnode>
        <childnode refid="46567" relation="include">
        </childnode>
        <childnode refid="46550" relation="include">
        </childnode>
        <childnode refid="46533" relation="include">
        </childnode>
        <childnode refid="46606" relation="include">
        </childnode>
        <childnode refid="46594" relation="include">
        </childnode>
        <childnode refid="46592" relation="include">
        </childnode>
        <childnode refid="46560" relation="include">
        </childnode>
        <childnode refid="46570" relation="include">
        </childnode>
        <childnode refid="46607" relation="include">
        </childnode>
        <childnode refid="46608" relation="include">
        </childnode>
        <childnode refid="46542" relation="include">
        </childnode>
      </node>
      <node id="46537">
        <label>ImportPlugin.h</label>
        <link refid="_import_plugin_8h"/>
        <childnode refid="46529" relation="include">
        </childnode>
        <childnode refid="46532" relation="include">
        </childnode>
        <childnode refid="46538" relation="include">
        </childnode>
        <childnode refid="46533" relation="include">
        </childnode>
        <childnode refid="46539" relation="include">
        </childnode>
        <childnode refid="46540" relation="include">
        </childnode>
        <childnode refid="46542" relation="include">
        </childnode>
      </node>
      <node id="46567">
        <label>wx/dynarray.h</label>
      </node>
      <node id="46559">
        <label>../Project.h</label>
        <link refid="_project_8h"/>
        <childnode refid="46529" relation="include">
        </childnode>
        <childnode refid="46560" relation="include">
        </childnode>
        <childnode refid="46561" relation="include">
        </childnode>
        <childnode refid="46569" relation="include">
        </childnode>
        <childnode refid="46573" relation="include">
        </childnode>
        <childnode refid="46574" relation="include">
        </childnode>
        <childnode refid="46575" relation="include">
        </childnode>
        <childnode refid="46591" relation="include">
        </childnode>
        <childnode refid="46564" relation="include">
        </childnode>
        <childnode refid="46610" relation="include">
        </childnode>
        <childnode refid="46611" relation="include">
        </childnode>
        <childnode refid="46543" relation="include">
        </childnode>
        <childnode refid="46581" relation="include">
        </childnode>
        <childnode refid="46551" relation="include">
        </childnode>
        <childnode refid="46612" relation="include">
        </childnode>
        <childnode refid="46613" relation="include">
        </childnode>
        <childnode refid="46614" relation="include">
        </childnode>
        <childnode refid="46550" relation="include">
        </childnode>
        <childnode refid="46615" relation="include">
        </childnode>
        <childnode refid="46616" relation="include">
        </childnode>
      </node>
      <node id="46554">
        <label>wx/listimpl.cpp</label>
      </node>
      <node id="46600">
        <label>audacity/ImporterInterface.h</label>
        <link refid="_importer_interface_8h"/>
        <childnode refid="46563" relation="include">
        </childnode>
        <childnode refid="46594" relation="include">
        </childnode>
        <childnode refid="46593" relation="include">
        </childnode>
      </node>
      <node id="46533">
        <label>wx/string.h</label>
      </node>
      <node id="46577">
        <label>../AudacityApp.h</label>
        <link refid="_audacity_app_8h"/>
        <childnode refid="46529" relation="include">
        </childnode>
        <childnode refid="46578" relation="include">
        </childnode>
        <childnode refid="46579" relation="include">
        </childnode>
        <childnode refid="46580" relation="include">
        </childnode>
        <childnode refid="46581" relation="include">
        </childnode>
        <childnode refid="46582" relation="include">
        </childnode>
        <childnode refid="46550" relation="include">
        </childnode>
        <childnode refid="46583" relation="include">
        </childnode>
        <childnode refid="46551" relation="include">
        </childnode>
        <childnode refid="46584" relation="include">
        </childnode>
        <childnode refid="46585" relation="include">
        </childnode>
        <childnode refid="46586" relation="include">
        </childnode>
        <childnode refid="46589" relation="include">
        </childnode>
        <childnode refid="46560" relation="include">
        </childnode>
      </node>
      <node id="46535">
        <label>wx/listbox.h</label>
      </node>
      <node id="46528">
        <label>C:/_dev/OpenU/Audacity/audacity/src/import/Import.cpp</label>
        <link refid="Import.cpp"/>
        <childnode refid="46529" relation="include">
        </childnode>
        <childnode refid="46530" relation="include">
        </childnode>
        <childnode refid="46537" relation="include">
        </childnode>
        <childnode refid="46548" relation="include">
        </childnode>
        <childnode refid="46549" relation="include">
        </childnode>
        <childnode refid="46533" relation="include">
        </childnode>
        <childnode refid="46550" relation="include">
        </childnode>
        <childnode refid="46551" relation="include">
        </childnode>
        <childnode refid="46552" relation="include">
        </childnode>
        <childnode refid="46553" relation="include">
        </childnode>
        <childnode refid="46554" relation="include">
        </childnode>
        <childnode refid="46555" relation="include">
        </childnode>
        <childnode refid="46559" relation="include">
        </childnode>
        <childnode refid="46617" relation="include">
        </childnode>
        <childnode refid="46618" relation="include">
        </childnode>
        <childnode refid="46619" relation="include">
        </childnode>
        <childnode refid="46620" relation="include">
        </childnode>
        <childnode refid="46621" relation="include">
        </childnode>
        <childnode refid="46622" relation="include">
        </childnode>
        <childnode refid="46623" relation="include">
        </childnode>
        <childnode refid="46624" relation="include">
        </childnode>
        <childnode refid="46625" relation="include">
        </childnode>
        <childnode refid="46626" relation="include">
        </childnode>
      </node>
      <node id="46549">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="46551">
        <label>wx/log.h</label>
      </node>
      <node id="46572">
        <label>math.h</label>
      </node>
      <node id="46561">
        <label>DirManager.h</label>
        <link refid="_dir_manager_8h"/>
        <childnode refid="46539" relation="include">
        </childnode>
        <childnode refid="46533" relation="include">
        </childnode>
        <childnode refid="46538" relation="include">
        </childnode>
        <childnode refid="46562" relation="include">
        </childnode>
        <childnode refid="46547" relation="include">
        </childnode>
        <childnode refid="46563" relation="include">
        </childnode>
        <childnode refid="46564" relation="include">
        </childnode>
      </node>
      <node id="46622">
        <label>ImportLOF.h</label>
        <link refid="_import_l_o_f_8h"/>
      </node>
      <node id="46570">
        <label>SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="46529" relation="include">
        </childnode>
        <childnode refid="46560" relation="include">
        </childnode>
        <childnode refid="46543" relation="include">
        </childnode>
        <childnode refid="46571" relation="include">
        </childnode>
        <childnode refid="46572" relation="include">
        </childnode>
      </node>
      <node id="46624">
        <label>ImportFFmpeg.h</label>
        <link refid="_import_f_fmpeg_8h"/>
        <childnode refid="46537" relation="include">
        </childnode>
      </node>
      <node id="46532">
        <label>wx/arrstr.h</label>
      </node>
      <node id="46627">
        <label>wx/config.h</label>
      </node>
      <node id="46552">
        <label>wx/sizer.h</label>
      </node>
      <node id="46583">
        <label>wx/snglinst.h</label>
      </node>
      <node id="46621">
        <label>ImportRaw.h</label>
        <link refid="_import_raw_8h"/>
        <childnode refid="46530" relation="include">
        </childnode>
      </node>
      <node id="46590">
        <label>wx/thread.h</label>
      </node>
      <node id="46612">
        <label>wx/dragimag.h</label>
      </node>
      <node id="46606">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="46540">
        <label>../MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="46541" relation="include">
        </childnode>
      </node>
      <node id="46555">
        <label>../ShuttleGui.h</label>
        <link refid="_shuttle_gui_8h"/>
        <childnode refid="46529" relation="include">
        </childnode>
        <childnode refid="46540" relation="include">
        </childnode>
        <childnode refid="46556" relation="include">
        </childnode>
        <childnode refid="46552" relation="include">
        </childnode>
        <childnode refid="46533" relation="include">
        </childnode>
        <childnode refid="46557" relation="include">
        </childnode>
        <childnode refid="46558" relation="include">
        </childnode>
      </node>
      <node id="46586">
        <label>widgets/FileHistory.h</label>
        <link refid="_file_history_8h"/>
        <childnode refid="46543" relation="include">
        </childnode>
        <childnode refid="46587" relation="include">
        </childnode>
        <childnode refid="46567" relation="include">
        </childnode>
        <childnode refid="46581" relation="include">
        </childnode>
        <childnode refid="46556" relation="include">
        </childnode>
        <childnode refid="46533" relation="include">
        </childnode>
        <childnode refid="46588" relation="include">
        </childnode>
      </node>
      <node id="46604">
        <label>set</label>
      </node>
      <node id="46616">
        <label>Menus.h</label>
        <link refid="_menus_8h"/>
        <childnode refid="46560" relation="include">
        </childnode>
      </node>
      <node id="46578">
        <label>wx/app.h</label>
        <link refid="app_8h"/>
      </node>
      <node id="46609">
        <label>wx/longlong.h</label>
      </node>
      <node id="46619">
        <label>ImportOGG.h</label>
        <link refid="_import_o_g_g_8h"/>
      </node>
      <node id="46565">
        <label>stdio.h</label>
      </node>
      <node id="46548">
        <label>wx/textctrl.h</label>
      </node>
      <node id="46596">
        <label>locale.h</label>
      </node>
      <node id="46582">
        <label>wx/docview.h</label>
      </node>
      <node id="46553">
        <label>wx/arrimpl.cpp</label>
      </node>
      <node id="46541">
        <label>memory</label>
      </node>
      <node id="46566">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="46532" relation="include">
        </childnode>
        <childnode refid="46567" relation="include">
        </childnode>
        <childnode refid="46568" relation="include">
        </childnode>
      </node>
      <node id="46617">
        <label>ImportPCM.h</label>
        <link refid="_import_p_c_m_8h"/>
      </node>
      <node id="46574">
        <label>AudioIOListener.h</label>
        <link refid="_audio_i_o_listener_8h"/>
        <childnode refid="46533" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_import_8cpp_1a963f9d5c2f73674167d4597d23784265" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WX_DEFINE_LIST</definition>
        <argsstring>(ImportPluginList)</argsstring>
        <name>WX_DEFINE_LIST</name>
        <param>
          <type><ref refid="class_import_plugin_list" kindref="compound">ImportPluginList</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/import/Import.cpp" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_import_8cpp_1a9a13af2ce56c4f31485c470823613a96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WX_DEFINE_LIST</definition>
        <argsstring>(UnusableImportPluginList)</argsstring>
        <name>WX_DEFINE_LIST</name>
        <param>
          <type><ref refid="class_unusable_import_plugin_list" kindref="compound">UnusableImportPluginList</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/import/Import.cpp" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_import_8cpp_1adca3ba5c3e6f9d60f1f370c963bcead3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WX_DEFINE_OBJARRAY</definition>
        <argsstring>(ExtImportItems)</argsstring>
        <name>WX_DEFINE_OBJARRAY</name>
        <param>
          <type>ExtImportItems</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/import/Import.cpp" line="66" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This file contains a general function which will import almost any type of sampled audio file (i.e. anything except MIDI) and return the tracks that were imported. This function just figures out which one to call; the actual importers are in ImportPCM, ImportMP3, ImportOGG, ImportRawData, ImportLOF, ImportQT and ImportFLAC. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Import.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*******************************************************************/</highlight><highlight class="comment">/***************************************************************/</highlight><highlight class="comment">/***************************************************************/</highlight><highlight class="comment">/******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Audacity.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_import_8h" kindref="compound">Import.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_import_plugin_8h" kindref="compound">ImportPlugin.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/textctrl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/msgdlg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/intl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/sizer.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>wxBoxSizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/arrimpl.cpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/listimpl.cpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../ShuttleGui.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Project.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_import_p_c_m_8h" kindref="compound">ImportPCM.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_import_m_p3_8h" kindref="compound">ImportMP3.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_import_o_g_g_8h" kindref="compound">ImportOGG.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_import_q_t_8h" kindref="compound">ImportQT.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_import_raw_8h" kindref="compound">ImportRaw.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_import_l_o_f_8h" kindref="compound">ImportLOF.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_import_f_l_a_c_8h" kindref="compound">ImportFLAC.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_import_f_fmpeg_8h" kindref="compound">ImportFFmpeg.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_import_g_streamer_8h" kindref="compound">ImportGStreamer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Prefs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="_import_8cpp_1a963f9d5c2f73674167d4597d23784265" kindref="member">WX_DEFINE_LIST</ref>(<ref refid="class_import_plugin_list" kindref="compound">ImportPluginList</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="_import_8cpp_1a963f9d5c2f73674167d4597d23784265" kindref="member">WX_DEFINE_LIST</ref>(<ref refid="class_unusable_import_plugin_list" kindref="compound">UnusableImportPluginList</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="_import_8cpp_1adca3ba5c3e6f9d60f1f370c963bcead3" kindref="member">WX_DEFINE_OBJARRAY</ref>(ExtImportItems);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>reference<sp/>to<sp/>singleton</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(Thread-safe...no<sp/>active<sp/>threading<sp/>during<sp/>construction<sp/>or<sp/>after<sp/>destruction)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><ref refid="class_importer" kindref="compound">Importer</ref><sp/>Importer::mInstance;</highlight></codeline>
<codeline lineno="75" refid="class_importer_1a22d282adad95bbdce627953259d9d48c" refkind="member"><highlight class="normal"><ref refid="class_importer" kindref="compound">Importer</ref><sp/>&amp;<sp/><ref refid="class_importer_1a22d282adad95bbdce627953259d9d48c" kindref="member">Importer::Get</ref>()</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mInstance;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="class_importer_1afaf93b56e3558a92405ab627ab8ee1d1" refkind="member"><highlight class="normal"><ref refid="class_importer_1afaf93b56e3558a92405ab627ab8ee1d1" kindref="member">Importer::Importer</ref>()</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/>mExtImportItems<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="class_importer_1a6e61faae5020f2dc034ff3ea4032a537" refkind="member"><highlight class="normal"><ref refid="class_importer_1a6e61faae5020f2dc034ff3ea4032a537" kindref="member">Importer::~Importer</ref>()</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mExtImportItems<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mExtImportItems;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mExtImportItems<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="class_importer_1a4e0a11e0b6682371b36c8c68e275cd3f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_importer_1a4e0a11e0b6682371b36c8c68e275cd3f" kindref="member">Importer::Initialize</ref>()</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/>mImportPluginList<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_import_plugin_list" kindref="compound">ImportPluginList</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/>mUnusableImportPluginList<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_unusable_import_plugin_list" kindref="compound">UnusableImportPluginList</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/>mExtImportItems<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>the<sp/>list<sp/>of<sp/>import<sp/>plugin<sp/>and/or<sp/>unusableImporters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>order<sp/>is<sp/>significant.<sp/><sp/>If<sp/>none<sp/>match,<sp/>they<sp/>will<sp/>all<sp/>be<sp/>tried</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>order<sp/>defined<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><ref refid="_import_p_c_m_8cpp_1aa88f86a135e78df0f86b266de7895748" kindref="member">GetPCMImportPlugin</ref>(mImportPluginList,<sp/>mUnusableImportPluginList);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><ref refid="_import_o_g_g_8cpp_1a73d28738588cca8953a4a7d9ec93cf53" kindref="member">GetOGGImportPlugin</ref>(mImportPluginList,<sp/>mUnusableImportPluginList);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><ref refid="_import_f_l_a_c_8cpp_1a8e86818a35637327d7cc1ae968336c1d" kindref="member">GetFLACImportPlugin</ref>(mImportPluginList,<sp/>mUnusableImportPluginList);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><ref refid="_import_m_p3_8cpp_1ab16f6375276ddbb95e1079da586518a2" kindref="member">GetMP3ImportPlugin</ref>(mImportPluginList,<sp/>mUnusableImportPluginList);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><ref refid="_import_l_o_f_8cpp_1ac919ebac9834f7898ff5e95358b61649" kindref="member">GetLOFImportPlugin</ref>(mImportPluginList,<sp/>mUnusableImportPluginList);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>defined(USE_FFMPEG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><ref refid="_import_f_fmpeg_8h_1a9726649ae435830029f1594a797fd949" kindref="member">GetFFmpegImportPlugin</ref>(mImportPluginList,<sp/>mUnusableImportPluginList);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>USE_QUICKTIME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><ref refid="_import_q_t_8cpp_1aab13912f39bccc5dcaf903b7eb145d89" kindref="member">GetQTImportPlugin</ref>(mImportPluginList,<sp/>mUnusableImportPluginList);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>defined(USE_GSTREAMER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><ref refid="_import_g_streamer_8h_1aa57cda2a2749997afb2c5082f3ff2074" kindref="member">GetGStreamerImportPlugin</ref>(mImportPluginList,<sp/>mUnusableImportPluginList);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_importer_1adc8ce13070002e150ba032d088460d0e" kindref="member">ReadImportItems</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="class_importer_1a9d6dc153aab7c8fc1f213b318d443a44" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_importer_1a9d6dc153aab7c8fc1f213b318d443a44" kindref="member">Importer::Terminate</ref>()</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_importer_1a4f095ea8af5d3d8af0d4e6ca31c0e010" kindref="member">WriteImportItems</ref>();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>mImportPluginList-&gt;DeleteContents(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mImportPluginList;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>mUnusableImportPluginList-&gt;DeleteContents(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight><highlight class="comment">//JKC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mUnusableImportPluginList;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="class_importer_1ae0261a30962ae08e339841aa298dc4b7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_importer_1ae0261a30962ae08e339841aa298dc4b7" kindref="member">Importer::GetSupportedImportFormats</ref>(<ref refid="_import_8h_1a9595e9ab21ee91497995586e444c5ccf" kindref="member">FormatList</ref><sp/>*formatList)</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/>ImportPluginList::compatibility_iterator<sp/>importPluginNode<sp/>=<sp/>mImportPluginList-&gt;GetFirst();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(importPluginNode)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_import_plugin" kindref="compound">ImportPlugin</ref><sp/>*importPlugin<sp/>=<sp/>importPluginNode-&gt;GetData();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__AUDACITY_OLD_STD__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>formatList-&gt;push_back(<ref refid="class_format" kindref="compound">Format</ref>{importPlugin-&gt;<ref refid="class_import_plugin_1a5913a90328e88944c600c128e969a99e" kindref="member">GetPluginFormatDescription</ref>(),</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>importPlugin-&gt;<ref refid="class_import_plugin_1a0a1e1e1414dd7de2bbfab554a48ed07a" kindref="member">GetSupportedExtensions</ref>()});</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>formatList-&gt;emplace_back(importPlugin-&gt;<ref refid="class_import_plugin_1a5913a90328e88944c600c128e969a99e" kindref="member">GetPluginFormatDescription</ref>(),</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>importPlugin-&gt;<ref refid="class_import_plugin_1a0a1e1e1414dd7de2bbfab554a48ed07a" kindref="member">GetSupportedExtensions</ref>());</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>importPluginNode<sp/>=<sp/>importPluginNode-&gt;GetNext();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="class_importer_1a3d0844b27039a309a95d16c358a323bd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_importer_1a3d0844b27039a309a95d16c358a323bd" kindref="member">Importer::StringToList</ref>(wxString<sp/>&amp;<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>,<sp/>wxString<sp/>&amp;delims,<sp/>wxArrayString<sp/>&amp;list,<sp/>wxStringTokenizerMode<sp/>mod)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/>wxStringTokenizer<sp/>toker;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(toker.SetString(str,<sp/>delims,<sp/>mod);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>toker.HasMoreTokens();<sp/>list.Add<sp/>(toker.GetNextToken()));</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="class_importer_1adc8ce13070002e150ba032d088460d0e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_importer_1adc8ce13070002e150ba032d088460d0e" kindref="member">Importer::ReadImportItems</ref>()</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>item_counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/>wxStringTokenizer<sp/>toker;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>item_name;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>item_value;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_ext_import_item" kindref="compound">ExtImportItem</ref><sp/>*new_item;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/>ImportPluginList::compatibility_iterator<sp/>importPluginNode;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;mExtImportItems<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>this-&gt;mExtImportItems;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/>this-&gt;mExtImportItems<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ExtImportItems();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rule<sp/>string<sp/>format<sp/>is:</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>extension1:extension2:extension3\mime_type1:mime_type2:mime_type3|filter1:filter2:filter3\unusedfilter1:unusedfilter2</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>backslashes<sp/>are<sp/>escaped<sp/>and<sp/>unescaped<sp/>internally</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(item_counter<sp/>=<sp/>0;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>item_counter++)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>condition,<sp/>filters,<sp/>used_filters,<sp/>unused_filters<sp/>=<sp/>wxEmptyString,<sp/>extensions,<sp/>mime_types<sp/>=<sp/>wxEmptyString;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>item_name.Printf<sp/>(wxT(</highlight><highlight class="stringliteral">&quot;/ExtImportItems/Item%d&quot;</highlight><highlight class="normal">),<sp/>item_counter);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Break<sp/>at<sp/>first<sp/>non-existent<sp/>item<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(item_name,<sp/>&amp;item_value))</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>toker.SetString(item_value,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">),<sp/>wxTOKEN_RET_EMPTY_ALL);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Break<sp/>at<sp/>first<sp/>broken<sp/>item<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(toker.CountTokens()<sp/>!=<sp/>2)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_item<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ext_import_item" kindref="compound">ExtImportItem</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>token<sp/>is<sp/>the<sp/>filtering<sp/>condition,<sp/>second<sp/>-<sp/>the<sp/>filter<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>condition<sp/>=<sp/>toker.GetNextToken();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filters<sp/>=<sp/>toker.GetNextToken();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Condition<sp/>token<sp/>consists<sp/>of<sp/>extension<sp/>list<sp/>and<sp/>mime<sp/>type<sp/>list</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>mime<sp/>type<sp/>list<sp/>can<sp/>be<sp/>omitted<sp/>entirely<sp/>(complete<sp/>with<sp/>&apos;\&apos;<sp/>separator)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>toker.SetString(condition,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">),<sp/>wxTOKEN_RET_EMPTY_ALL);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>extensions<sp/>=<sp/>toker.GetNextToken();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(toker.HasMoreTokens())</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mime_types<sp/>=<sp/>toker.GetNextToken();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>delims(wxT(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_importer_1a3d0844b27039a309a95d16c358a323bd" kindref="member">StringToList</ref><sp/>(extensions,<sp/>delims,<sp/>new_item-&gt;<ref refid="class_ext_import_item_1a37b6ef945bf38279d156096de2745900" kindref="member">extensions</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mime_types<sp/>!=<sp/>wxEmptyString)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_importer_1a3d0844b27039a309a95d16c358a323bd" kindref="member">StringToList</ref><sp/>(mime_types,<sp/>delims,<sp/>new_item-&gt;<ref refid="class_ext_import_item_1a4df49043980dda3886b6e2e7ff3ddf32" kindref="member">mime_types</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Filter<sp/>token<sp/>consists<sp/>of<sp/>used<sp/>and<sp/>unused<sp/>filter<sp/>lists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>toker.SetString(filters,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">),<sp/>wxTOKEN_RET_EMPTY_ALL);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>used_filters<sp/>=<sp/>toker.GetNextToken();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(toker.HasMoreTokens())</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unused_filters<sp/>=<sp/>toker.GetNextToken();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_importer_1a3d0844b27039a309a95d16c358a323bd" kindref="member">StringToList</ref><sp/>(used_filters,<sp/>delims,<sp/>new_item-&gt;<ref refid="class_ext_import_item_1a15fca71418912718ea7073cff0aa8d00" kindref="member">filters</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unused_filters<sp/>!=<sp/>wxEmptyString)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Filters<sp/>are<sp/>stored<sp/>in<sp/>one<sp/>list,<sp/>but<sp/>the<sp/>position<sp/>at<sp/>which</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>unused<sp/>filters<sp/>start<sp/>is<sp/>remembered</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_item-&gt;<ref refid="class_ext_import_item_1a2f548a8472b4db998102373fe018bfc0" kindref="member">divider</ref><sp/>=<sp/>new_item-&gt;<ref refid="class_ext_import_item_1a15fca71418912718ea7073cff0aa8d00" kindref="member">filters</ref>.Count();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_importer_1a3d0844b27039a309a95d16c358a323bd" kindref="member">StringToList</ref><sp/>(unused_filters,<sp/>delims,<sp/>new_item-&gt;<ref refid="class_ext_import_item_1a15fca71418912718ea7073cff0aa8d00" kindref="member">filters</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_item-&gt;<ref refid="class_ext_import_item_1a2f548a8472b4db998102373fe018bfc0" kindref="member">divider</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>corresponding<sp/>filter<sp/>object<sp/>for<sp/>each<sp/>filter<sp/>ID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>new_item-&gt;<ref refid="class_ext_import_item_1a15fca71418912718ea7073cff0aa8d00" kindref="member">filters</ref>.Count();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(importPluginNode<sp/>=<sp/>mImportPluginList-&gt;GetFirst();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>importPluginNode;<sp/>importPluginNode<sp/>=<sp/>importPluginNode-&gt;GetNext())</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_import_plugin" kindref="compound">ImportPlugin</ref><sp/>*importPlugin<sp/>=<sp/>importPluginNode-&gt;GetData();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(importPlugin-&gt;<ref refid="class_import_plugin_1a1bf59f8e7e7b17f471e08df49b64d0cd" kindref="member">GetPluginStringID</ref>().Cmp(new_item-&gt;<ref refid="class_ext_import_item_1a15fca71418912718ea7073cff0aa8d00" kindref="member">filters</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_item-&gt;<ref refid="class_ext_import_item_1a2bbd78eb3a5159fca03d7e1eeda638a8" kindref="member">filter_objects</ref>.Add<sp/>(importPlugin);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IDs<sp/>that<sp/>do<sp/>not<sp/>have<sp/>corresponding<sp/>filters,<sp/>will<sp/>be<sp/>shown<sp/>as-is<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!importPluginNode)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_item-&gt;<ref refid="class_ext_import_item_1a2bbd78eb3a5159fca03d7e1eeda638a8" kindref="member">filter_objects</ref>.Add<sp/>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>all<sp/>filter<sp/>objects<sp/>that<sp/>are<sp/>not<sp/>present<sp/>in<sp/>the<sp/>filter<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(importPluginNode<sp/>=<sp/>mImportPluginList-&gt;GetFirst();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>importPluginNode;<sp/>importPluginNode<sp/>=<sp/>importPluginNode-&gt;GetNext())</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_import_plugin" kindref="compound">ImportPlugin</ref><sp/>*importPlugin<sp/>=<sp/>importPluginNode-&gt;GetData();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>new_item-&gt;<ref refid="class_ext_import_item_1a2bbd78eb3a5159fca03d7e1eeda638a8" kindref="member">filter_objects</ref>.Count();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(importPlugin<sp/>==<sp/>new_item-&gt;<ref refid="class_ext_import_item_1a2bbd78eb3a5159fca03d7e1eeda638a8" kindref="member">filter_objects</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>these<sp/>filters<sp/>at<sp/>the<sp/>bottom<sp/>of<sp/>used<sp/>filter<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>new_item-&gt;<ref refid="class_ext_import_item_1a2f548a8472b4db998102373fe018bfc0" kindref="member">divider</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_item-&gt;<ref refid="class_ext_import_item_1a2f548a8472b4db998102373fe018bfc0" kindref="member">divider</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>new_item-&gt;<ref refid="class_ext_import_item_1a15fca71418912718ea7073cff0aa8d00" kindref="member">filters</ref>.Count();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_item-&gt;<ref refid="class_ext_import_item_1a15fca71418912718ea7073cff0aa8d00" kindref="member">filters</ref>.Insert(importPlugin-&gt;<ref refid="class_import_plugin_1a1bf59f8e7e7b17f471e08df49b64d0cd" kindref="member">GetPluginStringID</ref>(),index);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_item-&gt;<ref refid="class_ext_import_item_1a2bbd78eb3a5159fca03d7e1eeda638a8" kindref="member">filter_objects</ref>.Insert<sp/>(importPlugin,<sp/>index);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_item-&gt;<ref refid="class_ext_import_item_1a2f548a8472b4db998102373fe018bfc0" kindref="member">divider</ref><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_item-&gt;<ref refid="class_ext_import_item_1a2f548a8472b4db998102373fe018bfc0" kindref="member">divider</ref>++;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;mExtImportItems-&gt;Add<sp/>(new_item);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="class_importer_1a4f095ea8af5d3d8af0d4e6ca31c0e010" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_importer_1a4f095ea8af5d3d8af0d4e6ca31c0e010" kindref="member">Importer::WriteImportItems</ref>()</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>val,<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;mExtImportItems-&gt;Count();<sp/>i++)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ext_import_item" kindref="compound">ExtImportItem</ref><sp/>*item<sp/>=<sp/>&amp;(mExtImportItems-&gt;Item(i));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val.Clear();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>item-&gt;<ref refid="class_ext_import_item_1a37b6ef945bf38279d156096de2745900" kindref="member">extensions</ref>.Count();<sp/>j++)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val.Append<sp/>(item-&gt;<ref refid="class_ext_import_item_1a37b6ef945bf38279d156096de2745900" kindref="member">extensions</ref>[j]);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>item-&gt;extensions.Count()<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val.Append<sp/>(wxT(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val.Append<sp/>(wxT(</highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>item-&gt;<ref refid="class_ext_import_item_1a4df49043980dda3886b6e2e7ff3ddf32" kindref="member">mime_types</ref>.Count();<sp/>j++)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val.Append<sp/>(item-&gt;<ref refid="class_ext_import_item_1a4df49043980dda3886b6e2e7ff3ddf32" kindref="member">mime_types</ref>[j]);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>item-&gt;mime_types.Count()<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val.Append<sp/>(wxT(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val.Append<sp/>(wxT(</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>item-&gt;<ref refid="class_ext_import_item_1a15fca71418912718ea7073cff0aa8d00" kindref="member">filters</ref>.Count()<sp/>&amp;&amp;<sp/>((<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>j<sp/>&lt;<sp/>item-&gt;divider<sp/>||<sp/>item-&gt;<ref refid="class_ext_import_item_1a2f548a8472b4db998102373fe018bfc0" kindref="member">divider</ref><sp/>&lt;<sp/>0);<sp/>j++)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val.Append<sp/>(item-&gt;<ref refid="class_ext_import_item_1a15fca71418912718ea7073cff0aa8d00" kindref="member">filters</ref>[j]);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>item-&gt;filters.Count()<sp/>-<sp/>1<sp/>&amp;&amp;<sp/>((<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>j<sp/>&lt;<sp/>item-&gt;divider<sp/>-<sp/>1<sp/>||<sp/>item-&gt;<ref refid="class_ext_import_item_1a2f548a8472b4db998102373fe018bfc0" kindref="member">divider</ref><sp/>&lt;<sp/>0))</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val.Append<sp/>(wxT(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item-&gt;<ref refid="class_ext_import_item_1a2f548a8472b4db998102373fe018bfc0" kindref="member">divider</ref><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val.Append<sp/>(wxT(</highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>item-&gt;<ref refid="class_ext_import_item_1a2f548a8472b4db998102373fe018bfc0" kindref="member">divider</ref>;<sp/>j<sp/>&lt;<sp/>item-&gt;filters.Count();<sp/>j++)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val.Append<sp/>(item-&gt;<ref refid="class_ext_import_item_1a15fca71418912718ea7073cff0aa8d00" kindref="member">filters</ref>[j]);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>item-&gt;filters.Count()<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val.Append<sp/>(wxT(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name.Printf<sp/>(wxT(</highlight><highlight class="stringliteral">&quot;/ExtImportItems/Item%d&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)i);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write<sp/>(name,<sp/>val);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Flush();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>used<sp/>to<sp/>have<sp/>more<sp/>items<sp/>than<sp/>we<sp/>have<sp/>now,<sp/>DELETE<sp/>the<sp/>excess<sp/>items.</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/>We<sp/>just<sp/>keep<sp/>deleting<sp/>items<sp/>and<sp/>incrementing<sp/>until<sp/>we<sp/>find<sp/>there<sp/>aren&apos;t<sp/>any</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/><sp/>more<sp/>to<sp/>DELETE.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/>i<sp/>=<sp/>this-&gt;mExtImportItems-&gt;Count();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>name.Printf<sp/>(wxT(</highlight><highlight class="stringliteral">&quot;/ExtImportItems/Item%d&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)i);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>item<sp/>to<sp/>DELETE?<sp/><sp/>Then<sp/>it&apos;s<sp/>time<sp/>to<sp/>finish.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(name,<sp/>&amp;val))</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Failure<sp/>to<sp/>DELETE<sp/>probably<sp/>means<sp/>a<sp/>read-only<sp/>config<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>point<sp/>continuing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Possibly<sp/>report<sp/>(once).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;DeleteEntry<sp/>(name,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="class_importer_1a5a7306789703872ca2014f5e936c776c" refkind="member"><highlight class="normal"><ref refid="class_ext_import_item" kindref="compound">ExtImportItem</ref><sp/>*<ref refid="class_importer_1a5a7306789703872ca2014f5e936c776c" kindref="member">Importer::CreateDefaultImportItem</ref>()</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_ext_import_item" kindref="compound">ExtImportItem</ref><sp/>*new_item;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/>ImportPluginList::compatibility_iterator<sp/>importPluginNode;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/>new_item<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ext_import_item" kindref="compound">ExtImportItem</ref>();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/>new_item-&gt;<ref refid="class_ext_import_item_1a37b6ef945bf38279d156096de2745900" kindref="member">extensions</ref>.Add(wxT(</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/>new_item-&gt;<ref refid="class_ext_import_item_1a4df49043980dda3886b6e2e7ff3ddf32" kindref="member">mime_types</ref>.Add(wxT(</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(importPluginNode<sp/>=<sp/>mImportPluginList-&gt;GetFirst();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>importPluginNode;<sp/>importPluginNode<sp/>=<sp/>importPluginNode-&gt;GetNext())</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_import_plugin" kindref="compound">ImportPlugin</ref><sp/>*importPlugin<sp/>=<sp/>importPluginNode-&gt;GetData();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_item-&gt;<ref refid="class_ext_import_item_1a15fca71418912718ea7073cff0aa8d00" kindref="member">filters</ref>.Add<sp/>(importPlugin-&gt;<ref refid="class_import_plugin_1a1bf59f8e7e7b17f471e08df49b64d0cd" kindref="member">GetPluginStringID</ref>());</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_item-&gt;<ref refid="class_ext_import_item_1a2bbd78eb3a5159fca03d7e1eeda638a8" kindref="member">filter_objects</ref>.Add<sp/>(importPlugin);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/>new_item-&gt;<ref refid="class_ext_import_item_1a2f548a8472b4db998102373fe018bfc0" kindref="member">divider</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_item;</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>number<sp/>of<sp/>tracks<sp/>imported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="class_importer_1ab5eae197f7b7617c5ae9aac63b987466" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_importer_1ab5eae197f7b7617c5ae9aac63b987466" kindref="member">Importer::Import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;fName,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_factory" kindref="compound">TrackFactory</ref><sp/>*trackFactory,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>***<sp/>tracks,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tags" kindref="compound">Tags</ref><sp/>*<ref refid="namespacelv2specgen_1af2d57abb8725f566629ed73846808438" kindref="member">tags</ref>,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>&amp;errorMessage)</highlight></codeline>
<codeline lineno="362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*pProj<sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1af569662fde524439adf8ee98301f7e60" kindref="member">mbBusyImporting</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_import_file_handle" kindref="compound">ImportFileHandle</ref><sp/>*inFile<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numTracks<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="namespacewaflib_1_1_task_gen_1ab4b159e661d17937cf1be8254dedb12f" kindref="member">extension</ref><sp/>=<sp/>fName.AfterLast(wxT(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>list<sp/>is<sp/>used<sp/>to<sp/>call<sp/>plugins<sp/>in<sp/>correct<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_import_plugin_list" kindref="compound">ImportPluginList</ref><sp/>importPlugins;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/>ImportPluginList::compatibility_iterator<sp/>importPluginNode;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>list<sp/>is<sp/>used<sp/>to<sp/>remember<sp/>plugins<sp/>that<sp/>should<sp/>have<sp/>been<sp/>compatible<sp/>with<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_import_plugin_list" kindref="compound">ImportPluginList</ref><sp/>compatiblePlugins;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>user<sp/>explicitly<sp/>selected<sp/>a<sp/>filter,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>we<sp/>should<sp/>try<sp/>importing<sp/>via<sp/>corresponding<sp/>plugin<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref><sp/>=<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/LastOpenType&quot;</highlight><highlight class="normal">),wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>implemented<sp/>(yet?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>mime_type<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First,<sp/>add<sp/>user-selected<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>usersSelectionOverrides;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/ExtendedImport/OverrideExtendedImportByOpenFileDialogChoice&quot;</highlight><highlight class="normal">),<sp/>&amp;usersSelectionOverrides,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/>wxLogDebug(wxT(</highlight><highlight class="stringliteral">&quot;LastOpenType<sp/>is<sp/>%s&quot;</highlight><highlight class="normal">),type.c_str());</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/>wxLogDebug(wxT(</highlight><highlight class="stringliteral">&quot;OverrideExtendedImportByOpenFileDialogChoice<sp/>is<sp/>%i&quot;</highlight><highlight class="normal">),usersSelectionOverrides);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(usersSelectionOverrides)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>importPluginNode<sp/>=<sp/>mImportPluginList-&gt;GetFirst();</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(importPluginNode)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_import_plugin" kindref="compound">ImportPlugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref><sp/>=<sp/>importPluginNode-&gt;GetData();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plugin-&gt;<ref refid="class_import_plugin_1a5913a90328e88944c600c128e969a99e" kindref="member">GetPluginFormatDescription</ref>().CompareTo(type)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>plugin<sp/>corresponds<sp/>to<sp/>user-selected<sp/>filter,<sp/>try<sp/>it<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogDebug(wxT(</highlight><highlight class="stringliteral">&quot;Inserting<sp/>%s&quot;</highlight><highlight class="normal">),plugin-&gt;<ref refid="class_import_plugin_1a1bf59f8e7e7b17f471e08df49b64d0cd" kindref="member">GetPluginStringID</ref>().c_str());</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>importPlugins.Insert(plugin);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>importPluginNode<sp/>=<sp/>importPluginNode-&gt;GetNext();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;File<sp/>name<sp/>is<sp/>%s&quot;</highlight><highlight class="normal">),(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>fName.c_str());</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;Mime<sp/>type<sp/>is<sp/>%s&quot;</highlight><highlight class="normal">),(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>mime_type.Lower().c_str());</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>mExtImportItems-&gt;Count();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ext_import_item" kindref="compound">ExtImportItem</ref><sp/>*item<sp/>=<sp/>&amp;(*mExtImportItems)[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>matches_ext<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>matches_mime<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogDebug(wxT(</highlight><highlight class="stringliteral">&quot;Testing<sp/>extensions&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>item-&gt;<ref refid="class_ext_import_item_1a37b6ef945bf38279d156096de2745900" kindref="member">extensions</ref>.Count();<sp/>j++)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogDebug(wxT(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>item-&gt;<ref refid="class_ext_import_item_1a37b6ef945bf38279d156096de2745900" kindref="member">extensions</ref>[j].Lower().c_str());</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="filefn_8cpp_1a7edb43de3a9d6f5fb331b56dc2c5759e" kindref="member">wxMatchWild</ref><sp/>(item-&gt;<ref refid="class_ext_import_item_1a37b6ef945bf38279d156096de2745900" kindref="member">extensions</ref>[j].Lower(),fName.Lower(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogDebug(wxT(</highlight><highlight class="stringliteral">&quot;Match!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matches_ext<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item-&gt;<ref refid="class_ext_import_item_1a37b6ef945bf38279d156096de2745900" kindref="member">extensions</ref>.Count()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogDebug(wxT(</highlight><highlight class="stringliteral">&quot;Match!<sp/>(empty<sp/>list)&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matches_ext<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(matches_ext)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogDebug(wxT(</highlight><highlight class="stringliteral">&quot;Testing<sp/>mime<sp/>types&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogDebug(wxT(</highlight><highlight class="stringliteral">&quot;Not<sp/>testing<sp/>mime<sp/>types&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>matches_ext<sp/>&amp;&amp;<sp/>j<sp/>&lt;<sp/>item-&gt;<ref refid="class_ext_import_item_1a4df49043980dda3886b6e2e7ff3ddf32" kindref="member">mime_types</ref>.Count();<sp/>j++)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="filefn_8cpp_1a7edb43de3a9d6f5fb331b56dc2c5759e" kindref="member">wxMatchWild</ref><sp/>(item-&gt;<ref refid="class_ext_import_item_1a4df49043980dda3886b6e2e7ff3ddf32" kindref="member">mime_types</ref>[j].Lower(),mime_type.Lower(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogDebug(wxT(</highlight><highlight class="stringliteral">&quot;Match!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matches_mime<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item-&gt;<ref refid="class_ext_import_item_1a4df49043980dda3886b6e2e7ff3ddf32" kindref="member">mime_types</ref>.Count()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogDebug(wxT(</highlight><highlight class="stringliteral">&quot;Match!<sp/>(empty<sp/>list)&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matches_mime<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(matches_ext<sp/>&amp;&amp;<sp/>matches_mime)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogDebug(wxT(</highlight><highlight class="stringliteral">&quot;Complete<sp/>match!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>item-&gt;<ref refid="class_ext_import_item_1a2bbd78eb3a5159fca03d7e1eeda638a8" kindref="member">filter_objects</ref>.Count()<sp/>&amp;&amp;<sp/>(item-&gt;<ref refid="class_ext_import_item_1a2f548a8472b4db998102373fe018bfc0" kindref="member">divider</ref><sp/>&lt;<sp/>0<sp/>||<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>j<sp/>&lt;<sp/>item-&gt;divider);<sp/>j++)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>filter_object<sp/>can<sp/>be<sp/>NULL<sp/>if<sp/>a<sp/>suitable<sp/>importer<sp/>was<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>happens<sp/>when<sp/>we<sp/>recompile<sp/>with<sp/>--without-ffmpeg<sp/>and<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>still<sp/>ffmpeg<sp/>in<sp/>prefs<sp/>from<sp/>previous<sp/>--with-ffmpeg<sp/>builds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(item-&gt;<ref refid="class_ext_import_item_1a2bbd78eb3a5159fca03d7e1eeda638a8" kindref="member">filter_objects</ref>[j]))</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogDebug(wxT(</highlight><highlight class="stringliteral">&quot;Inserting<sp/>%s&quot;</highlight><highlight class="normal">),item-&gt;<ref refid="class_ext_import_item_1a2bbd78eb3a5159fca03d7e1eeda638a8" kindref="member">filter_objects</ref>[j]-&gt;GetPluginStringID().c_str());</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>importPlugins.Append(item-&gt;<ref refid="class_ext_import_item_1a2bbd78eb3a5159fca03d7e1eeda638a8" kindref="member">filter_objects</ref>[j]);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>all<sp/>plugins<sp/>that<sp/>support<sp/>the<sp/>extension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/>importPluginNode<sp/>=<sp/>mImportPluginList-&gt;GetFirst();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>we<sp/>rely<sp/>on<sp/>the<sp/>fact<sp/>that<sp/>the<sp/>first<sp/>plugin<sp/>in<sp/>mImportPluginList<sp/>is<sp/>libsndfile.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>want<sp/>to<sp/>save<sp/>this<sp/>for<sp/>later<sp/>insertion<sp/>ahead<sp/>of<sp/>libmad,<sp/>if<sp/>libmad<sp/>supports<sp/>the<sp/>extension.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>order<sp/>of<sp/>plugins<sp/>in<sp/>mImportPluginList<sp/>is<sp/>determined<sp/>by<sp/>the<sp/>Importer<sp/>constructor<sp/>alone<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>not<sp/>changed<sp/>by<sp/>user<sp/>selection<sp/>overrides<sp/>or<sp/>any<sp/>other<sp/>mechanism,<sp/>but<sp/>we<sp/>include<sp/>an<sp/>assert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>subsequent<sp/>code<sp/>revisions<sp/>to<sp/>the<sp/>constructor<sp/>should<sp/>break<sp/>this<sp/>assumption<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>libsndfile<sp/>is<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_import_plugin" kindref="compound">ImportPlugin</ref><sp/>*libsndfilePlugin<sp/>=<sp/>importPluginNode-&gt;GetData();</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(libsndfilePlugin-&gt;<ref refid="class_import_plugin_1a1bf59f8e7e7b17f471e08df49b64d0cd" kindref="member">GetPluginStringID</ref>().IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;libsndfile&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(importPluginNode)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_import_plugin" kindref="compound">ImportPlugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref><sp/>=<sp/>importPluginNode-&gt;GetData();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>its<sp/>not<sp/>already<sp/>in<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(importPlugins.Find(plugin)<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plugin-&gt;<ref refid="class_import_plugin_1a980704189e8e32026590db558e916405" kindref="member">SupportsExtension</ref>(extension))</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>libmad<sp/>is<sp/>accidentally<sp/>fed<sp/>a<sp/>wav<sp/>file<sp/>which<sp/>has<sp/>been<sp/>incorrectly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>given<sp/>an<sp/>.mp3<sp/>extension<sp/>then<sp/>it<sp/>can<sp/>choke<sp/>on<sp/>the<sp/>contents<sp/>and<sp/>crash.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>avoid<sp/>this,<sp/>put<sp/>libsndfile<sp/>ahead<sp/>of<sp/>libmad<sp/>in<sp/>the<sp/>lists<sp/>created<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mp3<sp/>files,<sp/>or<sp/>for<sp/>any<sp/>of<sp/>the<sp/>extensions<sp/>supported<sp/>by<sp/>libmad.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>genuine<sp/>.mp3<sp/>file<sp/>will<sp/>first<sp/>fail<sp/>an<sp/>attempted<sp/>import<sp/>with<sp/>libsndfile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>then<sp/>get<sp/>processed<sp/>as<sp/>desired<sp/>by<sp/>libmad.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>a<sp/>wav<sp/>file<sp/>which<sp/>bears<sp/>an<sp/>incorrect<sp/>.mp3<sp/>extension<sp/>will<sp/>be<sp/>successfully</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>processed<sp/>by<sp/>libsndfile<sp/>and<sp/>thus<sp/>avoid<sp/>being<sp/>submitted<sp/>to<sp/>libmad.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plugin-&gt;<ref refid="class_import_plugin_1a1bf59f8e7e7b17f471e08df49b64d0cd" kindref="member">GetPluginStringID</ref>().IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;libmad&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>libsndfile<sp/>is<sp/>not<sp/>already<sp/>in<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(importPlugins.Find(libsndfilePlugin)<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogDebug(wxT(</highlight><highlight class="stringliteral">&quot;Appending<sp/>%s&quot;</highlight><highlight class="normal">),libsndfilePlugin-&gt;<ref refid="class_import_plugin_1a1bf59f8e7e7b17f471e08df49b64d0cd" kindref="member">GetPluginStringID</ref>().c_str());</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>importPlugins.Append(libsndfilePlugin);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogDebug(wxT(</highlight><highlight class="stringliteral">&quot;Appending<sp/>%s&quot;</highlight><highlight class="normal">),plugin-&gt;<ref refid="class_import_plugin_1a1bf59f8e7e7b17f471e08df49b64d0cd" kindref="member">GetPluginStringID</ref>().c_str());</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>importPlugins.Append(plugin);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>importPluginNode<sp/>=<sp/>importPluginNode-&gt;GetNext();</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>remaining<sp/>plugins,<sp/>except<sp/>for<sp/>libmad,<sp/>which<sp/>should<sp/>not<sp/>be<sp/>used<sp/>as<sp/>a<sp/>fallback<sp/>for<sp/>anything.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>if<sp/>FFmpeg<sp/>(libav)<sp/>has<sp/>not<sp/>been<sp/>installed,<sp/>libmad<sp/>will<sp/>still<sp/>be<sp/>there<sp/>near<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>the<sp/>preference<sp/>list<sp/>importPlugins,<sp/>where<sp/>it<sp/>will<sp/>claim<sp/>success<sp/>importing<sp/>FFmpeg<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>formats<sp/>unsuitable<sp/>for<sp/>it,<sp/>and<sp/>produce<sp/>distorted<sp/>results.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/>importPluginNode<sp/>=<sp/>mImportPluginList-&gt;GetFirst();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(importPluginNode)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_import_plugin" kindref="compound">ImportPlugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref><sp/>=<sp/>importPluginNode-&gt;GetData();</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(plugin-&gt;<ref refid="class_import_plugin_1a1bf59f8e7e7b17f471e08df49b64d0cd" kindref="member">GetPluginStringID</ref>().IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;libmad&quot;</highlight><highlight class="normal">))))</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>its<sp/>not<sp/>already<sp/>in<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(importPlugins.Find(plugin)<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogDebug(wxT(</highlight><highlight class="stringliteral">&quot;Appending<sp/>%s&quot;</highlight><highlight class="normal">),plugin-&gt;<ref refid="class_import_plugin_1a1bf59f8e7e7b17f471e08df49b64d0cd" kindref="member">GetPluginStringID</ref>().c_str());</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>importPlugins.Append(plugin);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>importPluginNode<sp/>=<sp/>importPluginNode-&gt;GetNext();</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/>importPluginNode<sp/>=<sp/>importPlugins.GetFirst();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(importPluginNode)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_import_plugin" kindref="compound">ImportPlugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref><sp/>=<sp/>importPluginNode-&gt;GetData();</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>open<sp/>the<sp/>file<sp/>with<sp/>this<sp/>plugin<sp/>(probe<sp/>it)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;Opening<sp/>with<sp/>%s&quot;</highlight><highlight class="normal">),plugin-&gt;<ref refid="class_import_plugin_1a1bf59f8e7e7b17f471e08df49b64d0cd" kindref="member">GetPluginStringID</ref>().c_str());</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inFile<sp/>=<sp/>plugin-&gt;<ref refid="class_import_plugin_1abe16a65c8e0575fc7dcb0a9531f8f0a7" kindref="member">Open</ref>(fName);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(inFile<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>&amp;&amp;<sp/>(inFile-&gt;GetStreamCount()<sp/>&gt;<sp/>0)<sp/>)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;Open(%s)<sp/>succeeded&quot;</highlight><highlight class="normal">),(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>fName.c_str());</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>File<sp/>has<sp/>more<sp/>than<sp/>one<sp/>stream<sp/>-<sp/>display<sp/>stream<sp/>selector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inFile-&gt;GetStreamCount()<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_import_stream_dialog" kindref="compound">ImportStreamDialog</ref><sp/>ImportDlg(inFile,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>-1,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Select<sp/>stream(s)<sp/>to<sp/>import&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ImportDlg.ShowModal()<sp/>==<sp/>wxID_CANCEL)</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>inFile;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1af569662fde524439adf8ee98301f7e60" kindref="member">mbBusyImporting</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>stream<sp/>-<sp/>import<sp/>it<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inFile-&gt;SetStreamUsage(0,<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>inFile-&gt;Import(trackFactory,<sp/>tracks,<sp/>&amp;numTracks,<sp/>tags);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>inFile;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/><ref refid="_progress_dialog_8h_1ae6f7b430ccd2b8df9ba02ada329b4e02a4f88b782dbc37c4eefb166849bfbbac3" kindref="member">eProgressSuccess</ref><sp/>||<sp/>res<sp/>==<sp/><ref refid="_progress_dialog_8h_1ae6f7b430ccd2b8df9ba02ada329b4e02a3505bc7ba73d0bc81c6d4d07173d28a4" kindref="member">eProgressStopped</ref>)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOF<sp/>(&quot;list-of-files&quot;)<sp/>has<sp/>different<sp/>semantics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;lof&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1af569662fde524439adf8ee98301f7e60" kindref="member">mbBusyImporting</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numTracks<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>success!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1af569662fde524439adf8ee98301f7e60" kindref="member">mbBusyImporting</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numTracks;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/><ref refid="_progress_dialog_8h_1ae6f7b430ccd2b8df9ba02ada329b4e02adf55626e588c0d1a87d9f048e7d06ce5" kindref="member">eProgressCancelled</ref><sp/>||<sp/>res<sp/>==<sp/><ref refid="_progress_dialog_8h_1ae6f7b430ccd2b8df9ba02ada329b4e02a48e660fff7544e0dfae5692e334cbd72" kindref="member">eProgressFailed</ref>)</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1af569662fde524439adf8ee98301f7e60" kindref="member">mbBusyImporting</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>could<sp/>exit<sp/>here<sp/>since<sp/>we<sp/>had<sp/>a<sp/>match<sp/>on<sp/>the<sp/>file<sp/>extension,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>there<sp/>may<sp/>be<sp/>another<sp/>plug-in<sp/>that<sp/>can<sp/>import<sp/>the<sp/>file<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>may<sp/>recognize<sp/>the<sp/>extension,<sp/>so<sp/>we<sp/>allow<sp/>the<sp/>loop<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>continue.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>importPluginNode<sp/>=<sp/>importPluginNode-&gt;GetNext();</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/>wxLogError(wxT(</highlight><highlight class="stringliteral">&quot;Importer::Import:<sp/>Opening<sp/>failed.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>None<sp/>of<sp/>our<sp/>plugins<sp/>can<sp/>handle<sp/>this<sp/>file.<sp/><sp/>It<sp/>might<sp/>be<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Audacity<sp/>supports<sp/>this<sp/>format,<sp/>but<sp/>support<sp/>was<sp/>not<sp/>compiled<sp/>in.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>so,<sp/>notify<sp/>the<sp/>user<sp/>of<sp/>this<sp/>fact</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/>UnusableImportPluginList::compatibility_iterator<sp/>unusableImporterNode</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>mUnusableImportPluginList-&gt;GetFirst();</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(unusableImporterNode)</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_unusable_import_plugin" kindref="compound">UnusableImportPlugin</ref><sp/>*unusableImportPlugin<sp/>=<sp/>unusableImporterNode-&gt;GetData();</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>unusableImportPlugin-&gt;<ref refid="class_unusable_import_plugin_1aefb06c6f229ba983b832edaffabcf796" kindref="member">SupportsExtension</ref>(extension)<sp/>)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;This<sp/>version<sp/>of<sp/>Audacity<sp/>was<sp/>not<sp/>compiled<sp/>with<sp/>%s<sp/>support.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unusableImportPlugin-&gt;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetPluginFormatDescription().c_str());</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1af569662fde524439adf8ee98301f7e60" kindref="member">mbBusyImporting</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unusableImporterNode<sp/>=<sp/>unusableImporterNode-&gt;GetNext();</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>warnings<sp/>for<sp/>unsupported<sp/>data<sp/>types<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MIDI<sp/>files<sp/>must<sp/>be<sp/>imported,<sp/>not<sp/>opened</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;midi&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))||(extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;mid&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;\&quot;%s\&quot;<sp/>\nis<sp/>a<sp/>MIDI<sp/>file,<sp/>not<sp/>an<sp/>audio<sp/>file.<sp/>\nAudacity<sp/>cannot<sp/>open<sp/>this<sp/>type<sp/>of<sp/>file<sp/>for<sp/>playing,<sp/>but<sp/>you<sp/>can\nedit<sp/>it<sp/>by<sp/>clicking<sp/>File<sp/>&gt;<sp/>Import<sp/>&gt;<sp/>MIDI.&quot;</highlight><highlight class="normal">),<sp/>fName.c_str());</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1af569662fde524439adf8ee98301f7e60" kindref="member">mbBusyImporting</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compatiblePlugins.GetCount()<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>someone<sp/>has<sp/>sent<sp/>us<sp/>a<sp/>.cda<sp/>file,<sp/>send<sp/>them<sp/>away</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;cda&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>%s<sp/>will<sp/>be<sp/>the<sp/>filename<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;\&quot;%s\&quot;<sp/>is<sp/>an<sp/>audio<sp/>CD<sp/>track.<sp/>\nAudacity<sp/>cannot<sp/>open<sp/>audio<sp/>CDs<sp/>directly.<sp/>\nExtract<sp/>(rip)<sp/>the<sp/>CD<sp/>tracks<sp/>to<sp/>an<sp/>audio<sp/>format<sp/>that<sp/>\nAudacity<sp/>can<sp/>import,<sp/>such<sp/>as<sp/>WAV<sp/>or<sp/>AIFF.&quot;</highlight><highlight class="normal">),<sp/>fName.c_str());</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1af569662fde524439adf8ee98301f7e60" kindref="member">mbBusyImporting</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>playlist<sp/>type<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;m3u&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))||(extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;ram&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))||(extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;pls&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;\&quot;%s\&quot;<sp/>is<sp/>a<sp/>playlist<sp/>file.<sp/>\nAudacity<sp/>cannot<sp/>open<sp/>this<sp/>file<sp/>because<sp/>it<sp/>only<sp/>contains<sp/>links<sp/>to<sp/>other<sp/>files.<sp/>\nYou<sp/>may<sp/>be<sp/>able<sp/>to<sp/>open<sp/>it<sp/>in<sp/>a<sp/>text<sp/>editor<sp/>and<sp/>download<sp/>the<sp/>actual<sp/>audio<sp/>files.&quot;</highlight><highlight class="normal">),<sp/>fName.c_str());</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1af569662fde524439adf8ee98301f7e60" kindref="member">mbBusyImporting</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//WMA<sp/>files<sp/>of<sp/>various<sp/>forms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;wma&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))||(extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;asf&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;\&quot;%s\&quot;<sp/>is<sp/>a<sp/>Windows<sp/>Media<sp/>Audio<sp/>file.<sp/>\nAudacity<sp/>cannot<sp/>open<sp/>this<sp/>type<sp/>of<sp/>file<sp/>due<sp/>to<sp/>patent<sp/>restrictions.<sp/>\nYou<sp/>need<sp/>to<sp/>convert<sp/>it<sp/>to<sp/>a<sp/>supported<sp/>audio<sp/>format,<sp/>such<sp/>as<sp/>WAV<sp/>or<sp/>AIFF.&quot;</highlight><highlight class="normal">),<sp/>fName.c_str());</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1af569662fde524439adf8ee98301f7e60" kindref="member">mbBusyImporting</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//AAC<sp/>files<sp/>of<sp/>various<sp/>forms<sp/>(probably<sp/>not<sp/>encrypted)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;aac&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))||(extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;m4a&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))||(extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;m4r&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))||(extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;mp4&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;\&quot;%s\&quot;<sp/>is<sp/>an<sp/>Advanced<sp/>Audio<sp/>Coding<sp/>file.<sp/>\nAudacity<sp/>cannot<sp/>open<sp/>this<sp/>type<sp/>of<sp/>file.<sp/>\nYou<sp/>need<sp/>to<sp/>convert<sp/>it<sp/>to<sp/>a<sp/>supported<sp/>audio<sp/>format,<sp/>such<sp/>as<sp/>WAV<sp/>or<sp/>AIFF.&quot;</highlight><highlight class="normal">),<sp/>fName.c_str());</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1af569662fde524439adf8ee98301f7e60" kindref="member">mbBusyImporting</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>encrypted<sp/>itunes<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;m4p&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;\&quot;%s\&quot;<sp/>is<sp/>an<sp/>encrypted<sp/>audio<sp/>file.<sp/>\nThese<sp/>typically<sp/>are<sp/>from<sp/>an<sp/>online<sp/>music<sp/>store.<sp/>\nAudacity<sp/>cannot<sp/>open<sp/>this<sp/>type<sp/>of<sp/>file<sp/>due<sp/>to<sp/>the<sp/>encryption.<sp/>\nTry<sp/>recording<sp/>the<sp/>file<sp/>into<sp/>Audacity,<sp/>or<sp/>burn<sp/>it<sp/>to<sp/>audio<sp/>CD<sp/>then<sp/>\nextract<sp/>the<sp/>CD<sp/>track<sp/>to<sp/>a<sp/>supported<sp/>audio<sp/>format<sp/>such<sp/>as<sp/>WAV<sp/>or<sp/>AIFF.&quot;</highlight><highlight class="normal">),<sp/>fName.c_str());</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1af569662fde524439adf8ee98301f7e60" kindref="member">mbBusyImporting</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Real<sp/>Inc.<sp/>files<sp/>of<sp/>various<sp/>sorts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;ra&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))||(extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;rm&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))||(extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;rpm&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;\&quot;%s\&quot;<sp/>is<sp/>a<sp/>RealPlayer<sp/>media<sp/>file.<sp/>\nAudacity<sp/>cannot<sp/>open<sp/>this<sp/>proprietary<sp/>format.<sp/>\nYou<sp/>need<sp/>to<sp/>convert<sp/>it<sp/>to<sp/>a<sp/>supported<sp/>audio<sp/>format,<sp/>such<sp/>as<sp/>WAV<sp/>or<sp/>AIFF.&quot;</highlight><highlight class="normal">),<sp/>fName.c_str());</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1af569662fde524439adf8ee98301f7e60" kindref="member">mbBusyImporting</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Other<sp/>notes-based<sp/>formats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;kar&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))||(extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;mod&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))||(extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;rmi&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;\&quot;%s\&quot;<sp/>is<sp/>a<sp/>notes-based<sp/>file,<sp/>not<sp/>an<sp/>audio<sp/>file.<sp/>\nAudacity<sp/>cannot<sp/>open<sp/>this<sp/>type<sp/>of<sp/>file.<sp/>\nTry<sp/>converting<sp/>it<sp/>to<sp/>an<sp/>audio<sp/>file<sp/>such<sp/>as<sp/>WAV<sp/>or<sp/>AIFF<sp/>and<sp/>\nthen<sp/>import<sp/>it,<sp/>or<sp/>record<sp/>it<sp/>into<sp/>Audacity.&quot;</highlight><highlight class="normal">),<sp/>fName.c_str());</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1af569662fde524439adf8ee98301f7e60" kindref="member">mbBusyImporting</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MusePack<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;mp+&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))||(extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;mpc&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))||(extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;mpp&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;\&quot;%s\&quot;<sp/>is<sp/>a<sp/>Musepack<sp/>audio<sp/>file.<sp/>\nAudacity<sp/>cannot<sp/>open<sp/>this<sp/>type<sp/>of<sp/>file.<sp/>\nIf<sp/>you<sp/>think<sp/>it<sp/>might<sp/>be<sp/>an<sp/>mp3<sp/>file,<sp/>rename<sp/>it<sp/>to<sp/>end<sp/>with<sp/>\&quot;.mp3\&quot;<sp/>\nand<sp/>try<sp/>importing<sp/>it<sp/>again.<sp/>Otherwise<sp/>you<sp/>need<sp/>to<sp/>convert<sp/>it<sp/>to<sp/>a<sp/>supported<sp/>audio<sp/>\nformat,<sp/>such<sp/>as<sp/>WAV<sp/>or<sp/>AIFF.&quot;</highlight><highlight class="normal">),<sp/>fName.c_str());</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1af569662fde524439adf8ee98301f7e60" kindref="member">mbBusyImporting</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WavPack<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;wv&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))||(extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;wvc&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;\&quot;%s\&quot;<sp/>is<sp/>a<sp/>Wavpack<sp/>audio<sp/>file.<sp/>\nAudacity<sp/>cannot<sp/>open<sp/>this<sp/>type<sp/>of<sp/>file.<sp/>\nYou<sp/>need<sp/>to<sp/>convert<sp/>it<sp/>to<sp/>a<sp/>supported<sp/>audio<sp/>format,<sp/>such<sp/>as<sp/>WAV<sp/>or<sp/>AIFF.&quot;</highlight><highlight class="normal">),<sp/>fName.c_str());</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1af569662fde524439adf8ee98301f7e60" kindref="member">mbBusyImporting</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AC3<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;ac3&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;\&quot;%s\&quot;<sp/>is<sp/>a<sp/>Dolby<sp/>Digital<sp/>audio<sp/>file.<sp/>\nAudacity<sp/>cannot<sp/>currently<sp/>open<sp/>this<sp/>type<sp/>of<sp/>file.<sp/>\nYou<sp/>need<sp/>to<sp/>convert<sp/>it<sp/>to<sp/>a<sp/>supported<sp/>audio<sp/>format,<sp/>such<sp/>as<sp/>WAV<sp/>or<sp/>AIFF.&quot;</highlight><highlight class="normal">),<sp/>fName.c_str());</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1af569662fde524439adf8ee98301f7e60" kindref="member">mbBusyImporting</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Speex<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;spx&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;\&quot;%s\&quot;<sp/>is<sp/>an<sp/>Ogg<sp/>Speex<sp/>audio<sp/>file.<sp/>\nAudacity<sp/>cannot<sp/>currently<sp/>open<sp/>this<sp/>type<sp/>of<sp/>file.<sp/>\nYou<sp/>need<sp/>to<sp/>convert<sp/>it<sp/>to<sp/>a<sp/>supported<sp/>audio<sp/>format,<sp/>such<sp/>as<sp/>WAV<sp/>or<sp/>AIFF.&quot;</highlight><highlight class="normal">),<sp/>fName.c_str());</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1af569662fde524439adf8ee98301f7e60" kindref="member">mbBusyImporting</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Video<sp/>files<sp/>of<sp/>various<sp/>forms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;mpg&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))||(extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;mpeg&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))||(extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;avi&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))||(extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;wmv&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))||(extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;rv&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;\&quot;%s\&quot;<sp/>is<sp/>a<sp/>video<sp/>file.<sp/>\nAudacity<sp/>cannot<sp/>currently<sp/>open<sp/>this<sp/>type<sp/>of<sp/>file.<sp/>\nYou<sp/>need<sp/>to<sp/>extract<sp/>the<sp/>audio<sp/>to<sp/>a<sp/>supported<sp/>format,<sp/>such<sp/>as<sp/>WAV<sp/>or<sp/>AIFF.&quot;</highlight><highlight class="normal">),<sp/>fName.c_str());</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1af569662fde524439adf8ee98301f7e60" kindref="member">mbBusyImporting</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Audacity<sp/>project</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extension.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;aup&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;\&quot;%s\&quot;<sp/>is<sp/>an<sp/>Audacity<sp/>Project<sp/>file.<sp/>\nUse<sp/>the<sp/>&apos;File<sp/>&gt;<sp/>Open&apos;<sp/>command<sp/>to<sp/>open<sp/>Audacity<sp/>Projects.&quot;</highlight><highlight class="normal">),<sp/>fName.c_str());</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1af569662fde524439adf8ee98301f7e60" kindref="member">mbBusyImporting</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>were<sp/>not<sp/>able<sp/>to<sp/>recognize<sp/>the<sp/>file<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Audacity<sp/>did<sp/>not<sp/>recognize<sp/>the<sp/>type<sp/>of<sp/>the<sp/>file<sp/>&apos;%s&apos;.\nIf<sp/>it<sp/>is<sp/>uncompressed,<sp/>try<sp/>importing<sp/>it<sp/>using<sp/>\&quot;Import<sp/>Raw\&quot;.&quot;</highlight><highlight class="normal">),fName.c_str());</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>DO<sp/>have<sp/>a<sp/>plugin<sp/>for<sp/>this<sp/>file,<sp/>but<sp/>import<sp/>failed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>pluglist<sp/>=<sp/>wxEmptyString;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>importPluginNode<sp/>=<sp/>compatiblePlugins.GetFirst();</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(importPluginNode)</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_import_plugin" kindref="compound">ImportPlugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref><sp/>=<sp/>importPluginNode-&gt;GetData();</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pluglist<sp/>==<sp/>wxEmptyString)</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pluglist<sp/>=<sp/>plugin-&gt;<ref refid="class_import_plugin_1a5913a90328e88944c600c128e969a99e" kindref="member">GetPluginFormatDescription</ref>();</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pluglist<sp/>=<sp/>pluglist<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>plugin-&gt;<ref refid="class_import_plugin_1a5913a90328e88944c600c128e969a99e" kindref="member">GetPluginFormatDescription</ref>();</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>importPluginNode<sp/>=<sp/>importPluginNode-&gt;GetNext();</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Audacity<sp/>recognized<sp/>the<sp/>type<sp/>of<sp/>the<sp/>file<sp/>&apos;%s&apos;.\nImporters<sp/>supposedly<sp/>supporting<sp/>such<sp/>files<sp/>are:\n%s,\nbut<sp/>none<sp/>of<sp/>them<sp/>understood<sp/>this<sp/>file<sp/>format.&quot;</highlight><highlight class="normal">),fName.c_str(),<sp/>pluglist.c_str());</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1af569662fde524439adf8ee98301f7e60" kindref="member">mbBusyImporting</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ImportStreamDialog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal">BEGIN_EVENT_TABLE(<sp/><ref refid="class_import_stream_dialog" kindref="compound">ImportStreamDialog</ref>,wxDialog<sp/>)</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(<sp/>wxID_OK,<sp/>ImportStreamDialog::OnOk<sp/>)</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(<sp/>wxID_CANCEL,<sp/>ImportStreamDialog::OnCancel<sp/>)</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750" refid="class_import_stream_dialog_1a4c31f2d0b1044d5476ee62b20b321621" refkind="member"><highlight class="normal"><ref refid="class_import_stream_dialog" kindref="compound">ImportStreamDialog</ref>::<ref refid="class_import_stream_dialog" kindref="compound">ImportStreamDialog</ref>(<sp/><ref refid="class_import_file_handle" kindref="compound">ImportFileHandle</ref><sp/>*_mFile,<sp/>wxWindow<sp/>*parent,<sp/>wxWindowID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxString<sp/>&amp;title,</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxPoint<sp/>&amp;<ref refid="structposition" kindref="compound">position</ref>,<sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxSize&amp;<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacelv2specgen_1a5a176513c7f83ab7518d32ef1dba5b81" kindref="member">style</ref><sp/>):</highlight></codeline>
<codeline lineno="752"><highlight class="normal">wxDialog(<sp/>parent,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>title,<sp/><ref refid="structposition" kindref="compound">position</ref>,<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>,<sp/><ref refid="namespacelv2specgen_1a5a176513c7f83ab7518d32ef1dba5b81" kindref="member">style</ref><sp/>|<sp/>wxRESIZE_BORDER<sp/>)</highlight></codeline>
<codeline lineno="753"><highlight class="normal">{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/>SetName(GetTitle());</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/>mFile<sp/>=<sp/>_mFile;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/>scount<sp/>=<sp/>mFile-&gt;GetStreamCount();</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(wxInt32<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>scount;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFile-&gt;SetStreamUsage(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/>wxBoxSizer<sp/>*vertSizer;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uVertSizer<sp/>=<sp/>std::make_unique&lt;wxBoxSizer&gt;(wxVERTICAL);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vertSizer<sp/>=<sp/>uVertSizer.get();</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxArrayString<sp/>*choices<sp/>=<sp/>mFile-&gt;GetStreamInfo();</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StreamList<sp/>=<sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/>wxListBox(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>-1,<sp/>wxDefaultPosition,<sp/>wxDefaultSize,<sp/>*choices,<sp/>wxLB_EXTENDED<sp/>|<sp/>wxLB_ALWAYS_SB);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vertSizer-&gt;Add(StreamList,<sp/>1,<sp/>wxEXPAND<sp/>|<sp/>wxALIGN_LEFT<sp/>|<sp/>wxALL,<sp/>5);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vertSizer-&gt;Add(<ref refid="_shuttle_gui_8cpp_1a47800bd54e3a5bab39b95b544b9a8095" kindref="member">CreateStdButtonSizer</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="_shuttle_gui_8h_1a727cc1d940fa1a6396c79b0f86a72653a437edfe9a451612a4bd6fd50f2caf4c5" kindref="member">eCancelButton</ref><sp/>|<sp/><ref refid="_shuttle_gui_8h_1a727cc1d940fa1a6396c79b0f86a72653a0a78af2954b9dbff02888eaf8578c956" kindref="member">eOkButton</ref>).<ref refid="libid3tag_2global_8h_1a5af3e33e078602f154cba53f58df716c" kindref="member">release</ref>(),<sp/>0,<sp/>wxEXPAND);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetAutoLayout(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetSizer(uVertSizer.release());</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/>vertSizer-&gt;Fit(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/>SetSize(<sp/>400,<sp/>200<sp/>);</highlight></codeline>
<codeline lineno="781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783" refid="class_import_stream_dialog_1a865cc1e931315cc0fe84cf453d14230d" refkind="member"><highlight class="normal"><ref refid="class_import_stream_dialog_1a865cc1e931315cc0fe84cf453d14230d" kindref="member">ImportStreamDialog::~ImportStreamDialog</ref>()</highlight></codeline>
<codeline lineno="784"><highlight class="normal">{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImportStreamDialog::OnOk(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="789"><highlight class="normal">{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/>wxArrayInt<sp/>selitems;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sels<sp/>=<sp/>StreamList-&gt;GetSelections(selitems);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(wxInt32<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>sels;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFile-&gt;SetStreamUsage(selitems[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/>EndModal(<sp/>wxID_OK<sp/>);</highlight></codeline>
<codeline lineno="795"><highlight class="normal">}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImportStreamDialog::OnCancel(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="798"><highlight class="normal">{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/>EndModal(<sp/>wxID_CANCEL<sp/>);</highlight></codeline>
<codeline lineno="800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/import/Import.cpp"/>
  </compounddef>
</doxygen>
