<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_fixed_tempo_estimator_8cpp" kind="file" language="C++">
    <compoundname>FixedTempoEstimator.cpp</compoundname>
    <includes refid="_fixed_tempo_estimator_8h" local="yes">FixedTempoEstimator.h</includes>
    <includes local="no">cmath</includes>
    <includes local="no">cstdio</includes>
    <incdepgraph>
      <node id="21465">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/FixedTempoEstimator.cpp</label>
        <link refid="FixedTempoEstimator.cpp"/>
        <childnode refid="21466" relation="include">
        </childnode>
        <childnode refid="21475" relation="include">
        </childnode>
        <childnode refid="21476" relation="include">
        </childnode>
      </node>
      <node id="21467">
        <label>vamp-sdk/Plugin.h</label>
        <link refid="libvamp_2vamp-sdk_2plugin_8h"/>
        <childnode refid="21468" relation="include">
        </childnode>
        <childnode refid="21469" relation="include">
        </childnode>
        <childnode refid="21470" relation="include">
        </childnode>
        <childnode refid="21471" relation="include">
        </childnode>
        <childnode refid="21473" relation="include">
        </childnode>
        <childnode refid="21472" relation="include">
        </childnode>
      </node>
      <node id="21466">
        <label>FixedTempoEstimator.h</label>
        <link refid="_fixed_tempo_estimator_8h"/>
        <childnode refid="21467" relation="include">
        </childnode>
      </node>
      <node id="21475">
        <label>cmath</label>
      </node>
      <node id="21468">
        <label>string</label>
      </node>
      <node id="21470">
        <label>map</label>
      </node>
      <node id="21472">
        <label>plugguard.h</label>
        <link refid="plugguard_8h"/>
      </node>
      <node id="21471">
        <label>PluginBase.h</label>
        <link refid="vamp-sdk_2_plugin_base_8h"/>
        <childnode refid="21468" relation="include">
        </childnode>
        <childnode refid="21469" relation="include">
        </childnode>
        <childnode refid="21472" relation="include">
        </childnode>
      </node>
      <node id="21476">
        <label>cstdio</label>
      </node>
      <node id="21469">
        <label>vector</label>
      </node>
      <node id="21473">
        <label>RealTime.h</label>
        <link refid="vamp-sdk_2_real_time_8h"/>
        <childnode refid="21474" relation="include">
        </childnode>
        <childnode refid="21468" relation="include">
        </childnode>
        <childnode refid="21472" relation="include">
        </childnode>
      </node>
      <node id="21474">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_fixed_tempo_estimator_1_1_d" prot="public">FixedTempoEstimator::D</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_fixed_tempo_estimator_8cpp_1a7a8511e62dffb5334ad3b70d57b2fcee" prot="public" static="yes" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int TempoOutput</definition>
        <argsstring></argsstring>
        <name>TempoOutput</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/FixedTempoEstimator.cpp" line="183" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/FixedTempoEstimator.cpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_fixed_tempo_estimator_8cpp_1a554b16c6b7516530e52c65318bfe08eb" prot="public" static="yes" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int CandidatesOutput</definition>
        <argsstring></argsstring>
        <name>CandidatesOutput</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/FixedTempoEstimator.cpp" line="184" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/FixedTempoEstimator.cpp" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_fixed_tempo_estimator_8cpp_1acaa4524f29afce03c812a88ff31159c1" prot="public" static="yes" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int DFOutput</definition>
        <argsstring></argsstring>
        <name>DFOutput</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/FixedTempoEstimator.cpp" line="185" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/FixedTempoEstimator.cpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_fixed_tempo_estimator_8cpp_1a382c1fe740ac8911c6078cfbceffc870" prot="public" static="yes" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int ACFOutput</definition>
        <argsstring></argsstring>
        <name>ACFOutput</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/FixedTempoEstimator.cpp" line="186" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/FixedTempoEstimator.cpp" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_fixed_tempo_estimator_8cpp_1a5b284021783d79785d46b043b458368d" prot="public" static="yes" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int FilteredACFOutput</definition>
        <argsstring></argsstring>
        <name>FilteredACFOutput</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/FixedTempoEstimator.cpp" line="187" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/FixedTempoEstimator.cpp" bodystart="187" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/><sp/>vi:set<sp/>ts=8<sp/>sts=4<sp/>sw=4:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>Vamp</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>An<sp/>API<sp/>for<sp/>audio<sp/>analysis<sp/>and<sp/>feature<sp/>extraction<sp/>plugins.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>Centre<sp/>for<sp/>Digital<sp/>Music,<sp/>Queen<sp/>Mary,<sp/>University<sp/>of<sp/>London.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>Copyright<sp/>2006-2009<sp/>Chris<sp/>Cannam<sp/>and<sp/>QMUL.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/><sp/>Except<sp/>as<sp/>contained<sp/>in<sp/>this<sp/>notice,<sp/>the<sp/>names<sp/>of<sp/>the<sp/>Centre<sp/>for</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/><sp/>Digital<sp/>Music;<sp/>Queen<sp/>Mary,<sp/>University<sp/>of<sp/>London;<sp/>and<sp/>Chris<sp/>Cannam</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/>shall<sp/>not<sp/>be<sp/>used<sp/>in<sp/>advertising<sp/>or<sp/>otherwise<sp/>to<sp/>promote<sp/>the<sp/>sale,</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/><sp/><sp/>use<sp/>or<sp/>other<sp/>dealings<sp/>in<sp/>this<sp/>Software<sp/>without<sp/>prior<sp/>written</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/>authorization.</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_fixed_tempo_estimator_8h" kindref="compound">FixedTempoEstimator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::vector;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::cerr;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::endl;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="struct_vamp_1_1_real_time" kindref="compound">Vamp::RealTime</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_fixed_tempo_estimator_1_1_d" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1_1_d" kindref="compound">FixedTempoEstimator::D</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>class<sp/>just<sp/>avoids<sp/>us<sp/>having<sp/>to<sp/>declare<sp/>any<sp/>data<sp/>members<sp/>in<sp/>the<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_tempo_estimator_1_1_d_1a104a9b64d47eca678844584f69ca0b9d" kindref="member">D</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inputSampleRate);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_tempo_estimator_1_1_d_1a78a63ac8bbf342cb0405747871adf4cc" kindref="member">~D</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_fixed_tempo_estimator_1_1_d_1add749be18355ab1ae5c1ccbacfd2e192" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_fixed_tempo_estimator_1_1_d_1add749be18355ab1ae5c1ccbacfd2e192" kindref="member">getPreferredStepSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>64;<sp/>}</highlight></codeline>
<codeline lineno="58" refid="class_fixed_tempo_estimator_1_1_d_1ac02826f981736fc2aa5d835fa14e174d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_fixed_tempo_estimator_1_1_d_1ac02826f981736fc2aa5d835fa14e174d" kindref="member">getPreferredBlockSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>256;<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_base_1a3b6bb4bbd86affe1ca9deceea1aad4f8" kindref="member">ParameterList</ref><sp/><ref refid="class_fixed_tempo_estimator_1_1_d_1a06fcf80a9a22c4b90abbc88eb592621a" kindref="member">getParameterDescriptors</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_fixed_tempo_estimator_1_1_d_1a968ef2e555c81e4a3bde89d19fafb31a" kindref="member">getParameter</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fixed_tempo_estimator_1_1_d_1a6cafa64d4cc8aa3556bc0ce6b0c49bc4" kindref="member">setParameter</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_1a30f531b8fb69fac41a24e3d2a6a08ed9" kindref="member">OutputList</ref><sp/><ref refid="class_fixed_tempo_estimator_1_1_d_1a7ce98af800f36045a0dae4b1dbed943f" kindref="member">getOutputDescriptors</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_fixed_tempo_estimator_1_1_d_1af0fcad4493650728babb7e341963c91d" kindref="member">initialise</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>channels,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stepSize,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>blockSize);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fixed_tempo_estimator_1_1_d_1af5ac8147bfe79371d00aba8a19c2f8fd" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">FeatureSet</ref><sp/><ref refid="class_fixed_tempo_estimator_1_1_d_1a7fac74fc9fc54f436408705d1e125e20" kindref="member">process</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*,<sp/><ref refid="struct_vamp_1_1_real_time" kindref="compound">RealTime</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">FeatureSet</ref><sp/><ref refid="class_fixed_tempo_estimator_1_1_d_1a7f9c3603bb3374d6936885010dbdd82b" kindref="member">getRemainingFeatures</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calculate();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">FeatureSet</ref><sp/>assembleFeatures();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lag2tempo(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tempo2lag(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_inputSampleRate;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m_stepSize;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m_blockSize;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_minbpm;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_maxbpm;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_maxdflen;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*m_priorMagnitudes;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m_dfsize;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*m_df;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*m_r;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*m_fr;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*m_t;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m_n;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vamp_1_1_real_time" kindref="compound">Vamp::RealTime</ref><sp/>m_start;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vamp_1_1_real_time" kindref="compound">Vamp::RealTime</ref><sp/>m_lasttime;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="class_fixed_tempo_estimator_1_1_d_1a104a9b64d47eca678844584f69ca0b9d" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1_1_d_1a104a9b64d47eca678844584f69ca0b9d" kindref="member">FixedTempoEstimator::D::D</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inputSampleRate)<sp/>:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputSampleRate(inputSampleRate),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>m_stepSize(0),</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>m_blockSize(0),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>m_minbpm(50),</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>m_maxbpm(190),</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>m_maxdflen(10),</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>m_priorMagnitudes(0),</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>m_df(0),</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>m_r(0),</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fr(0),</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>m_t(0),</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>m_n(0)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="class_fixed_tempo_estimator_1_1_d_1a78a63ac8bbf342cb0405747871adf4cc" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1_1_d_1a78a63ac8bbf342cb0405747871adf4cc" kindref="member">FixedTempoEstimator::D::~D</ref>()</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>m_priorMagnitudes;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>m_df;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>m_r;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>m_fr;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>m_t;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_base_1a3b6bb4bbd86affe1ca9deceea1aad4f8" kindref="member">FixedTempoEstimator::ParameterList</ref></highlight></codeline>
<codeline lineno="125" refid="class_fixed_tempo_estimator_1_1_d_1a06fcf80a9a22c4b90abbc88eb592621a" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1_1_d_1a06fcf80a9a22c4b90abbc88eb592621a" kindref="member">FixedTempoEstimator::D::getParameterDescriptors</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="126"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_base_1a3b6bb4bbd86affe1ca9deceea1aad4f8" kindref="member">ParameterList</ref><sp/>list;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor" kindref="compound">ParameterDescriptor</ref><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a116fd9f0dc94c2bc4bbc60b5443c598c" kindref="member">identifier</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;minbpm&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a0ecebb94fb4ada4aad2640e20aa57084" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Minimum<sp/>estimated<sp/>tempo&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a780ddad41e433d85c82f9ea4d959cbaf" kindref="member">description</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Minimum<sp/>beat-per-minute<sp/>value<sp/>which<sp/>the<sp/>tempo<sp/>estimator<sp/>is<sp/>able<sp/>to<sp/>return&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a3bc3df322e4c02e17e96bc6d44982d7b" kindref="member">unit</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;bpm&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1ab3e4d84f5bc199eea8b642b27e425ec8" kindref="member">minValue</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1ab934b20dd708228a0e3c2811a3e2cec4" kindref="member">maxValue</ref><sp/>=<sp/>360;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1aec4ef77451ec02193ecc4a0856673fbc" kindref="member">defaultValue</ref><sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a7c556d58d552f737ee5a34efdf7f9425" kindref="member">isQuantized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>list.push_back(d);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a116fd9f0dc94c2bc4bbc60b5443c598c" kindref="member">identifier</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;maxbpm&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a0ecebb94fb4ada4aad2640e20aa57084" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Maximum<sp/>estimated<sp/>tempo&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a780ddad41e433d85c82f9ea4d959cbaf" kindref="member">description</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Maximum<sp/>beat-per-minute<sp/>value<sp/>which<sp/>the<sp/>tempo<sp/>estimator<sp/>is<sp/>able<sp/>to<sp/>return&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1aec4ef77451ec02193ecc4a0856673fbc" kindref="member">defaultValue</ref><sp/>=<sp/>190;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>list.push_back(d);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a116fd9f0dc94c2bc4bbc60b5443c598c" kindref="member">identifier</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;maxdflen&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a0ecebb94fb4ada4aad2640e20aa57084" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Input<sp/>duration<sp/>to<sp/>study&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a780ddad41e433d85c82f9ea4d959cbaf" kindref="member">description</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Length<sp/>of<sp/>audio<sp/>input,<sp/>in<sp/>seconds,<sp/>which<sp/>should<sp/>be<sp/>taken<sp/>into<sp/>account<sp/>when<sp/>estimating<sp/>tempo.<sp/><sp/>There<sp/>is<sp/>no<sp/>need<sp/>to<sp/>supply<sp/>the<sp/>plugin<sp/>with<sp/>any<sp/>further<sp/>input<sp/>once<sp/>this<sp/>time<sp/>has<sp/>elapsed<sp/>since<sp/>the<sp/>start<sp/>of<sp/>the<sp/>audio.<sp/><sp/>The<sp/>tempo<sp/>estimator<sp/>may<sp/>use<sp/>only<sp/>the<sp/>first<sp/>part<sp/>of<sp/>this,<sp/>up<sp/>to<sp/>eight<sp/>times<sp/>the<sp/>slowest<sp/>beat<sp/>duration:<sp/>increasing<sp/>this<sp/>value<sp/>further<sp/>than<sp/>that<sp/>is<sp/>unlikely<sp/>to<sp/>improve<sp/>results.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a3bc3df322e4c02e17e96bc6d44982d7b" kindref="member">unit</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1ab3e4d84f5bc199eea8b642b27e425ec8" kindref="member">minValue</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1ab934b20dd708228a0e3c2811a3e2cec4" kindref="member">maxValue</ref><sp/>=<sp/>40;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1aec4ef77451ec02193ecc4a0856673fbc" kindref="member">defaultValue</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>list.push_back(d);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="class_fixed_tempo_estimator_1_1_d_1a968ef2e555c81e4a3bde89d19fafb31a" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1_1_d_1a968ef2e555c81e4a3bde89d19fafb31a" kindref="member">FixedTempoEstimator::D::getParameter</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="160"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;minbpm&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_minbpm;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;maxbpm&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_maxbpm;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;maxdflen&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_maxdflen;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.f;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="class_fixed_tempo_estimator_1_1_d_1a6cafa64d4cc8aa3556bc0ce6b0c49bc4" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1_1_d_1a6cafa64d4cc8aa3556bc0ce6b0c49bc4" kindref="member">FixedTempoEstimator::D::setParameter</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;minbpm&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_minbpm<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;maxbpm&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_maxbpm<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;maxdflen&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_maxdflen<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TempoOutput<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CandidatesOutput<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DFOutput<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ACFOutput<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FilteredACFOutput<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_1a30f531b8fb69fac41a24e3d2a6a08ed9" kindref="member">FixedTempoEstimator::OutputList</ref></highlight></codeline>
<codeline lineno="190" refid="class_fixed_tempo_estimator_1_1_d_1a7ce98af800f36045a0dae4b1dbed943f" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1_1_d_1a7ce98af800f36045a0dae4b1dbed943f" kindref="member">FixedTempoEstimator::D::getOutputDescriptors</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="191"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_1a30f531b8fb69fac41a24e3d2a6a08ed9" kindref="member">OutputList</ref><sp/>list;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor" kindref="compound">OutputDescriptor</ref><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ae2c893ddb1860589517ab7eaa989a18b" kindref="member">identifier</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;tempo&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ab824b2b34ee50f897a30901c620e8d87" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Tempo&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1af9b4fe8f78e7126ead820ba5dc55efd1" kindref="member">description</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Estimated<sp/>tempo&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1aa057a8833fa037f06ac9f7b85b85d5e4" kindref="member">unit</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;bpm&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1af0e577e1a256ff6eed6ea42133fec77d" kindref="member">hasFixedBinCount</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1afdd006959a995e40ef7d565a3a4df6dc" kindref="member">binCount</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ae9ccb65f99f477096b65dd031f4c5e31" kindref="member">hasKnownExtents</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1a1b4858928d23bfd7d5bc557c82a83fb4" kindref="member">isQuantized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1a0d1194980d44e31b25ef3b4b070d6b5d" kindref="member">sampleType</ref><sp/>=<sp/><ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1abffa9ed50cd756df70fd51f0355f448cadea995a737867f7b22b52f1c43c5432e" kindref="member">OutputDescriptor::VariableSampleRate</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1add0cbbdfa9c91764037c39365b1d42af" kindref="member">sampleRate</ref><sp/>=<sp/>m_inputSampleRate;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ab0d7cc6ab19e53b5bd12ee234f549ea3" kindref="member">hasDuration</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>our<sp/>returned<sp/>tempo<sp/>spans<sp/>a<sp/>certain<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>list.push_back(d);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ae2c893ddb1860589517ab7eaa989a18b" kindref="member">identifier</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;candidates&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ab824b2b34ee50f897a30901c620e8d87" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Tempo<sp/>candidates&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1af9b4fe8f78e7126ead820ba5dc55efd1" kindref="member">description</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Possible<sp/>tempo<sp/>estimates,<sp/>one<sp/>per<sp/>bin<sp/>with<sp/>the<sp/>most<sp/>likely<sp/>in<sp/>the<sp/>first<sp/>bin&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1aa057a8833fa037f06ac9f7b85b85d5e4" kindref="member">unit</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;bpm&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1af0e577e1a256ff6eed6ea42133fec77d" kindref="member">hasFixedBinCount</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>list.push_back(d);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ae2c893ddb1860589517ab7eaa989a18b" kindref="member">identifier</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;detectionfunction&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ab824b2b34ee50f897a30901c620e8d87" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Detection<sp/>Function&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1af9b4fe8f78e7126ead820ba5dc55efd1" kindref="member">description</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Onset<sp/>detection<sp/>function&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1aa057a8833fa037f06ac9f7b85b85d5e4" kindref="member">unit</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1af0e577e1a256ff6eed6ea42133fec77d" kindref="member">hasFixedBinCount</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1afdd006959a995e40ef7d565a3a4df6dc" kindref="member">binCount</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ae9ccb65f99f477096b65dd031f4c5e31" kindref="member">hasKnownExtents</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ac9f5924c0be7571bba8e7ae7e7a921f4" kindref="member">minValue</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1a907b4e8fbb48a46ac5a05f880d72719f" kindref="member">maxValue</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1a1b4858928d23bfd7d5bc557c82a83fb4" kindref="member">isQuantized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1a3bed37153067b625b95acb40b60dbf0b" kindref="member">quantizeStep</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1a0d1194980d44e31b25ef3b4b070d6b5d" kindref="member">sampleType</ref><sp/>=<sp/><ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1abffa9ed50cd756df70fd51f0355f448ca4c74bd2fc96dfe2815623f94b40e5629" kindref="member">OutputDescriptor::FixedSampleRate</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_stepSize)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1add0cbbdfa9c91764037c39365b1d42af" kindref="member">sampleRate</ref><sp/>=<sp/>m_inputSampleRate<sp/>/<sp/>m_stepSize;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1add0cbbdfa9c91764037c39365b1d42af" kindref="member">sampleRate</ref><sp/>=<sp/>m_inputSampleRate<sp/>/<sp/>(<ref refid="class_fixed_tempo_estimator_1_1_d_1ac02826f981736fc2aa5d835fa14e174d" kindref="member">getPreferredBlockSize</ref>()/2);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ab0d7cc6ab19e53b5bd12ee234f549ea3" kindref="member">hasDuration</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>list.push_back(d);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ae2c893ddb1860589517ab7eaa989a18b" kindref="member">identifier</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;acf&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ab824b2b34ee50f897a30901c620e8d87" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Autocorrelation<sp/>Function&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1af9b4fe8f78e7126ead820ba5dc55efd1" kindref="member">description</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Autocorrelation<sp/>of<sp/>onset<sp/>detection<sp/>function&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ae9ccb65f99f477096b65dd031f4c5e31" kindref="member">hasKnownExtents</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1aa057a8833fa037f06ac9f7b85b85d5e4" kindref="member">unit</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>list.push_back(d);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ae2c893ddb1860589517ab7eaa989a18b" kindref="member">identifier</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;filtered_acf&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ab824b2b34ee50f897a30901c620e8d87" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Filtered<sp/>Autocorrelation&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1af9b4fe8f78e7126ead820ba5dc55efd1" kindref="member">description</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Filtered<sp/>autocorrelation<sp/>of<sp/>onset<sp/>detection<sp/>function&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1aa057a8833fa037f06ac9f7b85b85d5e4" kindref="member">unit</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>list.push_back(d);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list;</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="class_fixed_tempo_estimator_1_1_d_1af0fcad4493650728babb7e341963c91d" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1_1_d_1af0fcad4493650728babb7e341963c91d" kindref="member">FixedTempoEstimator::D::initialise</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stepSize,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>blockSize)</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>m_stepSize<sp/>=<sp/>stepSize;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>m_blockSize<sp/>=<sp/>blockSize;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dfLengthSecs<sp/>=<sp/>m_maxdflen;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>m_dfsize<sp/>=<sp/>(dfLengthSecs<sp/>*<sp/>m_inputSampleRate)<sp/>/<sp/>m_stepSize;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>m_priorMagnitudes<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[m_blockSize/2];</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>m_df<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[m_dfsize];</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>m_blockSize/2;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_priorMagnitudes[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>m_dfsize;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_df[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>m_n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="class_fixed_tempo_estimator_1_1_d_1af5ac8147bfe79371d00aba8a19c2f8fd" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1_1_d_1af5ac8147bfe79371d00aba8a19c2f8fd" kindref="member">FixedTempoEstimator::D::reset</ref>()</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_priorMagnitudes)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>m_blockSize/2;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_priorMagnitudes[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>m_dfsize;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_df[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>m_r;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>m_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>m_fr;<sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>m_t;<sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>m_t<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>m_n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>m_start<sp/>=<sp/><ref refid="midimgr_8c_1ab87d1fc59ae057ffc3c23de944bc6c4a" kindref="member">RealTime::zeroTime</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lasttime<sp/>=<sp/><ref refid="midimgr_8c_1ab87d1fc59ae057ffc3c23de944bc6c4a" kindref="member">RealTime::zeroTime</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">FixedTempoEstimator::FeatureSet</ref></highlight></codeline>
<codeline lineno="303" refid="class_fixed_tempo_estimator_1_1_d_1a7fac74fc9fc54f436408705d1e125e20" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1_1_d_1a7fac74fc9fc54f436408705d1e125e20" kindref="member">FixedTempoEstimator::D::process</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*inputBuffers,<sp/><ref refid="struct_vamp_1_1_real_time" kindref="compound">RealTime</ref><sp/>ts)</highlight></codeline>
<codeline lineno="304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">FeatureSet</ref><sp/><ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_stepSize<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>FixedTempoEstimator::process:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FixedTempoEstimator<sp/>has<sp/>not<sp/>been<sp/>initialised&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_n<sp/>==<sp/>0)<sp/>m_start<sp/>=<sp/>ts;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lasttime<sp/>=<sp/>ts;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_n<sp/>==<sp/>m_dfsize)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>seen<sp/>enough<sp/>input,<sp/>do<sp/>the<sp/>estimation<sp/>and<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calculate();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs<sp/>=<sp/>assembleFeatures();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++m_n;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>seen<sp/>more<sp/>than<sp/>enough,<sp/>just<sp/>discard<sp/>and<sp/>return!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_n<sp/>&gt;<sp/>m_dfsize)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">FeatureSet</ref>();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m_df<sp/>will<sp/>contain<sp/>an<sp/>onset<sp/>detection<sp/>function<sp/>based<sp/>on<sp/>the<sp/>rise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>overall<sp/>power<sp/>from<sp/>one<sp/>spectral<sp/>frame<sp/>to<sp/>the<sp/>next<sp/>--</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>simplistic<sp/>but<sp/>reasonably<sp/>effective<sp/>for<sp/>our<sp/>purposes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>1;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>m_blockSize/2;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="vector-gen_8c_1a5f5a64ef503db0fc824df8320929b126" kindref="member">real</ref><sp/>=<sp/>inputBuffers[0][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>*2];</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>imag<sp/>=<sp/>inputBuffers[0][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>*2<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sqrmag<sp/>=<sp/>real<sp/>*<sp/>real<sp/>+<sp/>imag<sp/>*<sp/>imag;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>+=<sp/>fabsf(sqrmag<sp/>-<sp/>m_priorMagnitudes[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_priorMagnitudes[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>sqrmag;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>m_df[m_n]<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_n;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref>;</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">FixedTempoEstimator::FeatureSet</ref></highlight></codeline>
<codeline lineno="352" refid="class_fixed_tempo_estimator_1_1_d_1a7f9c3603bb3374d6936885010dbdd82b" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1_1_d_1a7f9c3603bb3374d6936885010dbdd82b" kindref="member">FixedTempoEstimator::D::getRemainingFeatures</ref>()</highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">FeatureSet</ref><sp/><ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_n<sp/>&gt;<sp/>m_dfsize)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>calculate();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>fs<sp/>=<sp/>assembleFeatures();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_n;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal">FixedTempoEstimator::D::lag2tempo(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lag)</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>60.f<sp/>/<sp/>((lag<sp/>*<sp/>m_stepSize)<sp/>/<sp/>m_inputSampleRate);</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal">FixedTempoEstimator::D::tempo2lag(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ab60065e3a97916e09b76879be6be733f" kindref="member">tempo</ref>)</highlight></codeline>
<codeline lineno="370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((60.<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>/<sp/>tempo)<sp/>*<sp/>m_inputSampleRate)<sp/>/<sp/>m_stepSize;</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal">FixedTempoEstimator::D::calculate()</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_r)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FixedTempoEstimator::calculate:<sp/>calculation<sp/>already<sp/>happened?&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_n<sp/>&lt;<sp/>m_dfsize<sp/>/<sp/>9<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_n<sp/>&lt;<sp/>(1.0<sp/>*<sp/>m_inputSampleRate)<sp/>/<sp/>m_stepSize)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>1<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FixedTempoEstimator::calculate:<sp/>Input<sp/>is<sp/>too<sp/>short&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>takes<sp/>m_df<sp/>(the<sp/>detection<sp/>function<sp/>array<sp/>filled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>out<sp/>in<sp/>process())<sp/>and<sp/>calculates<sp/>m_r<sp/>(the<sp/>raw<sp/>autocorrelation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>m_fr<sp/>(the<sp/>filtered<sp/>autocorrelation<sp/>from<sp/>whose<sp/>peaks<sp/>tempo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>estimates<sp/>will<sp/>be<sp/>taken).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>m_n;<sp/></highlight><highlight class="comment">//<sp/>length<sp/>of<sp/>actual<sp/>df<sp/>array<sp/>(m_dfsize<sp/>is<sp/>the<sp/>theoretical<sp/>max)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>m_r<sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[n/2];<sp/></highlight><highlight class="comment">//<sp/>raw<sp/>autocorrelation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[n/2];<sp/></highlight><highlight class="comment">//<sp/>filtered<sp/>autocorrelation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>m_t<sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[n/2];<sp/></highlight><highlight class="comment">//<sp/>averaged<sp/>tempo<sp/>estimate<sp/>for<sp/>each<sp/>lag<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>n/2;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_r[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/><sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fr[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_t[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/><sp/>=<sp/>lag2tempo(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>raw<sp/>autocorrelation<sp/>of<sp/>the<sp/>detection<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>n/2;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;<sp/>j<sp/>&lt;<sp/>n;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_r[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+=<sp/>m_df[j]<sp/>*<sp/>m_df[j<sp/>-<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_r[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>/=<sp/>n<sp/>-<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Filter<sp/>the<sp/>autocorrelation<sp/>and<sp/>average<sp/>out<sp/>the<sp/>tempo<sp/>estimates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>related[]<sp/>=<sp/>{<sp/>0.5,<sp/>2,<sp/>4,<sp/>8<sp/>};</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>1;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>n/2-1;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fr[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>m_r[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>div<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(related)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(related[0]));<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>an<sp/>obvious<sp/>peak<sp/>at<sp/>each<sp/>metrically<sp/>related<sp/>lag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k0<sp/>=<sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>*<sp/>related[j]<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k0<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>k0<sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(n/2))<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kmax<sp/>=<sp/>0,<sp/>kmin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kvmax<sp/>=<sp/>0,<sp/>kvmin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>have<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>=<sp/>k0<sp/>-<sp/>1;<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>&lt;=<sp/>k0<sp/>+<sp/>1;<sp/>++<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&lt;<sp/>0<sp/>||<sp/>k<sp/>&gt;=<sp/>n/2)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!have<sp/>||<sp/>(m_r[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>&gt;<sp/>kvmax))<sp/>{<sp/>kmax<sp/>=<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;<sp/>kvmax<sp/>=<sp/>m_r[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];<sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!have<sp/>||<sp/>(m_r[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>&lt;<sp/>kvmin))<sp/>{<sp/>kmin<sp/>=<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;<sp/>kvmin<sp/>=<sp/>m_r[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];<sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Boost<sp/>the<sp/>original<sp/>lag<sp/>according<sp/>to<sp/>the<sp/>strongest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>found<sp/>close<sp/>to<sp/>this<sp/>related<sp/>lag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fr[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+=<sp/>m_r[kmax]<sp/>/<sp/>5;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((kmax<sp/>==<sp/>0<sp/>||<sp/>m_r[kmax]<sp/>&gt;<sp/>m_r[kmax-1])<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(kmax<sp/>==<sp/>n/2-1<sp/>||<sp/>m_r[kmax]<sp/>&gt;<sp/>m_r[kmax+1])<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kvmax<sp/>&gt;<sp/>kvmin<sp/>*<sp/>1.05)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>strongest<sp/>value<sp/>close<sp/>to<sp/>the<sp/>related<sp/>lag<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>also<sp/>a<sp/>pretty<sp/>good<sp/>looking<sp/>peak,<sp/>so<sp/>use<sp/>it<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>improve<sp/>our<sp/>tempo<sp/>estimate<sp/>for<sp/>the<sp/>original<sp/>lag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_t[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>m_t[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+<sp/>lag2tempo(kmax)<sp/>*<sp/>related[j];</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++div;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_t[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>/=<sp/>div;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finally<sp/>apply<sp/>a<sp/>primitive<sp/>perceptual<sp/>weighting<sp/>(to<sp/>prefer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tempi<sp/>of<sp/>around<sp/>120-130)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lspdata_8c_1a188f5f4011d6169f76ee43763c198076" kindref="member">weight</ref><sp/>=<sp/>1.f<sp/>-<sp/>fabsf(128.<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>-<sp/>lag2tempo(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>))<sp/>*<sp/>0.005;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weight<sp/>&lt;<sp/>0.<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>)<sp/>weight<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight<sp/>=<sp/>weight<sp/>*<sp/>weight<sp/>*<sp/><ref refid="lspdata_8c_1a188f5f4011d6169f76ee43763c198076" kindref="member">weight</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fr[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+=<sp/>m_fr[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>*<sp/>(weight<sp/>/<sp/>3);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">FixedTempoEstimator::FeatureSet</ref></highlight></codeline>
<codeline lineno="481"><highlight class="normal">FixedTempoEstimator::D::assembleFeatures()</highlight></codeline>
<codeline lineno="482"><highlight class="normal">{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">FeatureSet</ref><sp/><ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_r)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref>;<sp/></highlight><highlight class="comment">//<sp/>No<sp/>autocorrelation:<sp/>no<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vamp_1_1_plugin_1_1_feature" kindref="compound">Feature</ref><sp/><ref refid="namespacewaflib_1_1_task_gen_1a839f18f16539f3131cbe573262099bf1" kindref="member">feature</ref>;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a98907091d0b6a589720ae35ae588a82b" kindref="member">hasTimestamp</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a33686757bd4481c72494122e9bfb9fba" kindref="member">hasDuration</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a8eb1fb35f73b247ed13de9527c18f036" kindref="member">label</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a60b9f3057386820dbcaec0eb1189ce71" kindref="member">values</ref>.clear();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a60b9f3057386820dbcaec0eb1189ce71" kindref="member">values</ref>.push_back(0.<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>[40];</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>m_n;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>n;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>detection<sp/>function<sp/>in<sp/>the<sp/>DF<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1acaa605f36839c07e76f4882f5e22d8d7" kindref="member">timestamp</ref><sp/>=<sp/>m_start<sp/>+</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RealTime::frame2RealTime(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>*<sp/>m_stepSize,<sp/>m_inputSampleRate);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a60b9f3057386820dbcaec0eb1189ce71" kindref="member">values</ref>[0]<sp/>=<sp/>m_df[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a8eb1fb35f73b247ed13de9527c18f036" kindref="member">label</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs[DFOutput].push_back(feature);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>1;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>n/2;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>raw<sp/>autocorrelation<sp/>in<sp/>the<sp/>ACF<sp/>output,<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>labelled<sp/>according<sp/>to<sp/>its<sp/>corresponding<sp/>tempo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1acaa605f36839c07e76f4882f5e22d8d7" kindref="member">timestamp</ref><sp/>=<sp/>m_start<sp/>+</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RealTime::frame2RealTime(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>*<sp/>m_stepSize,<sp/>m_inputSampleRate);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a60b9f3057386820dbcaec0eb1189ce71" kindref="member">values</ref>[0]<sp/>=<sp/>m_r[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buffer,<sp/></highlight><highlight class="stringliteral">&quot;%.1f<sp/>bpm&quot;</highlight><highlight class="normal">,<sp/>lag2tempo(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>));</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>==<sp/>n/2-1)<sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a8eb1fb35f73b247ed13de9527c18f036" kindref="member">label</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a8eb1fb35f73b247ed13de9527c18f036" kindref="member">label</ref><sp/>=<sp/><ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs[ACFOutput].push_back(feature);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t0<sp/>=<sp/>m_minbpm;<sp/></highlight><highlight class="comment">//<sp/>our<sp/>minimum<sp/>detected<sp/>tempo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/>m_maxbpm;<sp/></highlight><highlight class="comment">//<sp/>our<sp/>maximum<sp/>detected<sp/>tempo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p0<sp/>=<sp/>tempo2lag(t1);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1ad86bc04f7f667b1bdced8a0f06d96861" kindref="member">p1</ref><sp/>=<sp/>tempo2lag(t0);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;float,<sp/>int&gt;<sp/>candidates;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>p0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;=<sp/>p1<sp/>&amp;&amp;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>+1<sp/>&lt;<sp/>n/2;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_fr[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>&gt;<sp/>m_fr[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>-1]<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fr[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>&gt;<sp/>m_fr[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>+1])<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>peak<sp/>in<sp/>the<sp/>filtered<sp/>autocorrelation:<sp/>stick</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>into<sp/>the<sp/>map<sp/>from<sp/>filtered<sp/>autocorrelation<sp/>to<sp/>lag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>index<sp/>--<sp/>this<sp/>sorts<sp/>our<sp/>peaks<sp/>by<sp/>filtered<sp/>acf<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidates[m_fr[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]]<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>return<sp/>the<sp/>filtered<sp/>autocorrelation<sp/>in<sp/>its<sp/>own<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1acaa605f36839c07e76f4882f5e22d8d7" kindref="member">timestamp</ref><sp/>=<sp/>m_start<sp/>+</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RealTime::frame2RealTime(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>*<sp/>m_stepSize,<sp/>m_inputSampleRate);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a60b9f3057386820dbcaec0eb1189ce71" kindref="member">values</ref>[0]<sp/>=<sp/>m_fr[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buffer,<sp/></highlight><highlight class="stringliteral">&quot;%.1f<sp/>bpm&quot;</highlight><highlight class="normal">,<sp/>lag2tempo(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>));</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>==<sp/>p1<sp/>||<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>==<sp/>n/2-2)<sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a8eb1fb35f73b247ed13de9527c18f036" kindref="member">label</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a8eb1fb35f73b247ed13de9527c18f036" kindref="member">label</ref><sp/>=<sp/><ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs[FilteredACFOutput].push_back(feature);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(candidates.empty())<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>tempo<sp/>candidates!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref>;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a98907091d0b6a589720ae35ae588a82b" kindref="member">hasTimestamp</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1acaa605f36839c07e76f4882f5e22d8d7" kindref="member">timestamp</ref><sp/>=<sp/>m_start;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a33686757bd4481c72494122e9bfb9fba" kindref="member">hasDuration</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1af687c0a7fe041757e922ec296862b115" kindref="member">duration</ref><sp/>=<sp/>m_lasttime<sp/>-<sp/>m_start;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>map<sp/>contains<sp/>only<sp/>peaks<sp/>and<sp/>is<sp/>sorted<sp/>by<sp/>filtered<sp/>acf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>value,<sp/>so<sp/>the<sp/>final<sp/>element<sp/>in<sp/>it<sp/>is<sp/>our<sp/>&quot;best&quot;<sp/>tempo<sp/>guess</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;float,<sp/>int&gt;::const_iterator<sp/>ci<sp/>=<sp/>candidates.end();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>--ci;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxpi<sp/>=<sp/>ci-&gt;second;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_t[maxpi]<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>lag<sp/>has<sp/>an<sp/>adjusted<sp/>tempo<sp/>from<sp/>the<sp/>averaging<sp/>process:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a60b9f3057386820dbcaec0eb1189ce71" kindref="member">values</ref>[0]<sp/>=<sp/>m_t[maxpi];</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shouldn&apos;t<sp/>happen<sp/>--<sp/>it<sp/>would<sp/>imply<sp/>that<sp/>this<sp/>high<sp/>value<sp/>was</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>a<sp/>peak!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a60b9f3057386820dbcaec0eb1189ce71" kindref="member">values</ref>[0]<sp/>=<sp/>lag2tempo(maxpi);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>No<sp/>stored<sp/>tempo<sp/>for<sp/>index<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>maxpi<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buffer,<sp/></highlight><highlight class="stringliteral">&quot;%.1f<sp/>bpm&quot;</highlight><highlight class="normal">,<sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a60b9f3057386820dbcaec0eb1189ce71" kindref="member">values</ref>[0]);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a8eb1fb35f73b247ed13de9527c18f036" kindref="member">label</ref><sp/>=<sp/><ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>best<sp/>tempo<sp/>in<sp/>the<sp/>main<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>fs[TempoOutput].push_back(feature);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>return<sp/>the<sp/>other<sp/>estimates<sp/>(up<sp/>to<sp/>the<sp/>arbitrarily<sp/>chosen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>10<sp/>of<sp/>them)<sp/>in<sp/>the<sp/>candidates<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a60b9f3057386820dbcaec0eb1189ce71" kindref="member">values</ref>.clear();</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a8eb1fb35f73b247ed13de9527c18f036" kindref="member">label</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a60b9f3057386820dbcaec0eb1189ce71" kindref="member">values</ref>.size()<sp/>&lt;<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_t[ci-&gt;second]<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a60b9f3057386820dbcaec0eb1189ce71" kindref="member">values</ref>.push_back(m_t[ci-&gt;second]);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a60b9f3057386820dbcaec0eb1189ce71" kindref="member">values</ref>.push_back(lag2tempo(ci-&gt;second));</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ci<sp/>==<sp/>candidates.begin())<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--ci;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>fs[CandidatesOutput].push_back(feature);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref>;</highlight></codeline>
<codeline lineno="613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617" refid="class_fixed_tempo_estimator_1a3967c189f054f864639837c2519bd64d" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1a3967c189f054f864639837c2519bd64d" kindref="member">FixedTempoEstimator::FixedTempoEstimator</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inputSampleRate)<sp/>:</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_1a1b78c4f46c72ef345ed27f0b9bf20ac9" kindref="member">Plugin</ref>(inputSampleRate),</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_tempo_estimator_1a5e1c9abaf33e9f48eb7d3b48f8af3308" kindref="member">m_d</ref>(new<sp/><ref refid="class_fixed_tempo_estimator_1_1_d" kindref="compound">D</ref>(inputSampleRate))</highlight></codeline>
<codeline lineno="620"><highlight class="normal">{</highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623" refid="class_fixed_tempo_estimator_1a0302c4bfdc163a3d34478cde93c96a53" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1a0302c4bfdc163a3d34478cde93c96a53" kindref="member">FixedTempoEstimator::~FixedTempoEstimator</ref>()</highlight></codeline>
<codeline lineno="624"><highlight class="normal">{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_fixed_tempo_estimator_1a5e1c9abaf33e9f48eb7d3b48f8af3308" kindref="member">m_d</ref>;</highlight></codeline>
<codeline lineno="626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629" refid="class_fixed_tempo_estimator_1ab818edcf1555177d10260e197e3a5e7a" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1ab818edcf1555177d10260e197e3a5e7a" kindref="member">FixedTempoEstimator::getIdentifier</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="630"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;fixedtempo&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635" refid="class_fixed_tempo_estimator_1af9eb6fa8a98aa66b55e64e1795f9405f" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1af9eb6fa8a98aa66b55e64e1795f9405f" kindref="member">FixedTempoEstimator::getName</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="636"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Simple<sp/>Fixed<sp/>Tempo<sp/>Estimator&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641" refid="class_fixed_tempo_estimator_1a06b00853f00c2e78d490697fcd7d1920" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1a06b00853f00c2e78d490697fcd7d1920" kindref="member">FixedTempoEstimator::getDescription</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="642"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Study<sp/>a<sp/>short<sp/>section<sp/>of<sp/>audio<sp/>and<sp/>estimate<sp/>its<sp/>tempo,<sp/>assuming<sp/>the<sp/>tempo<sp/>is<sp/>constant&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647" refid="class_fixed_tempo_estimator_1ae910d1b9250b11097fd6b51cd8285b68" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1ae910d1b9250b11097fd6b51cd8285b68" kindref="member">FixedTempoEstimator::getMaker</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="648"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Vamp<sp/>SDK<sp/>Example<sp/>Plugins&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="650"><highlight class="normal">}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653" refid="class_fixed_tempo_estimator_1ad002fddb3735c2dd7e31e6a9def9949f" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1ad002fddb3735c2dd7e31e6a9def9949f" kindref="member">FixedTempoEstimator::getPluginVersion</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="654"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659" refid="class_fixed_tempo_estimator_1a50c6b64530c84c0707ba3936c5022a48" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1a50c6b64530c84c0707ba3936c5022a48" kindref="member">FixedTempoEstimator::getCopyright</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="660"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Code<sp/>copyright<sp/>2008<sp/>Queen<sp/>Mary,<sp/>University<sp/>of<sp/>London.<sp/><sp/>Freely<sp/>redistributable<sp/>(BSD<sp/>license)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665" refid="class_fixed_tempo_estimator_1ad450bb7e7df559ae3d68dfbfb085676f" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1ad450bb7e7df559ae3d68dfbfb085676f" kindref="member">FixedTempoEstimator::getPreferredStepSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="666"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_fixed_tempo_estimator_1a5e1c9abaf33e9f48eb7d3b48f8af3308" kindref="member">m_d</ref>-&gt;<ref refid="class_fixed_tempo_estimator_1_1_d_1add749be18355ab1ae5c1ccbacfd2e192" kindref="member">getPreferredStepSize</ref>();</highlight></codeline>
<codeline lineno="668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671" refid="class_fixed_tempo_estimator_1a68b8569b71504a0478caf990dbe30683" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1a68b8569b71504a0478caf990dbe30683" kindref="member">FixedTempoEstimator::getPreferredBlockSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="672"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_fixed_tempo_estimator_1a5e1c9abaf33e9f48eb7d3b48f8af3308" kindref="member">m_d</ref>-&gt;<ref refid="class_fixed_tempo_estimator_1_1_d_1ac02826f981736fc2aa5d835fa14e174d" kindref="member">getPreferredBlockSize</ref>();</highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677" refid="class_fixed_tempo_estimator_1aa7500a4ffbc4653baaf5101defdb37f5" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1aa7500a4ffbc4653baaf5101defdb37f5" kindref="member">FixedTempoEstimator::initialise</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>channels,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stepSize,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>blockSize)</highlight></codeline>
<codeline lineno="678"><highlight class="normal">{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channels<sp/>&lt;<sp/><ref refid="class_vamp_1_1_plugin_1a267b42e866df3cf0d190893e8096f525" kindref="member">getMinChannelCount</ref>()<sp/>||</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>channels<sp/>&gt;<sp/><ref refid="class_vamp_1_1_plugin_1a2c5ab12b6fa4847cb244bd1e9cb3ae5e" kindref="member">getMaxChannelCount</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_fixed_tempo_estimator_1a5e1c9abaf33e9f48eb7d3b48f8af3308" kindref="member">m_d</ref>-&gt;<ref refid="class_fixed_tempo_estimator_1_1_d_1af0fcad4493650728babb7e341963c91d" kindref="member">initialise</ref>(channels,<sp/>stepSize,<sp/>blockSize);</highlight></codeline>
<codeline lineno="683"><highlight class="normal">}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686" refid="class_fixed_tempo_estimator_1ac41708397255400c6682fee6c1b3d45f" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1ac41708397255400c6682fee6c1b3d45f" kindref="member">FixedTempoEstimator::reset</ref>()</highlight></codeline>
<codeline lineno="687"><highlight class="normal">{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_fixed_tempo_estimator_1a5e1c9abaf33e9f48eb7d3b48f8af3308" kindref="member">m_d</ref>-&gt;<ref refid="class_fixed_tempo_estimator_1_1_d_1af5ac8147bfe79371d00aba8a19c2f8fd" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_base_1a3b6bb4bbd86affe1ca9deceea1aad4f8" kindref="member">FixedTempoEstimator::ParameterList</ref></highlight></codeline>
<codeline lineno="692" refid="class_fixed_tempo_estimator_1ae157465a4e07d180bab05b5c3a4d8987" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1ae157465a4e07d180bab05b5c3a4d8987" kindref="member">FixedTempoEstimator::getParameterDescriptors</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="693"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_fixed_tempo_estimator_1a5e1c9abaf33e9f48eb7d3b48f8af3308" kindref="member">m_d</ref>-&gt;<ref refid="class_fixed_tempo_estimator_1_1_d_1a06fcf80a9a22c4b90abbc88eb592621a" kindref="member">getParameterDescriptors</ref>();</highlight></codeline>
<codeline lineno="695"><highlight class="normal">}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698" refid="class_fixed_tempo_estimator_1a2030b05fb1228b30ace16200780c9152" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1a2030b05fb1228b30ace16200780c9152" kindref="member">FixedTempoEstimator::getParameter</ref>(<ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="699"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_fixed_tempo_estimator_1a5e1c9abaf33e9f48eb7d3b48f8af3308" kindref="member">m_d</ref>-&gt;<ref refid="class_fixed_tempo_estimator_1_1_d_1a968ef2e555c81e4a3bde89d19fafb31a" kindref="member">getParameter</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704" refid="class_fixed_tempo_estimator_1a8a5a413025384cf451c64d2c2ce13a75" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1a8a5a413025384cf451c64d2c2ce13a75" kindref="member">FixedTempoEstimator::setParameter</ref>(<ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="705"><highlight class="normal">{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_tempo_estimator_1a5e1c9abaf33e9f48eb7d3b48f8af3308" kindref="member">m_d</ref>-&gt;<ref refid="class_fixed_tempo_estimator_1_1_d_1a6cafa64d4cc8aa3556bc0ce6b0c49bc4" kindref="member">setParameter</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="707"><highlight class="normal">}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_1a30f531b8fb69fac41a24e3d2a6a08ed9" kindref="member">FixedTempoEstimator::OutputList</ref></highlight></codeline>
<codeline lineno="710" refid="class_fixed_tempo_estimator_1a83121c205a723fe6297e2bf8870622a4" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1a83121c205a723fe6297e2bf8870622a4" kindref="member">FixedTempoEstimator::getOutputDescriptors</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="711"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_fixed_tempo_estimator_1a5e1c9abaf33e9f48eb7d3b48f8af3308" kindref="member">m_d</ref>-&gt;<ref refid="class_fixed_tempo_estimator_1_1_d_1a7ce98af800f36045a0dae4b1dbed943f" kindref="member">getOutputDescriptors</ref>();</highlight></codeline>
<codeline lineno="713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">FixedTempoEstimator::FeatureSet</ref></highlight></codeline>
<codeline lineno="716" refid="class_fixed_tempo_estimator_1a1cf76b0e55cf4ed3da095cffcdeaec3c" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1a1cf76b0e55cf4ed3da095cffcdeaec3c" kindref="member">FixedTempoEstimator::process</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*inputBuffers,<sp/><ref refid="struct_vamp_1_1_real_time" kindref="compound">RealTime</ref><sp/>ts)</highlight></codeline>
<codeline lineno="717"><highlight class="normal">{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_fixed_tempo_estimator_1a5e1c9abaf33e9f48eb7d3b48f8af3308" kindref="member">m_d</ref>-&gt;<ref refid="class_fixed_tempo_estimator_1_1_d_1a7fac74fc9fc54f436408705d1e125e20" kindref="member">process</ref>(inputBuffers,<sp/>ts);</highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">FixedTempoEstimator::FeatureSet</ref></highlight></codeline>
<codeline lineno="722" refid="class_fixed_tempo_estimator_1a4965cf99be77fc4d1de51e11d83936b0" refkind="member"><highlight class="normal"><ref refid="class_fixed_tempo_estimator_1a4965cf99be77fc4d1de51e11d83936b0" kindref="member">FixedTempoEstimator::getRemainingFeatures</ref>()</highlight></codeline>
<codeline lineno="723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_fixed_tempo_estimator_1a5e1c9abaf33e9f48eb7d3b48f8af3308" kindref="member">m_d</ref>-&gt;<ref refid="class_fixed_tempo_estimator_1_1_d_1a7f9c3603bb3374d6936885010dbdd82b" kindref="member">getRemainingFeatures</ref>();</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/FixedTempoEstimator.cpp"/>
  </compounddef>
</doxygen>
