<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="fftext_8c" kind="file" language="C++">
    <compoundname>fftext.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes refid="fftlib_8h" local="yes">fftlib.h</includes>
    <includes refid="matlib_8h" local="yes">matlib.h</includes>
    <includes refid="fftext_8h" local="yes">fftext.h</includes>
    <incdepgraph>
      <node id="11901">
        <label>fftlib.h</label>
        <link refid="fftlib_8h"/>
      </node>
      <node id="11900">
        <label>stdlib.h</label>
      </node>
      <node id="11899">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c</label>
        <link refid="fftext.c"/>
        <childnode refid="11900" relation="include">
        </childnode>
        <childnode refid="11901" relation="include">
        </childnode>
        <childnode refid="11902" relation="include">
        </childnode>
        <childnode refid="11903" relation="include">
        </childnode>
      </node>
      <node id="11903">
        <label>fftext.h</label>
        <link refid="fftext_8h"/>
      </node>
      <node id="11902">
        <label>matlib.h</label>
        <link refid="matlib_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="fftext_8c_1a3c62569b161f5c82413fd246c836bed9" prot="public" static="yes" mutable="no">
        <type>float *</type>
        <definition>float* UtblArray[8 *sizeof(long)]</definition>
        <argsstring>[8 *sizeof(long)]</argsstring>
        <name>UtblArray</name>
        <initializer>= {0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,
									0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" line="17" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fftext_8c_1a05e26cce1a0ee132d4c5ced8d7b35d24" prot="public" static="yes" mutable="no">
        <type>short *</type>
        <definition>short* BRLowArray[8 *sizeof(long)/2]</definition>
        <argsstring>[8 *sizeof(long)/2]</argsstring>
        <name>BRLowArray</name>
        <initializer>= {0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" line="19" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="fftext_8c_1a6df620a166f1f7e9f5cd756d3adbc7ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int fftInit</definition>
        <argsstring>(long M)</argsstring>
        <name>fftInit</name>
        <param>
          <type>long</type>
          <declname>M</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" line="21" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" bodystart="21" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="fftext_8c_1a7f453092a717081e33e84f2aa2beaa57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void fftFree</definition>
        <argsstring>()</argsstring>
        <name>fftFree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" line="65" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" bodystart="65" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="fftext_8c_1aa8d24377b6669b6fabdf8c81a4ce7260" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void ffts</definition>
        <argsstring>(float *data, long M, long Rows)</argsstring>
        <name>ffts</name>
        <param>
          <type>float *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>M</declname>
        </param>
        <param>
          <type>long</type>
          <declname>Rows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" line="87" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" bodystart="87" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="fftext_8c_1a31879ac870f1e89c81a1e914de2ea1bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void iffts</definition>
        <argsstring>(float *data, long M, long Rows)</argsstring>
        <name>iffts</name>
        <param>
          <type>float *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>M</declname>
        </param>
        <param>
          <type>long</type>
          <declname>Rows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" line="98" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" bodystart="98" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="fftext_8c_1af10a67ac76af119dd518bc569b289d72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void rffts</definition>
        <argsstring>(float *data, long M, long Rows)</argsstring>
        <name>rffts</name>
        <param>
          <type>float *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>M</declname>
        </param>
        <param>
          <type>long</type>
          <declname>Rows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" line="109" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" bodystart="109" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="fftext_8c_1a5c361784476375bff6cb785324b2acb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void riffts</definition>
        <argsstring>(float *data, long M, long Rows)</argsstring>
        <name>riffts</name>
        <param>
          <type>float *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>M</declname>
        </param>
        <param>
          <type>long</type>
          <declname>Rows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" line="125" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" bodystart="125" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="fftext_8c_1a20e29c0dbef4cbf44e70fe1ee43d0c7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void rspectprod</definition>
        <argsstring>(float *data1, float *data2, float *outdata, long N)</argsstring>
        <name>rspectprod</name>
        <param>
          <type>float *</type>
          <declname>data1</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>data2</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>outdata</declname>
        </param>
        <param>
          <type>long</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" line="138" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" bodystart="138" bodyend="156"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>extends<sp/>the<sp/>fftlib<sp/>with<sp/>calls<sp/>to<sp/>maintain<sp/>the<sp/>cosine<sp/>and<sp/>bit<sp/>reversed<sp/>tables</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>you<sp/>(including<sp/>mallocs<sp/>and<sp/>free&apos;s).<sp/><sp/>Call<sp/>the<sp/>init<sp/>routine<sp/>for<sp/>each<sp/>fft<sp/>size<sp/>you<sp/>will</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>be<sp/>using.<sp/><sp/>Then<sp/>you<sp/>can<sp/>call<sp/>the<sp/>fft<sp/>routines<sp/>below<sp/>which<sp/>will<sp/>make<sp/>the<sp/>fftlib<sp/>library<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>call<sp/>with<sp/>the<sp/>appropriate<sp/>tables<sp/>passed.<sp/><sp/>When<sp/>you<sp/>are<sp/>done<sp/>with<sp/>all<sp/>fft&apos;s<sp/>you<sp/>can<sp/>call<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>fftfree<sp/>to<sp/>release<sp/>the<sp/>storage<sp/>for<sp/>the<sp/>tables.<sp/><sp/>Note<sp/>that<sp/>you<sp/>can<sp/>call<sp/>fftinit<sp/>repeatedly</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>with<sp/>the<sp/>same<sp/>size,<sp/>the<sp/>extra<sp/>calls<sp/>will<sp/>be<sp/>ignored.<sp/>So,<sp/>you<sp/>could<sp/>make<sp/>a<sp/>macro<sp/>to<sp/>call</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>fftInit<sp/>every<sp/>time<sp/>you<sp/>call<sp/>ffts.<sp/>For<sp/>example<sp/>you<sp/>could<sp/>have<sp/>someting<sp/>like:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FFT(a,n)<sp/>if(!fftInit(roundtol(LOG2(n))))<sp/>ffts(a,roundtol(LOG2(n)),1);else<sp/>printf(&quot;fft<sp/>error\n&quot;);</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fftlib_8h" kindref="compound">fftlib.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="matlib_8h" kindref="compound">matlib.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fftext_8h" kindref="compound">fftext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pointers<sp/>to<sp/>storage<sp/>of<sp/>Utbl&apos;s<sp/>and<sp/><sp/>BRLow&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*UtblArray[8*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long)]<sp/>=<sp/>{0,0,0,0,0,0,0,0,<sp/>0,0,0,0,0,0,0,0,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,0,0,0,0,0,0,0,<sp/>0,0,0,0,0,0,0,0};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*BRLowArray[8*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long)/2]<sp/><sp/>=<sp/>{0,0,0,0,0,0,0,0,<sp/>0,0,0,0,0,0,0,0};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="fftext_8h_1a6df620a166f1f7e9f5cd756d3adbc7ff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fftext_8c_1a6df620a166f1f7e9f5cd756d3adbc7ff" kindref="member">fftInit</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1aad05f78187c942f9dd521605fa81f1ba" kindref="member">M</ref>){</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>malloc<sp/>and<sp/>init<sp/>cosine<sp/>and<sp/>bit<sp/>reversed<sp/>tables<sp/>for<sp/>a<sp/>given<sp/>size<sp/>fft,<sp/>ifft,<sp/>rfft,<sp/>rifft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>INPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>M<sp/>=<sp/>log2<sp/>of<sp/>fft<sp/>size<sp/>(ex<sp/>M=10<sp/>for<sp/>1024<sp/>point<sp/>fft)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>OUTPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>private<sp/>cosine<sp/>and<sp/>bit<sp/>reversed<sp/>tables<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>theError<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>I<sp/>did<sp/>NOT<sp/>test<sp/>cases<sp/>with<sp/>M&gt;27<sp/>***/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((M<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(M<sp/>&lt;<sp/>8*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))){</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>theError<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UtblArray[M]<sp/>==<sp/>0){<sp/></highlight><highlight class="comment">//<sp/>have<sp/>we<sp/>not<sp/>inited<sp/>this<sp/>size<sp/>fft<sp/>yet?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>cos<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UtblArray[<ref refid="convtest_8m_1aad05f78187c942f9dd521605fa81f1ba" kindref="member">M</ref>]<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)<sp/>malloc(<sp/>(<ref refid="fftlib_8h_1a674ced03c67caad8ef69947e13fcb2bc" kindref="member">POW2</ref>(M)/4+1)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float)<sp/>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UtblArray[M]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theError<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fftlib_8c_1a85d535c39d010bbc810f2a622993a32c" kindref="member">fftCosInit</ref>(M,<sp/>UtblArray[M]);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(M<sp/>&gt;<sp/>1){</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BRLowArray[M/2]<sp/>==<sp/>0){<sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>bit<sp/>reversed<sp/>table<sp/>for<sp/>cmplx<sp/>fft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BRLowArray[M/2]<sp/>=<sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)<sp/>malloc(<sp/><ref refid="fftlib_8h_1a674ced03c67caad8ef69947e13fcb2bc" kindref="member">POW2</ref>(M/2-1)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(short)<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BRLowArray[M/2]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theError<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fftlib_8c_1ac36af4ba29c36b794db904822ed2c838" kindref="member">fftBRInit</ref>(M,<sp/>BRLowArray[M/2]);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(M<sp/>&gt;<sp/>2){</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BRLowArray[(M-1)/2]<sp/>==<sp/>0){<sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>bit<sp/>reversed<sp/>table<sp/>for<sp/>real<sp/>fft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BRLowArray[(M-1)/2]<sp/>=<sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)<sp/>malloc(<sp/><ref refid="fftlib_8h_1a674ced03c67caad8ef69947e13fcb2bc" kindref="member">POW2</ref>((M-1)/2-1)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BRLowArray[(M-1)/2]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theError<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fftlib_8c_1ac36af4ba29c36b794db904822ed2c838" kindref="member">fftBRInit</ref>(M-1,<sp/>BRLowArray[(M-1)/2]);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>theError;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="fftext_8h_1a7f453092a717081e33e84f2aa2beaa57" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fftext_8c_1a7f453092a717081e33e84f2aa2beaa57" kindref="member">fftFree</ref>(){</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>release<sp/>storage<sp/>for<sp/>all<sp/>private<sp/>cosine<sp/>and<sp/>bit<sp/>reversed<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1aec25a56c89da9b37e346ecc7a8fc68e5" kindref="member">i1</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i1=8*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)/2-1;<sp/>i1&gt;=0;<sp/>i1--){</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BRLowArray[i1]<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(BRLowArray[i1]);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BRLowArray[<ref refid="convtest_8m_1aec25a56c89da9b37e346ecc7a8fc68e5" kindref="member">i1</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i1=8*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)-1;<sp/>i1&gt;=0;<sp/>i1--){</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UtblArray[i1]<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(UtblArray[i1]);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UtblArray[<ref refid="convtest_8m_1aec25a56c89da9b37e346ecc7a8fc68e5" kindref="member">i1</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>The<sp/>following<sp/>calls<sp/>are<sp/>easier<sp/>than<sp/>calling<sp/>to<sp/>fftlib<sp/>directly.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>Just<sp/>make<sp/>sure<sp/>fftlib<sp/>has<sp/>been<sp/>called<sp/>for<sp/>each<sp/>M<sp/>first.</highlight></codeline>
<codeline lineno="85"><highlight class="comment">**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="fftext_8h_1aa8d24377b6669b6fabdf8c81a4ce7260" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fftext_8c_1aa8d24377b6669b6fabdf8c81a4ce7260" kindref="member">ffts</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1aad05f78187c942f9dd521605fa81f1ba" kindref="member">M</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Rows){</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Compute<sp/>in-place<sp/>complex<sp/>fft<sp/>on<sp/>the<sp/>rows<sp/>of<sp/>the<sp/>input<sp/>array<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>INPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*ioptr<sp/>=<sp/>input<sp/>data<sp/>array<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>M<sp/>=<sp/>log2<sp/>of<sp/>fft<sp/>size<sp/>(ex<sp/>M=10<sp/>for<sp/>1024<sp/>point<sp/>fft)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Rows<sp/>=<sp/>number<sp/>of<sp/>rows<sp/>in<sp/>ioptr<sp/>array<sp/>(use<sp/>1<sp/>for<sp/>Rows<sp/>for<sp/>a<sp/>single<sp/>fft)<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>OUTPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*ioptr<sp/>=<sp/>output<sp/>data<sp/>array<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fftlib_8c_1a5df48c0f71e4d4ef9ba549a517d32e59" kindref="member">ffts1</ref>(data,<sp/>M,<sp/>Rows,<sp/>UtblArray[M],<sp/>BRLowArray[M/2]);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="fftext_8h_1a31879ac870f1e89c81a1e914de2ea1bc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fftext_8c_1a31879ac870f1e89c81a1e914de2ea1bc" kindref="member">iffts</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1aad05f78187c942f9dd521605fa81f1ba" kindref="member">M</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Rows){</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Compute<sp/>in-place<sp/>inverse<sp/>complex<sp/>fft<sp/>on<sp/>the<sp/>rows<sp/>of<sp/>the<sp/>input<sp/>array<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>INPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*ioptr<sp/>=<sp/>input<sp/>data<sp/>array<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>M<sp/>=<sp/>log2<sp/>of<sp/>fft<sp/>size<sp/>(ex<sp/>M=10<sp/>for<sp/>1024<sp/>point<sp/>fft)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Rows<sp/>=<sp/>number<sp/>of<sp/>rows<sp/>in<sp/>ioptr<sp/>array<sp/>(use<sp/>1<sp/>for<sp/>Rows<sp/>for<sp/>a<sp/>single<sp/>fft)<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>OUTPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*ioptr<sp/>=<sp/>output<sp/>data<sp/>array<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fftlib_8c_1a362a36b7b89d5d8b854a8ca79c509b1d" kindref="member">iffts1</ref>(data,<sp/>M,<sp/>Rows,<sp/>UtblArray[M],<sp/>BRLowArray[M/2]);</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="fftext_8h_1af10a67ac76af119dd518bc569b289d72" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fftext_8c_1af10a67ac76af119dd518bc569b289d72" kindref="member">rffts</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1aad05f78187c942f9dd521605fa81f1ba" kindref="member">M</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Rows){</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Compute<sp/>in-place<sp/>real<sp/>fft<sp/>on<sp/>the<sp/>rows<sp/>of<sp/>the<sp/>input<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>result<sp/>is<sp/>the<sp/>complex<sp/>spectra<sp/>of<sp/>the<sp/>positive<sp/>frequencies<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>except<sp/>the<sp/>location<sp/>for<sp/>the<sp/>first<sp/>complex<sp/>number<sp/>contains<sp/>the<sp/>real<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>values<sp/>for<sp/>DC<sp/>and<sp/>Nyquest<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>See<sp/>rspectprod<sp/>for<sp/>multiplying<sp/>two<sp/>of<sp/>these<sp/>spectra<sp/>together-<sp/>ex.<sp/>for<sp/>fast<sp/>convolution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>INPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*ioptr<sp/>=<sp/>real<sp/>input<sp/>data<sp/>array<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>M<sp/>=<sp/>log2<sp/>of<sp/>fft<sp/>size<sp/>(ex<sp/>M=10<sp/>for<sp/>1024<sp/>point<sp/>fft)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Rows<sp/>=<sp/>number<sp/>of<sp/>rows<sp/>in<sp/>ioptr<sp/>array<sp/>(use<sp/>1<sp/>for<sp/>Rows<sp/>for<sp/>a<sp/>single<sp/>fft)<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>OUTPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*ioptr<sp/>=<sp/>output<sp/>data<sp/>array<sp/><sp/><sp/>in<sp/>the<sp/>following<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Re(x[0]),<sp/>Re(x[N/2]),<sp/>Re(x[1]),<sp/>Im(x[1]),<sp/>Re(x[2]),<sp/>Im(x[2]),<sp/>...<sp/>Re(x[N/2-1]),<sp/>Im(x[N/2-1]).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fftlib_8c_1abb23d0d38a4de7a1c2ec0852e18e04ad" kindref="member">rffts1</ref>(data,<sp/>M,<sp/>Rows,<sp/>UtblArray[M],<sp/>BRLowArray[(M-1)/2]);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="fftext_8h_1a5c361784476375bff6cb785324b2acb9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fftext_8c_1a5c361784476375bff6cb785324b2acb9" kindref="member">riffts</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1aad05f78187c942f9dd521605fa81f1ba" kindref="member">M</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Rows){</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Compute<sp/>in-place<sp/>real<sp/>ifft<sp/>on<sp/>the<sp/>rows<sp/>of<sp/>the<sp/>input<sp/>array<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>data<sp/>order<sp/>as<sp/>from<sp/>rffts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>INPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*ioptr<sp/>=<sp/>input<sp/>data<sp/>array<sp/>in<sp/>the<sp/>following<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>M<sp/>=<sp/>log2<sp/>of<sp/>fft<sp/>size<sp/>(ex<sp/>M=10<sp/>for<sp/>1024<sp/>point<sp/>fft)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Re(x[0]),<sp/>Re(x[N/2]),<sp/>Re(x[1]),<sp/>Im(x[1]),<sp/>Re(x[2]),<sp/>Im(x[2]),<sp/>...<sp/>Re(x[N/2-1]),<sp/>Im(x[N/2-1]).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Rows<sp/>=<sp/>number<sp/>of<sp/>rows<sp/>in<sp/>ioptr<sp/>array<sp/>(use<sp/>1<sp/>for<sp/>Rows<sp/>for<sp/>a<sp/>single<sp/>fft)<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>OUTPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*ioptr<sp/>=<sp/>real<sp/>output<sp/>data<sp/>array<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fftlib_8c_1a46e369d45c1253332f11d5f2fead4d23" kindref="member">riffts1</ref>(data,<sp/>M,<sp/>Rows,<sp/>UtblArray[M],<sp/>BRLowArray[(M-1)/2]);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="fftext_8h_1a20e29c0dbef4cbf44e70fe1ee43d0c7e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fftext_8c_1a20e29c0dbef4cbf44e70fe1ee43d0c7e" kindref="member">rspectprod</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*data1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*data2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outdata,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>){</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>multiplying<sp/>a<sp/>pair<sp/>of<sp/>spectra<sp/>from<sp/>rfft<sp/>care<sp/>must<sp/>be<sp/>taken<sp/>to<sp/>multiply<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>two<sp/>real<sp/>values<sp/>seperately<sp/>from<sp/>the<sp/>complex<sp/>ones.<sp/>This<sp/>routine<sp/>does<sp/>it<sp/>correctly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>result<sp/>can<sp/>be<sp/>stored<sp/>in-place<sp/>over<sp/>one<sp/>of<sp/>the<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>INPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*data1<sp/>=<sp/>input<sp/>data<sp/>array<sp/><sp/><sp/><sp/>first<sp/>spectra<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*data2<sp/>=<sp/>input<sp/>data<sp/>array<sp/><sp/><sp/><sp/>second<sp/>spectra<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>N<sp/>=<sp/>fft<sp/>input<sp/>size<sp/>for<sp/>both<sp/>data1<sp/>and<sp/>data2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>OUTPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*outdata<sp/>=<sp/>output<sp/>data<sp/>array<sp/>spectra<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(N&gt;1){</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>outdata[0]<sp/>=<sp/>data1[0]<sp/>*<sp/>data2[0];<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>multiply<sp/>the<sp/>zero<sp/>freq<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>outdata[1]<sp/>=<sp/>data1[1]<sp/>*<sp/>data2[1];<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>multiply<sp/>the<sp/>nyquest<sp/>freq<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="matlib_8c_1aab32aecec198c7d0c631de4b82a2ad3e" kindref="member">cvprod</ref>(data1<sp/>+<sp/>2,<sp/>data2<sp/>+<sp/>2,<sp/>outdata<sp/>+<sp/>2,<sp/>N/2-1);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>multiply<sp/>the<sp/>other<sp/>positive<sp/>freq<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>outdata[0]<sp/>=<sp/>data1[0]<sp/>*<sp/>data2[0];</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c"/>
  </compounddef>
</doxygen>
