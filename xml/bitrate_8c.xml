<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="bitrate_8c" kind="file" language="C++">
    <compoundname>bitrate.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="ogg_8h" local="no">ogg/ogg.h</includes>
    <includes refid="codec_8h" local="yes">vorbis/codec.h</includes>
    <includes refid="codec__internal_8h" local="yes">codec_internal.h</includes>
    <includes refid="os_8h" local="yes">os.h</includes>
    <includes refid="misc_8h" local="yes">misc.h</includes>
    <includes refid="bitrate_8h" local="yes">bitrate.h</includes>
    <incdepgraph>
      <node id="22538">
        <label>sys/types.h</label>
        <link refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h"/>
        <childnode refid="22539" relation="include">
        </childnode>
        <childnode refid="22540" relation="include">
        </childnode>
        <childnode refid="22530" relation="include">
        </childnode>
      </node>
      <node id="22548">
        <label>backends.h</label>
        <link refid="backends_8h"/>
        <childnode refid="22542" relation="include">
        </childnode>
      </node>
      <node id="22537">
        <label>stdint.h</label>
      </node>
      <node id="22529">
        <label>stdlib.h</label>
      </node>
      <node id="22543">
        <label>envelope.h</label>
        <link refid="lib-src_2libvorbis_2lib_2_envelope_8h"/>
        <childnode refid="22544" relation="include">
        </childnode>
      </node>
      <node id="22551">
        <label>misc.h</label>
        <link refid="misc_8h"/>
        <childnode refid="22541" relation="include">
        </childnode>
      </node>
      <node id="22541">
        <label>vorbis/codec.h</label>
        <link refid="codec_8h"/>
        <childnode refid="22532" relation="include">
        </childnode>
      </node>
      <node id="22533">
        <label>stddef.h</label>
      </node>
      <node id="22540">
        <label>alloca.h</label>
      </node>
      <node id="22534">
        <label>ogg/os_types.h</label>
        <link refid="os__types_8h"/>
        <childnode refid="22535" relation="include">
        </childnode>
      </node>
      <node id="22545">
        <label>codebook.h</label>
        <link refid="codebook_8h"/>
        <childnode refid="22532" relation="include">
        </childnode>
      </node>
      <node id="22539">
        <label>MacTypes.h</label>
      </node>
      <node id="22530">
        <label>string.h</label>
      </node>
      <node id="22546">
        <label>psy.h</label>
        <link refid="psy_8h"/>
        <childnode refid="22547" relation="include">
        </childnode>
        <childnode refid="22548" relation="include">
        </childnode>
        <childnode refid="22543" relation="include">
        </childnode>
      </node>
      <node id="22532">
        <label>ogg/ogg.h</label>
        <link refid="ogg_8h"/>
        <childnode refid="22533" relation="include">
        </childnode>
        <childnode refid="22534" relation="include">
        </childnode>
      </node>
      <node id="22547">
        <label>smallft.h</label>
        <link refid="smallft_8h"/>
        <childnode refid="22541" relation="include">
        </childnode>
      </node>
      <node id="22528">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/bitrate.c</label>
        <link refid="bitrate.c"/>
        <childnode refid="22529" relation="include">
        </childnode>
        <childnode refid="22530" relation="include">
        </childnode>
        <childnode refid="22531" relation="include">
        </childnode>
        <childnode refid="22532" relation="include">
        </childnode>
        <childnode refid="22541" relation="include">
        </childnode>
        <childnode refid="22542" relation="include">
        </childnode>
        <childnode refid="22550" relation="include">
        </childnode>
        <childnode refid="22551" relation="include">
        </childnode>
        <childnode refid="22549" relation="include">
        </childnode>
      </node>
      <node id="22531">
        <label>math.h</label>
      </node>
      <node id="22549">
        <label>bitrate.h</label>
        <link refid="bitrate_8h"/>
        <childnode refid="22541" relation="include">
        </childnode>
        <childnode refid="22542" relation="include">
        </childnode>
        <childnode refid="22550" relation="include">
        </childnode>
      </node>
      <node id="22552">
        <label>highlevel.h</label>
        <link refid="highlevel_8h"/>
      </node>
      <node id="22550">
        <label>os.h</label>
        <link refid="os_8h"/>
        <childnode refid="22531" relation="include">
        </childnode>
        <childnode refid="22534" relation="include">
        </childnode>
        <childnode refid="22551" relation="include">
        </childnode>
      </node>
      <node id="22535">
        <label>ogg/config_types.h</label>
        <link refid="config__types_8h"/>
        <childnode refid="22536" relation="include">
        </childnode>
        <childnode refid="22537" relation="include">
        </childnode>
        <childnode refid="22538" relation="include">
        </childnode>
      </node>
      <node id="22542">
        <label>codec_internal.h</label>
        <link refid="codec__internal_8h"/>
        <childnode refid="22543" relation="include">
        </childnode>
        <childnode refid="22545" relation="include">
        </childnode>
        <childnode refid="22546" relation="include">
        </childnode>
        <childnode refid="22549" relation="include">
        </childnode>
        <childnode refid="22552" relation="include">
        </childnode>
      </node>
      <node id="22544">
        <label>mdct.h</label>
        <link refid="mdct_8h"/>
        <childnode refid="22541" relation="include">
        </childnode>
      </node>
      <node id="22536">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="bitrate_8c_1ab885f5b929f532f9e5a49aa234a705ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void vorbis_bitrate_init</definition>
        <argsstring>(vorbis_info *vi, bitrate_manager_state *bm)</argsstring>
        <name>vorbis_bitrate_init</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type><ref refid="structbitrate__manager__state" kindref="compound">bitrate_manager_state</ref> *</type>
          <declname>bm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/bitrate.c" line="29" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/bitrate.c" bodystart="29" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="bitrate_8c_1aed762eb6432773e3394b76c85c0d21bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void vorbis_bitrate_clear</definition>
        <argsstring>(bitrate_manager_state *bm)</argsstring>
        <name>vorbis_bitrate_clear</name>
        <param>
          <type><ref refid="structbitrate__manager__state" kindref="compound">bitrate_manager_state</ref> *</type>
          <declname>bm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/bitrate.c" line="59" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/bitrate.c" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="bitrate_8c_1a340357d7f7012c18f5ca87ef769dfa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int vorbis_bitrate_managed</definition>
        <argsstring>(vorbis_block *vb)</argsstring>
        <name>vorbis_bitrate_managed</name>
        <param>
          <type><ref refid="structvorbis__block" kindref="compound">vorbis_block</ref> *</type>
          <declname>vb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/bitrate.c" line="64" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/bitrate.c" bodystart="64" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="bitrate_8c_1a7efe5889f6919053b8ab8d69e61ac995" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int vorbis_bitrate_addblock</definition>
        <argsstring>(vorbis_block *vb)</argsstring>
        <name>vorbis_bitrate_addblock</name>
        <param>
          <type><ref refid="structvorbis__block" kindref="compound">vorbis_block</ref> *</type>
          <declname>vb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/bitrate.c" line="74" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/bitrate.c" bodystart="74" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="bitrate_8c_1a37418540741db649a608cac3d2be440f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int vorbis_bitrate_flushpacket</definition>
        <argsstring>(vorbis_dsp_state *vd, ogg_packet *op)</argsstring>
        <name>vorbis_bitrate_flushpacket</name>
        <param>
          <type><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref> *</type>
          <declname>vd</declname>
        </param>
        <param>
          <type><ref refid="structogg__packet" kindref="compound">ogg_packet</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/bitrate.c" line="230" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/bitrate.c" bodystart="230" bodyend="253"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>THIS<sp/>FILE<sp/>IS<sp/>PART<sp/>OF<sp/>THE<sp/>OggVorbis<sp/>SOFTWARE<sp/>CODEC<sp/>SOURCE<sp/>CODE.<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>USE,<sp/>DISTRIBUTION<sp/>AND<sp/>REPRODUCTION<sp/>OF<sp/>THIS<sp/>LIBRARY<sp/>SOURCE<sp/>IS<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>GOVERNED<sp/>BY<sp/>A<sp/>BSD-STYLE<sp/>SOURCE<sp/>LICENSE<sp/>INCLUDED<sp/>WITH<sp/>THIS<sp/>SOURCE<sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>IN<sp/>&apos;COPYING&apos;.<sp/>PLEASE<sp/>READ<sp/>THESE<sp/>TERMS<sp/>BEFORE<sp/>DISTRIBUTING.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>THE<sp/>OggVorbis<sp/>SOURCE<sp/>CODE<sp/>IS<sp/>(C)<sp/>COPYRIGHT<sp/>1994-2009<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>by<sp/>the<sp/>Xiph.Org<sp/>Foundation<sp/>http://www.xiph.org/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>********************************************************************</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>function:<sp/>bitrate<sp/>tracking<sp/>and<sp/>management</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>last<sp/>mod:<sp/>$Id:<sp/>bitrate.c<sp/>16227<sp/>2009-07-08<sp/>06:58:46Z<sp/>xiphmont<sp/>$</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ogg_8h" kindref="compound">ogg/ogg.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="codec_8h" kindref="compound">vorbis/codec.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="codec__internal_8h" kindref="compound">codec_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="os_8h" kindref="compound">os.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="misc_8h" kindref="compound">misc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bitrate_8h" kindref="compound">bitrate.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>compute<sp/>bitrate<sp/>tracking<sp/>setup<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="bitrate_8h_1a4b2d815b2d939ca42eeb97565304f5ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitrate_8c_1ab885f5b929f532f9e5a49aa234a705ce" kindref="member">vorbis_bitrate_init</ref>(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,<ref refid="structbitrate__manager__state" kindref="compound">bitrate_manager_state</ref><sp/>*bm){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;<ref refid="structvorbis__info_1a440988f081a417fd1586a4c3d44bc00c" kindref="member">codec_setup</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="structbitrate__manager__info" kindref="compound">bitrate_manager_info</ref><sp/>*bi=&amp;ci-&gt;<ref refid="structcodec__setup__info_1ac8f01db327dffe4b49225debaf14e253" kindref="member">bi</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>memset(bm,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*bm));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bi<sp/>&amp;&amp;<sp/>(bi-&gt;<ref refid="structbitrate__manager__info_1ac3474e0e648e661ac5e4b0d8a434fa32" kindref="member">reservoir_bits</ref>&gt;0)){</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ratesamples=vi-&gt;<ref refid="structvorbis__info_1a01879ed23ecd9605cf6779ef2663a681" kindref="member">rate</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>halfsamples=ci-&gt;<ref refid="structcodec__setup__info_1a8b08129139f671b7bbd9573aa2576fe9" kindref="member">blocksizes</ref>[0]&gt;&gt;1;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>bm-&gt;<ref refid="structbitrate__manager__state_1a0d147df96a556b32fe5ff84d3d3b8e8f" kindref="member">short_per_long</ref>=ci-&gt;<ref refid="structcodec__setup__info_1a8b08129139f671b7bbd9573aa2576fe9" kindref="member">blocksizes</ref>[1]/ci-&gt;<ref refid="structcodec__setup__info_1a8b08129139f671b7bbd9573aa2576fe9" kindref="member">blocksizes</ref>[0];</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>bm-&gt;<ref refid="structbitrate__manager__state_1a874d426e03e2fe791ffaa18772ec73ca" kindref="member">managed</ref>=1;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>bm-&gt;<ref refid="structbitrate__manager__state_1a39abde2acedad23996b933837a0b72be" kindref="member">avg_bitsper</ref>=<sp/>rint(1.*bi-&gt;<ref refid="structbitrate__manager__info_1a641dc9820b98f174f73cd36b2769127c" kindref="member">avg_rate</ref>*halfsamples/ratesamples);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>bm-&gt;<ref refid="structbitrate__manager__state_1aa854e0d6bcb60dc3cf27dd5190c70345" kindref="member">min_bitsper</ref>=<sp/>rint(1.*bi-&gt;<ref refid="structbitrate__manager__info_1a70b89ca96ddf87dc93eac879429c0d5d" kindref="member">min_rate</ref>*halfsamples/ratesamples);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>bm-&gt;<ref refid="structbitrate__manager__state_1a48f87c07fd01af4160d38c39d17aa1f2" kindref="member">max_bitsper</ref>=<sp/>rint(1.*bi-&gt;<ref refid="structbitrate__manager__info_1a8694ec6266069b0e3521793ecd4e59d2" kindref="member">max_rate</ref>*halfsamples/ratesamples);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>bm-&gt;<ref refid="structbitrate__manager__state_1a97494b734f47a814b535cd8f07203a03" kindref="member">avgfloat</ref>=<ref refid="codec__internal_8h_1a9293c5a15a78abadbe212d944080e04b" kindref="member">PACKETBLOBS</ref>/2;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>a<sp/>necessary<sp/>fix,<sp/>but<sp/>one<sp/>that<sp/>leads<sp/>to<sp/>a<sp/>more<sp/>balanced</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typical<sp/>initialization<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>desired_fill=bi-&gt;<ref refid="structbitrate__manager__info_1ac3474e0e648e661ac5e4b0d8a434fa32" kindref="member">reservoir_bits</ref>*bi-&gt;<ref refid="structbitrate__manager__info_1a7e3ab7c2b92ee477615a6308952f3005" kindref="member">reservoir_bias</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bm-&gt;<ref refid="structbitrate__manager__state_1a16a7b9cb7bcc4f9d86efef9fda083fb9" kindref="member">minmax_reservoir</ref>=desired_fill;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bm-&gt;<ref refid="structbitrate__manager__state_1a6fc0ce1557ae9808b2390271008bce0e" kindref="member">avg_reservoir</ref>=desired_fill;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="bitrate_8h_1aa70acf71c2e7ebd6c06eebe7d30af9c2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitrate_8c_1aed762eb6432773e3394b76c85c0d21bf" kindref="member">vorbis_bitrate_clear</ref>(<ref refid="structbitrate__manager__state" kindref="compound">bitrate_manager_state</ref><sp/>*bm){</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>memset(bm,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*bm));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="bitrate_8h_1a340357d7f7012c18f5ca87ef769dfa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bitrate_8c_1a340357d7f7012c18f5ca87ef769dfa97" kindref="member">vorbis_bitrate_managed</ref>(<ref refid="structvorbis__block" kindref="compound">vorbis_block</ref><sp/>*vb){</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/><sp/><sp/><sp/><sp/><sp/>*vd=vb-&gt;<ref refid="structvorbis__block_1adefe79be61ef3631c18cd7b8afae31a2" kindref="member">vd</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="structprivate__state" kindref="compound">private_state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>=vd-&gt;<ref refid="structvorbis__dsp__state_1a97ff4df8d289e5e3968029e47d7f8162" kindref="member">backend_state</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="structbitrate__manager__state" kindref="compound">bitrate_manager_state</ref><sp/>*bm=&amp;b-&gt;<ref refid="structprivate__state_1acebfb7e0659bcf6583637bdb74fdfe50" kindref="member">bms</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bm<sp/>&amp;&amp;<sp/>bm-&gt;<ref refid="structbitrate__manager__state_1a874d426e03e2fe791ffaa18772ec73ca" kindref="member">managed</ref>)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>finish<sp/>taking<sp/>in<sp/>the<sp/>block<sp/>we<sp/>just<sp/>processed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="bitrate_8h_1a7efe5889f6919053b8ab8d69e61ac995" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bitrate_8c_1a7efe5889f6919053b8ab8d69e61ac995" kindref="member">vorbis_bitrate_addblock</ref>(<ref refid="structvorbis__block" kindref="compound">vorbis_block</ref><sp/>*vb){</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__block__internal" kindref="compound">vorbis_block_internal</ref><sp/>*vbi=vb-&gt;<ref refid="structvorbis__block_1ab506fee4272b6e8c634516c1cbb1e638" kindref="member">internal</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/><sp/><sp/><sp/><sp/><sp/>*vd=vb-&gt;<ref refid="structvorbis__block_1adefe79be61ef3631c18cd7b8afae31a2" kindref="member">vd</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="structprivate__state" kindref="compound">private_state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>=vd-&gt;<ref refid="structvorbis__dsp__state_1a97ff4df8d289e5e3968029e47d7f8162" kindref="member">backend_state</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="structbitrate__manager__state" kindref="compound">bitrate_manager_state</ref><sp/>*bm=&amp;b-&gt;<ref refid="structprivate__state_1acebfb7e0659bcf6583637bdb74fdfe50" kindref="member">bms</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vi=vd-&gt;<ref refid="structvorbis__dsp__state_1ab6819a31e79031cdcd8f2ff40a5c1def" kindref="member">vi</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/><sp/><sp/><sp/><sp/><sp/>*ci=vi-&gt;<ref refid="structvorbis__info_1a440988f081a417fd1586a4c3d44bc00c" kindref="member">codec_setup</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="structbitrate__manager__info" kindref="compound">bitrate_manager_info</ref><sp/><sp/>*bi=&amp;ci-&gt;<ref refid="structcodec__setup__info_1ac8f01db327dffe4b49225debaf14e253" kindref="member">bi</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>choice=rint(bm-&gt;<ref refid="structbitrate__manager__state_1a97494b734f47a814b535cd8f07203a03" kindref="member">avgfloat</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>this_bits=<ref refid="ogg_8h_1a6483ce3b4718d510fd506a7d0099d8e4" kindref="member">oggpack_bytes</ref>(vbi-&gt;<ref refid="structvorbis__block__internal_1a7b98d48f2d7a3305005d0513a7698218" kindref="member">packetblob</ref>[choice])*8;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>min_target_bits=(vb-&gt;<ref refid="structvorbis__block_1a1e420440dd6a5a39262c0fe7afa8435a" kindref="member">W</ref>?bm-&gt;<ref refid="structbitrate__manager__state_1aa854e0d6bcb60dc3cf27dd5190c70345" kindref="member">min_bitsper</ref>*bm-&gt;<ref refid="structbitrate__manager__state_1a0d147df96a556b32fe5ff84d3d3b8e8f" kindref="member">short_per_long</ref>:bm-&gt;<ref refid="structbitrate__manager__state_1aa854e0d6bcb60dc3cf27dd5190c70345" kindref="member">min_bitsper</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>max_target_bits=(vb-&gt;<ref refid="structvorbis__block_1a1e420440dd6a5a39262c0fe7afa8435a" kindref="member">W</ref>?bm-&gt;<ref refid="structbitrate__manager__state_1a48f87c07fd01af4160d38c39d17aa1f2" kindref="member">max_bitsper</ref>*bm-&gt;<ref refid="structbitrate__manager__state_1a0d147df96a556b32fe5ff84d3d3b8e8f" kindref="member">short_per_long</ref>:bm-&gt;<ref refid="structbitrate__manager__state_1a48f87c07fd01af4160d38c39d17aa1f2" kindref="member">max_bitsper</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="test__rw__echo_8c_1a39c8d1039645bc924aecc49d76f472a0" kindref="member">samples</ref>=ci-&gt;<ref refid="structcodec__setup__info_1a8b08129139f671b7bbd9573aa2576fe9" kindref="member">blocksizes</ref>[vb-&gt;<ref refid="structvorbis__block_1a1e420440dd6a5a39262c0fe7afa8435a" kindref="member">W</ref>]&gt;&gt;1;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>desired_fill=bi-&gt;<ref refid="structbitrate__manager__info_1ac3474e0e648e661ac5e4b0d8a434fa32" kindref="member">reservoir_bits</ref>*bi-&gt;<ref refid="structbitrate__manager__info_1a7e3ab7c2b92ee477615a6308952f3005" kindref="member">reservoir_bias</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!bm-&gt;<ref refid="structbitrate__manager__state_1a874d426e03e2fe791ffaa18772ec73ca" kindref="member">managed</ref>){</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>a<sp/>bitrate<sp/>managed<sp/>stream,<sp/>but<sp/>for<sp/>API<sp/>simplicity,<sp/>we&apos;ll</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>the<sp/>packet<sp/>to<sp/>keep<sp/>the<sp/>code<sp/>path<sp/>clean<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bm-&gt;<ref refid="structbitrate__manager__state_1a79de5ce8aa30385d2b9d1c0639ef9c68" kindref="member">vb</ref>)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);<sp/></highlight><highlight class="comment">/*<sp/>one<sp/>has<sp/>been<sp/>submitted<sp/>without</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>being<sp/>claimed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>bm-&gt;<ref refid="structbitrate__manager__state_1a79de5ce8aa30385d2b9d1c0639ef9c68" kindref="member">vb</ref>=vb;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>bm-&gt;<ref refid="structbitrate__manager__state_1a79de5ce8aa30385d2b9d1c0639ef9c68" kindref="member">vb</ref>=vb;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>look<sp/>ahead<sp/>for<sp/>avg<sp/>floater<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bm-&gt;<ref refid="structbitrate__manager__state_1a39abde2acedad23996b933837a0b72be" kindref="member">avg_bitsper</ref>&gt;0){</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>slew=0.;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>avg_target_bits=(vb-&gt;<ref refid="structvorbis__block_1a1e420440dd6a5a39262c0fe7afa8435a" kindref="member">W</ref>?bm-&gt;<ref refid="structbitrate__manager__state_1a39abde2acedad23996b933837a0b72be" kindref="member">avg_bitsper</ref>*bm-&gt;<ref refid="structbitrate__manager__state_1a0d147df96a556b32fe5ff84d3d3b8e8f" kindref="member">short_per_long</ref>:bm-&gt;<ref refid="structbitrate__manager__state_1a39abde2acedad23996b933837a0b72be" kindref="member">avg_bitsper</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>slewlimit=<sp/>15./bi-&gt;<ref refid="structbitrate__manager__info_1a8b2831842978c4a426f63241ec17d030" kindref="member">slew_damp</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>choosing<sp/>a<sp/>new<sp/>floater:</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>we&apos;re<sp/>over<sp/>target,<sp/>we<sp/>slew<sp/>down</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>we&apos;re<sp/>under<sp/>target,<sp/>we<sp/>slew<sp/>up</highlight></codeline>
<codeline lineno="110"><highlight class="comment"></highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>choose<sp/>slew<sp/>as<sp/>follows:<sp/>look<sp/>through<sp/>packetblobs<sp/>of<sp/>this<sp/>frame</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>set<sp/>slew<sp/>as<sp/>the<sp/>first<sp/>in<sp/>the<sp/>appropriate<sp/>direction<sp/>that</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gives<sp/>us<sp/>the<sp/>slew<sp/>we<sp/>want.<sp/><sp/>This<sp/>may<sp/>mean<sp/>no<sp/>slew<sp/>if<sp/>delta<sp/>is</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>already<sp/>favorable.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"></highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Then<sp/>limit<sp/>slew<sp/>to<sp/>slew<sp/>max<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bm-&gt;<ref refid="structbitrate__manager__state_1a6fc0ce1557ae9808b2390271008bce0e" kindref="member">avg_reservoir</ref>+(this_bits-avg_target_bits)&gt;desired_fill){</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(choice&gt;0<sp/>&amp;&amp;<sp/>this_bits&gt;avg_target_bits<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bm-&gt;<ref refid="structbitrate__manager__state_1a6fc0ce1557ae9808b2390271008bce0e" kindref="member">avg_reservoir</ref>+(this_bits-avg_target_bits)&gt;desired_fill){</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>choice--;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_bits=<ref refid="ogg_8h_1a6483ce3b4718d510fd506a7d0099d8e4" kindref="member">oggpack_bytes</ref>(vbi-&gt;<ref refid="structvorbis__block__internal_1a7b98d48f2d7a3305005d0513a7698218" kindref="member">packetblob</ref>[choice])*8;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bm-&gt;<ref refid="structbitrate__manager__state_1a6fc0ce1557ae9808b2390271008bce0e" kindref="member">avg_reservoir</ref>+(this_bits-avg_target_bits)&lt;desired_fill){</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(choice+1&lt;<ref refid="codec__internal_8h_1a9293c5a15a78abadbe212d944080e04b" kindref="member">PACKETBLOBS</ref><sp/>&amp;&amp;<sp/>this_bits&lt;avg_target_bits<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bm-&gt;<ref refid="structbitrate__manager__state_1a6fc0ce1557ae9808b2390271008bce0e" kindref="member">avg_reservoir</ref>+(this_bits-avg_target_bits)&lt;desired_fill){</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>choice++;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_bits=<ref refid="ogg_8h_1a6483ce3b4718d510fd506a7d0099d8e4" kindref="member">oggpack_bytes</ref>(vbi-&gt;<ref refid="structvorbis__block__internal_1a7b98d48f2d7a3305005d0513a7698218" kindref="member">packetblob</ref>[choice])*8;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>slew=rint(choice-bm-&gt;<ref refid="structbitrate__manager__state_1a97494b734f47a814b535cd8f07203a03" kindref="member">avgfloat</ref>)/samples*vi-&gt;<ref refid="structvorbis__info_1a01879ed23ecd9605cf6779ef2663a681" kindref="member">rate</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(slew&lt;-slewlimit)slew=-slewlimit;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(slew&gt;slewlimit)slew=slewlimit;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>choice=rint(bm-&gt;<ref refid="structbitrate__manager__state_1a97494b734f47a814b535cd8f07203a03" kindref="member">avgfloat</ref>+=<sp/>slew/vi-&gt;<ref refid="structvorbis__info_1a01879ed23ecd9605cf6779ef2663a681" kindref="member">rate</ref>*samples);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>this_bits=<ref refid="ogg_8h_1a6483ce3b4718d510fd506a7d0099d8e4" kindref="member">oggpack_bytes</ref>(vbi-&gt;<ref refid="structvorbis__block__internal_1a7b98d48f2d7a3305005d0513a7698218" kindref="member">packetblob</ref>[choice])*8;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>enforce<sp/>min(if<sp/>used)<sp/>on<sp/>the<sp/>current<sp/>floater<sp/>(if<sp/>used)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bm-&gt;<ref refid="structbitrate__manager__state_1aa854e0d6bcb60dc3cf27dd5190c70345" kindref="member">min_bitsper</ref>&gt;0){</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>we<sp/>need<sp/>to<sp/>force<sp/>the<sp/>bitrate<sp/>up?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this_bits&lt;min_target_bits){</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(bm-&gt;<ref refid="structbitrate__manager__state_1a16a7b9cb7bcc4f9d86efef9fda083fb9" kindref="member">minmax_reservoir</ref>-(min_target_bits-this_bits)&lt;0){</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>choice++;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(choice&gt;=<ref refid="codec__internal_8h_1a9293c5a15a78abadbe212d944080e04b" kindref="member">PACKETBLOBS</ref>)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_bits=<ref refid="ogg_8h_1a6483ce3b4718d510fd506a7d0099d8e4" kindref="member">oggpack_bytes</ref>(vbi-&gt;<ref refid="structvorbis__block__internal_1a7b98d48f2d7a3305005d0513a7698218" kindref="member">packetblob</ref>[choice])*8;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>enforce<sp/>max<sp/>(if<sp/>used)<sp/>on<sp/>the<sp/>current<sp/>floater<sp/>(if<sp/>used)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bm-&gt;<ref refid="structbitrate__manager__state_1a48f87c07fd01af4160d38c39d17aa1f2" kindref="member">max_bitsper</ref>&gt;0){</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>we<sp/>need<sp/>to<sp/>force<sp/>the<sp/>bitrate<sp/>down?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this_bits&gt;max_target_bits){</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(bm-&gt;<ref refid="structbitrate__manager__state_1a16a7b9cb7bcc4f9d86efef9fda083fb9" kindref="member">minmax_reservoir</ref>+(this_bits-max_target_bits)&gt;bi-&gt;<ref refid="structbitrate__manager__info_1ac3474e0e648e661ac5e4b0d8a434fa32" kindref="member">reservoir_bits</ref>){</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>choice--;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(choice&lt;0)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_bits=<ref refid="ogg_8h_1a6483ce3b4718d510fd506a7d0099d8e4" kindref="member">oggpack_bytes</ref>(vbi-&gt;<ref refid="structvorbis__block__internal_1a7b98d48f2d7a3305005d0513a7698218" kindref="member">packetblob</ref>[choice])*8;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Choice<sp/>of<sp/>packetblobs<sp/>now<sp/>made<sp/>based<sp/>on<sp/>floater,<sp/>and<sp/>min/max</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>requirements.<sp/>Now<sp/>boundary<sp/>check<sp/>extreme<sp/>choices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(choice&lt;0){</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>choosing<sp/>a<sp/>smaller<sp/>packetblob<sp/>is<sp/>insufficient<sp/>to<sp/>trim<sp/>bitrate.</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame<sp/>will<sp/>need<sp/>to<sp/>be<sp/>truncated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>maxsize=(max_target_bits+(bi-&gt;<ref refid="structbitrate__manager__info_1ac3474e0e648e661ac5e4b0d8a434fa32" kindref="member">reservoir_bits</ref>-bm-&gt;<ref refid="structbitrate__manager__state_1a16a7b9cb7bcc4f9d86efef9fda083fb9" kindref="member">minmax_reservoir</ref>))/8;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>bm-&gt;<ref refid="structbitrate__manager__state_1a705c9b3e162719911c04ab57e09d4149" kindref="member">choice</ref>=choice=0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="ogg_8h_1a6483ce3b4718d510fd506a7d0099d8e4" kindref="member">oggpack_bytes</ref>(vbi-&gt;<ref refid="structvorbis__block__internal_1a7b98d48f2d7a3305005d0513a7698218" kindref="member">packetblob</ref>[choice])&gt;maxsize){</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ogg_8h_1a7e629a16865518a073109ec5496c1db5" kindref="member">oggpack_writetrunc</ref>(vbi-&gt;<ref refid="structvorbis__block__internal_1a7b98d48f2d7a3305005d0513a7698218" kindref="member">packetblob</ref>[choice],maxsize*8);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this_bits=<ref refid="ogg_8h_1a6483ce3b4718d510fd506a7d0099d8e4" kindref="member">oggpack_bytes</ref>(vbi-&gt;<ref refid="structvorbis__block__internal_1a7b98d48f2d7a3305005d0513a7698218" kindref="member">packetblob</ref>[choice])*8;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>minsize=(min_target_bits-bm-&gt;<ref refid="structbitrate__manager__state_1a16a7b9cb7bcc4f9d86efef9fda083fb9" kindref="member">minmax_reservoir</ref>+7)/8;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(choice&gt;=<ref refid="codec__internal_8h_1a9293c5a15a78abadbe212d944080e04b" kindref="member">PACKETBLOBS</ref>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>choice=<ref refid="codec__internal_8h_1a9293c5a15a78abadbe212d944080e04b" kindref="member">PACKETBLOBS</ref>-1;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>bm-&gt;<ref refid="structbitrate__manager__state_1a705c9b3e162719911c04ab57e09d4149" kindref="member">choice</ref>=choice;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>prop<sp/>up<sp/>bitrate<sp/>according<sp/>to<sp/>demand.<sp/>pad<sp/>this<sp/>frame<sp/>out<sp/>with<sp/>zeroes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>minsize-=<ref refid="ogg_8h_1a6483ce3b4718d510fd506a7d0099d8e4" kindref="member">oggpack_bytes</ref>(vbi-&gt;<ref refid="structvorbis__block__internal_1a7b98d48f2d7a3305005d0513a7698218" kindref="member">packetblob</ref>[choice]);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(minsize--&gt;0)<ref refid="ogg_8h_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(vbi-&gt;<ref refid="structvorbis__block__internal_1a7b98d48f2d7a3305005d0513a7698218" kindref="member">packetblob</ref>[choice],0,8);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>this_bits=<ref refid="ogg_8h_1a6483ce3b4718d510fd506a7d0099d8e4" kindref="member">oggpack_bytes</ref>(vbi-&gt;<ref refid="structvorbis__block__internal_1a7b98d48f2d7a3305005d0513a7698218" kindref="member">packetblob</ref>[choice])*8;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>we<sp/>have<sp/>the<sp/>final<sp/>packet<sp/>and<sp/>the<sp/>final<sp/>packet<sp/>size.<sp/><sp/>Update<sp/>statistics<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>min<sp/>and<sp/>max<sp/>reservoir<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bm-&gt;<ref refid="structbitrate__manager__state_1aa854e0d6bcb60dc3cf27dd5190c70345" kindref="member">min_bitsper</ref>&gt;0<sp/>||<sp/>bm-&gt;<ref refid="structbitrate__manager__state_1a48f87c07fd01af4160d38c39d17aa1f2" kindref="member">max_bitsper</ref>&gt;0){</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(max_target_bits&gt;0<sp/>&amp;&amp;<sp/>this_bits&gt;max_target_bits){</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bm-&gt;<ref refid="structbitrate__manager__state_1a16a7b9cb7bcc4f9d86efef9fda083fb9" kindref="member">minmax_reservoir</ref>+=(this_bits-max_target_bits);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(min_target_bits&gt;0<sp/>&amp;&amp;<sp/>this_bits&lt;min_target_bits){</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bm-&gt;<ref refid="structbitrate__manager__state_1a16a7b9cb7bcc4f9d86efef9fda083fb9" kindref="member">minmax_reservoir</ref>+=(this_bits-min_target_bits);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>inbetween;<sp/>we<sp/>want<sp/>to<sp/>take<sp/>reservoir<sp/>toward<sp/>but<sp/>not<sp/>past<sp/>desired_fill<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bm-&gt;<ref refid="structbitrate__manager__state_1a16a7b9cb7bcc4f9d86efef9fda083fb9" kindref="member">minmax_reservoir</ref>&gt;desired_fill){</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(max_target_bits&gt;0){<sp/></highlight><highlight class="comment">/*<sp/>logical<sp/>bulletproofing<sp/>against<sp/>initialization<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bm-&gt;<ref refid="structbitrate__manager__state_1a16a7b9cb7bcc4f9d86efef9fda083fb9" kindref="member">minmax_reservoir</ref>+=(this_bits-max_target_bits);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bm-&gt;<ref refid="structbitrate__manager__state_1a16a7b9cb7bcc4f9d86efef9fda083fb9" kindref="member">minmax_reservoir</ref>&lt;desired_fill)bm-&gt;<ref refid="structbitrate__manager__state_1a16a7b9cb7bcc4f9d86efef9fda083fb9" kindref="member">minmax_reservoir</ref>=desired_fill;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bm-&gt;<ref refid="structbitrate__manager__state_1a16a7b9cb7bcc4f9d86efef9fda083fb9" kindref="member">minmax_reservoir</ref>=desired_fill;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(min_target_bits&gt;0){<sp/></highlight><highlight class="comment">/*<sp/>logical<sp/>bulletproofing<sp/>against<sp/>initialization<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bm-&gt;<ref refid="structbitrate__manager__state_1a16a7b9cb7bcc4f9d86efef9fda083fb9" kindref="member">minmax_reservoir</ref>+=(this_bits-min_target_bits);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bm-&gt;<ref refid="structbitrate__manager__state_1a16a7b9cb7bcc4f9d86efef9fda083fb9" kindref="member">minmax_reservoir</ref>&gt;desired_fill)bm-&gt;<ref refid="structbitrate__manager__state_1a16a7b9cb7bcc4f9d86efef9fda083fb9" kindref="member">minmax_reservoir</ref>=desired_fill;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bm-&gt;<ref refid="structbitrate__manager__state_1a16a7b9cb7bcc4f9d86efef9fda083fb9" kindref="member">minmax_reservoir</ref>=desired_fill;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>avg<sp/>reservoir<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bm-&gt;<ref refid="structbitrate__manager__state_1a39abde2acedad23996b933837a0b72be" kindref="member">avg_bitsper</ref>&gt;0){</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>avg_target_bits=(vb-&gt;<ref refid="structvorbis__block_1a1e420440dd6a5a39262c0fe7afa8435a" kindref="member">W</ref>?bm-&gt;<ref refid="structbitrate__manager__state_1a39abde2acedad23996b933837a0b72be" kindref="member">avg_bitsper</ref>*bm-&gt;<ref refid="structbitrate__manager__state_1a0d147df96a556b32fe5ff84d3d3b8e8f" kindref="member">short_per_long</ref>:bm-&gt;<ref refid="structbitrate__manager__state_1a39abde2acedad23996b933837a0b72be" kindref="member">avg_bitsper</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>bm-&gt;<ref refid="structbitrate__manager__state_1a6fc0ce1557ae9808b2390271008bce0e" kindref="member">avg_reservoir</ref>+=this_bits-avg_target_bits;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="bitrate_8h_1a37418540741db649a608cac3d2be440f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bitrate_8c_1a37418540741db649a608cac3d2be440f" kindref="member">vorbis_bitrate_flushpacket</ref>(<ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>*vd,<ref refid="structogg__packet" kindref="compound">ogg_packet</ref><sp/>*op){</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><ref refid="structprivate__state" kindref="compound">private_state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>=vd-&gt;<ref refid="structvorbis__dsp__state_1a97ff4df8d289e5e3968029e47d7f8162" kindref="member">backend_state</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><ref refid="structbitrate__manager__state" kindref="compound">bitrate_manager_state</ref><sp/>*bm=&amp;b-&gt;<ref refid="structprivate__state_1acebfb7e0659bcf6583637bdb74fdfe50" kindref="member">bms</ref>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__block" kindref="compound">vorbis_block</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vb=bm-&gt;<ref refid="structbitrate__manager__state_1a79de5ce8aa30385d2b9d1c0639ef9c68" kindref="member">vb</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>choice=<ref refid="codec__internal_8h_1a9293c5a15a78abadbe212d944080e04b" kindref="member">PACKETBLOBS</ref>/2;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!vb)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(op){</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvorbis__block__internal" kindref="compound">vorbis_block_internal</ref><sp/>*vbi=vb-&gt;<ref refid="structvorbis__block_1ab506fee4272b6e8c634516c1cbb1e638" kindref="member">internal</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitrate_8c_1a340357d7f7012c18f5ca87ef769dfa97" kindref="member">vorbis_bitrate_managed</ref>(vb))</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>choice=bm-&gt;<ref refid="structbitrate__manager__state_1a705c9b3e162719911c04ab57e09d4149" kindref="member">choice</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;<ref refid="structogg__packet_1a57e7096985ec8766dce415e248767c32" kindref="member">packet</ref>=<ref refid="ogg_8h_1abf824fd3dd4a0bd810adb2d3490e3b70" kindref="member">oggpack_get_buffer</ref>(vbi-&gt;<ref refid="structvorbis__block__internal_1a7b98d48f2d7a3305005d0513a7698218" kindref="member">packetblob</ref>[choice]);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;<ref refid="structogg__packet_1a4438269ce6025d8817865ae66d5881f1" kindref="member">bytes</ref>=<ref refid="ogg_8h_1a6483ce3b4718d510fd506a7d0099d8e4" kindref="member">oggpack_bytes</ref>(vbi-&gt;<ref refid="structvorbis__block__internal_1a7b98d48f2d7a3305005d0513a7698218" kindref="member">packetblob</ref>[choice]);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;<ref refid="structogg__packet_1adbf12677237d6f5333017de9b59b4ea7" kindref="member">b_o_s</ref>=0;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;<ref refid="structogg__packet_1aa367e7c5425c5f65cbd126b82dfc72e8" kindref="member">e_o_s</ref>=vb-&gt;<ref refid="structvorbis__block_1a7bc1252bc17a2cd1ee2a4154fdd2617b" kindref="member">eofflag</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;<ref refid="structogg__packet_1a838d9a000e08bae982409bc2734fc566" kindref="member">granulepos</ref>=vb-&gt;<ref refid="structvorbis__block_1a3dc7d5e474ae80ea641df91eba16b490" kindref="member">granulepos</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>op-&gt;<ref refid="structogg__packet_1a60e257b3a8f843135474457197c65a45" kindref="member">packetno</ref>=vb-&gt;<ref refid="structvorbis__block_1a09e48c70ae79cae2d37a4e0e55f294ef" kindref="member">sequence</ref>;<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>sake<sp/>of<sp/>completeness<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>bm-&gt;<ref refid="structbitrate__manager__state_1a79de5ce8aa30385d2b9d1c0639ef9c68" kindref="member">vb</ref>=0;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/bitrate.c"/>
  </compounddef>
</doxygen>
