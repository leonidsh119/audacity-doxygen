<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="collections_8c" kind="file" language="C++">
    <compoundname>collections.c</compoundname>
    <includes refid="lilv__internal_8h" local="yes">lilv_internal.h</includes>
    <incdepgraph>
      <node id="24446">
        <label>lilv_internal.h</label>
        <link refid="lilv__internal_8h"/>
        <childnode refid="24447" relation="include">
        </childnode>
        <childnode refid="24448" relation="include">
        </childnode>
        <childnode refid="24449" relation="include">
        </childnode>
        <childnode refid="24450" relation="include">
        </childnode>
        <childnode refid="24452" relation="include">
        </childnode>
        <childnode refid="24453" relation="include">
        </childnode>
        <childnode refid="24457" relation="include">
        </childnode>
        <childnode refid="24458" relation="include">
        </childnode>
        <childnode refid="24460" relation="include">
        </childnode>
        <childnode refid="24461" relation="include">
        </childnode>
      </node>
      <node id="24456">
        <label>stdbool.h</label>
      </node>
      <node id="24454">
        <label>stdarg.h</label>
      </node>
      <node id="24459">
        <label>zix/common.h</label>
      </node>
      <node id="24451">
        <label>FLAC/ordinals.h</label>
        <link refid="ordinals_8h"/>
        <childnode refid="24448" relation="include">
        </childnode>
      </node>
      <node id="24448">
        <label>stdint.h</label>
      </node>
      <node id="24449">
        <label>stdlib.h</label>
      </node>
      <node id="24445">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c</label>
        <link refid="collections.c"/>
        <childnode refid="24446" relation="include">
        </childnode>
      </node>
      <node id="24453">
        <label>serd/serd.h</label>
        <link refid="serd_8h"/>
        <childnode refid="24454" relation="include">
        </childnode>
        <childnode refid="24447" relation="include">
        </childnode>
        <childnode refid="24448" relation="include">
        </childnode>
        <childnode refid="24455" relation="include">
        </childnode>
        <childnode refid="24456" relation="include">
        </childnode>
      </node>
      <node id="24447">
        <label>stddef.h</label>
      </node>
      <node id="24457">
        <label>sord/sord.h</label>
        <link refid="sord_8h"/>
        <childnode refid="24447" relation="include">
        </childnode>
        <childnode refid="24448" relation="include">
        </childnode>
        <childnode refid="24455" relation="include">
        </childnode>
        <childnode refid="24453" relation="include">
        </childnode>
        <childnode refid="24456" relation="include">
        </childnode>
      </node>
      <node id="24463">
        <label>lv2/lv2plug.in/ns/ext/urid/urid.h</label>
        <link refid="urid_8h"/>
        <childnode refid="24448" relation="include">
        </childnode>
      </node>
      <node id="24450">
        <label>float.h</label>
        <link refid="float_8h"/>
        <childnode refid="24451" relation="include">
        </childnode>
      </node>
      <node id="24461">
        <label>lilv/lilv.h</label>
        <link refid="lilv_8h"/>
        <childnode refid="24454" relation="include">
        </childnode>
        <childnode refid="24447" relation="include">
        </childnode>
        <childnode refid="24448" relation="include">
        </childnode>
        <childnode refid="24455" relation="include">
        </childnode>
        <childnode refid="24462" relation="include">
        </childnode>
        <childnode refid="24463" relation="include">
        </childnode>
        <childnode refid="24456" relation="include">
        </childnode>
      </node>
      <node id="24460">
        <label>lilv_config.h</label>
      </node>
      <node id="24462">
        <label>lv2/lv2plug.in/ns/lv2core/lv2.h</label>
        <link refid="lv2_8h"/>
        <childnode refid="24448" relation="include">
        </childnode>
      </node>
      <node id="24455">
        <label>stdio.h</label>
      </node>
      <node id="24458">
        <label>zix/tree.h</label>
        <link refid="lilv_2src_2zix_2tree_8h"/>
        <childnode refid="24447" relation="include">
        </childnode>
        <childnode refid="24459" relation="include">
        </childnode>
      </node>
      <node id="24452">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="collections_8c_1ae67dab7ff474830ef35dec00b42aac51" prot="public" static="no">
        <name>LILV_COLLECTION_IMPL</name>
        <param><defname>prefix</defname></param>
        <param><defname>CT</defname></param>
        <param><defname>ET</defname></param>
        <initializer><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> \
unsigned \
<ref refid="structprefix" kindref="compound">prefix</ref>##_size(<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> CT* collection) { \
	<ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref> <ref refid="lilv__internal_8h_1ac6b9d44a7c8f1aed774d2f36db2fd2b6" kindref="member">lilv_collection_size</ref>(collection); \
} \
\
<ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> \
<ref refid="lilv_8h_1ae86a2663273587d791c8b8fbb008e567" kindref="member">LilvIter</ref>* \
<ref refid="structprefix" kindref="compound">prefix</ref>##_begin(<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> CT* collection) { \
	<ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref> <ref refid="lilv__internal_8h_1a68193b96488ed7f8090bcf14764600f6" kindref="member">lilv_collection_begin</ref>(collection); \
} \
\
<ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> \
<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> ET* \
<ref refid="structprefix" kindref="compound">prefix</ref>##_get(<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> CT* collection, <ref refid="lilv_8h_1ae86a2663273587d791c8b8fbb008e567" kindref="member">LilvIter</ref>* <ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>) { \
	<ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref> (ET*)<ref refid="lilv__internal_8h_1a9d7d8d5ecf29d39a598e3ef6cd5b4e33" kindref="member">lilv_collection_get</ref>(collection, <ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>); \
} \
\
<ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> \
<ref refid="lilv_8h_1ae86a2663273587d791c8b8fbb008e567" kindref="member">LilvIter</ref>* \
<ref refid="structprefix" kindref="compound">prefix</ref>##_next(<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> CT* collection, <ref refid="lilv_8h_1ae86a2663273587d791c8b8fbb008e567" kindref="member">LilvIter</ref>* <ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>) { \
	<ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref> <ref refid="group__zix_1ga5e96ee30587208cb8076bbec52465846" kindref="member">zix_tree_iter_next</ref>((<ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref>*)<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>); \
} \
\
<ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> \
<ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref> \
<ref refid="structprefix" kindref="compound">prefix</ref>##_is_end(<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> CT* collection, <ref refid="lilv_8h_1ae86a2663273587d791c8b8fbb008e567" kindref="member">LilvIter</ref>* <ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>) { \
	<ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref> <ref refid="group__zix_1gab446479864f20e352e13d905340fc1b4" kindref="member">zix_tree_iter_is_end</ref>((<ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref>*)<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" line="159" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" bodystart="159" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="collections_8c_1a2a02eed2df42be61defe0f1cda5a82d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int lilv_ptr_cmp</definition>
        <argsstring>(const void *a, const void *b, void *user_data)</argsstring>
        <name>lilv_ptr_cmp</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" line="20" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="collections_8c_1a1cbada4a3206bc0d7fa62d3f4d571dac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int lilv_resource_node_cmp</definition>
        <argsstring>(const void *a, const void *b, void *user_data)</argsstring>
        <name>lilv_resource_node_cmp</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" line="26" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" bodystart="26" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="collections_8c_1aa18e48b1fc6b736482170adcc7255863" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="lilv__internal_8h_1ae75b2dab5f494b01d2a557726bf665b0" kindref="member">LilvCollection</ref> *</type>
        <definition>static LilvCollection* lilv_collection_new</definition>
        <argsstring>(ZixComparator cmp, ZixDestroyFunc destructor)</argsstring>
        <name>lilv_collection_new</name>
        <param>
          <type><ref refid="group__zix_1gaa647997c2e16e85391dad2d77c02aff6" kindref="member">ZixComparator</ref></type>
          <declname>cmp</declname>
        </param>
        <param>
          <type><ref refid="group__zix_1ga116fe3bb614b937a4190ab5fe645cc87" kindref="member">ZixDestroyFunc</ref></type>
          <declname>destructor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" line="36" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="collections_8c_1a538f84a24f00d03717120209157f6665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void lilv_collection_free</definition>
        <argsstring>(LilvCollection *coll)</argsstring>
        <name>lilv_collection_free</name>
        <param>
          <type><ref refid="lilv__internal_8h_1ae75b2dab5f494b01d2a557726bf665b0" kindref="member">LilvCollection</ref> *</type>
          <declname>coll</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" line="42" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" bodystart="42" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="collections_8c_1a4a9d510179e76b440f6ee8be07857b6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned lilv_collection_size</definition>
        <argsstring>(const LilvCollection *coll)</argsstring>
        <name>lilv_collection_size</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv__internal_8h_1ae75b2dab5f494b01d2a557726bf665b0" kindref="member">LilvCollection</ref> *</type>
          <declname>coll</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" line="49" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="collections_8c_1a68193b96488ed7f8090bcf14764600f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1ae86a2663273587d791c8b8fbb008e567" kindref="member">LilvIter</ref> *</type>
        <definition>LilvIter* lilv_collection_begin</definition>
        <argsstring>(const LilvCollection *collection)</argsstring>
        <name>lilv_collection_begin</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv__internal_8h_1ae75b2dab5f494b01d2a557726bf665b0" kindref="member">LilvCollection</ref> *</type>
          <declname>collection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" line="55" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="collections_8c_1a9d7d8d5ecf29d39a598e3ef6cd5b4e33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>void* lilv_collection_get</definition>
        <argsstring>(const LilvCollection *collection, const LilvIter *i)</argsstring>
        <name>lilv_collection_get</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv__internal_8h_1ae75b2dab5f494b01d2a557726bf665b0" kindref="member">LilvCollection</ref> *</type>
          <declname>collection</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae86a2663273587d791c8b8fbb008e567" kindref="member">LilvIter</ref> *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" line="61" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" bodystart="61" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="collections_8c_1a115607a0b582565f6ba69dbc85a6b744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1a059c9ec61f4497a433d3e6030e9a3f37" kindref="member">LilvScalePoints</ref> *</type>
        <definition>LilvScalePoints* lilv_scale_points_new</definition>
        <argsstring>(void)</argsstring>
        <name>lilv_scale_points_new</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" line="70" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="collections_8c_1ad85dc561f7c943b545dafd49755a8a5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref> *</type>
        <definition>LilvNodes* lilv_nodes_new</definition>
        <argsstring>(void)</argsstring>
        <name>lilv_nodes_new</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" line="77" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" bodystart="77" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="collections_8c_1a680114ab41bc8c833ba89b8968a2e2c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1af0d073c97d807e531f174ce2ee1b5492" kindref="member">LilvUIs</ref> *</type>
        <definition>LilvUIs* lilv_uis_new</definition>
        <argsstring>(void)</argsstring>
        <name>lilv_uis_new</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" line="84" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" bodystart="84" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="collections_8c_1a34d8bba4d6fc4385bbb701d3c19a5851" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1a1ef5389c0a24cb8e0adcf971d2d12f0e" kindref="member">LilvPluginClasses</ref> *</type>
        <definition>LilvPluginClasses* lilv_plugin_classes_new</definition>
        <argsstring>(void)</argsstring>
        <name>lilv_plugin_classes_new</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" line="91" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" bodystart="91" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga24762b755734a1950b16547f26fc10c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94da06d43a4f980af280b9d8bf4ae1f0" kindref="member">LilvPluginClass</ref> *</type>
        <definition>LILV_API const LilvPluginClass* lilv_plugin_classes_get_by_uri</definition>
        <argsstring>(const LilvPluginClasses *coll, const LilvNode *uri)</argsstring>
        <name>lilv_plugin_classes_get_by_uri</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a1ef5389c0a24cb8e0adcf971d2d12f0e" kindref="member">LilvPluginClasses</ref> *</type>
          <declname>classes</declname>
          <defname>coll</defname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a plugin class from <computeroutput>classes</computeroutput> by URI. Return value is shared (stored in <computeroutput>classes</computeroutput>) and must not be freed or modified by the caller in any way. <simplesect kind="return"><para>NULL if no plugin class with <computeroutput>uri</computeroutput> is found in <computeroutput>classes</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" line="100" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" bodystart="100" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1gad46fe6df82b17906f1b5fd76918aec8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a42d32f453a79ab1c944daa6436f22dde" kindref="member">LilvUI</ref> *</type>
        <definition>LILV_API const LilvUI* lilv_uis_get_by_uri</definition>
        <argsstring>(const LilvUIs *coll, const LilvNode *uri)</argsstring>
        <name>lilv_uis_get_by_uri</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1af0d073c97d807e531f174ce2ee1b5492" kindref="member">LilvUIs</ref> *</type>
          <declname>uis</declname>
          <defname>coll</defname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a UI from <computeroutput>uis</computeroutput> by URI. Return value is shared (stored in <computeroutput>uis</computeroutput>) and must not be freed or modified by the caller in any way. <simplesect kind="return"><para>NULL if no UI with <computeroutput>uri</computeroutput> is found in <computeroutput>list</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" line="108" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="collections_8c_1ac813506df9a8aa9f6ead06637c474130" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1ae2c6def8207facadef355b47b8802911" kindref="member">LilvPlugins</ref> *</type>
        <definition>LilvPlugins* lilv_plugins_new</definition>
        <argsstring>(void)</argsstring>
        <name>lilv_plugins_new</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" line="116" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga61051b67ff99c9384550cc00ddcd11dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
        <definition>LILV_API const LilvPlugin* lilv_plugins_get_by_uri</definition>
        <argsstring>(const LilvPlugins *list, const LilvNode *uri)</argsstring>
        <name>lilv_plugins_get_by_uri</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae2c6def8207facadef355b47b8802911" kindref="member">LilvPlugins</ref> *</type>
          <declname>plugins</declname>
          <defname>list</defname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a plugin from <computeroutput>plugins</computeroutput> by URI. Return value is shared (stored in <computeroutput>plugins</computeroutput>) and must not be freed or modified by the caller in any way. <simplesect kind="return"><para>NULL if no plugin with <computeroutput>uri</computeroutput> is found in <computeroutput>plugins</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" line="122" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1gac6e8a1c5f7b163211f995bcca3cdbc34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>LILV_API bool lilv_nodes_contains</definition>
        <argsstring>(const LilvNodes *list, const LilvNode *value)</argsstring>
        <name>lilv_nodes_contains</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref> *</type>
          <declname>values</declname>
          <defname>list</defname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return whether <computeroutput>values</computeroutput> contains <computeroutput>value</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" line="130" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" bodystart="130" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1gaa2be123ffe13621ca66679de7524e76b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref> *</type>
        <definition>LILV_API LilvNodes* lilv_nodes_merge</definition>
        <argsstring>(const LilvNodes *a, const LilvNodes *b)</argsstring>
        <name>lilv_nodes_merge</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a new LilvNodes that contains all nodes from both <computeroutput>a</computeroutput> and <computeroutput>b</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" line="140" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" bodystart="140" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga2bb721cba50f759a9c7d549c3a9fb52a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>LILV_API void lilv_plugin_classes_free</definition>
        <argsstring>(LilvPluginClasses *collection)</argsstring>
        <name>lilv_plugin_classes_free</name>
        <param>
          <type><ref refid="lilv_8h_1a1ef5389c0a24cb8e0adcf971d2d12f0e" kindref="member">LilvPluginClasses</ref> *</type>
          <declname>collection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" line="197" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" bodystart="197" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1gad93c3a234a5138a9b60f3666904765cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>LILV_API void lilv_scale_points_free</definition>
        <argsstring>(LilvScalePoints *collection)</argsstring>
        <name>lilv_scale_points_free</name>
        <param>
          <type><ref refid="lilv_8h_1a059c9ec61f4497a433d3e6030e9a3f37" kindref="member">LilvScalePoints</ref> *</type>
          <declname>collection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" line="202" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" bodystart="202" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga938f9a32ad1d4c9f8e83d21802764ba2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>LILV_API void lilv_uis_free</definition>
        <argsstring>(LilvUIs *collection)</argsstring>
        <name>lilv_uis_free</name>
        <param>
          <type><ref refid="lilv_8h_1af0d073c97d807e531f174ce2ee1b5492" kindref="member">LilvUIs</ref> *</type>
          <declname>collection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" line="207" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" bodystart="207" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1gac355adeca3dc54366899b6f1ef3b0fc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>LILV_API void lilv_nodes_free</definition>
        <argsstring>(LilvNodes *collection)</argsstring>
        <name>lilv_nodes_free</name>
        <param>
          <type><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref> *</type>
          <declname>collection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" line="212" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1gaebd31ae1b31d01968cf222fe08093c25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
        <definition>LILV_API LilvNode* lilv_nodes_get_first</definition>
        <argsstring>(const LilvNodes *collection)</argsstring>
        <name>lilv_nodes_get_first</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref> *</type>
          <declname>collection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" line="217" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c" bodystart="217" bodyend="220"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>2008-2014<sp/>David<sp/>Robillard<sp/>&lt;http://drobilla.net&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lilv__internal_8h" kindref="compound">lilv_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="lilv__internal_8h_1a2a02eed2df42be61defe0f1cda5a82d0" refkind="member"><highlight class="normal"><ref refid="collections_8c_1a2a02eed2df42be61defe0f1cda5a82d0" kindref="member">lilv_ptr_cmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a0fbe4a4f8dd857ee04923a901f27465f" kindref="member">intptr_t</ref>)a<sp/>-<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a0fbe4a4f8dd857ee04923a901f27465f" kindref="member">intptr_t</ref>)b;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="lilv__internal_8h_1a1cbada4a3206bc0d7fa62d3f4d571dac" refkind="member"><highlight class="normal"><ref refid="collections_8c_1a1cbada4a3206bc0d7fa62d3f4d571dac" kindref="member">lilv_resource_node_cmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>an<sp/>=<sp/>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*)a)-&gt;<ref refid="struct_sord_node_impl_1a92cfbbb49866b131b39ef8ac8b47a344" kindref="member">node</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>bn<sp/>=<sp/>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*)b)-&gt;<ref refid="struct_sord_node_impl_1a92cfbbb49866b131b39ef8ac8b47a344" kindref="member">node</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a0fbe4a4f8dd857ee04923a901f27465f" kindref="member">intptr_t</ref>)an<sp/>-<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a0fbe4a4f8dd857ee04923a901f27465f" kindref="member">intptr_t</ref>)bn;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Generic<sp/>collection<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="lilv__internal_8h_1ae75b2dab5f494b01d2a557726bf665b0" kindref="member">LilvCollection</ref>*</highlight></codeline>
<codeline lineno="36"><highlight class="normal">lilv_collection_new(<ref refid="group__zix_1gaa647997c2e16e85391dad2d77c02aff6" kindref="member">ZixComparator</ref><sp/>cmp,<sp/><ref refid="group__zix_1ga116fe3bb614b937a4190ab5fe645cc87" kindref="member">ZixDestroyFunc</ref><sp/>destructor)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zix_1ga72db646eab3fe826b87f97e02cf3bbd5" kindref="member">zix_tree_new</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>cmp,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>destructor);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="lilv__internal_8h_1addfea8fd72bef582707e5ca28ead0396" refkind="member"><highlight class="normal"><ref refid="collections_8c_1a538f84a24f00d03717120209157f6665" kindref="member">lilv_collection_free</ref>(<ref refid="lilv__internal_8h_1ae75b2dab5f494b01d2a557726bf665b0" kindref="member">LilvCollection</ref>*<sp/>coll)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coll)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zix_1gaa7e4d26fc7a27fff154c77b3b617d21c" kindref="member">zix_tree_free</ref>((<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*)coll);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="lilv__internal_8h_1ac6b9d44a7c8f1aed774d2f36db2fd2b6" refkind="member"><highlight class="normal"><ref refid="collections_8c_1a4a9d510179e76b440f6ee8be07857b6d" kindref="member">lilv_collection_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lilv__internal_8h_1ae75b2dab5f494b01d2a557726bf665b0" kindref="member">LilvCollection</ref>*<sp/>coll)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(coll<sp/>?<sp/><ref refid="group__zix_1gab456b92143bf007912fa343a8fcb5e69" kindref="member">zix_tree_size</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*)coll)<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="lilv_8h_1ae86a2663273587d791c8b8fbb008e567" kindref="member">LilvIter</ref>*</highlight></codeline>
<codeline lineno="55" refid="lilv__internal_8h_1a68193b96488ed7f8090bcf14764600f6" refkind="member"><highlight class="normal"><ref refid="collections_8c_1a68193b96488ed7f8090bcf14764600f6" kindref="member">lilv_collection_begin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lilv__internal_8h_1ae75b2dab5f494b01d2a557726bf665b0" kindref="member">LilvCollection</ref>*<sp/>collection)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>collection<sp/>?<sp/>(<ref refid="lilv_8h_1ae86a2663273587d791c8b8fbb008e567" kindref="member">LilvIter</ref>*)<ref refid="group__zix_1gae5cd6820a3fbfd92fd44755738430ed8" kindref="member">zix_tree_begin</ref>((<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*)collection)<sp/>:<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="61" refid="lilv__internal_8h_1a9d7d8d5ecf29d39a598e3ef6cd5b4e33" refkind="member"><highlight class="normal"><ref refid="collections_8c_1a9d7d8d5ecf29d39a598e3ef6cd5b4e33" kindref="member">lilv_collection_get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lilv__internal_8h_1ae75b2dab5f494b01d2a557726bf665b0" kindref="member">LilvCollection</ref>*<sp/>collection,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lilv_8h_1ae86a2663273587d791c8b8fbb008e567" kindref="member">LilvIter</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zix_1ga687b0675b68ea58eecc1739686853fee" kindref="member">zix_tree_get</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*)i);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Constructors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><ref refid="lilv_8h_1a059c9ec61f4497a433d3e6030e9a3f37" kindref="member">LilvScalePoints</ref>*</highlight></codeline>
<codeline lineno="70" refid="lilv__internal_8h_1a115607a0b582565f6ba69dbc85a6b744" refkind="member"><highlight class="normal"><ref refid="collections_8c_1a115607a0b582565f6ba69dbc85a6b744" kindref="member">lilv_scale_points_new</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lilv_collection_new(<ref refid="collections_8c_1a2a02eed2df42be61defe0f1cda5a82d0" kindref="member">lilv_ptr_cmp</ref>,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__zix_1ga116fe3bb614b937a4190ab5fe645cc87" kindref="member">ZixDestroyFunc</ref>)<ref refid="lilv__internal_8h_1a81e03037ef17188c4f33faabb72e15a9" kindref="member">lilv_scale_point_free</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*</highlight></codeline>
<codeline lineno="77" refid="lilv__internal_8h_1ad85dc561f7c943b545dafd49755a8a5c" refkind="member"><highlight class="normal"><ref refid="collections_8c_1ad85dc561f7c943b545dafd49755a8a5c" kindref="member">lilv_nodes_new</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lilv_collection_new(<ref refid="collections_8c_1a2a02eed2df42be61defe0f1cda5a82d0" kindref="member">lilv_ptr_cmp</ref>,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__zix_1ga116fe3bb614b937a4190ab5fe645cc87" kindref="member">ZixDestroyFunc</ref>)<ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><ref refid="lilv_8h_1af0d073c97d807e531f174ce2ee1b5492" kindref="member">LilvUIs</ref>*</highlight></codeline>
<codeline lineno="84" refid="lilv__internal_8h_1a680114ab41bc8c833ba89b8968a2e2c0" refkind="member"><highlight class="normal"><ref refid="collections_8c_1a680114ab41bc8c833ba89b8968a2e2c0" kindref="member">lilv_uis_new</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lilv_collection_new(<ref refid="lilv__internal_8h_1af7b79a37925300d807e90e0698a8ad49" kindref="member">lilv_header_compare_by_uri</ref>,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__zix_1ga116fe3bb614b937a4190ab5fe645cc87" kindref="member">ZixDestroyFunc</ref>)<ref refid="lilv__internal_8h_1a5dacbfa945646b4c4f5af7b9b6377548" kindref="member">lilv_ui_free</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><ref refid="lilv_8h_1a1ef5389c0a24cb8e0adcf971d2d12f0e" kindref="member">LilvPluginClasses</ref>*</highlight></codeline>
<codeline lineno="91" refid="lilv__internal_8h_1a34d8bba4d6fc4385bbb701d3c19a5851" refkind="member"><highlight class="normal"><ref refid="collections_8c_1a34d8bba4d6fc4385bbb701d3c19a5851" kindref="member">lilv_plugin_classes_new</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lilv_collection_new(<ref refid="lilv__internal_8h_1af7b79a37925300d807e90e0698a8ad49" kindref="member">lilv_header_compare_by_uri</ref>,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__zix_1ga116fe3bb614b937a4190ab5fe645cc87" kindref="member">ZixDestroyFunc</ref>)<ref refid="lilv__internal_8h_1a02d24fcf64a350a0fb832fe8cb585b17" kindref="member">lilv_plugin_class_free</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>URI<sp/>based<sp/>accessors<sp/>(for<sp/>collections<sp/>of<sp/>things<sp/>with<sp/>URIs)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_class_impl" kindref="compound">LilvPluginClass</ref>*</highlight></codeline>
<codeline lineno="100" refid="group__lilv_1ga24762b755734a1950b16547f26fc10c5" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga24762b755734a1950b16547f26fc10c5" kindref="member">lilv_plugin_classes_get_by_uri</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lilv_8h_1a1ef5389c0a24cb8e0adcf971d2d12f0e" kindref="member">LilvPluginClasses</ref>*<sp/>coll,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct_lilv_plugin_class_impl" kindref="compound">LilvPluginClass</ref>*)<ref refid="lilv__internal_8h_1a1076565953fdf2da1723b728658fd2e9" kindref="member">lilv_collection_get_by_uri</ref>(</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*)coll,<sp/>uri);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_u_i_impl" kindref="compound">LilvUI</ref>*</highlight></codeline>
<codeline lineno="108" refid="group__lilv_1gad46fe6df82b17906f1b5fd76918aec8d" refkind="member"><highlight class="normal"><ref refid="group__lilv_1gad46fe6df82b17906f1b5fd76918aec8d" kindref="member">lilv_uis_get_by_uri</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lilv_8h_1af0d073c97d807e531f174ce2ee1b5492" kindref="member">LilvUIs</ref>*<sp/>coll,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct_lilv_u_i_impl" kindref="compound">LilvUI</ref>*)<ref refid="lilv__internal_8h_1a1076565953fdf2da1723b728658fd2e9" kindref="member">lilv_collection_get_by_uri</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*)coll,<sp/>uri);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Plugins<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><ref refid="lilv_8h_1ae2c6def8207facadef355b47b8802911" kindref="member">LilvPlugins</ref>*</highlight></codeline>
<codeline lineno="116" refid="lilv__internal_8h_1ac813506df9a8aa9f6ead06637c474130" refkind="member"><highlight class="normal"><ref refid="collections_8c_1ac813506df9a8aa9f6ead06637c474130" kindref="member">lilv_plugins_new</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lilv_collection_new(<ref refid="lilv__internal_8h_1af7b79a37925300d807e90e0698a8ad49" kindref="member">lilv_header_compare_by_uri</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*</highlight></codeline>
<codeline lineno="122" refid="group__lilv_1ga61051b67ff99c9384550cc00ddcd11dc" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga61051b67ff99c9384550cc00ddcd11dc" kindref="member">lilv_plugins_get_by_uri</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lilv_8h_1ae2c6def8207facadef355b47b8802911" kindref="member">LilvPlugins</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*)<ref refid="lilv__internal_8h_1a1076565953fdf2da1723b728658fd2e9" kindref="member">lilv_collection_get_by_uri</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*)list,<sp/>uri);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Nodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="group__lilv_1gac6e8a1c5f7b163211f995bcca3cdbc34" refkind="member"><highlight class="normal"><ref refid="group__lilv_1gac6e8a1c5f7b163211f995bcca3cdbc34" kindref="member">lilv_nodes_contains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gad4848f8348d22d0cfa659ba7ed6ea1b5" kindref="member">LILV_FOREACH</ref>(nodes,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>list)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__lilv_1ga3fd9df99cb05f2f061233d2839e820f1" kindref="member">lilv_node_equals</ref>(<ref refid="group__lilv_1ga09442229b233f19305f8c04f9e46158c" kindref="member">lilv_nodes_get</ref>(list,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>),<sp/>value))</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*</highlight></codeline>
<codeline lineno="140" refid="group__lilv_1gaa2be123ffe13621ca66679de7524e76b" refkind="member"><highlight class="normal"><ref refid="group__lilv_1gaa2be123ffe13621ca66679de7524e76b" kindref="member">lilv_nodes_merge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*<sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*<sp/>result<sp/>=<sp/><ref refid="collections_8c_1ad85dc561f7c943b545dafd49755a8a5c" kindref="member">lilv_nodes_new</ref>();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gad4848f8348d22d0cfa659ba7ed6ea1b5" kindref="member">LILV_FOREACH</ref>(nodes,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>a)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zix_1gabbf32f6bf3dd802fd36af7ac17cee87c" kindref="member">zix_tree_insert</ref>((<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*)result,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gad85bca25ea40812ce8c4222ba40d63d2" kindref="member">lilv_node_duplicate</ref>(<ref refid="group__lilv_1ga09442229b233f19305f8c04f9e46158c" kindref="member">lilv_nodes_get</ref>(a,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)),</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gad4848f8348d22d0cfa659ba7ed6ea1b5" kindref="member">LILV_FOREACH</ref>(nodes,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>b)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zix_1gabbf32f6bf3dd802fd36af7ac17cee87c" kindref="member">zix_tree_insert</ref>((<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*)result,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gad85bca25ea40812ce8c4222ba40d63d2" kindref="member">lilv_node_duplicate</ref>(<ref refid="group__lilv_1ga09442229b233f19305f8c04f9e46158c" kindref="member">lilv_nodes_get</ref>(b,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)),</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Iterator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="collections_8c_1ae67dab7ff474830ef35dec00b42aac51" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LILV_COLLECTION_IMPL(prefix,<sp/>CT,<sp/>ET)<sp/>\</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor">LILV_API<sp/>\</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor">unsigned<sp/>\</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor">prefix##_size(const<sp/>CT*<sp/>collection)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>lilv_collection_size(collection);<sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor">}<sp/>\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor">LILV_API<sp/>\</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor">LilvIter*<sp/>\</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor">prefix##_begin(const<sp/>CT*<sp/>collection)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>lilv_collection_begin(collection);<sp/>\</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor">}<sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor">LILV_API<sp/>\</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor">const<sp/>ET*<sp/>\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor">prefix##_get(const<sp/>CT*<sp/>collection,<sp/>LilvIter*<sp/>i)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>(ET*)lilv_collection_get(collection,<sp/>i);<sp/>\</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor">}<sp/>\</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor">LILV_API<sp/>\</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor">LilvIter*<sp/>\</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor">prefix##_next(const<sp/>CT*<sp/>collection,<sp/>LilvIter*<sp/>i)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>zix_tree_iter_next((ZixTreeIter*)i);<sp/>\</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor">}<sp/>\</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor">LILV_API<sp/>\</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor">bool<sp/>\</highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor">prefix##_is_end(const<sp/>CT*<sp/>collection,<sp/>LilvIter*<sp/>i)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>zix_tree_iter_is_end((ZixTreeIter*)i);<sp/>\</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><ref refid="collections_8c_1ae67dab7ff474830ef35dec00b42aac51" kindref="member">LILV_COLLECTION_IMPL</ref>(lilv_plugin_classes,<sp/><ref refid="lilv_8h_1a1ef5389c0a24cb8e0adcf971d2d12f0e" kindref="member">LilvPluginClasses</ref>,<sp/><ref refid="struct_lilv_plugin_class_impl" kindref="compound">LilvPluginClass</ref>)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><ref refid="collections_8c_1ae67dab7ff474830ef35dec00b42aac51" kindref="member">LILV_COLLECTION_IMPL</ref>(lilv_scale_points,<sp/><ref refid="lilv_8h_1a059c9ec61f4497a433d3e6030e9a3f37" kindref="member">LilvScalePoints</ref>,<sp/><ref refid="struct_lilv_scale_point_impl" kindref="compound">LilvScalePoint</ref>)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><ref refid="collections_8c_1ae67dab7ff474830ef35dec00b42aac51" kindref="member">LILV_COLLECTION_IMPL</ref>(lilv_uis,<sp/><ref refid="lilv_8h_1af0d073c97d807e531f174ce2ee1b5492" kindref="member">LilvUIs</ref>,<sp/><ref refid="struct_lilv_u_i_impl" kindref="compound">LilvUI</ref>)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><ref refid="collections_8c_1ae67dab7ff474830ef35dec00b42aac51" kindref="member">LILV_COLLECTION_IMPL</ref>(lilv_nodes,<sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>,<sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><ref refid="collections_8c_1ae67dab7ff474830ef35dec00b42aac51" kindref="member">LILV_COLLECTION_IMPL</ref>(lilv_plugins,<sp/><ref refid="lilv_8h_1ae2c6def8207facadef355b47b8802911" kindref="member">LilvPlugins</ref>,<sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="group__lilv_1ga2bb721cba50f759a9c7d549c3a9fb52a" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga2bb721cba50f759a9c7d549c3a9fb52a" kindref="member">lilv_plugin_classes_free</ref>(<ref refid="lilv_8h_1a1ef5389c0a24cb8e0adcf971d2d12f0e" kindref="member">LilvPluginClasses</ref>*<sp/>collection)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="collections_8c_1a538f84a24f00d03717120209157f6665" kindref="member">lilv_collection_free</ref>(collection);</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="group__lilv_1gad93c3a234a5138a9b60f3666904765cf" refkind="member"><highlight class="normal"><ref refid="group__lilv_1gad93c3a234a5138a9b60f3666904765cf" kindref="member">lilv_scale_points_free</ref>(<ref refid="lilv_8h_1a059c9ec61f4497a433d3e6030e9a3f37" kindref="member">LilvScalePoints</ref>*<sp/>collection)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="collections_8c_1a538f84a24f00d03717120209157f6665" kindref="member">lilv_collection_free</ref>(collection);</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="group__lilv_1ga938f9a32ad1d4c9f8e83d21802764ba2" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga938f9a32ad1d4c9f8e83d21802764ba2" kindref="member">lilv_uis_free</ref>(<ref refid="lilv_8h_1af0d073c97d807e531f174ce2ee1b5492" kindref="member">LilvUIs</ref>*<sp/>collection)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="collections_8c_1a538f84a24f00d03717120209157f6665" kindref="member">lilv_collection_free</ref>(collection);</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="group__lilv_1gac355adeca3dc54366899b6f1ef3b0fc3" refkind="member"><highlight class="normal"><ref refid="group__lilv_1gac355adeca3dc54366899b6f1ef3b0fc3" kindref="member">lilv_nodes_free</ref>(<ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*<sp/>collection)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="collections_8c_1a538f84a24f00d03717120209157f6665" kindref="member">lilv_collection_free</ref>(collection);</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*</highlight></codeline>
<codeline lineno="217" refid="group__lilv_1gaebd31ae1b31d01968cf222fe08093c25" refkind="member"><highlight class="normal"><ref refid="group__lilv_1gaebd31ae1b31d01968cf222fe08093c25" kindref="member">lilv_nodes_get_first</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*<sp/>collection)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*)<ref refid="collections_8c_1a9d7d8d5ecf29d39a598e3ef6cd5b4e33" kindref="member">lilv_collection_get</ref>(collection,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="collections_8c_1a68193b96488ed7f8090bcf14764600f6" kindref="member">lilv_collection_begin</ref>(collection));</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c"/>
  </compounddef>
</doxygen>
