<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="test__file__io_8c" kind="file" language="C++">
    <compoundname>test_file_io.c</compoundname>
    <includes refid="sfconfig_8h" local="yes">sfconfig.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">inttypes.h</includes>
    <includes refid="libsndfile_2src_2common_8h" local="yes">common.h</includes>
    <includes refid="test__main_8h" local="yes">test_main.h</includes>
    <incdepgraph>
      <node id="20309">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c</label>
        <link refid="test_file_io.c"/>
        <childnode refid="20310" relation="include">
        </childnode>
        <childnode refid="20312" relation="include">
        </childnode>
        <childnode refid="20313" relation="include">
        </childnode>
        <childnode refid="20314" relation="include">
        </childnode>
        <childnode refid="20315" relation="include">
        </childnode>
        <childnode refid="20316" relation="include">
        </childnode>
        <childnode refid="20317" relation="include">
        </childnode>
        <childnode refid="20319" relation="include">
        </childnode>
      </node>
      <node id="20313">
        <label>stdlib.h</label>
      </node>
      <node id="20315">
        <label>errno.h</label>
      </node>
      <node id="20318">
        <label>sndfile.h</label>
      </node>
      <node id="20314">
        <label>string.h</label>
      </node>
      <node id="20310">
        <label>sfconfig.h</label>
        <link refid="sfconfig_8h"/>
        <childnode refid="20311" relation="include">
        </childnode>
      </node>
      <node id="20317">
        <label>common.h</label>
        <link refid="libsndfile_2src_2common_8h"/>
        <childnode refid="20310" relation="include">
        </childnode>
        <childnode refid="20313" relation="include">
        </childnode>
        <childnode refid="20314" relation="include">
        </childnode>
        <childnode refid="20318" relation="include">
        </childnode>
      </node>
      <node id="20319">
        <label>test_main.h</label>
        <link refid="test__main_8h"/>
      </node>
      <node id="20311">
        <label>config.h</label>
      </node>
      <node id="20312">
        <label>stdio.h</label>
      </node>
      <node id="20316">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__file__io_8c_1a93e4e4a20324c80122c770374542912f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void make_data</definition>
        <argsstring>(int *data, int len, int seed)</argsstring>
        <name>make_data</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c" line="36" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c" bodystart="418" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="test__file__io_8c_1a3bebac2b2c1360262e93c2eb76862cd7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void file_open_test</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>file_open_test</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c" line="38" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c" bodystart="57" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="test__file__io_8c_1a5fdb13510b6a21872796f6044f938cf6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void file_read_write_test</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>file_read_write_test</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c" line="39" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c" bodystart="110" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="test__file__io_8c_1abc7e357091bfaad4200993bdcb8e7463" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void file_truncate_test</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>file_truncate_test</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c" line="40" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c" bodystart="266" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="test__file__io_8c_1a8c47c6298f634dff634d9f65883624a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void test_open_or_die</definition>
        <argsstring>(SF_PRIVATE *psf, int linenum)</argsstring>
        <name>test_open_or_die</name>
        <param>
          <type><ref refid="libsndfile_2src_2common_8h_1ab5debd339ecaf40f50a223e218900c24" kindref="member">SF_PRIVATE</ref> *</type>
          <declname>psf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>linenum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c" line="42" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c" bodystart="332" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="test__file__io_8c_1a531c78ec2aefd8302e7f781bace3c357" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void test_close_or_die</definition>
        <argsstring>(SF_PRIVATE *psf, int linenum)</argsstring>
        <name>test_close_or_die</name>
        <param>
          <type><ref refid="libsndfile_2src_2common_8h_1ab5debd339ecaf40f50a223e218900c24" kindref="member">SF_PRIVATE</ref> *</type>
          <declname>psf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>linenum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c" line="43" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c" bodystart="345" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="test__file__io_8c_1ad57b64811b1b38c2d3327adfeff106ac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void test_write_or_die</definition>
        <argsstring>(SF_PRIVATE *psf, void *data, sf_count_t bytes, sf_count_t items, sf_count_t new_position, int linenum)</argsstring>
        <name>test_write_or_die</name>
        <param>
          <type><ref refid="libsndfile_2src_2common_8h_1ab5debd339ecaf40f50a223e218900c24" kindref="member">SF_PRIVATE</ref> *</type>
          <declname>psf</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref></type>
          <declname>bytes</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref></type>
          <declname>items</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref></type>
          <declname>new_position</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>linenum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c" line="45" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c" bodystart="356" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="test__file__io_8c_1a700c3e288d7b0d5c359004b381d9d08b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void test_read_or_die</definition>
        <argsstring>(SF_PRIVATE *psf, void *data, sf_count_t bytes, sf_count_t items, sf_count_t new_position, int linenum)</argsstring>
        <name>test_read_or_die</name>
        <param>
          <type><ref refid="libsndfile_2src_2common_8h_1ab5debd339ecaf40f50a223e218900c24" kindref="member">SF_PRIVATE</ref> *</type>
          <declname>psf</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref></type>
          <declname>bytes</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref></type>
          <declname>items</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref></type>
          <declname>new_position</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>linenum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c" line="46" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c" bodystart="374" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="test__file__io_8c_1a4fbf615ac4057f5bdc6b45860f4654f6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void test_equal_or_die</definition>
        <argsstring>(int *array1, int *array2, int len, int linenum)</argsstring>
        <name>test_equal_or_die</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>array1</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>array2</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>linenum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c" line="47" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c" bodystart="406" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="test__file__io_8c_1a1c2e1a69073fad9f94d9e2138c649d40" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void test_seek_or_die</definition>
        <argsstring>(SF_PRIVATE *psf, sf_count_t offset, int whence, sf_count_t new_position, int linenum)</argsstring>
        <name>test_seek_or_die</name>
        <param>
          <type><ref refid="libsndfile_2src_2common_8h_1ab5debd339ecaf40f50a223e218900c24" kindref="member">SF_PRIVATE</ref> *</type>
          <declname>psf</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>whence</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref></type>
          <declname>new_position</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>linenum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c" line="48" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c" bodystart="392" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="test__file__io_8c_1a5441b5e0b25711a2499d90f4f27f2f3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void test_file_io</definition>
        <argsstring>(void)</argsstring>
        <name>test_file_io</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c" line="429" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c" bodystart="429" bodyend="437"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>Copyright<sp/>(C)<sp/>2002-2011<sp/>Erik<sp/>de<sp/>Castro<sp/>Lopo<sp/>&lt;erikd@mega-nerd.com&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment">**<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sfconfig_8h" kindref="compound">sfconfig.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_UNISTD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libsndfile_2src_2common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="test__main_8h" kindref="compound">test_main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>make_data<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed)<sp/>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>file_open_test<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>)<sp/>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>file_read_write_test<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>)<sp/>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>file_truncate_test<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>)<sp/>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_open_or_die<sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linenum)<sp/>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_close_or_die<sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linenum)<sp/>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_write_or_die<sp/><sp/><sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/>bytes,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/>items,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/>new_position,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linenum)<sp/>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_read_or_die<sp/><sp/><sp/><sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/>bytes,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/>items,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/>new_position,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linenum)<sp/>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_equal_or_die<sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*array1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*array2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linenum)<sp/>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libsndfile_2tests_2utils_8c_1a581f4c6ddc165d45490932bbf3863998" kindref="member">test_seek_or_die</ref><sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whence,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/>new_position,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linenum)<sp/>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*==============================================================================</highlight></codeline>
<codeline lineno="53"><highlight class="comment">**<sp/>Actual<sp/>test<sp/>functions.</highlight></codeline>
<codeline lineno="54"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">file_open_test<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{<sp/><sp/><sp/><ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>sf_data,<sp/>*psf<sp/>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref><sp/>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetest-sndfile-metadata-set_1a7eadfb659f8e3c097dcb1bbc6525dd4d" kindref="member">print_test_name</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Testing<sp/>file<sp/>open&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(&amp;sf_data,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(sf_data))<sp/>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>psf<sp/>=<sp/>&amp;sf_data<sp/>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>that<sp/>the<sp/>file<sp/>doesn&apos;t<sp/>already<sp/>exist.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlink<sp/>(filename)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>ENOENT)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>unlink<sp/>failed<sp/>(%d)<sp/>:<sp/>%s\n\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__,<sp/>errno,<sp/>strerror<sp/>(errno))<sp/>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a79dc5fc1f9c6e1da23a11014d105e7fd" kindref="member">mode</ref><sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a125531fe9c895237bccd35736370e815" kindref="member">SFM_READ</ref><sp/>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1ae23a10ddaa8dcb2be3c278d9a639bfcd" kindref="member">path</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a5e8ec1f9af1c66d1680de3fdae2e32db" kindref="member">c</ref>,<sp/>sizeof<sp/>(psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1ae23a10ddaa8dcb2be3c278d9a639bfcd" kindref="member">path</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a5e8ec1f9af1c66d1680de3fdae2e32db" kindref="member">c</ref>),<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>filename)<sp/>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>that<sp/>open<sp/>for<sp/>read<sp/>fails<sp/>if<sp/>the<sp/>file<sp/>doesn&apos;t<sp/>exist.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1a7d4ef7027c08e062571fdf366a4998e3" kindref="member">psf_fopen</ref><sp/>(psf)<sp/>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>psf_fopen()<sp/>should<sp/>have<sp/>failed.\n\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>error<sp/>to<sp/>zero.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a4213ea059db3a7b9453342f6e9714649" kindref="member">error</ref><sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1a34df7cc7f69a8ec535eec8a524dcbaf9a19466eb1ebaca5056d32ac7c0e781257" kindref="member">SFE_NO_ERROR</ref><sp/>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>file<sp/>open<sp/>in<sp/>write<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a79dc5fc1f9c6e1da23a11014d105e7fd" kindref="member">mode</ref><sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a449991ce14cb1b9715cf444ffdb9e4a0" kindref="member">SFM_WRITE</ref><sp/>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>test_open_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>test_close_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>unlink<sp/>(psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1ae23a10ddaa8dcb2be3c278d9a639bfcd" kindref="member">path</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a5e8ec1f9af1c66d1680de3fdae2e32db" kindref="member">c</ref>)<sp/>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>file<sp/>open<sp/>in<sp/>read/write<sp/>mode<sp/>for<sp/>a<sp/>non-existant<sp/>file.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a79dc5fc1f9c6e1da23a11014d105e7fd" kindref="member">mode</ref><sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a1860040e1c905b2fe2dd7dded86d2544" kindref="member">SFM_RDWR</ref><sp/>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>test_open_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>test_close_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>file<sp/>open<sp/>in<sp/>read/write<sp/>mode<sp/>for<sp/>an<sp/>existing<sp/>file.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a79dc5fc1f9c6e1da23a11014d105e7fd" kindref="member">mode</ref><sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a1860040e1c905b2fe2dd7dded86d2544" kindref="member">SFM_RDWR</ref><sp/>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>test_open_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>test_close_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>unlink<sp/>(psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1ae23a10ddaa8dcb2be3c278d9a639bfcd" kindref="member">path</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a5e8ec1f9af1c66d1680de3fdae2e32db" kindref="member">c</ref>)<sp/>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;ok&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>file_open_test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">file_read_write_test<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1a5053380bd07906fdf0366abb304db2af" kindref="member">data_out</ref><sp/>[512]<sp/>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_in<sp/><sp/>[512]<sp/>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>sf_data,<sp/>*psf<sp/>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/>retval<sp/>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Open<sp/>a<sp/>new<sp/>file<sp/>and<sp/>write<sp/>two<sp/>blocks<sp/>of<sp/>data<sp/>to<sp/>the<sp/>file.<sp/>After<sp/>each</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>write,<sp/>test<sp/>that<sp/>psf_get_filelen()<sp/>returns<sp/>the<sp/>new<sp/>length.</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetest-sndfile-metadata-set_1a7eadfb659f8e3c097dcb1bbc6525dd4d" kindref="member">print_test_name</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Testing<sp/>file<sp/>write&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(&amp;sf_data,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(sf_data))<sp/>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>psf<sp/>=<sp/>&amp;sf_data<sp/>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1ae23a10ddaa8dcb2be3c278d9a639bfcd" kindref="member">path</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a5e8ec1f9af1c66d1680de3fdae2e32db" kindref="member">c</ref>,<sp/>sizeof<sp/>(psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1ae23a10ddaa8dcb2be3c278d9a639bfcd" kindref="member">path</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a5e8ec1f9af1c66d1680de3fdae2e32db" kindref="member">c</ref>),<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>filename)<sp/>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>file<sp/>open<sp/>in<sp/>write<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a79dc5fc1f9c6e1da23a11014d105e7fd" kindref="member">mode</ref><sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a449991ce14cb1b9715cf444ffdb9e4a0" kindref="member">SFM_WRITE</ref><sp/>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>test_open_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>make_data<sp/>(data_out,<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/>1)<sp/>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>test_write_or_die<sp/>(psf,<sp/>data_out,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_out<sp/>[0]),<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_out),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1a46fc850343413c4c46fca22c7549f0b2" kindref="member">psf_get_filelen</ref><sp/>(psf))<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_out))</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>file<sp/>length<sp/>after<sp/>write<sp/>is<sp/>not<sp/>correct<sp/>(%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ae372e90b62c1e8b51dc5d95bf7f5ba48" kindref="member">PRId64</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>should<sp/>be<sp/>%zd).\n\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__,<sp/>retval,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_out))<sp/>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;An<sp/>fsync()<sp/>may<sp/>be<sp/>necessary<sp/>before<sp/>fstat()<sp/>in<sp/>psf_get_filelen().\n\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>make_data<sp/>(data_out,<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/>2)<sp/>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>test_write_or_die<sp/>(psf,<sp/>data_out,<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_out<sp/>[0]),<sp/>2<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_out),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1a46fc850343413c4c46fca22c7549f0b2" kindref="member">psf_get_filelen</ref><sp/>(psf))<sp/>!=<sp/>2<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_out))</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>file<sp/>length<sp/>after<sp/>write<sp/>is<sp/>not<sp/>correct.<sp/>(%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ae372e90b62c1e8b51dc5d95bf7f5ba48" kindref="member">PRId64</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>should<sp/>be<sp/>%zd)\n\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__,<sp/>retval,<sp/>2<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_out))<sp/>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>test_close_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;ok&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Now<sp/>open<sp/>the<sp/>file<sp/>in<sp/>read<sp/>mode,<sp/>check<sp/>the<sp/>file<sp/>length<sp/>and<sp/>check</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>that<sp/>the<sp/>data<sp/>is<sp/>correct.</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetest-sndfile-metadata-set_1a7eadfb659f8e3c097dcb1bbc6525dd4d" kindref="member">print_test_name</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Testing<sp/>file<sp/>read&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>file<sp/>open<sp/>in<sp/>write<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a79dc5fc1f9c6e1da23a11014d105e7fd" kindref="member">mode</ref><sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a125531fe9c895237bccd35736370e815" kindref="member">SFM_READ</ref><sp/>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>test_open_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>make_data<sp/>(data_out,<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/>1)<sp/>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>test_read_or_die<sp/>(psf,<sp/>data_in,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_in),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_in),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>test_equal_or_die<sp/><sp/><sp/>(data_out,<sp/>data_in,<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>make_data<sp/>(data_out,<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/>2)<sp/>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>test_read_or_die<sp/>(psf,<sp/>data_in,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_in<sp/>[0]),<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_in),<sp/>2<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_in),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>test_equal_or_die<sp/><sp/><sp/>(data_out,<sp/>data_in,<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>test_close_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;ok&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Open<sp/>the<sp/>file<sp/>in<sp/>read/write<sp/>mode,<sp/>seek<sp/>around<sp/>a<sp/>bit<sp/>and<sp/>then<sp/>seek<sp/>to</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>the<sp/>end<sp/>of<sp/>the<sp/>file<sp/>and<sp/>write<sp/>another<sp/>block<sp/>of<sp/>data<sp/>(3rd<sp/>block).<sp/>Then</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>go<sp/>back<sp/>and<sp/>check<sp/>that<sp/>all<sp/>three<sp/>blocks<sp/>are<sp/>correct.</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetest-sndfile-metadata-set_1a7eadfb659f8e3c097dcb1bbc6525dd4d" kindref="member">print_test_name</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Testing<sp/>file<sp/>seek&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>file<sp/>open<sp/>in<sp/>read/write<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a79dc5fc1f9c6e1da23a11014d105e7fd" kindref="member">mode</ref><sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a1860040e1c905b2fe2dd7dded86d2544" kindref="member">SFM_RDWR</ref><sp/>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>test_open_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2tests_2utils_8c_1a581f4c6ddc165d45490932bbf3863998" kindref="member">test_seek_or_die</ref><sp/>(psf,<sp/>0,<sp/>SEEK_SET,<sp/>0,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2tests_2utils_8c_1a581f4c6ddc165d45490932bbf3863998" kindref="member">test_seek_or_die</ref><sp/>(psf,<sp/>0,<sp/>SEEK_END,<sp/>2<sp/>*<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(data_out),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2tests_2utils_8c_1a581f4c6ddc165d45490932bbf3863998" kindref="member">test_seek_or_die</ref><sp/>(psf,<sp/>-1<sp/>*<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(data_out),<sp/>SEEK_CUR,<sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref>)<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_out),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2tests_2utils_8c_1a581f4c6ddc165d45490932bbf3863998" kindref="member">test_seek_or_die</ref><sp/>(psf,<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(data_out),<sp/>SEEK_CUR,<sp/>2<sp/>*<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(data_out),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>make_data<sp/>(data_out,<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/>3)<sp/>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>test_write_or_die<sp/>(psf,<sp/>data_out,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_out<sp/>[0]),<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/>3<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_out),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2tests_2utils_8c_1a581f4c6ddc165d45490932bbf3863998" kindref="member">test_seek_or_die</ref><sp/>(psf,<sp/>0,<sp/>SEEK_SET,<sp/>0,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>make_data<sp/>(data_out,<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/>1)<sp/>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>test_read_or_die<sp/>(psf,<sp/>data_in,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_in),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_in),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>test_equal_or_die<sp/><sp/><sp/>(data_out,<sp/>data_in,<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2tests_2utils_8c_1a581f4c6ddc165d45490932bbf3863998" kindref="member">test_seek_or_die</ref><sp/>(psf,<sp/>2<sp/>*<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(data_out),<sp/>SEEK_SET,<sp/>2<sp/>*<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(data_out),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>make_data<sp/>(data_out,<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/>3)<sp/>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>test_read_or_die<sp/>(psf,<sp/>data_in,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_in),<sp/>3<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_in),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>test_equal_or_die<sp/><sp/><sp/>(data_out,<sp/>data_in,<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2tests_2utils_8c_1a581f4c6ddc165d45490932bbf3863998" kindref="member">test_seek_or_die</ref><sp/>(psf,<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(data_out),<sp/>SEEK_SET,<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(data_out),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>make_data<sp/>(data_out,<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/>2)<sp/>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>test_read_or_die<sp/>(psf,<sp/>data_in,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_in),<sp/>2<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_in),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>test_equal_or_die<sp/><sp/><sp/>(data_out,<sp/>data_in,<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>test_close_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;ok&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Now<sp/>test<sp/>operations<sp/>with<sp/>a<sp/>non-zero<sp/>psf-&gt;fileoffset<sp/>field.<sp/>This<sp/>field</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>sets<sp/>an<sp/>artificial<sp/>file<sp/>start<sp/>positions<sp/>so<sp/>that<sp/>a<sp/>seek<sp/>to<sp/>the<sp/>start<sp/>of</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>the<sp/>file<sp/>will<sp/>actually<sp/>be<sp/>a<sp/>seek<sp/>to<sp/>the<sp/>value<sp/>given<sp/>by<sp/>psf-&gt;fileoffset.</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetest-sndfile-metadata-set_1a7eadfb659f8e3c097dcb1bbc6525dd4d" kindref="member">print_test_name</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Testing<sp/>file<sp/>offset&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>file<sp/>open<sp/>in<sp/>read/write<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a79dc5fc1f9c6e1da23a11014d105e7fd" kindref="member">mode</ref><sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a1860040e1c905b2fe2dd7dded86d2544" kindref="member">SFM_RDWR</ref><sp/>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a182c47220c95570e410519630a8998cf" kindref="member">fileoffset</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_out<sp/>[0])<sp/>*<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out)<sp/>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>test_open_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1a46fc850343413c4c46fca22c7549f0b2" kindref="member">psf_get_filelen</ref><sp/>(psf))<sp/>!=<sp/>3<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_out))</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>file<sp/>length<sp/>after<sp/>write<sp/>is<sp/>not<sp/>correct.<sp/>(%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ae372e90b62c1e8b51dc5d95bf7f5ba48" kindref="member">PRId64</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>should<sp/>be<sp/>%zd)\n\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__,<sp/>retval,<sp/>3<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_out))<sp/>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2tests_2utils_8c_1a581f4c6ddc165d45490932bbf3863998" kindref="member">test_seek_or_die</ref><sp/>(psf,<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(data_out),<sp/>SEEK_SET,<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(data_out),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>make_data<sp/>(data_out,<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/>5)<sp/>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>test_write_or_die<sp/>(psf,<sp/>data_out,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_out<sp/>[0]),<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/>2<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_out),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>test_close_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>final<sp/>test<sp/>with<sp/>psf-&gt;fileoffset<sp/>==<sp/>0.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a79dc5fc1f9c6e1da23a11014d105e7fd" kindref="member">mode</ref><sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a1860040e1c905b2fe2dd7dded86d2544" kindref="member">SFM_RDWR</ref><sp/>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a182c47220c95570e410519630a8998cf" kindref="member">fileoffset</ref><sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>test_open_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1a46fc850343413c4c46fca22c7549f0b2" kindref="member">psf_get_filelen</ref><sp/>(psf))<sp/>!=<sp/>3<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_out))</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>file<sp/>length<sp/>after<sp/>write<sp/>is<sp/>not<sp/>correct.<sp/>(%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ae372e90b62c1e8b51dc5d95bf7f5ba48" kindref="member">PRId64</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>should<sp/>be<sp/>%zd)\n\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__,<sp/>retval,<sp/>3<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_out))<sp/>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>make_data<sp/>(data_out,<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/>1)<sp/>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>test_read_or_die<sp/>(psf,<sp/>data_in,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_in),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_in),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>test_equal_or_die<sp/><sp/><sp/>(data_out,<sp/>data_in,<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>make_data<sp/>(data_out,<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/>2)<sp/>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>test_read_or_die<sp/>(psf,<sp/>data_in,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_in),<sp/>2<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_in),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>test_equal_or_die<sp/><sp/><sp/>(data_out,<sp/>data_in,<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>make_data<sp/>(data_out,<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/>5)<sp/>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>test_read_or_die<sp/>(psf,<sp/>data_in,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_in),<sp/>3<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data_in),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>test_equal_or_die<sp/><sp/><sp/>(data_out,<sp/>data_in,<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data_out),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>test_close_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;ok&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>file_read_write_test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">file_truncate_test<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{<sp/><sp/><sp/><ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>sf_data,<sp/>*psf<sp/>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structbuffer" kindref="compound">buffer</ref><sp/>[256]<sp/>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Open<sp/>a<sp/>new<sp/>file<sp/>and<sp/>write<sp/>two<sp/>blocks<sp/>of<sp/>data<sp/>to<sp/>the<sp/>file.<sp/>After<sp/>each</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>write,<sp/>test<sp/>that<sp/>psf_get_filelen()<sp/>returns<sp/>the<sp/>new<sp/>length.</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetest-sndfile-metadata-set_1a7eadfb659f8e3c097dcb1bbc6525dd4d" kindref="member">print_test_name</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Testing<sp/>file<sp/>truncate&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(&amp;sf_data,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(sf_data))<sp/>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(buffer,<sp/>0xEE,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buffer))<sp/>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>psf<sp/>=<sp/>&amp;sf_data<sp/>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1ae23a10ddaa8dcb2be3c278d9a639bfcd" kindref="member">path</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a5e8ec1f9af1c66d1680de3fdae2e32db" kindref="member">c</ref>,<sp/>sizeof<sp/>(psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1ae23a10ddaa8dcb2be3c278d9a639bfcd" kindref="member">path</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a5e8ec1f9af1c66d1680de3fdae2e32db" kindref="member">c</ref>),<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>filename)<sp/>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Open<sp/>the<sp/>file<sp/>write<sp/>mode,<sp/>write<sp/>0xEE<sp/>data<sp/>and<sp/>then<sp/>extend<sp/>the<sp/>file</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>using<sp/>truncate<sp/>(the<sp/>extended<sp/>data<sp/>should<sp/>be<sp/>0x00).</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a79dc5fc1f9c6e1da23a11014d105e7fd" kindref="member">mode</ref><sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a449991ce14cb1b9715cf444ffdb9e4a0" kindref="member">SFM_WRITE</ref><sp/>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>test_open_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>test_write_or_die<sp/>(psf,<sp/>buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buffer)<sp/>/<sp/>2,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buffer)<sp/>/<sp/>2,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2common_8h_1ad49388b33563955777450f71fcb59ce6" kindref="member">psf_ftruncate</ref><sp/>(psf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buffer))<sp/>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>test_close_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Open<sp/>the<sp/>file<sp/>in<sp/>read<sp/>mode<sp/>and<sp/>check<sp/>the<sp/>data.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a79dc5fc1f9c6e1da23a11014d105e7fd" kindref="member">mode</ref><sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a125531fe9c895237bccd35736370e815" kindref="member">SFM_READ</ref><sp/>;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>test_open_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>test_read_or_die<sp/>(psf,<sp/>buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buffer),<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buffer),<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>test_close_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(buffer)<sp/>/<sp/>2<sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer<sp/>[k]<sp/>!=<sp/>0xEE)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d<sp/>:<sp/>buffer<sp/>[%d]<sp/>=<sp/>%d<sp/>(should<sp/>be<sp/>0xEE)\n\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__,<sp/>k,<sp/>buffer<sp/>[k])<sp/>;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(buffer)<sp/>/<sp/>2<sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(buffer)<sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer<sp/>[k]<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d<sp/>:<sp/>buffer<sp/>[%d]<sp/>=<sp/>%d<sp/>(should<sp/>be<sp/>0)\n\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__,<sp/>k,<sp/>buffer<sp/>[k])<sp/>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Open<sp/>the<sp/>file<sp/>in<sp/>read/write<sp/>and<sp/>shorten<sp/>the<sp/>file<sp/>using<sp/>truncate.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a79dc5fc1f9c6e1da23a11014d105e7fd" kindref="member">mode</ref><sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a1860040e1c905b2fe2dd7dded86d2544" kindref="member">SFM_RDWR</ref><sp/>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>test_open_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2common_8h_1ad49388b33563955777450f71fcb59ce6" kindref="member">psf_ftruncate</ref><sp/>(psf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buffer)<sp/>/<sp/>4)<sp/>;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>test_close_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>file<sp/>length.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1aba0363a05c5d908f7af983ca82a7b881" kindref="member">file</ref>.<ref refid="struct_p_s_f___f_i_l_e_1a79dc5fc1f9c6e1da23a11014d105e7fd" kindref="member">mode</ref><sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a125531fe9c895237bccd35736370e815" kindref="member">SFM_READ</ref><sp/>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>test_open_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2tests_2utils_8c_1a581f4c6ddc165d45490932bbf3863998" kindref="member">test_seek_or_die</ref><sp/>(psf,<sp/>0,<sp/>SEEK_END,<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(buffer)<sp/>/<sp/>4,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>test_close_or_die<sp/>(psf,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;ok&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>file_truncate_test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">/*==============================================================================</highlight></codeline>
<codeline lineno="328"><highlight class="comment">**<sp/>Testing<sp/>helper<sp/>functions.</highlight></codeline>
<codeline lineno="329"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal">test_open_or_die<sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linenum)</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>error<sp/>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>that<sp/>open<sp/>for<sp/>read<sp/>fails<sp/>if<sp/>the<sp/>file<sp/>doesn&apos;t<sp/>exist.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1a7d4ef7027c08e062571fdf366a4998e3" kindref="member">psf_fopen</ref><sp/>(psf)<sp/>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>psf_fopen()<sp/>failed<sp/>:<sp/>%s\n\n&quot;</highlight><highlight class="normal">,<sp/>linenum,<sp/>strerror<sp/>(errno))<sp/>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>test_open_or_die<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal">test_close_or_die<sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linenum)</highlight></codeline>
<codeline lineno="346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2common_8h_1a710de78ffb1aae74d9c32137f85d110f" kindref="member">psf_fclose</ref><sp/>(psf)<sp/>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="libsndfile_2src_2common_8h_1ad8f1aec91c82168decd1f08d19650183" kindref="member">psf_file_valid</ref><sp/>(psf))</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>psf-&gt;file.filedes<sp/>should<sp/>not<sp/>be<sp/>valid.\n\n&quot;</highlight><highlight class="normal">,<sp/>linenum)<sp/>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>test_close_or_die<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal">test_write_or_die<sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/>bytes,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/>items,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/>new_position,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linenum)</highlight></codeline>
<codeline lineno="357"><highlight class="normal">{<sp/><sp/><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/><sp/>retval<sp/>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1a183f23ab33e38e7e1c88034f3e69272d" kindref="member">psf_fwrite</ref><sp/>(data,<sp/>bytes,<sp/>items,<sp/>psf)<sp/>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>!=<sp/>items)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>psf_write()<sp/>returned<sp/>%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ae372e90b62c1e8b51dc5d95bf7f5ba48" kindref="member">PRId64</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>(should<sp/>be<sp/>%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ae372e90b62c1e8b51dc5d95bf7f5ba48" kindref="member">PRId64</ref><sp/></highlight><highlight class="stringliteral">&quot;)\n\n&quot;</highlight><highlight class="normal">,<sp/>linenum,<sp/>retval,<sp/>items)<sp/>;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1a33b35cd4b911ad7c4e28de37bacc948d" kindref="member">psf_ftell</ref><sp/>(psf))<sp/>!=<sp/>new_position)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>file<sp/>length<sp/>after<sp/>write<sp/>is<sp/>not<sp/>correct.<sp/>(%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ae372e90b62c1e8b51dc5d95bf7f5ba48" kindref="member">PRId64</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>should<sp/>be<sp/>%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ae372e90b62c1e8b51dc5d95bf7f5ba48" kindref="member">PRId64</ref><sp/></highlight><highlight class="stringliteral">&quot;)\n\n&quot;</highlight><highlight class="normal">,<sp/>linenum,<sp/>retval,<sp/>new_position)<sp/>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>test_write_or_die<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal">test_read_or_die<sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/>bytes,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/>items,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/>new_position,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linenum)</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{<sp/><sp/><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/><sp/>retval<sp/>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1a16c707d5a2175650aacd6b9cbdfe0f85" kindref="member">psf_fread</ref><sp/>(data,<sp/>bytes,<sp/>items,<sp/>psf)<sp/>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>!=<sp/>items)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>psf_write()<sp/>returned<sp/>%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ae372e90b62c1e8b51dc5d95bf7f5ba48" kindref="member">PRId64</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>(should<sp/>be<sp/>%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ae372e90b62c1e8b51dc5d95bf7f5ba48" kindref="member">PRId64</ref><sp/></highlight><highlight class="stringliteral">&quot;)\n\n&quot;</highlight><highlight class="normal">,<sp/>linenum,<sp/>retval,<sp/>items)<sp/>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1a33b35cd4b911ad7c4e28de37bacc948d" kindref="member">psf_ftell</ref><sp/>(psf))<sp/>!=<sp/>new_position)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>file<sp/>length<sp/>after<sp/>write<sp/>is<sp/>not<sp/>correct.<sp/>(%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ae372e90b62c1e8b51dc5d95bf7f5ba48" kindref="member">PRId64</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>should<sp/>be<sp/>%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ae372e90b62c1e8b51dc5d95bf7f5ba48" kindref="member">PRId64</ref><sp/></highlight><highlight class="stringliteral">&quot;)\n\n&quot;</highlight><highlight class="normal">,<sp/>linenum,<sp/>retval,<sp/>new_position)<sp/>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>test_write_or_die<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><ref refid="libsndfile_2tests_2utils_8c_1a581f4c6ddc165d45490932bbf3863998" kindref="member">test_seek_or_die</ref><sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whence,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/>new_position,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linenum)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{<sp/><sp/><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/>retval<sp/>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1af9e75e7591ba5f797ad58c0a8aaaffb1" kindref="member">psf_fseek</ref><sp/>(psf,<sp/>offset,<sp/>whence)<sp/>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>!=<sp/>new_position)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>psf_fseek()<sp/>failed.<sp/>New<sp/>position<sp/>is<sp/>%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ae372e90b62c1e8b51dc5d95bf7f5ba48" kindref="member">PRId64</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>(should<sp/>be<sp/>%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ae372e90b62c1e8b51dc5d95bf7f5ba48" kindref="member">PRId64</ref><sp/></highlight><highlight class="stringliteral">&quot;).\n\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linenum,<sp/>retval,<sp/>new_position)<sp/>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>test_seek_or_die<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal">test_equal_or_die<sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*array1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*array2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linenum)</highlight></codeline>
<codeline lineno="407"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(array1<sp/>[k]<sp/>!=<sp/>array2<sp/>[k])</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>error<sp/>at<sp/>index<sp/>%d<sp/>(%d<sp/>!=<sp/>%d).\n\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linenum,<sp/>k,<sp/>array1<sp/>[k],<sp/>array2<sp/>[k])<sp/>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>test_equal_or_die<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal">make_data<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed)</highlight></codeline>
<codeline lineno="419"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>srand<sp/>(seed<sp/>*<sp/>3333333<sp/>+<sp/>14756123)<sp/>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>[k]<sp/>=<sp/>rand<sp/>()<sp/>;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>make_data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429" refid="test__main_8h_1a5441b5e0b25711a2499d90f4f27f2f3a" refkind="member"><highlight class="normal"><ref refid="test__file__io_8c_1a5441b5e0b25711a2499d90f4f27f2f3a" kindref="member">test_file_io</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="430"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;file_io.dat&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>file_open_test<sp/><sp/>(filename)<sp/>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>file_read_write_test<sp/><sp/><sp/><sp/>(filename)<sp/>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>file_truncate_test<sp/>(filename)<sp/>;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>unlink<sp/>(filename)<sp/>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>main<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_file_io.c"/>
  </compounddef>
</doxygen>
