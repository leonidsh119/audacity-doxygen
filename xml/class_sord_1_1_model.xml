<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_sord_1_1_model" kind="class" language="C++" prot="public">
    <compoundname>Sord::Model</compoundname>
    <basecompoundref refid="class_sord_1_1_noncopyable" prot="public" virt="non-virtual">Sord::Noncopyable</basecompoundref>
    <basecompoundref refid="class_sord_1_1_wrapper" prot="public" virt="non-virtual">Sord::Wrapper&lt; SordModel * &gt;</basecompoundref>
    <includes refid="sordmm_8hpp" local="no">sordmm.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_sord_1_1_model_1a252878bd161dbc9775034ba93cbb57f5" prot="private" static="no" mutable="no">
        <type><ref refid="class_sord_1_1_world" kindref="compound">World</ref> &amp;</type>
        <definition>World&amp; Sord::Model::_world</definition>
        <argsstring></argsstring>
        <name>_world</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="476" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sord_1_1_model_1a70618a83cff32fc5750093f33d93d3eb" prot="private" static="no" mutable="no">
        <type><ref refid="class_sord_1_1_node" kindref="compound">Node</ref></type>
        <definition>Node Sord::Model::_base</definition>
        <argsstring></argsstring>
        <name>_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="477" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="477" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_sord_1_1_model_1ae368374cf80e0780644a082221f8705d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Sord::Model::Model</definition>
        <argsstring>(World &amp;world, const std::string &amp;base_uri, unsigned indices=(SORD_SPO|SORD_OPS), bool graphs=true)</argsstring>
        <name>Model</name>
        <param>
          <type><ref refid="class_sord_1_1_world" kindref="compound">World</ref> &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref> &amp;</type>
          <declname>base_uri</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>indices</declname>
          <defval>(<ref refid="group__sord_1ggaf490691787913fb85293d05eab00a735a51f0e1357612884f7bb7fb3ab151b3a7" kindref="member">SORD_SPO</ref>|<ref refid="group__sord_1ggaf490691787913fb85293d05eab00a735a4220624a00f2828d33e1a1cd45e18634" kindref="member">SORD_OPS</ref>)</defval>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>graphs</declname>
          <defval><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an empty in-memory RDF model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="425" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="483" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_model_1a28bc4c2350613e970258ff27374d61f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Sord::Model::~Model</definition>
        <argsstring>()</argsstring>
        <name>~Model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="430" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="505" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_model_1a477eea447cb8cd80a9a9ffcce34d48cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_sord_1_1_node" kindref="compound">Node</ref> &amp;</type>
        <definition>const Node&amp; Sord::Model::base_uri</definition>
        <argsstring>() const </argsstring>
        <name>base_uri</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="432" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="432" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_model_1aa26790f627fc8c212237b23ef59c1136" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Sord::Model::num_quads</definition>
        <argsstring>() const </argsstring>
        <name>num_quads</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="434" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="434" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_model_1a6bd84dd0dcb8c0a7f550de5174fba06a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Sord::Model::load_file</definition>
        <argsstring>(SerdEnv *env, SerdSyntax syntax, const std::string &amp;uri, const std::string &amp;base_uri=&quot;&quot;)</argsstring>
        <name>load_file</name>
        <param>
          <type><ref refid="group__serd_1gaea4226dd80abea7afa05986f195d4755" kindref="member">SerdEnv</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga42683406fcfa9046b28dd951cefd3391" kindref="member">SerdSyntax</ref></type>
          <declname>syntax</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref> &amp;</type>
          <declname>uri</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref> &amp;</type>
          <declname>base_uri</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="436" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="511" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_model_1a0e209d06e1c0c7311e59e3e3053e1d40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Sord::Model::load_string</definition>
        <argsstring>(SerdEnv *env, SerdSyntax syntax, const char *str, size_t len, const std::string &amp;base_uri)</argsstring>
        <name>load_string</name>
        <param>
          <type><ref refid="group__serd_1gaea4226dd80abea7afa05986f195d4755" kindref="member">SerdEnv</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga42683406fcfa9046b28dd951cefd3391" kindref="member">SerdSyntax</ref></type>
          <declname>syntax</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref> &amp;</type>
          <declname>base_uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="441" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="494" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_model_1a1b3fb886918329ff44cf1dda7feb063a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SerdStatus Sord::Model::write_to_file</definition>
        <argsstring>(const std::string &amp;uri, SerdSyntax syntax=SERD_TURTLE, SerdStyle style=(SerdStyle)(SERD_STYLE_ABBREVIATED                                                                                                                                                       |SERD_STYLE_CURIED                                                                                                                                                       |SERD_STYLE_RESOLVED))</argsstring>
        <name>write_to_file</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref> &amp;</type>
          <declname>uri</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga42683406fcfa9046b28dd951cefd3391" kindref="member">SerdSyntax</ref></type>
          <declname>syntax</declname>
          <defval><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a4acfee57d17213dcb55e94c55a4fd78e" kindref="member">SERD_TURTLE</ref></defval>
        </param>
        <param>
          <type><ref refid="group__serd_1gae51da58ac1f1886c75ee2326495daeb2" kindref="member">SerdStyle</ref></type>
          <declname>style</declname>
          <defval>(<ref refid="group__serd_1gae51da58ac1f1886c75ee2326495daeb2" kindref="member">SerdStyle</ref>)(<ref refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2aa69f36bfcb18a88f514d5a763f8daaad" kindref="member">SERD_STYLE_ABBREVIATED</ref>                                                                                                                                                       |<ref refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a765d540f7a2e3dd87d57fa641c0a8488" kindref="member">SERD_STYLE_CURIED</ref>                                                                                                                                                       |<ref refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a5e2df70862512f94f6b2535ae63119be" kindref="member">SERD_STYLE_RESOLVED</ref>)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="447" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="530" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_model_1a1b78262fddba9edfa5ba2fe7218bc719" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></type>
        <definition>std::string Sord::Model::write_to_string</definition>
        <argsstring>(const std::string &amp;base_uri, SerdSyntax syntax=SERD_TURTLE, SerdStyle style=(SerdStyle)(SERD_STYLE_ABBREVIATED                                                                                                                                                       |SERD_STYLE_CURIED                                                                                                                                                       |SERD_STYLE_RESOLVED))</argsstring>
        <name>write_to_string</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref> &amp;</type>
          <declname>base_uri</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga42683406fcfa9046b28dd951cefd3391" kindref="member">SerdSyntax</ref></type>
          <declname>syntax</declname>
          <defval><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a4acfee57d17213dcb55e94c55a4fd78e" kindref="member">SERD_TURTLE</ref></defval>
        </param>
        <param>
          <type><ref refid="group__serd_1gae51da58ac1f1886c75ee2326495daeb2" kindref="member">SerdStyle</ref></type>
          <declname>style</declname>
          <defval>(<ref refid="group__serd_1gae51da58ac1f1886c75ee2326495daeb2" kindref="member">SerdStyle</ref>)(<ref refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2aa69f36bfcb18a88f514d5a763f8daaad" kindref="member">SERD_STYLE_ABBREVIATED</ref>                                                                                                                                                       |<ref refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a765d540f7a2e3dd87d57fa641c0a8488" kindref="member">SERD_STYLE_CURIED</ref>                                                                                                                                                       |<ref refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a5e2df70862512f94f6b2535ae63119be" kindref="member">SERD_STYLE_RESOLVED</ref>)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="454" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="580" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_model_1a9bd32b91c90dc6968914690f324378c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Sord::Model::add_statement</definition>
        <argsstring>(const Node &amp;subject, const Node &amp;predicate, const Node &amp;object)</argsstring>
        <name>add_statement</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_sord_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>subject</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_sord_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_sord_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="461" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="610" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_model_1a1b8d66945e6e698b6f93f2caf95067eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_sord_1_1_iter" kindref="compound">Iter</ref></type>
        <definition>Iter Sord::Model::find</definition>
        <argsstring>(const Node &amp;subject, const Node &amp;predicate, const Node &amp;object)</argsstring>
        <name>find</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_sord_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>subject</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_sord_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_sord_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="465" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="623" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_model_1a31c0be5d32bdb3e16d74911c229d6f81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_sord_1_1_node" kindref="compound">Node</ref></type>
        <definition>Node Sord::Model::get</definition>
        <argsstring>(const Node &amp;subject, const Node &amp;predicate, const Node &amp;object)</argsstring>
        <name>get</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_sord_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>subject</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_sord_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_sord_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="469" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="636" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_model_1ad3794ab0ff978bfaf68627f946a595b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_sord_1_1_world" kindref="compound">World</ref> &amp;</type>
        <definition>World&amp; Sord::Model::world</definition>
        <argsstring>() const </argsstring>
        <name>world</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="473" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="473" bodyend="473"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An RDF <ref refid="class_sord_1_1_model" kindref="compound">Model</ref> (collection of triples). </para>    </detaileddescription>
    <inheritancegraph>
      <node id="7389">
        <label>Sord::Noncopyable</label>
        <link refid="class_sord_1_1_noncopyable"/>
      </node>
      <node id="7388">
        <label>Sord::Model</label>
        <link refid="class_sord_1_1_model"/>
        <childnode refid="7389" relation="public-inheritance">
        </childnode>
        <childnode refid="7390" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7390">
        <label>Sord::Wrapper&lt; SordModel * &gt;</label>
        <link refid="class_sord_1_1_wrapper"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7398">
        <label>SerdError</label>
        <link refid="struct_serd_error"/>
      </node>
      <node id="7400">
        <label>ZixTreeNodeImpl</label>
        <link refid="struct_zix_tree_node_impl"/>
        <childnode refid="7400" relation="usage">
          <edgelabel>right</edgelabel>
          <edgelabel>left</edgelabel>
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
      <node id="7394">
        <label>SordModelImpl</label>
        <link refid="struct_sord_model_impl"/>
        <childnode refid="7395" relation="usage">
          <edgelabel>world</edgelabel>
        </childnode>
        <childnode refid="7399" relation="usage">
          <edgelabel>indices</edgelabel>
        </childnode>
      </node>
      <node id="7392">
        <label>Sord::Noncopyable</label>
        <link refid="class_sord_1_1_noncopyable"/>
      </node>
      <node id="7396">
        <label>ZixHashImpl</label>
        <link refid="struct_zix_hash_impl"/>
        <childnode refid="7397" relation="usage">
          <edgelabel>buckets</edgelabel>
        </childnode>
      </node>
      <node id="7391">
        <label>Sord::Model</label>
        <link refid="class_sord_1_1_model"/>
        <childnode refid="7392" relation="public-inheritance">
        </childnode>
        <childnode refid="7393" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7399">
        <label>ZixTreeImpl</label>
        <link refid="struct_zix_tree_impl"/>
        <childnode refid="7400" relation="usage">
          <edgelabel>root</edgelabel>
        </childnode>
      </node>
      <node id="7395">
        <label>SordWorldImpl</label>
        <link refid="struct_sord_world_impl"/>
        <childnode refid="7396" relation="usage">
          <edgelabel>nodes</edgelabel>
        </childnode>
        <childnode refid="7398" relation="usage">
          <edgelabel>error_sink</edgelabel>
        </childnode>
      </node>
      <node id="7397">
        <label>ZixHashEntry</label>
        <link refid="struct_zix_hash_entry"/>
        <childnode refid="7397" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="7393">
        <label>Sord::Wrapper&lt; SordModel * &gt;</label>
        <link refid="class_sord_1_1_wrapper"/>
        <childnode refid="7394" relation="usage">
          <edgelabel>_c_obj</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="423" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="423" bodyend="478"/>
    <listofallmembers>
      <member refid="class_sord_1_1_model_1a70618a83cff32fc5750093f33d93d3eb" prot="private" virt="non-virtual"><scope>Sord::Model</scope><name>_base</name></member>
      <member refid="class_sord_1_1_wrapper_1aee0f3ad4f5a45a66c139dacbe6284547" prot="protected" virt="non-virtual"><scope>Sord::Model</scope><name>_c_obj</name></member>
      <member refid="class_sord_1_1_model_1a252878bd161dbc9775034ba93cbb57f5" prot="private" virt="non-virtual"><scope>Sord::Model</scope><name>_world</name></member>
      <member refid="class_sord_1_1_model_1a9bd32b91c90dc6968914690f324378c5" prot="public" virt="non-virtual"><scope>Sord::Model</scope><name>add_statement</name></member>
      <member refid="class_sord_1_1_model_1a477eea447cb8cd80a9a9ffcce34d48cd" prot="public" virt="non-virtual"><scope>Sord::Model</scope><name>base_uri</name></member>
      <member refid="class_sord_1_1_wrapper_1a71bdf7e679555f72e07c749ab87366c8" prot="public" virt="non-virtual"><scope>Sord::Model</scope><name>c_obj</name></member>
      <member refid="class_sord_1_1_wrapper_1a9f9639ab9373df9b34a283b8cb2c1932" prot="public" virt="non-virtual"><scope>Sord::Model</scope><name>c_obj</name></member>
      <member refid="class_sord_1_1_model_1a1b8d66945e6e698b6f93f2caf95067eb" prot="public" virt="non-virtual"><scope>Sord::Model</scope><name>find</name></member>
      <member refid="class_sord_1_1_model_1a31c0be5d32bdb3e16d74911c229d6f81" prot="public" virt="non-virtual"><scope>Sord::Model</scope><name>get</name></member>
      <member refid="class_sord_1_1_model_1a6bd84dd0dcb8c0a7f550de5174fba06a" prot="public" virt="non-virtual"><scope>Sord::Model</scope><name>load_file</name></member>
      <member refid="class_sord_1_1_model_1a0e209d06e1c0c7311e59e3e3053e1d40" prot="public" virt="non-virtual"><scope>Sord::Model</scope><name>load_string</name></member>
      <member refid="class_sord_1_1_model_1ae368374cf80e0780644a082221f8705d" prot="public" virt="non-virtual"><scope>Sord::Model</scope><name>Model</name></member>
      <member refid="class_sord_1_1_noncopyable_1a45b5ead457e5e0c7541b12bab532ab71" prot="protected" virt="non-virtual"><scope>Sord::Model</scope><name>Noncopyable</name></member>
      <member refid="class_sord_1_1_model_1aa26790f627fc8c212237b23ef59c1136" prot="public" virt="non-virtual"><scope>Sord::Model</scope><name>num_quads</name></member>
      <member refid="class_sord_1_1_model_1ad3794ab0ff978bfaf68627f946a595b8" prot="public" virt="non-virtual"><scope>Sord::Model</scope><name>world</name></member>
      <member refid="class_sord_1_1_wrapper_1ab539fff1455a9b4b43b21e01d795a1e9" prot="public" virt="non-virtual"><scope>Sord::Model</scope><name>Wrapper</name></member>
      <member refid="class_sord_1_1_model_1a1b3fb886918329ff44cf1dda7feb063a" prot="public" virt="non-virtual"><scope>Sord::Model</scope><name>write_to_file</name></member>
      <member refid="class_sord_1_1_model_1a1b78262fddba9edfa5ba2fe7218bc719" prot="public" virt="non-virtual"><scope>Sord::Model</scope><name>write_to_string</name></member>
      <member refid="class_sord_1_1_model_1a28bc4c2350613e970258ff27374d61f2" prot="public" virt="non-virtual"><scope>Sord::Model</scope><name>~Model</name></member>
      <member refid="class_sord_1_1_noncopyable_1adc7dc9e27975b1c3043fa920baa0e894" prot="protected" virt="non-virtual"><scope>Sord::Model</scope><name>~Noncopyable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
