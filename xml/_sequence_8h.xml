<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_sequence_8h" kind="file" language="C++">
    <compoundname>Sequence.h</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">wx/string.h</includes>
    <includes local="no">wx/dynarray.h</includes>
    <includes refid="_sample_format_8h" local="yes">SampleFormat.h</includes>
    <includes refid="_x_m_l_tag_handler_8h" local="yes">xml/XMLTagHandler.h</includes>
    <includes refid="_x_m_l_writer_8h" local="yes">xml/XMLWriter.h</includes>
    <includes refid="_o_d_task_thread_8h" local="yes">ondemand/ODTaskThread.h</includes>
    <includes refid="include_2audacity_2_types_8h" local="yes">audacity/Types.h</includes>
    <includedby refid="_audacity_app_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/AudacityApp.cpp</includedby>
    <includedby refid="_audacity_headers_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.h</includedby>
    <includedby refid="_auto_recovery_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/AutoRecovery.cpp</includedby>
    <includedby refid="_benchmark_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Benchmark.cpp</includedby>
    <includedby refid="_dependencies_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Dependencies.cpp</includedby>
    <includedby refid="_dir_manager_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/DirManager.cpp</includedby>
    <includedby refid="_o_d_compute_summary_task_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODComputeSummaryTask.cpp</includedby>
    <includedby refid="_o_d_decode_task_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODDecodeTask.cpp</includedby>
    <includedby refid="_project_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Project.cpp</includedby>
    <includedby refid="_sequence_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Sequence.cpp</includedby>
    <includedby refid="_undo_manager_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/UndoManager.cpp</includedby>
    <includedby refid="_wave_clip_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/WaveClip.cpp</includedby>
    <includedby refid="_wave_track_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp</includedby>
    <includedby refid="_sequence_test_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/tests/SequenceTest.cpp</includedby>
    <incdepgraph>
      <node id="53893">
        <label>wx/ffile.h</label>
      </node>
      <node id="53890">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="53886" relation="include">
        </childnode>
        <childnode refid="53883" relation="include">
        </childnode>
        <childnode refid="53891" relation="include">
        </childnode>
        <childnode refid="53892" relation="include">
        </childnode>
      </node>
      <node id="53894">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="53895" relation="include">
        </childnode>
        <childnode refid="53886" relation="include">
        </childnode>
      </node>
      <node id="53887">
        <label>wx/defs.h</label>
      </node>
      <node id="53888">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="53883" relation="include">
        </childnode>
        <childnode refid="53889" relation="include">
        </childnode>
      </node>
      <node id="53881">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Sequence.h</label>
        <link refid="Sequence.h"/>
        <childnode refid="53882" relation="include">
        </childnode>
        <childnode refid="53883" relation="include">
        </childnode>
        <childnode refid="53884" relation="include">
        </childnode>
        <childnode refid="53885" relation="include">
        </childnode>
        <childnode refid="53890" relation="include">
        </childnode>
        <childnode refid="53892" relation="include">
        </childnode>
        <childnode refid="53894" relation="include">
        </childnode>
        <childnode refid="53888" relation="include">
        </childnode>
      </node>
      <node id="53886">
        <label>Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="53882">
        <label>vector</label>
      </node>
      <node id="53884">
        <label>wx/dynarray.h</label>
      </node>
      <node id="53883">
        <label>wx/string.h</label>
      </node>
      <node id="53889">
        <label>wx/arrstr.h</label>
      </node>
      <node id="53895">
        <label>wx/thread.h</label>
      </node>
      <node id="53891">
        <label>stdio.h</label>
      </node>
      <node id="53885">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="53886" relation="include">
        </childnode>
        <childnode refid="53887" relation="include">
        </childnode>
        <childnode refid="53888" relation="include">
        </childnode>
      </node>
      <node id="53892">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="53889" relation="include">
        </childnode>
        <childnode refid="53884" relation="include">
        </childnode>
        <childnode refid="53893" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="53901">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Benchmark.cpp</label>
        <link refid="_benchmark_8cpp"/>
      </node>
      <node id="53905">
        <label>C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODDecodeTask.cpp</label>
        <link refid="_o_d_decode_task_8cpp"/>
      </node>
      <node id="53909">
        <label>C:/_dev/OpenU/Audacity/audacity/src/WaveClip.cpp</label>
        <link refid="_wave_clip_8cpp"/>
      </node>
      <node id="53900">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AutoRecovery.cpp</label>
        <link refid="_auto_recovery_8cpp"/>
      </node>
      <node id="53902">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Dependencies.cpp</label>
        <link refid="_dependencies_8cpp"/>
      </node>
      <node id="53907">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Sequence.cpp</label>
        <link refid="_sequence_8cpp"/>
      </node>
      <node id="53896">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Sequence.h</label>
        <link refid="Sequence.h"/>
        <childnode refid="53897" relation="include">
        </childnode>
        <childnode refid="53898" relation="include">
        </childnode>
        <childnode refid="53900" relation="include">
        </childnode>
        <childnode refid="53901" relation="include">
        </childnode>
        <childnode refid="53902" relation="include">
        </childnode>
        <childnode refid="53903" relation="include">
        </childnode>
        <childnode refid="53904" relation="include">
        </childnode>
        <childnode refid="53905" relation="include">
        </childnode>
        <childnode refid="53906" relation="include">
        </childnode>
        <childnode refid="53907" relation="include">
        </childnode>
        <childnode refid="53908" relation="include">
        </childnode>
        <childnode refid="53909" relation="include">
        </childnode>
        <childnode refid="53910" relation="include">
        </childnode>
        <childnode refid="53911" relation="include">
        </childnode>
      </node>
      <node id="53898">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.h</label>
        <link refid="_audacity_headers_8h"/>
        <childnode refid="53899" relation="include">
        </childnode>
      </node>
      <node id="53904">
        <label>C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODComputeSummaryTask.cpp</label>
        <link refid="_o_d_compute_summary_task_8cpp"/>
      </node>
      <node id="53903">
        <label>C:/_dev/OpenU/Audacity/audacity/src/DirManager.cpp</label>
        <link refid="_dir_manager_8cpp"/>
      </node>
      <node id="53911">
        <label>C:/_dev/OpenU/Audacity/audacity/tests/SequenceTest.cpp</label>
        <link refid="_sequence_test_8cpp"/>
      </node>
      <node id="53910">
        <label>C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp</label>
        <link refid="_wave_track_8cpp"/>
      </node>
      <node id="53906">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Project.cpp</label>
        <link refid="_project_8cpp"/>
      </node>
      <node id="53897">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityApp.cpp</label>
        <link refid="_audacity_app_8cpp"/>
      </node>
      <node id="53908">
        <label>C:/_dev/OpenU/Audacity/audacity/src/UndoManager.cpp</label>
        <link refid="_undo_manager_8cpp"/>
      </node>
      <node id="53899">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.cpp</label>
        <link refid="_audacity_headers_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_seq_block" prot="public">SeqBlock</innerclass>
    <innerclass refid="class_block_array" prot="public">BlockArray</innerclass>
    <innerclass refid="class_sequence" prot="public">Sequence</innerclass>
    <innerclass refid="struct_sequence_1_1_delete_update_mutex_locker" prot="public">Sequence::DeleteUpdateMutexLocker</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_sequence_8h_1a72013007338aa396602ef0bc3d289c99" prot="public" static="no">
        <type>std::vector&lt; <ref refid="class_seq_block" kindref="compound">SeqBlock</ref> * &gt;</type>
        <definition>using BlockPtrArray =  std::vector&lt;SeqBlock*&gt;</definition>
        <argsstring></argsstring>
        <name>BlockPtrArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Sequence.h" line="56" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Sequence.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Sequence.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__AUDACITY_SEQUENCE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__AUDACITY_SEQUENCE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dynarray.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_sample_format_8h" kindref="compound">SampleFormat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_x_m_l_tag_handler_8h" kindref="compound">xml/XMLTagHandler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_x_m_l_writer_8h" kindref="compound">xml/XMLWriter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_o_d_task_thread_8h" kindref="compound">ondemand/ODTaskThread.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="include_2audacity_2_types_8h" kindref="compound">audacity/Types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Moved<sp/>to<sp/>&quot;audacity/types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>wxLongLong_t<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>;<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_block_file" kindref="compound">BlockFile</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_dir_manager" kindref="compound">DirManager</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>an<sp/>internal<sp/>data<sp/>structure!<sp/><sp/>For<sp/>advanced<sp/>use<sp/>only.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_seq_block" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_seq_block" kindref="compound">SeqBlock</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37" refid="class_seq_block_1afc9b7e81170d82463b8849815b2cf2a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file" kindref="compound">BlockFile</ref><sp/>*<sp/><ref refid="class_seq_block_1afc9b7e81170d82463b8849815b2cf2a2" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="39" refid="class_seq_block_1a38a34e33b7c97b7b2e55163644b9028f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="class_seq_block_1a38a34e33b7c97b7b2e55163644b9028f" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_seq_block_1a7cb77b9c95ece649c049d5eb009abc27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_seq_block_1a7cb77b9c95ece649c049d5eb009abc27" kindref="member">SeqBlock</ref>()</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>f(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>),<sp/>start(0)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_seq_block_1a1b2cb54c97aff03b1e4d73efd9a12ee6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_seq_block_1a1b2cb54c97aff03b1e4d73efd9a12ee6" kindref="member">SeqBlock</ref>(<ref refid="class_block_file" kindref="compound">BlockFile</ref><sp/>*f_,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>start_)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>f(f_),<sp/>start(start_)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>SeqBlock<sp/>with<sp/>changed<sp/>start,<sp/>same<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_seq_block_1ae97ff01b44774a546719cee543220ccb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_seq_block" kindref="compound">SeqBlock</ref><sp/><ref refid="class_seq_block_1ae97ff01b44774a546719cee543220ccb" kindref="member">Plus</ref>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>delta)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="51"><highlight class="keyword"><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_seq_block_1a7cb77b9c95ece649c049d5eb009abc27" kindref="member">SeqBlock</ref>(f,<sp/>start<sp/>+<sp/>delta);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55" refid="class_block_array" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_block_array" kindref="compound">BlockArray</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::vector&lt;SeqBlock&gt;<sp/>{};</highlight></codeline>
<codeline lineno="56" refid="_sequence_8h_1a72013007338aa396602ef0bc3d289c99" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_sequence_8h_1a72013007338aa396602ef0bc3d289c99" kindref="member">BlockPtrArray</ref><sp/>=<sp/>std::vector&lt;SeqBlock*&gt;;<sp/></highlight><highlight class="comment">//<sp/>non-owning<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_sequence" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="_audacity_8h_1aa2cad340911badc2a4e4ebc3212e94fe" kindref="member">PROFILE_DLL_API</ref><sp/><ref refid="class_sequence" kindref="compound">Sequence</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_x_m_l_tag_handler" kindref="compound">XMLTagHandler</ref>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Static<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetMaxDiskBlockSize(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetMaxDiskBlockSize();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor<sp/>/<sp/>Destructor<sp/>/<sp/>Duplicator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_sequence" kindref="compound">Sequence</ref>(<ref refid="class_dir_manager" kindref="compound">DirManager</ref><sp/>*<sp/>projDirManager,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>copy<sp/>constructor<sp/>and<sp/>duplicate<sp/>operators<sp/>take<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DirManager<sp/>as<sp/>a<sp/>parameter,<sp/>because<sp/>you<sp/>might<sp/>be<sp/>copying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>one<sp/>project<sp/>to<sp/>another...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_sequence" kindref="compound">Sequence</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sequence" kindref="compound">Sequence</ref><sp/>&amp;orig,<sp/><ref refid="class_dir_manager" kindref="compound">DirManager</ref><sp/>*projDirManager);</highlight></codeline>
<codeline lineno="78" refid="class_sequence_1a081453723f18dcccb528371dca82fe27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_sequence" kindref="compound">Sequence</ref><sp/>*<ref refid="class_sequence_1a081453723f18dcccb528371dca82fe27" kindref="member">Duplicate</ref>(<ref refid="class_dir_manager" kindref="compound">DirManager</ref><sp/>*projDirManager)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_sequence" kindref="compound">Sequence</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>projDirManager);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/>~<ref refid="class_sequence" kindref="compound">Sequence</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Editing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="class_sequence_1a6187391eb53aa896f5dda602c87d0e7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="class_sequence_1a6187391eb53aa896f5dda602c87d0e7f" kindref="member">GetNumSamples</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mNumSamples;<sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Get(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/>format,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="class_seq_block_1a38a34e33b7c97b7b2e55163644b9028f" kindref="member">start</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Set(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/>buffer,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/>format,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>start,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>where<sp/>is<sp/>input,<sp/>assumed<sp/>to<sp/>be<sp/>nondecreasing,<sp/>and<sp/>its<sp/>size<sp/>is<sp/>len<sp/>+<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>min,<sp/>max,<sp/>rms,<sp/>bl<sp/>are<sp/>outputs,<sp/>and<sp/>their<sp/>lengths<sp/>are<sp/>len.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>position<sp/>in<sp/>the<sp/>output<sp/>arrays<sp/>corresponds<sp/>to<sp/>one<sp/>column<sp/>of<sp/>pixels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>column<sp/>for<sp/>pixel<sp/>p<sp/>covers<sp/>samples<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>where[p]<sp/>up<sp/>to<sp/>(but<sp/>excluding)<sp/>where[p<sp/>+<sp/>1].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bl<sp/>is<sp/>negative<sp/>wherever<sp/>data<sp/>are<sp/>not<sp/>yet<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>if<sp/>successful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetWaveDisplay(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*rms,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>bl,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>*where);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Copy(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>s0,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>s1,<sp/><ref refid="class_sequence" kindref="compound">Sequence</ref><sp/>**<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Paste(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>s0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sequence" kindref="compound">Sequence</ref><sp/>*src);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>GetIdealAppendLen();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Append(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/>buffer,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/>format,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_x_m_l_writer" kindref="compound">XMLWriter</ref>*<sp/>blockFileLog=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Delete(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>start,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AppendAlias(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;fullPath,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>start,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useOD);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AppendCoded(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;fName,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>start,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decodeType);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetODFlags();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Append<sp/>a<sp/>blockfile.<sp/>The<sp/>blockfile<sp/>pointer<sp/>is<sp/>then<sp/>&quot;owned&quot;<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sequence.<sp/>This<sp/>function<sp/>is<sp/>used<sp/>by<sp/>the<sp/>recording<sp/>log<sp/>crash<sp/>recovery</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>code,<sp/>but<sp/>may<sp/>be<sp/>useful<sp/>for<sp/>other<sp/>purposes.<sp/>The<sp/>blockfile<sp/>must<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>registered<sp/>within<sp/>the<sp/>dir<sp/>manager<sp/>hash.<sp/>This<sp/>is<sp/>the<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>the<sp/>blockfile<sp/>is<sp/>created<sp/>using<sp/>DirManager::NewSimpleBlockFile<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loaded<sp/>from<sp/>an<sp/>XML<sp/>file<sp/>via<sp/>DirManager::HandleXMLTag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AppendBlockFile(<ref refid="class_block_file" kindref="compound">BlockFile</ref>*<sp/>blockFile);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SetSilence(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>s0,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>InsertSilence(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>s0,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="class_sequence_1aaebe62884d60c3658ed835d234c9069d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_dir_manager" kindref="compound">DirManager</ref>*<sp/><ref refid="class_sequence_1aaebe62884d60c3658ed835d234c9069d" kindref="member">GetDirManager</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDirManager;<sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>XMLTagHandler<sp/>callback<sp/>methods<sp/>for<sp/>loading<sp/>and<sp/>saving</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HandleXMLTag(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="structtag" kindref="compound">tag</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>**attrs)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HandleXMLEndTag(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*tag)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_x_m_l_tag_handler" kindref="compound">XMLTagHandler</ref><sp/>*HandleXMLChild(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*tag)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WriteXML(<ref refid="class_x_m_l_writer" kindref="compound">XMLWriter</ref><sp/>&amp;xmlFile)<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>override<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="class_sequence_1a0d4580d86a03c8cce3f4a0f702210df0" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sequence_1a0d4580d86a03c8cce3f4a0f702210df0" kindref="member">GetErrorOpening</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mErrorOpening;<sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lock/Unlock<sp/>all<sp/>of<sp/>this<sp/>sequence&apos;s<sp/>BlockFiles,<sp/>keeping<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>being<sp/>moved.<sp/><sp/>Call<sp/>this<sp/>if<sp/>you<sp/>want<sp/>to<sp/>copy<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>track<sp/>to<sp/>a<sp/>different<sp/>DirManager.<sp/><sp/>See<sp/>BlockFile.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a5982edd74992ec9be99487a0019d8bca" kindref="member">Lock</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CloseLock();</highlight><highlight class="comment">//similar<sp/>to<sp/>Lock<sp/>but<sp/>should<sp/>be<sp/>called<sp/>upon<sp/>project<sp/>close.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Unlock();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Manipulating<sp/>Sample<sp/>Format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/>GetSampleFormat()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bool<sp/>SetSampleFormat(sampleFormat<sp/>format);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ConvertToSampleFormat(<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/>format,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>pbChanged);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieving<sp/>summary<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetMinMax(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>start,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>max)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetRMS(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>start,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>outRMS)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Getting<sp/>block<sp/>size<sp/>and<sp/>alignment<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>GetBlockStart(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="structposition" kindref="compound">position</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>GetBestBlockSize(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>start)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>GetMaxBlockSize()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>GetIdealBlockSize()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>should<sp/>only<sp/>be<sp/>used<sp/>if<sp/>you<sp/>really,<sp/>really<sp/>know<sp/>what</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>you&apos;re<sp/>doing!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_sequence_1a2f81a3ac85491ad3b09cb7a4736dd1c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_array" kindref="compound">BlockArray</ref><sp/>&amp;<ref refid="class_sequence_1a2f81a3ac85491ad3b09cb7a4736dd1c1" kindref="member">GetBlockArray</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBlock;}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="class_sequence_1ab1d16275a9ceccd1c66a42ae6c99ce0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sequence_1ab1d16275a9ceccd1c66a42ae6c99ce0a" kindref="member">LockDeleteUpdateMutex</ref>(){mDeleteUpdateMutex.Lock();}</highlight></codeline>
<codeline lineno="192" refid="class_sequence_1a4bc15c6b891b9bc2b8e723853facbbc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sequence_1a4bc15c6b891b9bc2b8e723853facbbc3" kindref="member">UnlockDeleteUpdateMutex</ref>(){mDeleteUpdateMutex.Unlock();}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RAII<sp/>idiom<sp/>wrapping<sp/>the<sp/>functions<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="struct_sequence_1_1_delete_update_mutex_locker" refkind="compound"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sequence_1_1_delete_update_mutex_locker" kindref="compound">DeleteUpdateMutexLocker</ref><sp/>{</highlight></codeline>
<codeline lineno="196" refid="struct_sequence_1_1_delete_update_mutex_locker_1a26cec3e9172df66002609d91baed2b90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sequence_1_1_delete_update_mutex_locker_1a26cec3e9172df66002609d91baed2b90" kindref="member">DeleteUpdateMutexLocker</ref>(<ref refid="class_sequence" kindref="compound">Sequence</ref><sp/>&amp;<ref refid="seq_8c_1aa85df2bb76931a50df646c42ac67b112" kindref="member">sequence</ref>)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mSequence(sequence)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSequence.LockDeleteUpdateMutex();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201" refid="struct_sequence_1_1_delete_update_mutex_locker_1a1e04480870749afe67b95259d8dc97c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sequence_1_1_delete_update_mutex_locker_1a1e04480870749afe67b95259d8dc97c0" kindref="member">~DeleteUpdateMutexLocker</ref>()</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSequence.UnlockDeleteUpdateMutex();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sequence" kindref="compound">Sequence</ref><sp/>&amp;mSequence;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Private<sp/>static<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>sMaxDiskBlockSize;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Private<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_dir_manager" kindref="compound">DirManager</ref><sp/><sp/><sp/>*mDirManager;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_array" kindref="compound">BlockArray</ref><sp/><sp/><sp/><sp/>mBlock;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><sp/>mSampleFormat;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><sp/><sp/>mNumSamples{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><sp/><sp/>mMinSamples;<sp/></highlight><highlight class="comment">//<sp/>min<sp/>samples<sp/>per<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><sp/><sp/>mMaxSamples;<sp/></highlight><highlight class="comment">//<sp/>max<sp/>samples<sp/>per<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mErrorOpening{<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_lock" kindref="compound">ODLock</ref><sp/><sp/><sp/>mDeleteUpdateMutex;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Private<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DerefAllFiles();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FindBlock(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>pos)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AppendBlock(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_seq_block" kindref="compound">SeqBlock</ref><sp/>&amp;<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Read(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/>buffer,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/>format,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_seq_block" kindref="compound">SeqBlock</ref><sp/>&amp;b,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>start,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CopyWrite(<ref refid="class_sample_buffer" kindref="compound">SampleBuffer</ref><sp/>&amp;scratch,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/>buffer,<sp/><sp/><sp/><sp/><ref refid="class_seq_block" kindref="compound">SeqBlock</ref><sp/>&amp;b,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>start,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Blockify(<ref refid="class_block_array" kindref="compound">BlockArray</ref><sp/>&amp;list,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>start,<sp/><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/>buffer,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Get(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,<sp/><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/>buffer,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/>format,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>start,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Public<sp/>methods<sp/>intended<sp/>for<sp/>debugging<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>makes<sp/>sure<sp/>that<sp/>the<sp/>track<sp/>isn&apos;t<sp/>messed<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>of<sp/>inconsistent<sp/>block<sp/>starts<sp/>&amp;<sp/>lengths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ConsistencyCheck(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*whereStr)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>prints<sp/>information<sp/>to<sp/>stdout<sp/>about<sp/>the<sp/>blocks<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tracks<sp/>and<sp/>indicates<sp/>if<sp/>there<sp/>are<sp/>inconsistencies.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DebugPrintf(wxString<sp/>*dest)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">};</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__AUDACITY_SEQUENCE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/Sequence.h"/>
  </compounddef>
</doxygen>
