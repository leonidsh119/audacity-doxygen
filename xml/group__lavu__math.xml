<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="group__lavu__math" kind="group">
    <compoundname>lavu_math</compoundname>
    <title>Maths</title>
    <innerclass refid="struct_a_v_rational" prot="public">AVRational</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__lavu__math_1ga921d656eaf2c4d6800a734a13af021d0" prot="public" static="no">
        <name>AVRounding</name>
        <enumvalue id="group__lavu__math_1gga921d656eaf2c4d6800a734a13af021d0a35e291756025351803b97f7522b56eab" prot="public">
          <name>AV_ROUND_ZERO</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Round toward zero. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lavu__math_1gga921d656eaf2c4d6800a734a13af021d0a0ac08aede35de739ec5d0c1ba6217126" prot="public">
          <name>AV_ROUND_INF</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Round away from zero. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lavu__math_1gga921d656eaf2c4d6800a734a13af021d0a4a4b2c2c77b7e20884440f7e57cfdb98" prot="public">
          <name>AV_ROUND_DOWN</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Round toward -infinity. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lavu__math_1gga921d656eaf2c4d6800a734a13af021d0aa1d28e08e2f8b49b256e056f93038c1a" prot="public">
          <name>AV_ROUND_UP</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>Round toward +infinity. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lavu__math_1gga921d656eaf2c4d6800a734a13af021d0aea95b00154ff83c740b46376dfa06e11" prot="public">
          <name>AV_ROUND_NEAR_INF</name>
          <initializer>= 5</initializer>
          <briefdescription>
<para>Round to nearest and halfway cases away from zero. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lavu__math_1gga921d656eaf2c4d6800a734a13af021d0a7fcb56631d6898b282d6c78ce6c14a43" prot="public">
          <name>AV_ROUND_PASS_MINMAX</name>
          <initializer>= 8192</initializer>
          <briefdescription>
<para>Flag to pass INT64_MIN/MAX through instead of rescaling, this avoids special cases for AV_NOPTS_VALUE. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/mathematics.h" line="70" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/mathematics.h" bodystart="70" bodyend="77"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__lavu__math_1gac01954259ee41f8ac756277216ecf933" prot="public" static="no">
        <type>struct <ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
        <definition>typedef struct AVRational  AVRational</definition>
        <argsstring></argsstring>
        <name>AVRational</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>rational number numerator/denominator </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/rational.h" line="46" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__lavu__math_1ga952147c7a40c48a05c39e918b153ba99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref> <ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref></type>
        <definition>int64_t av_const av_gcd</definition>
        <argsstring>(int64_t a, int64_t b)</argsstring>
        <name>av_gcd</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the greatest common divisor of a and b. If both a and b are 0 or either or both are &lt;0 then behavior is undefined. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/mathematics.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__math_1ga3daf97178dd1b08b5e916be381cd33e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t av_rescale</definition>
        <argsstring>(int64_t a, int64_t b, int64_t c) av_const</argsstring>
        <name>av_rescale</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rescale a 64-bit integer with rounding to nearest. A simple a*b/c isn&apos;t possible as it can overflow. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/mathematics.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__math_1gad686ab94939ed4c65218309e94bdca72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t av_rescale_rnd</definition>
        <argsstring>(int64_t a, int64_t b, int64_t c, enum AVRounding) av_const</argsstring>
        <name>av_rescale_rnd</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type>enum</type>
          <declname>AVRounding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rescale a 64-bit integer with specified rounding. A simple a*b/c isn&apos;t possible as it can overflow.</para><para><simplesect kind="return"><para>rescaled value a, or if AV_ROUND_PASS_MINMAX is set and a is INT64_MIN or INT64_MAX then a is passed through unchanged. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/mathematics.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__math_1gaf02994a8bbeaa91d4757df179cbe567f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t av_rescale_q</definition>
        <argsstring>(int64_t a, AVRational bq, AVRational cq) av_const</argsstring>
        <name>av_rescale_q</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>bq</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>cq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rescale a 64-bit integer by 2 rational numbers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/mathematics.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__math_1gac167a841d10ac919407e77ae35391cf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t av_rescale_q_rnd</definition>
        <argsstring>(int64_t a, AVRational bq, AVRational cq, enum AVRounding) av_const</argsstring>
        <name>av_rescale_q_rnd</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>bq</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>cq</declname>
        </param>
        <param>
          <type>enum</type>
          <declname>AVRounding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rescale a 64-bit integer by 2 rational numbers with specified rounding.</para><para><simplesect kind="return"><para>rescaled value a, or if AV_ROUND_PASS_MINMAX is set and a is INT64_MIN or INT64_MAX then a is passed through unchanged. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/mathematics.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__math_1ga151744358fff630942b926e67e67c415" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_compare_ts</definition>
        <argsstring>(int64_t ts_a, AVRational tb_a, int64_t ts_b, AVRational tb_b)</argsstring>
        <name>av_compare_ts</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>ts_a</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>tb_a</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>ts_b</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>tb_b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare 2 timestamps each in its own timebases. The result of the function is undefined if one of the timestamps is outside the int64_t range when represented in the others timebase. <simplesect kind="return"><para>-1 if ts_a is before ts_b, 1 if ts_a is after ts_b or 0 if they represent the same position </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/mathematics.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__math_1gaf268a1dde957d04da846e026e2ebe6e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t av_compare_mod</definition>
        <argsstring>(uint64_t a, uint64_t b, uint64_t mod)</argsstring>
        <name>av_compare_mod</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare 2 integers modulo mod. That is we compare integers a and b for which only the least significant log2(mod) bits are known.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a power of 2 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a negative value if a is smaller than b a positive value if a is greater than b 0 if a equals b </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/mathematics.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__math_1ga29b7c3d60d68ef678ee1f4adc61a25dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t av_rescale_delta</definition>
        <argsstring>(AVRational in_tb, int64_t in_ts, AVRational fs_tb, int duration, int64_t *last, AVRational out_tb)</argsstring>
        <name>av_rescale_delta</name>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>in_tb</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>in_ts</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>fs_tb</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>duration</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref> *</type>
          <declname>last</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>out_tb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rescale a timestamp while preserving known durations.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in_ts</parametername>
</parameternamelist>
<parameterdescription>
<para>Input timestamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_tb</parametername>
</parameternamelist>
<parameterdescription>
<para>Input timebase </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fs_tb</parametername>
</parameternamelist>
<parameterdescription>
<para>Duration and *last timebase </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>duration</parametername>
</parameternamelist>
<parameterdescription>
<para>duration till the next call </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_tb</parametername>
</parameternamelist>
<parameterdescription>
<para>Output timebase </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/mathematics.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__math_1ga0c4f9ed3f4102125be7451ad4d848a2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t av_add_stable</definition>
        <argsstring>(AVRational ts_tb, int64_t ts, AVRational inc_tb, int64_t inc)</argsstring>
        <name>av_add_stable</name>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>ts_tb</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>ts</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>inc_tb</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>inc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a value to a timestamp.</para><para>This function gurantees that when the same value is repeatly added that no accumulation of rounding errors occurs.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ts</parametername>
</parameternamelist>
<parameterdescription>
<para>Input timestamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ts_tb</parametername>
</parameternamelist>
<parameterdescription>
<para>Input timestamp timebase </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inc</parametername>
</parameternamelist>
<parameterdescription>
<para>value to add to ts </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inc_tb</parametername>
</parameternamelist>
<parameterdescription>
<para>inc timebase </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/mathematics.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__math_1ga7778b1d209ceb3e4bf34e40150d3b882" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
        <definition>static AVRational av_make_q</definition>
        <argsstring>(int num, int den)</argsstring>
        <name>av_make_q</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>den</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a rational. Useful for compilers that do not support compound literals. <simplesect kind="note"><para>The return value is not reduced. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/rational.h" line="53" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/rational.h" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__math_1gaa440bf42ede128219a571ae4ce0f90b8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int av_cmp_q</definition>
        <argsstring>(AVRational a, AVRational b)</argsstring>
        <name>av_cmp_q</name>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two rationals. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>first rational </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>second rational </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if a==b, 1 if a&gt;b, -1 if a&lt;b, and INT_MIN if one of the values is of the form 0/0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/rational.h" line="66" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/rational.h" bodystart="66" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__math_1ga935dbbf6bde8dfe5fa7ddb1da582eb07" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double av_q2d</definition>
        <argsstring>(AVRational a)</argsstring>
        <name>av_q2d</name>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert rational to double. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>rational to convert </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(double) a </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/rational.h" line="80" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/rational.h" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__math_1ga4fd9c0b8e663cf3d55e89fbc6ce71602" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_reduce</definition>
        <argsstring>(int *dst_num, int *dst_den, int64_t num, int64_t den, int64_t max)</argsstring>
        <name>av_reduce</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>dst_num</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>dst_den</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>den</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reduce a fraction. This is useful for framerate calculations. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst_num</parametername>
</parameternamelist>
<parameterdescription>
<para>destination numerator </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_den</parametername>
</parameternamelist>
<parameterdescription>
<para>destination denominator </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>source numerator </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>den</parametername>
</parameternamelist>
<parameterdescription>
<para>source denominator </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum allowed for dst_num &amp; dst_den </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if exact, 0 otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/rational.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__math_1ga3f9c69432582e2857147bcba3c75dc32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
        <definition>AVRational av_mul_q</definition>
        <argsstring>(AVRational b, AVRational c) av_const</argsstring>
        <name>av_mul_q</name>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiply two rationals. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>first rational </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>second rational </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>b*c </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/rational.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__math_1gaffa24e7bd38e12dbac540d8b66461f97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
        <definition>AVRational av_div_q</definition>
        <argsstring>(AVRational b, AVRational c) av_const</argsstring>
        <name>av_div_q</name>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Divide one rational by another. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>first rational </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>second rational </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>b/c </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/rational.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__math_1ga2eb3a275aabacd8421f140a12bab4a91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
        <definition>AVRational av_add_q</definition>
        <argsstring>(AVRational b, AVRational c) av_const</argsstring>
        <name>av_add_q</name>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add two rationals. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>first rational </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>second rational </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>b+c </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/rational.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__math_1gac66c6198ce5e8a8caf88dfc20782fa59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
        <definition>AVRational av_sub_q</definition>
        <argsstring>(AVRational b, AVRational c) av_const</argsstring>
        <name>av_sub_q</name>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subtract one rational from another. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>first rational </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>second rational </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>b-c </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/rational.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__math_1gab646f0a7cc30af543ba4a91b37f9de6e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref> <ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
        <definition>static av_always_inline AVRational av_inv_q</definition>
        <argsstring>(AVRational q)</argsstring>
        <name>av_inv_q</name>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Invert a rational. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 / q </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/rational.h" line="133" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/rational.h" bodystart="133" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__math_1ga7dfd5ba1eb1edf5845ac32b338de9e76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
        <definition>AVRational av_d2q</definition>
        <argsstring>(double d, int max) av_const</argsstring>
        <name>av_d2q</name>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a double precision floating point number to a rational. inf is expressed as {1,0} or {-1,0} depending on the sign.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>double to convert </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum allowed numerator and denominator </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(<ref refid="struct_a_v_rational" kindref="compound">AVRational</ref>) d </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/rational.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__math_1ga111810c563749cd3081aaa19004f44df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_nearer_q</definition>
        <argsstring>(AVRational q, AVRational q1, AVRational q2)</argsstring>
        <name>av_nearer_q</name>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>q1</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>q2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>1 if q1 is nearer to q than q2, -1 if q2 is nearer than q1, 0 if they have the same distance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/rational.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__math_1ga63d5ef1c2f77a5fdccb2b3a1c8cc77f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_find_nearest_q_idx</definition>
        <argsstring>(AVRational q, const AVRational *q_list)</argsstring>
        <name>av_find_nearest_q_idx</name>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_rational" kindref="compound">AVRational</ref> *</type>
          <declname>q_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find the nearest value in q_list to q. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>q_list</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of rationals terminated by {0, 0} </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the nearest value found in the array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/rational.h" line="160" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
