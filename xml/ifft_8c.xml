<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="ifft_8c" kind="file" language="C++">
    <compoundname>ifft.c</compoundname>
    <includes local="yes">stdio.h</includes>
    <includes local="yes">stdlib.h</includes>
    <includes refid="xlisp_8h" local="yes">xlisp.h</includes>
    <includes refid="sound_8h" local="yes">sound.h</includes>
    <includes refid="falloc_8h" local="yes">falloc.h</includes>
    <includes refid="cext_8h" local="yes">cext.h</includes>
    <includes refid="ifft_8h" local="yes">ifft.h</includes>
    <includes refid="samples_8h" local="yes">samples.h</includes>
    <includes refid="fftext_8h" local="yes">fftext.h</includes>
    <incdepgraph>
      <node id="16928">
        <label>stdlib.h</label>
      </node>
      <node id="16931">
        <label>setjmp.h</label>
      </node>
      <node id="16941">
        <label>falloc.h</label>
        <link refid="falloc_8h"/>
        <childnode refid="16942" relation="include">
        </childnode>
        <childnode refid="16943" relation="include">
        </childnode>
      </node>
      <node id="16929">
        <label>xlisp.h</label>
        <link refid="xlisp_8h"/>
        <childnode refid="16928" relation="include">
        </childnode>
        <childnode refid="16927" relation="include">
        </childnode>
        <childnode refid="16930" relation="include">
        </childnode>
        <childnode refid="16931" relation="include">
        </childnode>
        <childnode refid="16932" relation="include">
        </childnode>
      </node>
      <node id="16940">
        <label>cleanup.h</label>
        <link refid="cleanup_8h"/>
      </node>
      <node id="16939">
        <label>mem.h</label>
        <link refid="libnyquist_2nyquist_2cmt_2mem_8h"/>
      </node>
      <node id="16945">
        <label>samples.h</label>
        <link refid="samples_8h"/>
      </node>
      <node id="16938">
        <label>string.h</label>
      </node>
      <node id="16946">
        <label>fftext.h</label>
        <link refid="fftext_8h"/>
      </node>
      <node id="16942">
        <label>cque.h</label>
        <link refid="cque_8h"/>
      </node>
      <node id="16933">
        <label>sound.h</label>
        <link refid="sound_8h"/>
        <childnode refid="16934" relation="include">
        </childnode>
        <childnode refid="16935" relation="include">
        </childnode>
      </node>
      <node id="16934">
        <label>math.h</label>
      </node>
      <node id="16937">
        <label>switches.h</label>
      </node>
      <node id="16935">
        <label>stdefs.h</label>
        <link refid="stdefs_8h"/>
        <childnode refid="16936" relation="include">
        </childnode>
      </node>
      <node id="16932">
        <label>xldmem.h</label>
        <link refid="xldmem_8h"/>
      </node>
      <node id="16930">
        <label>ctype.h</label>
      </node>
      <node id="16926">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/ifft.c</label>
        <link refid="ifft.c"/>
        <childnode refid="16927" relation="include">
        </childnode>
        <childnode refid="16928" relation="include">
        </childnode>
        <childnode refid="16929" relation="include">
        </childnode>
        <childnode refid="16933" relation="include">
        </childnode>
        <childnode refid="16941" relation="include">
        </childnode>
        <childnode refid="16936" relation="include">
        </childnode>
        <childnode refid="16944" relation="include">
        </childnode>
        <childnode refid="16945" relation="include">
        </childnode>
        <childnode refid="16946" relation="include">
        </childnode>
      </node>
      <node id="16944">
        <label>ifft.h</label>
        <link refid="ifft_8h"/>
      </node>
      <node id="16943">
        <label>debug.h</label>
        <link refid="libnyquist_2nyquist_2nyqsrc_2debug_8h"/>
      </node>
      <node id="16927">
        <label>stdio.h</label>
      </node>
      <node id="16936">
        <label>cext.h</label>
        <link refid="cext_8h"/>
        <childnode refid="16937" relation="include">
        </childnode>
        <childnode refid="16927" relation="include">
        </childnode>
        <childnode refid="16938" relation="include">
        </childnode>
        <childnode refid="16934" relation="include">
        </childnode>
        <childnode refid="16939" relation="include">
        </childnode>
        <childnode refid="16940" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structifft__susp__struct" prot="public">ifft_susp_struct</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="ifft_8c_1a16b3aa484a1e208dd2fd89491c05b88b" prot="public" static="no">
        <name>MUST_BE_FLONUM</name>
        <param><defname>e</defname></param>
        <initializer><ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref> (!(e) || <ref refid="xldmem_8h_1a0bea87e39e2918e4bc96203b6912afa8" kindref="member">ntype</ref>(e) != <ref refid="xldmem_8h_1a020194f6a2217309f363c3acd8c13b18" kindref="member">FLONUM</ref>) { <ref refid="xlisp_8h_1a2d78bf523301185246193246684786a8" kindref="member">xlerror</ref>(&quot;flonum expected&quot;, (e)); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/ifft.c" line="68" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/ifft.c" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ifft_8c_1a7d73de7b269ebdddddf3a3abc7ad699e" prot="public" static="no">
        <type>struct <ref refid="structifft__susp__struct" kindref="compound">ifft_susp_struct</ref></type>
        <definition>typedef struct ifft_susp_struct  ifft_susp_node</definition>
        <argsstring></argsstring>
        <name>ifft_susp_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/ifft.c" line="28" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="ifft_8c_1a37aa0b8ea3cd99987266a7419c5123db" prot="public" static="no">
        <type>struct <ref refid="structifft__susp__struct" kindref="compound">ifft_susp_struct</ref> *</type>
        <definition>typedef struct ifft_susp_struct * ifft_susp_type</definition>
        <argsstring></argsstring>
        <name>ifft_susp_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/ifft.c" line="28" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ifft_8c_1ad36c88571b342556c15e72811bd1fc49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void ifft_free</definition>
        <argsstring>(snd_susp_type a_susp)</argsstring>
        <name>ifft_free</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/ifft.c" line="12" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/ifft.c" bodystart="237" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="ifft_8c_1af8a70dcdb99e7ce6d6035d1ee17fa7f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a187b856587310160cfd8b383e7377171" kindref="member">table_type</ref></type>
        <definition>table_type get_window_samples</definition>
        <argsstring>(LVAL window, sample_type **samples, long *len)</argsstring>
        <name>get_window_samples</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref> **</type>
          <declname>samples</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/ifft.c" line="71" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/ifft.c" bodystart="71" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="ifft_8c_1adb6a58a29361509c6e0e7678165fb00c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void ifft__fetch</definition>
        <argsstring>(snd_susp_type a_susp, snd_list_type snd_list)</argsstring>
        <name>ifft__fetch</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
          <declname>snd_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/ifft.c" line="86" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/ifft.c" bodystart="86" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="ifft_8c_1a1e53b3fc83fa1132523fd782ffbeb249" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void ifft_mark</definition>
        <argsstring>(snd_susp_type a_susp)</argsstring>
        <name>ifft_mark</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/ifft.c" line="229" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/ifft.c" bodystart="229" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="ifft_8c_1a8896e84f65883c193c107c14d045aabf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void ifft_print_tree</definition>
        <argsstring>(snd_susp_type a_susp, int n)</argsstring>
        <name>ifft_print_tree</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/ifft.c" line="247" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/ifft.c" bodystart="247" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="ifft_8c_1a71baef694495f1aa47c84248fa8c566a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
        <definition>sound_type snd_make_ifft</definition>
        <argsstring>(time_type t0, rate_type sr, LVAL src, long stepsize, LVAL window)</argsstring>
        <name>snd_make_ifft</name>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref></type>
          <declname>sr</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>src</declname>
        </param>
        <param>
          <type>long</type>
          <declname>stepsize</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/ifft.c" line="252" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/ifft.c" bodystart="252" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="ifft_8c_1a66e25e8775a4669c0e2a81b0f479c5ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
        <definition>sound_type snd_ifft</definition>
        <argsstring>(time_type t0, rate_type sr, LVAL src, long stepsize, LVAL window)</argsstring>
        <name>snd_ifft</name>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref></type>
          <declname>sr</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>src</declname>
        </param>
        <param>
          <type>long</type>
          <declname>stepsize</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/ifft.c" line="284" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/ifft.c" bodystart="284" bodyend="287"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;stdio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>mips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xlisp_8h" kindref="compound">xlisp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sound_8h" kindref="compound">sound.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="falloc_8h" kindref="compound">falloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cext_8h" kindref="compound">cext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ifft_8h" kindref="compound">ifft.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ifft_8c_1ad36c88571b342556c15e72811bd1fc49" kindref="member">ifft_free</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="structifft__susp__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structifft__susp__struct" kindref="compound">ifft_susp_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="16" refid="structifft__susp__struct_1acb486f015843ecec7aa5411020613389" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsnd__susp__struct" kindref="compound">snd_susp_node</ref><sp/><ref refid="structifft__susp__struct_1acb486f015843ecec7aa5411020613389" kindref="member">susp</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="structifft__susp__struct_1ae493e253e96a715cb894162fd1f2b6c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structifft__susp__struct_1ae493e253e96a715cb894162fd1f2b6c8" kindref="member">index</ref>;</highlight></codeline>
<codeline lineno="19" refid="structifft__susp__struct_1acb433849910b0830727500dc06ca3915" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structifft__susp__struct_1acb433849910b0830727500dc06ca3915" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="20" refid="structifft__susp__struct_1a8203862bee427676ae42505e4d612dff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="structifft__susp__struct_1a8203862bee427676ae42505e4d612dff" kindref="member">array</ref>;</highlight></codeline>
<codeline lineno="21" refid="structifft__susp__struct_1adabf8f5013bd23e2c56f58ca9f6f74db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structifft__susp__struct_1adabf8f5013bd23e2c56f58ca9f6f74db" kindref="member">window_len</ref>;</highlight></codeline>
<codeline lineno="22" refid="structifft__susp__struct_1a07bbbb0b4c0a60c16ca5bc6b361dfa44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*<ref refid="structifft__susp__struct_1a07bbbb0b4c0a60c16ca5bc6b361dfa44" kindref="member">outbuf</ref>;</highlight></codeline>
<codeline lineno="23" refid="structifft__susp__struct_1a7316d45d90f48ac54adc5081898a1f30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="structifft__susp__struct_1a7316d45d90f48ac54adc5081898a1f30" kindref="member">src</ref>;</highlight></codeline>
<codeline lineno="24" refid="structifft__susp__struct_1a52eb060b33b57c86c0ee78928d677348" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structifft__susp__struct_1a52eb060b33b57c86c0ee78928d677348" kindref="member">stepsize</ref>;</highlight></codeline>
<codeline lineno="25" refid="structifft__susp__struct_1a4af17d557b4dc005cffa1645bd4b3d4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*<ref refid="structifft__susp__struct_1a4af17d557b4dc005cffa1645bd4b3d4b" kindref="member">window</ref>;</highlight></codeline>
<codeline lineno="26" refid="structifft__susp__struct_1aebaddc62d15c0840ef1872e62e2dacf1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*<ref refid="structifft__susp__struct_1aebaddc62d15c0840ef1872e62e2dacf1" kindref="member">samples</ref>;</highlight></codeline>
<codeline lineno="27" refid="structifft__susp__struct_1a03649ba177969d6ae7ada6ccee9e583d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtable__struct" kindref="compound">table_type</ref><sp/><ref refid="structifft__susp__struct_1a03649ba177969d6ae7ada6ccee9e583d" kindref="member">table</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}<sp/><ref refid="ifft_8c_1a7d73de7b269ebdddddf3a3abc7ad699e" kindref="member">ifft_susp_node</ref>,<sp/>*<ref refid="ifft_8c_1a37aa0b8ea3cd99987266a7419c5123db" kindref="member">ifft_susp_type</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>index:<sp/>index<sp/>into<sp/>outbuf<sp/>whree<sp/>we<sp/>get<sp/>output<sp/>samples</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>length:<sp/>size<sp/>of<sp/>the<sp/>frame,<sp/>window,<sp/>and<sp/>outbuf;<sp/>half<sp/>size<sp/>of<sp/>samples</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>array:<sp/>spectral<sp/>frame<sp/>goes<sp/>here<sp/>(why<sp/>not<sp/>a<sp/>local<sp/>var?)</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>window_len:<sp/>size<sp/>of<sp/>window,<sp/>should<sp/>equal<sp/>length</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>outbuf:<sp/>real<sp/>part<sp/>of<sp/>samples<sp/>are<sp/>multiplied<sp/>by<sp/>window<sp/>and<sp/>added<sp/>to</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outbuf<sp/>(after<sp/>shifting)</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>src:<sp/>send<sp/>:NEXT<sp/>to<sp/>this<sp/>object<sp/>to<sp/>get<sp/>next<sp/>frame</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>stepsize:<sp/>shift<sp/>by<sp/>this<sp/>many<sp/>and<sp/>add<sp/>each<sp/>frame</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>samples:<sp/>result<sp/>of<sp/>ifft<sp/>goes<sp/>here,<sp/>real<sp/>and<sp/>imag</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>window:<sp/>multiply<sp/>samples<sp/>by<sp/>window<sp/>if<sp/>any<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>IMPLEMENTATION<sp/>NOTE:</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>The<sp/>src<sp/>argument<sp/>is<sp/>an<sp/>XLisp<sp/>object<sp/>that<sp/>returns<sp/>either<sp/>an</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>array<sp/>of<sp/>samples<sp/>or<sp/>NIL.<sp/>The<sp/>output<sp/>of<sp/>ifft<sp/>is<sp/>simply<sp/>the</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>concatenation<sp/>of<sp/>the<sp/>samples<sp/>taken<sp/>from<sp/>the<sp/>array.<sp/>Later,</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>an<sp/>ifft<sp/>will<sp/>be<sp/>plugged<sp/>in<sp/>and<sp/>this<sp/>will<sp/>return<sp/>overlapped</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>adds<sp/>of<sp/>the<sp/>ifft&apos;s.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>OVERLAP:<sp/>stepsize<sp/>must<sp/>be<sp/>less<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>the<sp/>length</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>of<sp/>real<sp/>part<sp/>of<sp/>the<sp/>transformed<sp/>spectrum.<sp/>A<sp/>transform<sp/>step</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>works<sp/>like<sp/>this:<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>(1)<sp/>shift<sp/>the<sp/>output<sp/>buffer<sp/>by<sp/>stepsize<sp/>samples,<sp/>filling</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>the<sp/>end<sp/>of<sp/>the<sp/>buffer<sp/>with<sp/>zeros</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>(2)<sp/>get<sp/>and<sp/>transform<sp/>an<sp/>array<sp/>of<sp/>spectral<sp/>coefficients</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>(3)<sp/>multiply<sp/>the<sp/>result<sp/>by<sp/>a<sp/>window</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>(4)<sp/>add<sp/>the<sp/>result<sp/>to<sp/>the<sp/>output<sp/>buffer</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>(5)<sp/>output<sp/>the<sp/>first<sp/>stepsize<sp/>samples<sp/>of<sp/>the<sp/>buffer</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>DATA<sp/>FORMAT:<sp/>the<sp/>DC<sp/>component<sp/>goes<sp/>in<sp/>array<sp/>elem<sp/>0</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>Cosine<sp/>part<sp/>is<sp/>in<sp/>elements<sp/>2*i-1</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>Sine<sp/>part<sp/>is<sp/>in<sp/>elements<sp/>2*i</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>Nyquist<sp/>frequency<sp/>is<sp/>in<sp/>element<sp/>length-1</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="samples_8h" kindref="compound">samples.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fftext_8h" kindref="compound">fftext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="ifft_8c_1a16b3aa484a1e208dd2fd89491c05b88b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MUST_BE_FLONUM(e)<sp/>\</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(!(e)<sp/>||<sp/>ntype(e)<sp/>!=<sp/>FLONUM)<sp/>{<sp/>xlerror(&quot;flonum<sp/>expected&quot;,<sp/>(e));<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="ifft_8c_1af8a70dcdb99e7ce6d6035d1ee17fa7f0" refkind="member"><highlight class="normal"><ref refid="structtable__struct" kindref="compound">table_type</ref><sp/><ref refid="ifft_8c_1af8a70dcdb99e7ce6d6035d1ee17fa7f0" kindref="member">get_window_samples</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="structifft__susp__struct_1a4af17d557b4dc005cffa1645bd4b3d4b" kindref="member">window</ref>,<sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>**<ref refid="structifft__susp__struct_1aebaddc62d15c0840ef1872e62e2dacf1" kindref="member">samples</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtable__struct" kindref="compound">table_type</ref><sp/>result<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sound_8c_1a648e09ad8e5937bdcec6c10ddaac4738" kindref="member">soundp</ref>(window))<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>window_sound<sp/>=<sp/><ref refid="sound_8h_1aa309e04f7a0ff565a69f56d34fd6f899" kindref="member">getsound</ref>(window);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1aca97fe39ef9ee285c1bac237226a7cef" kindref="member">xlprot1</ref>(window);<sp/></highlight><highlight class="comment">/*<sp/>maybe<sp/>not<sp/>necessary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="sound_8c_1a4eb4d75cb8c657caa35914cafade6020" kindref="member">sound_to_table</ref>(window_sound);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a8069423ebe9363c35a5801edda92de02" kindref="member">xlpop</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*samples<sp/>=<sp/>result-&gt;<ref refid="structtable__struct_1af21c66b00f0ce30f3f0b0c7d2405c988" kindref="member">samples</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*len<sp/>=<sp/>(long)<sp/>(result-&gt;<ref refid="structtable__struct_1a11559931dbab7189ae415a901b7d2341" kindref="member">length</ref><sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="ifft_8c_1adb6a58a29361509c6e0e7678165fb00c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ifft_8c_1adb6a58a29361509c6e0e7678165fb00c" kindref="member">ifft__fetch</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp,<sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>ifft_susp_type<sp/><ref refid="structifft__susp__struct_1acb486f015843ecec7aa5411020613389" kindref="member">susp</ref><sp/>=<sp/>(<ref refid="ifft_8c_1a37aa0b8ea3cd99987266a7419c5123db" kindref="member">ifft_susp_type</ref>)<sp/>a_susp;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>how<sp/>many<sp/>samples<sp/>computed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>togo;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>out_ptr;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>out_ptr_reg;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>index_reg;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*<sp/>outbuf_reg;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1aed8e636a68eb95ea3c7dc90189e78b43" kindref="member">falloc_sample_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;ifft__fetch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ptr<sp/>=<sp/>out-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref><sp/>=<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cnt<sp/>&lt;<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>outer<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>compute<sp/>how<sp/>many<sp/>samples<sp/>to<sp/>generate<sp/>in<sp/>inner<sp/>loop:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>overflow<sp/>the<sp/>output<sp/>sample<sp/>block:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>togo<sp/>=<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref><sp/>-<sp/>cnt;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structifft__susp__struct_1a7316d45d90f48ac54adc5081898a1f30" kindref="member">src</ref><sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal">out:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>indicate<sp/>termination<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we&apos;re<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structifft__susp__struct_1ae493e253e96a715cb894162fd1f2b6c8" kindref="member">index</ref><sp/>&gt;=<sp/>susp-&gt;<ref refid="structifft__susp__struct_1a52eb060b33b57c86c0ee78928d677348" kindref="member">stepsize</ref>)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>,<sp/>n;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="hashrout_8h_1a27e2f8e58a978945d1c31db742899f21" kindref="member">elem</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1ae493e253e96a715cb894162fd1f2b6c8" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1a8203862bee427676ae42505e4d612dff" kindref="member">array</ref><sp/>=<sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xleval_8c_1a4e85c1af4b4cbfa71b83b42ebefb0a01" kindref="member">xleval</ref>(<ref refid="xldmem_8c_1a6020b108cda9dc1cb27b748db6afef0a" kindref="member">cons</ref>(<ref refid="samples_8c_1abb184fa09b7fbdf5972e402f8574dfd9" kindref="member">s_send</ref>,<sp/><ref refid="xldmem_8c_1a6020b108cda9dc1cb27b748db6afef0a" kindref="member">cons</ref>(susp-&gt;<ref refid="structifft__susp__struct_1a7316d45d90f48ac54adc5081898a1f30" kindref="member">src</ref>,<sp/><ref refid="xlisp_8h_1a72509ef6a53e6298774f56615eaaf775" kindref="member">consa</ref>(<ref refid="samples_8c_1aed5968bcd3ac997a046fd0a44b71f46a" kindref="member">s_next</ref>))));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structifft__susp__struct_1a8203862bee427676ae42505e4d612dff" kindref="member">array</ref><sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1a7316d45d90f48ac54adc5081898a1f30" kindref="member">src</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="xlisp_8h_1affd2148db1b3832bd3d27a6b1007b7ef" kindref="member">vectorp</ref>(susp-&gt;<ref refid="structifft__susp__struct_1a8203862bee427676ae42505e4d612dff" kindref="member">array</ref>))<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a2d78bf523301185246193246684786a8" kindref="member">xlerror</ref>(</highlight><highlight class="stringliteral">&quot;array<sp/>expected&quot;</highlight><highlight class="normal">,<sp/>susp-&gt;<ref refid="structifft__susp__struct_1a8203862bee427676ae42505e4d612dff" kindref="member">array</ref>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structifft__susp__struct_1aebaddc62d15c0840ef1872e62e2dacf1" kindref="member">samples</ref><sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>assume<sp/>arrays<sp/>are<sp/>all<sp/>the<sp/>same<sp/>size<sp/>as<sp/>first<sp/>one;</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now<sp/>that<sp/>we<sp/>know<sp/>the<sp/>size,<sp/>we<sp/>just<sp/>have<sp/>to<sp/>do<sp/>this</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>allocation.</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1acb433849910b0830727500dc06ca3915" kindref="member">length</ref><sp/>=<sp/><ref refid="xldmem_8h_1ac8d23305da5cbfcbe968123eec4faa2e" kindref="member">getsize</ref>(susp-&gt;<ref refid="structifft__susp__struct_1a8203862bee427676ae42505e4d612dff" kindref="member">array</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structifft__susp__struct_1acb433849910b0830727500dc06ca3915" kindref="member">length</ref><sp/>&lt;<sp/>1)<sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a2d78bf523301185246193246684786a8" kindref="member">xlerror</ref>(</highlight><highlight class="stringliteral">&quot;array<sp/>has<sp/>no<sp/>elements&quot;</highlight><highlight class="normal">,<sp/>susp-&gt;<ref refid="structifft__susp__struct_1a8203862bee427676ae42505e4d612dff" kindref="member">array</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structifft__susp__struct_1a4af17d557b4dc005cffa1645bd4b3d4b" kindref="member">window</ref><sp/>&amp;&amp;<sp/>(susp-&gt;<ref refid="structifft__susp__struct_1adabf8f5013bd23e2c56f58ca9f6f74db" kindref="member">window_len</ref><sp/>!=<sp/>susp-&gt;<ref refid="structifft__susp__struct_1acb433849910b0830727500dc06ca3915" kindref="member">length</ref>))</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a2d78bf523301185246193246684786a8" kindref="member">xlerror</ref>(</highlight><highlight class="stringliteral">&quot;window<sp/>size<sp/>and<sp/>spectrum<sp/>size<sp/>differ&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1a8203862bee427676ae42505e4d612dff" kindref="member">array</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>tricky<sp/>non-power<sp/>of<sp/>2<sp/>detector:<sp/>only<sp/>if<sp/>this<sp/>is<sp/>a</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>power<sp/>of<sp/>2<sp/>will<sp/>the<sp/>highest<sp/>1<sp/>bit<sp/>be<sp/>cleared<sp/>when</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>subtract<sp/>1<sp/>...</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structifft__susp__struct_1acb433849910b0830727500dc06ca3915" kindref="member">length</ref><sp/>&amp;<sp/>(susp-&gt;<ref refid="structifft__susp__struct_1acb433849910b0830727500dc06ca3915" kindref="member">length</ref><sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;spectrum<sp/>size<sp/>must<sp/>be<sp/>a<sp/>power<sp/>of<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1aebaddc62d15c0840ef1872e62e2dacf1" kindref="member">samples</ref><sp/>=<sp/>(<ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*)<sp/>calloc(susp-&gt;<ref refid="structifft__susp__struct_1acb433849910b0830727500dc06ca3915" kindref="member">length</ref>,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref>));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1a07bbbb0b4c0a60c16ca5bc6b361dfa44" kindref="member">outbuf</ref><sp/>=<sp/>(<ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*)<sp/>calloc(susp-&gt;<ref refid="structifft__susp__struct_1acb433849910b0830727500dc06ca3915" kindref="member">length</ref>,<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref>));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xldmem_8h_1ac8d23305da5cbfcbe968123eec4faa2e" kindref="member">getsize</ref>(susp-&gt;<ref refid="structifft__susp__struct_1a8203862bee427676ae42505e4d612dff" kindref="member">array</ref>)<sp/>!=<sp/>susp-&gt;<ref refid="structifft__susp__struct_1acb433849910b0830727500dc06ca3915" kindref="member">length</ref>)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a2d78bf523301185246193246684786a8" kindref="member">xlerror</ref>(</highlight><highlight class="stringliteral">&quot;arrays<sp/>must<sp/>all<sp/>be<sp/>the<sp/>same<sp/>length&quot;</highlight><highlight class="normal">,<sp/>susp-&gt;<ref refid="structifft__susp__struct_1a8203862bee427676ae42505e4d612dff" kindref="member">array</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>at<sp/>this<sp/>point,<sp/>we<sp/>have<sp/>a<sp/>new<sp/>array<sp/>to<sp/>put<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>incoming<sp/>array<sp/>format<sp/>is<sp/>[DC,<sp/>R1,<sp/>I1,<sp/>R2,<sp/>I2,<sp/>...<sp/>RN]</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>where<sp/>RN<sp/>is<sp/>the<sp/>real<sp/>coef<sp/>at<sp/>the<sp/>Nyquist<sp/>frequency</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>but<sp/>susp-&gt;samples<sp/>should<sp/>be<sp/>organized<sp/>as<sp/>[DC,<sp/>RN,<sp/>R1,<sp/>I1,<sp/>...]</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>susp-&gt;<ref refid="structifft__susp__struct_1acb433849910b0830727500dc06ca3915" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>DC<sp/>(real)<sp/>coef<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem<sp/>=<sp/><ref refid="xldmem_8h_1a4eddccdfe02ec05157ff7e416a28420c" kindref="member">getelement</ref>(susp-&gt;<ref refid="structifft__susp__struct_1a8203862bee427676ae42505e4d612dff" kindref="member">array</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ifft_8c_1a16b3aa484a1e208dd2fd89491c05b88b" kindref="member">MUST_BE_FLONUM</ref>(elem)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1aebaddc62d15c0840ef1872e62e2dacf1" kindref="member">samples</ref>[0]<sp/>=<sp/>(<ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref>)<sp/><ref refid="xldmem_8h_1a93878740023aeb748ba761c1b586281e" kindref="member">getflonum</ref>(elem);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>Nyquist<sp/>(real)<sp/>coef<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem<sp/>=<sp/><ref refid="xldmem_8h_1a4eddccdfe02ec05157ff7e416a28420c" kindref="member">getelement</ref>(susp-&gt;<ref refid="structifft__susp__struct_1a8203862bee427676ae42505e4d612dff" kindref="member">array</ref>,<sp/>n<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ifft_8c_1a16b3aa484a1e208dd2fd89491c05b88b" kindref="member">MUST_BE_FLONUM</ref>(elem);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1aebaddc62d15c0840ef1872e62e2dacf1" kindref="member">samples</ref>[1]<sp/>=<sp/>(<ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref>)<sp/><ref refid="xldmem_8h_1a93878740023aeb748ba761c1b586281e" kindref="member">getflonum</ref>(elem);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>remaining<sp/>coef<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>n<sp/>-<sp/>1;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem<sp/>=<sp/><ref refid="xldmem_8h_1a4eddccdfe02ec05157ff7e416a28420c" kindref="member">getelement</ref>(susp-&gt;<ref refid="structifft__susp__struct_1a8203862bee427676ae42505e4d612dff" kindref="member">array</ref>,<sp/>i);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ifft_8c_1a16b3aa484a1e208dd2fd89491c05b88b" kindref="member">MUST_BE_FLONUM</ref>(elem)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1aebaddc62d15c0840ef1872e62e2dacf1" kindref="member">samples</ref>[i<sp/>+<sp/>1]<sp/>=<sp/>(<ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref>)<sp/><ref refid="xldmem_8h_1a93878740023aeb748ba761c1b586281e" kindref="member">getflonum</ref>(elem);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1a8203862bee427676ae42505e4d612dff" kindref="member">array</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>free<sp/>the<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>here<sp/>is<sp/>where<sp/>the<sp/>IFFT<sp/>and<sp/>windowing<sp/>should<sp/>take<sp/>place<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fftnf(1,<sp/>&amp;n,<sp/>susp-&gt;samples,<sp/>susp-&gt;samples<sp/>+<sp/>n,<sp/>-1,<sp/>1.0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>round(log2(n));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="fftext_8c_1a6df620a166f1f7e9f5cd756d3adbc7ff" kindref="member">fftInit</ref>(m))<sp/><ref refid="fftext_8c_1a5c361784476375bff6cb785324b2acb9" kindref="member">riffts</ref>(susp-&gt;<ref refid="structifft__susp__struct_1aebaddc62d15c0840ef1872e62e2dacf1" kindref="member">samples</ref>,<sp/>m,<sp/>1);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;FFT<sp/>initialization<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structifft__susp__struct_1a4af17d557b4dc005cffa1645bd4b3d4b" kindref="member">window</ref>)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>susp-&gt;<ref refid="structifft__susp__struct_1acb433849910b0830727500dc06ca3915" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1aebaddc62d15c0840ef1872e62e2dacf1" kindref="member">samples</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>*=<sp/>susp-&gt;<ref refid="structifft__susp__struct_1a4af17d557b4dc005cffa1645bd4b3d4b" kindref="member">window</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shift<sp/>the<sp/>outbuf<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>susp-&gt;<ref refid="structifft__susp__struct_1acb433849910b0830727500dc06ca3915" kindref="member">length</ref><sp/>-<sp/>susp-&gt;<ref refid="structifft__susp__struct_1a52eb060b33b57c86c0ee78928d677348" kindref="member">stepsize</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1a07bbbb0b4c0a60c16ca5bc6b361dfa44" kindref="member">outbuf</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>susp-&gt;<ref refid="structifft__susp__struct_1a07bbbb0b4c0a60c16ca5bc6b361dfa44" kindref="member">outbuf</ref>[i<sp/>+<sp/>susp-&gt;<ref refid="structifft__susp__struct_1a52eb060b33b57c86c0ee78928d677348" kindref="member">stepsize</ref>];</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>end<sp/>of<sp/>outbuf<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>n;<sp/>i<sp/>&lt;<sp/>susp-&gt;<ref refid="structifft__susp__struct_1acb433849910b0830727500dc06ca3915" kindref="member">length</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1a07bbbb0b4c0a60c16ca5bc6b361dfa44" kindref="member">outbuf</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>in<sp/>the<sp/>ifft<sp/>result<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>susp-&gt;<ref refid="structifft__susp__struct_1acb433849910b0830727500dc06ca3915" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1a07bbbb0b4c0a60c16ca5bc6b361dfa44" kindref="member">outbuf</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+=<sp/>susp-&gt;<ref refid="structifft__susp__struct_1aebaddc62d15c0840ef1872e62e2dacf1" kindref="member">samples</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(togo,<sp/>susp-&gt;<ref refid="structifft__susp__struct_1a52eb060b33b57c86c0ee78928d677348" kindref="member">stepsize</ref><sp/>-<sp/>susp-&gt;<ref refid="structifft__susp__struct_1ae493e253e96a715cb894162fd1f2b6c8" kindref="member">index</ref>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>togo;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>index_reg<sp/>=<sp/>susp-&gt;<ref refid="structifft__susp__struct_1ae493e253e96a715cb894162fd1f2b6c8" kindref="member">index</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>outbuf_reg<sp/>=<sp/>susp-&gt;<ref refid="structifft__susp__struct_1a07bbbb0b4c0a60c16ca5bc6b361dfa44" kindref="member">outbuf</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ptr_reg<sp/>=<sp/>out_ptr;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>inner<sp/>sample<sp/>computation<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_ptr_reg++<sp/>=<sp/>outbuf_reg[index_reg++];</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--n);<sp/></highlight><highlight class="comment">/*<sp/>inner<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1ae493e253e96a715cb894162fd1f2b6c8" kindref="member">index</ref><sp/>=<sp/>index_reg;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1a07bbbb0b4c0a60c16ca5bc6b361dfa44" kindref="member">outbuf</ref><sp/>=<sp/>outbuf_reg;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ptr<sp/>+=<sp/>togo;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt<sp/>+=<sp/>togo;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>outer<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>for<sp/>termination<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(togo<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>cnt<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a64f075d27a7672293c0c8d657aa51647" kindref="member">snd_list_terminate</ref>(snd_list);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a809aedecf6147df4ec4b45404cfab414" kindref="member">block_len</ref><sp/>=<sp/>cnt;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1acb486f015843ecec7aa5411020613389" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+=<sp/>cnt;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>ifft__fetch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="ifft_8c_1a1e53b3fc83fa1132523fd782ffbeb249" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ifft_8c_1a1e53b3fc83fa1132523fd782ffbeb249" kindref="member">ifft_mark</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>ifft_susp_type<sp/><ref refid="structifft__susp__struct_1acb486f015843ecec7aa5411020613389" kindref="member">susp</ref><sp/>=<sp/>(<ref refid="ifft_8c_1a37aa0b8ea3cd99987266a7419c5123db" kindref="member">ifft_susp_type</ref>)<sp/>a_susp;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structifft__susp__struct_1a7316d45d90f48ac54adc5081898a1f30" kindref="member">src</ref>)<sp/><ref refid="xldmem_8c_1ae8cb64b8b02eb280bb21f141a33f6a36" kindref="member">mark</ref>(susp-&gt;<ref refid="structifft__susp__struct_1a7316d45d90f48ac54adc5081898a1f30" kindref="member">src</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structifft__susp__struct_1a8203862bee427676ae42505e4d612dff" kindref="member">array</ref>)<sp/><ref refid="xldmem_8c_1ae8cb64b8b02eb280bb21f141a33f6a36" kindref="member">mark</ref>(susp-&gt;<ref refid="structifft__susp__struct_1a8203862bee427676ae42505e4d612dff" kindref="member">array</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="ifft_8c_1ad36c88571b342556c15e72811bd1fc49" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ifft_8c_1ad36c88571b342556c15e72811bd1fc49" kindref="member">ifft_free</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>ifft_susp_type<sp/><ref refid="structifft__susp__struct_1acb486f015843ecec7aa5411020613389" kindref="member">susp</ref><sp/>=<sp/>(<ref refid="ifft_8c_1a37aa0b8ea3cd99987266a7419c5123db" kindref="member">ifft_susp_type</ref>)<sp/>a_susp;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structifft__susp__struct_1aebaddc62d15c0840ef1872e62e2dacf1" kindref="member">samples</ref>)<sp/>free(susp-&gt;<ref refid="structifft__susp__struct_1aebaddc62d15c0840ef1872e62e2dacf1" kindref="member">samples</ref>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structifft__susp__struct_1a03649ba177969d6ae7ada6ccee9e583d" kindref="member">table</ref>)<sp/><ref refid="sound_8c_1a841b19f08a0ab27a514b66af9244a1fe" kindref="member">table_unref</ref>(susp-&gt;<ref refid="structifft__susp__struct_1a03649ba177969d6ae7ada6ccee9e583d" kindref="member">table</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structifft__susp__struct_1a07bbbb0b4c0a60c16ca5bc6b361dfa44" kindref="member">outbuf</ref>)<sp/>free(susp-&gt;<ref refid="structifft__susp__struct_1a07bbbb0b4c0a60c16ca5bc6b361dfa44" kindref="member">outbuf</ref>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a90be646acd537771c5401524877e0844" kindref="member">ffree_generic</ref>(susp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structifft__susp__struct" kindref="compound">ifft_susp_node</ref>),<sp/></highlight><highlight class="stringliteral">&quot;ifft_free&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="ifft_8c_1a8896e84f65883c193c107c14d045aabf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ifft_8c_1a8896e84f65883c193c107c14d045aabf" kindref="member">ifft_print_tree</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="ifft_8h_1a71baef694495f1aa47c84248fa8c566a" refkind="member"><highlight class="normal"><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="ifft_8c_1a71baef694495f1aa47c84248fa8c566a" kindref="member">snd_make_ifft</ref>(<ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>t0,<sp/><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref><sp/>sr,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="structifft__susp__struct_1a7316d45d90f48ac54adc5081898a1f30" kindref="member">src</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structifft__susp__struct_1a52eb060b33b57c86c0ee78928d677348" kindref="member">stepsize</ref>,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="structifft__susp__struct_1a4af17d557b4dc005cffa1645bd4b3d4b" kindref="member">window</ref>)</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>ifft_susp_type<sp/><ref refid="structifft__susp__struct_1acb486f015843ecec7aa5411020613389" kindref="member">susp</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sr<sp/>specified<sp/>as<sp/>input<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>t0<sp/>specified<sp/>as<sp/>input<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>scale_factor<sp/>=<sp/>1.0F;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a187500f957dfc9510ad0c87c0c92e39e" kindref="member">falloc_generic</ref>(susp,<sp/><ref refid="structifft__susp__struct" kindref="compound">ifft_susp_node</ref>,<sp/></highlight><highlight class="stringliteral">&quot;snd_make_ifft&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1ae493e253e96a715cb894162fd1f2b6c8" kindref="member">index</ref><sp/>=<sp/><ref refid="structifft__susp__struct_1a52eb060b33b57c86c0ee78928d677348" kindref="member">stepsize</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1acb433849910b0830727500dc06ca3915" kindref="member">length</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1a8203862bee427676ae42505e4d612dff" kindref="member">array</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1adabf8f5013bd23e2c56f58ca9f6f74db" kindref="member">window_len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1a07bbbb0b4c0a60c16ca5bc6b361dfa44" kindref="member">outbuf</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1a7316d45d90f48ac54adc5081898a1f30" kindref="member">src</ref><sp/>=<sp/><ref refid="structifft__susp__struct_1a7316d45d90f48ac54adc5081898a1f30" kindref="member">src</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1a52eb060b33b57c86c0ee78928d677348" kindref="member">stepsize</ref><sp/>=<sp/><ref refid="structifft__susp__struct_1a52eb060b33b57c86c0ee78928d677348" kindref="member">stepsize</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1a4af17d557b4dc005cffa1645bd4b3d4b" kindref="member">window</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1aebaddc62d15c0840ef1872e62e2dacf1" kindref="member">samples</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1a03649ba177969d6ae7ada6ccee9e583d" kindref="member">table</ref><sp/>=<sp/><ref refid="ifft_8c_1af8a70dcdb99e7ce6d6035d1ee17fa7f0" kindref="member">get_window_samples</ref>(window,<sp/>&amp;susp-&gt;<ref refid="structifft__susp__struct_1a4af17d557b4dc005cffa1645bd4b3d4b" kindref="member">window</ref>,<sp/>&amp;susp-&gt;<ref refid="structifft__susp__struct_1adabf8f5013bd23e2c56f58ca9f6f74db" kindref="member">window_len</ref>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1acb486f015843ecec7aa5411020613389" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1addb182d5c03b9b8f864e4fd9871f7722" kindref="member">fetch</ref><sp/>=<sp/><ref refid="ifft_8c_1adb6a58a29361509c6e0e7678165fb00c" kindref="member">ifft__fetch</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>susp<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1acb486f015843ecec7aa5411020613389" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a39cc18ad890efb4f088c9d7636e3b5c0" kindref="member">free</ref><sp/>=<sp/><ref refid="ifft_8c_1ad36c88571b342556c15e72811bd1fc49" kindref="member">ifft_free</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1acb486f015843ecec7aa5411020613389" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a89e4d9a7c1f50a9a0b4bca5ec1c253be" kindref="member">sr</ref><sp/>=<sp/>sr;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1acb486f015843ecec7aa5411020613389" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a5e783b62d30b458070fb80dc0e112594" kindref="member">t0</ref><sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1acb486f015843ecec7aa5411020613389" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a077478e200df3bc42489892597f15d47" kindref="member">mark</ref><sp/>=<sp/><ref refid="ifft_8c_1a1e53b3fc83fa1132523fd782ffbeb249" kindref="member">ifft_mark</ref>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1acb486f015843ecec7aa5411020613389" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a4403d10e525f61c551eaa74440ee6b7d" kindref="member">print_tree</ref><sp/>=<sp/><ref refid="ifft_8c_1a8896e84f65883c193c107c14d045aabf" kindref="member">ifft_print_tree</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1acb486f015843ecec7aa5411020613389" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a4d5fa6ba6ea209e5159d06ea00320041" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ifft&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1acb486f015843ecec7aa5411020613389" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>=<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structifft__susp__struct_1acb486f015843ecec7aa5411020613389" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a11255fe781080fb7915f6ab9a5afc4ae" kindref="member">sound_create</ref>((<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref>)susp,<sp/>t0,<sp/>sr,<sp/>scale_factor);</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="ifft_8h_1a66e25e8775a4669c0e2a81b0f479c5ce" refkind="member"><highlight class="normal"><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="ifft_8c_1a66e25e8775a4669c0e2a81b0f479c5ce" kindref="member">snd_ifft</ref>(<ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>t0,<sp/><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref><sp/>sr,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="structifft__susp__struct_1a7316d45d90f48ac54adc5081898a1f30" kindref="member">src</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structifft__susp__struct_1a52eb060b33b57c86c0ee78928d677348" kindref="member">stepsize</ref>,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="structifft__susp__struct_1a4af17d557b4dc005cffa1645bd4b3d4b" kindref="member">window</ref>)</highlight></codeline>
<codeline lineno="285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ifft_8c_1a71baef694495f1aa47c84248fa8c566a" kindref="member">snd_make_ifft</ref>(t0,<sp/>sr,<sp/>src,<sp/>stepsize,<sp/>window);</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/ifft.c"/>
  </compounddef>
</doxygen>
