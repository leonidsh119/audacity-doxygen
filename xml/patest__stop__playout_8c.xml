<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="patest__stop__playout_8c" kind="file" language="C++">
    <compoundname>patest_stop_playout.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="portaudio_8h" local="yes">portaudio.h</includes>
    <incdepgraph>
      <node id="30663">
        <label>portaudio.h</label>
        <link refid="portaudio_8h"/>
      </node>
      <node id="30662">
        <label>math.h</label>
      </node>
      <node id="30660">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c</label>
        <link refid="patest_stop_playout.c"/>
        <childnode refid="30661" relation="include">
        </childnode>
        <childnode refid="30662" relation="include">
        </childnode>
        <childnode refid="30663" relation="include">
        </childnode>
      </node>
      <node id="30661">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_test_data" prot="public">TestData</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="patest__stop__playout_8c_1a4b76a0c2859cfd819a343a780070ee2b" prot="public" static="no">
        <name>SAMPLE_RATE</name>
        <initializer>(44100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" line="49" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__stop__playout_8c_1af4f62216aa14e0407faa6631e9ec4c62" prot="public" static="no">
        <name>FRAMES_PER_BUFFER</name>
        <initializer>(1024)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" line="50" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__stop__playout_8c_1ade3215818d3c3958ce507808ab582783" prot="public" static="no">
        <name>TONE_SECONDS</name>
        <initializer>(1)      /* long tone */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" line="52" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__stop__playout_8c_1adf810cb84dc70ad828c3a4781c68f96d" prot="public" static="no">
        <name>TONE_FADE_SECONDS</name>
        <initializer>(.04)    /* fades at <ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref> and <ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref> <ref refid="rfft2d_test_m_l_8m_1ad1fb8d92192e22cbe6298e4a2c65a711" kindref="member">of</ref> long tone */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" line="53" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__stop__playout_8c_1ad199eb2411355e597b59390537170d21" prot="public" static="no">
        <name>GAP_SECONDS</name>
        <initializer>(.25)     /* gap between long tone and blip */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" line="54" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__stop__playout_8c_1a262cb6903a84eefc34a727c6078060ca" prot="public" static="no">
        <name>BLIP_SECONDS</name>
        <initializer>(.035)   /* short blip */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" line="55" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__stop__playout_8c_1a2ab5aa7bd39ce78ebe5576343388ab97" prot="public" static="no">
        <name>NUM_REPEATS</name>
        <initializer>(3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" line="57" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__stop__playout_8c_1ae71449b1cc6e6250b91f539153a7a0d3" prot="public" static="no">
        <name>M_PI</name>
        <initializer>(3.14159265)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" line="60" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__stop__playout_8c_1a032503e76d6f69bc67e99e909c8125da" prot="public" static="no">
        <name>TABLE_SIZE</name>
        <initializer>(2048)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" line="63" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__stop__playout_8c_1a3acffbd305ee72dcd4593c0d8af64a4f" prot="public" static="no">
        <name>MIN</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>(((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)&lt;(<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>))?(<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>):(<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" line="127" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="patest__stop__playout_8c_1ab45e806412df30e321115f81dc9ee013" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>volatile int testCallback2Finished</definition>
        <argsstring></argsstring>
        <name>testCallback2Finished</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" line="273" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" bodystart="273" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="patest__stop__playout_8c_1aa78b2b624cb082be273e2ae307d0bea9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void RetriggerTestSignalGenerator</definition>
        <argsstring>(TestData *data)</argsstring>
        <name>RetriggerTestSignalGenerator</name>
        <param>
          <type><ref refid="struct_test_data" kindref="compound">TestData</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" line="79" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" bodystart="79" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="patest__stop__playout_8c_1a1e3c5cec3b7bbe9af23d8c39fad76b14" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void ResetTestSignalGenerator</definition>
        <argsstring>(TestData *data)</argsstring>
        <name>ResetTestSignalGenerator</name>
        <param>
          <type><ref refid="struct_test_data" kindref="compound">TestData</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" line="89" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" bodystart="89" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="patest__stop__playout_8c_1ae82dcb4cf9d09777ce7f04a2babd7ce1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void InitTestSignalGenerator</definition>
        <argsstring>(TestData *data)</argsstring>
        <name>InitTestSignalGenerator</name>
        <param>
          <type><ref refid="struct_test_data" kindref="compound">TestData</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" line="96" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" bodystart="96" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="patest__stop__playout_8c_1ac45f225928777d65a445d91d7e788c57" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void GenerateTestSignal</definition>
        <argsstring>(TestData *data, float *stereo, int frameCount)</argsstring>
        <name>GenerateTestSignal</name>
        <param>
          <type><ref refid="struct_test_data" kindref="compound">TestData</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>stereo</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>frameCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" line="129" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" bodystart="129" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="patest__stop__playout_8c_1a9b43ec61307a6c8204905aa97c4a1ab4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int IsTestSignalFinished</definition>
        <argsstring>(TestData *data)</argsstring>
        <name>IsTestSignalFinished</name>
        <param>
          <type><ref refid="struct_test_data" kindref="compound">TestData</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" line="245" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" bodystart="245" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="patest__stop__playout_8c_1a7ffe3c10415abe1caf378b37ec5acaf8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int TestCallback1</definition>
        <argsstring>(const void *inputBuffer, void *outputBuffer, unsigned long frameCount, const PaStreamCallbackTimeInfo *timeInfo, PaStreamCallbackFlags statusFlags, void *userData)</argsstring>
        <name>TestCallback1</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>inputBuffer</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>outputBuffer</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>frameCount</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_stream_callback_time_info" kindref="compound">PaStreamCallbackTimeInfo</ref> *</type>
          <declname>timeInfo</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a55a005924bcfa0424594f4f65cd4ae82" kindref="member">PaStreamCallbackFlags</ref></type>
          <declname>statusFlags</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>userData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" line="254" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" bodystart="254" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="patest__stop__playout_8c_1a7e02da4201a42d5630bf5fb5ff65a30d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int TestCallback2</definition>
        <argsstring>(const void *inputBuffer, void *outputBuffer, unsigned long frameCount, const PaStreamCallbackTimeInfo *timeInfo, PaStreamCallbackFlags statusFlags, void *userData)</argsstring>
        <name>TestCallback2</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>inputBuffer</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>outputBuffer</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>frameCount</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_stream_callback_time_info" kindref="compound">PaStreamCallbackTimeInfo</ref> *</type>
          <declname>timeInfo</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a55a005924bcfa0424594f4f65cd4ae82" kindref="member">PaStreamCallbackFlags</ref></type>
          <declname>statusFlags</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>userData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" line="275" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" bodystart="275" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="patest__stop__playout_8c_1a840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" line="294" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c" bodystart="295" bodyend="478"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="struct_test" kindref="compound">Test</ref> whether all queued samples are played when <ref refid="portaudio_8h_1af18dd60220251286c337631a855e38a0" kindref="member">Pa_StopStream()</ref> is used with a callback or read/write stream, or when the callback returns paComplete. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ross Bencina <ulink url="mailto:rossb@audiomulch.com">rossb@audiomulch.com</ulink> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>patest_stop_playout.c<sp/>1446<sp/>2010-01-24<sp/>12:27:31Z<sp/>rossb<sp/>$</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>uses<sp/>the<sp/>PortAudio<sp/>Portable<sp/>Audio<sp/>Library.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>For<sp/>more<sp/>information<sp/>see:<sp/>http://www.portaudio.com/</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2004<sp/>Ross<sp/>Bencina<sp/>and<sp/>Phil<sp/>Burk</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>The<sp/>text<sp/>above<sp/>constitutes<sp/>the<sp/>entire<sp/>PortAudio<sp/>license;<sp/>however,<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>the<sp/>PortAudio<sp/>community<sp/>also<sp/>makes<sp/>the<sp/>following<sp/>non-binding<sp/>requests:</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>Any<sp/>person<sp/>wishing<sp/>to<sp/>distribute<sp/>modifications<sp/>to<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>requested<sp/>to<sp/>send<sp/>the<sp/>modifications<sp/>to<sp/>the<sp/>original<sp/>developer<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>they<sp/>can<sp/>be<sp/>incorporated<sp/>into<sp/>the<sp/>canonical<sp/>version.<sp/>It<sp/>is<sp/>also<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>requested<sp/>that<sp/>these<sp/>non-binding<sp/>requests<sp/>be<sp/>included<sp/>along<sp/>with<sp/>the<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>license<sp/>above.</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="portaudio_8h" kindref="compound">portaudio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="patest__stop__playout_8c_1a4b76a0c2859cfd819a343a780070ee2b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SAMPLE_RATE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(44100)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="patest__stop__playout_8c_1af4f62216aa14e0407faa6631e9ec4c62" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FRAMES_PER_BUFFER<sp/><sp/><sp/>(1024)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="patest__stop__playout_8c_1ade3215818d3c3958ce507808ab582783" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TONE_SECONDS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>long<sp/>tone<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="patest__stop__playout_8c_1adf810cb84dc70ad828c3a4781c68f96d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TONE_FADE_SECONDS<sp/><sp/><sp/>(.04)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fades<sp/>at<sp/>start<sp/>and<sp/>end<sp/>of<sp/>long<sp/>tone<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="patest__stop__playout_8c_1ad199eb2411355e597b59390537170d21" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GAP_SECONDS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(.25)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>gap<sp/>between<sp/>long<sp/>tone<sp/>and<sp/>blip<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="patest__stop__playout_8c_1a262cb6903a84eefc34a727c6078060ca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BLIP_SECONDS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(.035)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>short<sp/>blip<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="patest__stop__playout_8c_1a2ab5aa7bd39ce78ebe5576343388ab97" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_REPEATS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>M_PI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="patest__stop__playout_8c_1ae71449b1cc6e6250b91f539153a7a0d3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_PI<sp/>(3.14159265)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="patest__stop__playout_8c_1a032503e76d6f69bc67e99e909c8125da" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TABLE_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2048)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sine[<ref refid="patest__stop__playout_8c_1a032503e76d6f69bc67e99e909c8125da" kindref="member">TABLE_SIZE</ref>+1];</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="struct_test_data_1a635ef4394012dfaf9516c59488ea874d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_test_data_1a635ef4394012dfaf9516c59488ea874d" kindref="member">repeatCount</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70" refid="struct_test_data_1a8cd80e61ff8b13b9824abc6560a36e73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_test_data_1a8cd80e61ff8b13b9824abc6560a36e73" kindref="member">phase</ref>;</highlight></codeline>
<codeline lineno="71" refid="struct_test_data_1ac60eaf6fc24ef246b450e292c4d54019" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_test_data_1ac60eaf6fc24ef246b450e292c4d54019" kindref="member">lowIncrement</ref>,<sp/>highIncrement;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73" refid="struct_test_data_1ab9ed9120bca939e812886794baf23db5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gap1Length,<sp/><ref refid="struct_test_data_1ab9ed9120bca939e812886794baf23db5" kindref="member">toneLength</ref>,<sp/>toneFadesLength,<sp/>gap2Length,<sp/>blipLength;</highlight></codeline>
<codeline lineno="74" refid="struct_test_data_1aa24ad5a16f1884112a4662932f0e01fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gap1Countdown,<sp/><ref refid="struct_test_data_1aa24ad5a16f1884112a4662932f0e01fc" kindref="member">toneCountdown</ref>,<sp/>gap2Countdown,<sp/>blipCountdown;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="struct_test_data" kindref="compound">TestData</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RetriggerTestSignalGenerator(<sp/><ref refid="struct_test_data" kindref="compound">TestData</ref><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1a676e23524d19ee0d0ab418ca2711f3fc" kindref="member">phase</ref><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1aeb2df56618bc0f5f10e8d9ada3522bcb" kindref="member">gap1Countdown</ref><sp/>=<sp/>data-&gt;<ref refid="struct_test_data_1a4d33af02923caafa07771286273191e8" kindref="member">gap1Length</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1aa24ad5a16f1884112a4662932f0e01fc" kindref="member">toneCountdown</ref><sp/>=<sp/>data-&gt;<ref refid="struct_test_data_1ab9ed9120bca939e812886794baf23db5" kindref="member">toneLength</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1a1941e96206c94d50930d43b9178acd84" kindref="member">gap2Countdown</ref><sp/>=<sp/>data-&gt;<ref refid="struct_test_data_1a68e2762980970d5a103cff73cadfa4b9" kindref="member">gap2Length</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1af6b75330e5105cafba532f06897b9b5b" kindref="member">blipCountdown</ref><sp/>=<sp/>data-&gt;<ref refid="struct_test_data_1a2984e6635b09b4c89d3f0fafe5bf89fc" kindref="member">blipLength</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResetTestSignalGenerator(<sp/><ref refid="struct_test_data" kindref="compound">TestData</ref><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1a635ef4394012dfaf9516c59488ea874d" kindref="member">repeatCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>RetriggerTestSignalGenerator(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InitTestSignalGenerator(<sp/><ref refid="struct_test_data" kindref="compound">TestData</ref><sp/>*data<sp/>)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signalLengthModBufferLength,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialise<sp/>sinusoidal<sp/>wavetable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;<ref refid="patest__stop__playout_8c_1a032503e76d6f69bc67e99e909c8125da" kindref="member">TABLE_SIZE</ref>;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1a13af6d37ddd977277e3a151432f6ac8d" kindref="member">sine</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>(float)<sp/><ref refid="pffft_8c_1a28642ecbd9d1e77ab5a140a460f47d83" kindref="member">sin</ref>(<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)i/(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)TABLE_SIZE)<sp/>*<sp/><ref refid="patest__stop__playout_8c_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref><sp/>*<sp/>2.<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1a13af6d37ddd977277e3a151432f6ac8d" kindref="member">sine</ref>[<ref refid="patest__stop__playout_8c_1a032503e76d6f69bc67e99e909c8125da" kindref="member">TABLE_SIZE</ref>]<sp/>=<sp/>data-&gt;<ref refid="struct_test_data_1a13af6d37ddd977277e3a151432f6ac8d" kindref="member">sine</ref>[0];<sp/></highlight><highlight class="comment">/*<sp/>guard<sp/>point<sp/>for<sp/>linear<sp/>interpolation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1ac60eaf6fc24ef246b450e292c4d54019" kindref="member">lowIncrement</ref><sp/>=<sp/>(330.<sp/>/<sp/><ref refid="patest__stop__playout_8c_1a4b76a0c2859cfd819a343a780070ee2b" kindref="member">SAMPLE_RATE</ref>)<sp/>*<sp/>TABLE_SIZE;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1af315225298caa18b1a18cda784a6a4a3" kindref="member">highIncrement</ref><sp/>=<sp/>(1760.<sp/>/<sp/><ref refid="patest__stop__playout_8c_1a4b76a0c2859cfd819a343a780070ee2b" kindref="member">SAMPLE_RATE</ref>)<sp/>*<sp/>TABLE_SIZE;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1a4d33af02923caafa07771286273191e8" kindref="member">gap1Length</ref><sp/>=<sp/><ref refid="patest__stop__playout_8c_1ad199eb2411355e597b59390537170d21" kindref="member">GAP_SECONDS</ref><sp/>*<sp/><ref refid="patest__stop__playout_8c_1a4b76a0c2859cfd819a343a780070ee2b" kindref="member">SAMPLE_RATE</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1ab9ed9120bca939e812886794baf23db5" kindref="member">toneLength</ref><sp/>=<sp/><ref refid="patest__stop__playout_8c_1ade3215818d3c3958ce507808ab582783" kindref="member">TONE_SECONDS</ref><sp/>*<sp/><ref refid="patest__stop__playout_8c_1a4b76a0c2859cfd819a343a780070ee2b" kindref="member">SAMPLE_RATE</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1ab0aa5b3d001f36b318435307d3b5a752" kindref="member">toneFadesLength</ref><sp/>=<sp/><ref refid="patest__stop__playout_8c_1adf810cb84dc70ad828c3a4781c68f96d" kindref="member">TONE_FADE_SECONDS</ref><sp/>*<sp/><ref refid="patest__stop__playout_8c_1a4b76a0c2859cfd819a343a780070ee2b" kindref="member">SAMPLE_RATE</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1a68e2762980970d5a103cff73cadfa4b9" kindref="member">gap2Length</ref><sp/>=<sp/><ref refid="patest__stop__playout_8c_1ad199eb2411355e597b59390537170d21" kindref="member">GAP_SECONDS</ref><sp/>*<sp/><ref refid="patest__stop__playout_8c_1a4b76a0c2859cfd819a343a780070ee2b" kindref="member">SAMPLE_RATE</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1a2984e6635b09b4c89d3f0fafe5bf89fc" kindref="member">blipLength</ref><sp/>=<sp/><ref refid="patest__stop__playout_8c_1a262cb6903a84eefc34a727c6078060ca" kindref="member">BLIP_SECONDS</ref><sp/>*<sp/><ref refid="patest__stop__playout_8c_1a4b76a0c2859cfd819a343a780070ee2b" kindref="member">SAMPLE_RATE</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>adjust<sp/>signal<sp/>length<sp/>to<sp/>be<sp/>a<sp/>multiple<sp/>of<sp/>the<sp/>buffer<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>signalLengthModBufferLength<sp/>=<sp/>(data-&gt;<ref refid="struct_test_data_1a4d33af02923caafa07771286273191e8" kindref="member">gap1Length</ref><sp/>+<sp/>data-&gt;<ref refid="struct_test_data_1ab9ed9120bca939e812886794baf23db5" kindref="member">toneLength</ref><sp/>+<sp/>data-&gt;<ref refid="struct_test_data_1a68e2762980970d5a103cff73cadfa4b9" kindref="member">gap2Length</ref><sp/>+<sp/>data-&gt;<ref refid="struct_test_data_1a2984e6635b09b4c89d3f0fafe5bf89fc" kindref="member">blipLength</ref>)<sp/>%<sp/><ref refid="patest__stop__playout_8c_1af4f62216aa14e0407faa6631e9ec4c62" kindref="member">FRAMES_PER_BUFFER</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>signalLengthModBufferLength<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1ab9ed9120bca939e812886794baf23db5" kindref="member">toneLength</ref><sp/>+=<sp/>signalLengthModBufferLength;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>ResetTestSignalGenerator(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="patest__stop__playout_8c_1a3acffbd305ee72dcd4593c0d8af64a4f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN(<sp/>a,<sp/>b<sp/>)<sp/>(((a)&lt;(b))?(a):(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GenerateTestSignal(<sp/><ref refid="struct_test_data" kindref="compound">TestData</ref><sp/>*data,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*stereo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frameCount<sp/>)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>framesGenerated<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="rate_8h_1a4fe9291634c41107f940e7393fba4603" kindref="member">fraction</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>framesGenerated<sp/>&lt;<sp/>frameCount<sp/>&amp;&amp;<sp/>data-&gt;repeatCount<sp/>&lt;<sp/><ref refid="patest__stop__playout_8c_1a2ab5aa7bd39ce78ebe5576343388ab97" kindref="member">NUM_REPEATS</ref><sp/>)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesGenerated<sp/>&lt;<sp/>frameCount<sp/>&amp;&amp;<sp/>data-&gt;gap1Countdown<sp/>&gt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/><ref refid="patest__stop__playout_8c_1a3acffbd305ee72dcd4593c0d8af64a4f" kindref="member">MIN</ref>(<sp/>frameCount<sp/>-<sp/>framesGenerated,<sp/>data-&gt;<ref refid="struct_test_data_1aeb2df56618bc0f5f10e8d9ada3522bcb" kindref="member">gap1Countdown</ref><sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i<sp/>&lt;<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*stereo++<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*stereo++<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1aeb2df56618bc0f5f10e8d9ada3522bcb" kindref="member">gap1Countdown</ref><sp/>-=<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesGenerated<sp/>+=<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesGenerated<sp/>&lt;<sp/>frameCount<sp/>&amp;&amp;<sp/>data-&gt;toneCountdown<sp/>&gt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/><ref refid="patest__stop__playout_8c_1a3acffbd305ee72dcd4593c0d8af64a4f" kindref="member">MIN</ref>(<sp/>frameCount<sp/>-<sp/>framesGenerated,<sp/>data-&gt;<ref refid="struct_test_data_1aa24ad5a16f1884112a4662932f0e01fc" kindref="member">toneCountdown</ref><sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i<sp/>&lt;<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>tone<sp/>with<sp/>data-&gt;lowIncrement<sp/>phase<sp/>increment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>(long)data-&gt;<ref refid="struct_test_data_1a676e23524d19ee0d0ab418ca2711f3fc" kindref="member">phase</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fraction<sp/>=<sp/>data-&gt;<ref refid="struct_test_data_1a676e23524d19ee0d0ab418ca2711f3fc" kindref="member">phase</ref><sp/>-<sp/>index;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/>data-&gt;<ref refid="struct_test_data_1a13af6d37ddd977277e3a151432f6ac8d" kindref="member">sine</ref>[<sp/>index<sp/>]<sp/>+<sp/>(data-&gt;<ref refid="struct_test_data_1a13af6d37ddd977277e3a151432f6ac8d" kindref="member">sine</ref>[<sp/>index<sp/>+<sp/>1<sp/>]<sp/>-<sp/>data-&gt;<ref refid="struct_test_data_1a13af6d37ddd977277e3a151432f6ac8d" kindref="member">sine</ref>[<sp/>index<sp/>])<sp/>*<sp/><ref refid="rate_8h_1a4fe9291634c41107f940e7393fba4603" kindref="member">fraction</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1a676e23524d19ee0d0ab418ca2711f3fc" kindref="member">phase</ref><sp/>+=<sp/>data-&gt;<ref refid="struct_test_data_1ac60eaf6fc24ef246b450e292c4d54019" kindref="member">lowIncrement</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>data-&gt;<ref refid="struct_test_data_1a676e23524d19ee0d0ab418ca2711f3fc" kindref="member">phase</ref><sp/>&gt;=<sp/><ref refid="patest__stop__playout_8c_1a032503e76d6f69bc67e99e909c8125da" kindref="member">TABLE_SIZE</ref><sp/>)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1a676e23524d19ee0d0ab418ca2711f3fc" kindref="member">phase</ref><sp/>-=<sp/><ref refid="patest__stop__playout_8c_1a032503e76d6f69bc67e99e909c8125da" kindref="member">TABLE_SIZE</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>apply<sp/>fade<sp/>to<sp/>ends<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>data-&gt;<ref refid="struct_test_data_1aa24ad5a16f1884112a4662932f0e01fc" kindref="member">toneCountdown</ref><sp/>&lt;<sp/>data-&gt;<ref refid="struct_test_data_1ab0aa5b3d001f36b318435307d3b5a752" kindref="member">toneFadesLength</ref><sp/>)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cosine-bell<sp/>fade<sp/>out<sp/>at<sp/>end<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>*=<sp/>(-<ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>(((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)data-&gt;<ref refid="struct_test_data_1aa24ad5a16f1884112a4662932f0e01fc" kindref="member">toneCountdown</ref><sp/>/<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)data-&gt;<ref refid="struct_test_data_1ab0aa5b3d001f36b318435307d3b5a752" kindref="member">toneFadesLength</ref>)<sp/>*<sp/><ref refid="patest__stop__playout_8c_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>)<sp/>+<sp/>1.)<sp/>*<sp/>.5;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>data-&gt;<ref refid="struct_test_data_1aa24ad5a16f1884112a4662932f0e01fc" kindref="member">toneCountdown</ref><sp/>&gt;<sp/>data-&gt;<ref refid="struct_test_data_1ab9ed9120bca939e812886794baf23db5" kindref="member">toneLength</ref><sp/>-<sp/>data-&gt;<ref refid="struct_test_data_1ab0aa5b3d001f36b318435307d3b5a752" kindref="member">toneFadesLength</ref><sp/>)<sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cosine-bell<sp/>fade<sp/>in<sp/>at<sp/>start<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>*=<sp/>(<ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>(((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(data-&gt;<ref refid="struct_test_data_1aa24ad5a16f1884112a4662932f0e01fc" kindref="member">toneCountdown</ref><sp/>-<sp/>(data-&gt;<ref refid="struct_test_data_1ab9ed9120bca939e812886794baf23db5" kindref="member">toneLength</ref><sp/>-<sp/>data-&gt;<ref refid="struct_test_data_1ab0aa5b3d001f36b318435307d3b5a752" kindref="member">toneFadesLength</ref>))<sp/>/<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)data-&gt;<ref refid="struct_test_data_1ab0aa5b3d001f36b318435307d3b5a752" kindref="member">toneFadesLength</ref>)<sp/>*<sp/><ref refid="patest__stop__playout_8c_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>)<sp/>+<sp/>1.)<sp/>*<sp/>.5;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>*=<sp/>.5;<sp/></highlight><highlight class="comment">/*<sp/>play<sp/>tone<sp/>half<sp/>as<sp/>loud<sp/>as<sp/>blip<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*stereo++<sp/>=<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*stereo++<sp/>=<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1aa24ad5a16f1884112a4662932f0e01fc" kindref="member">toneCountdown</ref>--;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesGenerated<sp/>+=<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesGenerated<sp/>&lt;<sp/>frameCount<sp/>&amp;&amp;<sp/>data-&gt;gap2Countdown<sp/>&gt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/><ref refid="patest__stop__playout_8c_1a3acffbd305ee72dcd4593c0d8af64a4f" kindref="member">MIN</ref>(<sp/>frameCount<sp/>-<sp/>framesGenerated,<sp/>data-&gt;<ref refid="struct_test_data_1a1941e96206c94d50930d43b9178acd84" kindref="member">gap2Countdown</ref><sp/>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i<sp/>&lt;<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*stereo++<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*stereo++<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1a1941e96206c94d50930d43b9178acd84" kindref="member">gap2Countdown</ref><sp/>-=<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesGenerated<sp/>+=<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesGenerated<sp/>&lt;<sp/>frameCount<sp/>&amp;&amp;<sp/>data-&gt;blipCountdown<sp/>&gt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/><ref refid="patest__stop__playout_8c_1a3acffbd305ee72dcd4593c0d8af64a4f" kindref="member">MIN</ref>(<sp/>frameCount<sp/>-<sp/>framesGenerated,<sp/>data-&gt;<ref refid="struct_test_data_1af6b75330e5105cafba532f06897b9b5b" kindref="member">blipCountdown</ref><sp/>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i<sp/>&lt;<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>tone<sp/>with<sp/>data-&gt;highIncrement<sp/>phase<sp/>increment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>(long)data-&gt;<ref refid="struct_test_data_1a676e23524d19ee0d0ab418ca2711f3fc" kindref="member">phase</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fraction<sp/>=<sp/>data-&gt;<ref refid="struct_test_data_1a676e23524d19ee0d0ab418ca2711f3fc" kindref="member">phase</ref><sp/>-<sp/>index;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/>data-&gt;<ref refid="struct_test_data_1a13af6d37ddd977277e3a151432f6ac8d" kindref="member">sine</ref>[<sp/>index<sp/>]<sp/>+<sp/>(data-&gt;<ref refid="struct_test_data_1a13af6d37ddd977277e3a151432f6ac8d" kindref="member">sine</ref>[<sp/>index<sp/>+<sp/>1<sp/>]<sp/>-<sp/>data-&gt;<ref refid="struct_test_data_1a13af6d37ddd977277e3a151432f6ac8d" kindref="member">sine</ref>[<sp/>index<sp/>])<sp/>*<sp/><ref refid="rate_8h_1a4fe9291634c41107f940e7393fba4603" kindref="member">fraction</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1a676e23524d19ee0d0ab418ca2711f3fc" kindref="member">phase</ref><sp/>+=<sp/>data-&gt;<ref refid="struct_test_data_1af315225298caa18b1a18cda784a6a4a3" kindref="member">highIncrement</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>data-&gt;<ref refid="struct_test_data_1a676e23524d19ee0d0ab418ca2711f3fc" kindref="member">phase</ref><sp/>&gt;=<sp/><ref refid="patest__stop__playout_8c_1a032503e76d6f69bc67e99e909c8125da" kindref="member">TABLE_SIZE</ref><sp/>)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1a676e23524d19ee0d0ab418ca2711f3fc" kindref="member">phase</ref><sp/>-=<sp/><ref refid="patest__stop__playout_8c_1a032503e76d6f69bc67e99e909c8125da" kindref="member">TABLE_SIZE</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cosine-bell<sp/>envelope<sp/>over<sp/>whole<sp/>blip<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>*=<sp/>(-<ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>(<sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)data-&gt;<ref refid="struct_test_data_1af6b75330e5105cafba532f06897b9b5b" kindref="member">blipCountdown</ref><sp/>/<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)data-&gt;<ref refid="struct_test_data_1a2984e6635b09b4c89d3f0fafe5bf89fc" kindref="member">blipLength</ref>)<sp/>*<sp/>2.<sp/>*<sp/><ref refid="patest__stop__playout_8c_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>)<sp/>+<sp/>1.)<sp/>*<sp/>.5;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*stereo++<sp/>=<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*stereo++<sp/>=<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1af6b75330e5105cafba532f06897b9b5b" kindref="member">blipCountdown</ref>--;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesGenerated<sp/>+=<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>data-&gt;<ref refid="struct_test_data_1af6b75330e5105cafba532f06897b9b5b" kindref="member">blipCountdown</ref><sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetriggerTestSignalGenerator(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_test_data_1a635ef4394012dfaf9516c59488ea874d" kindref="member">repeatCount</ref>++;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesGenerated<sp/>&lt;<sp/>frameCount<sp/>)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>frameCount<sp/>-<sp/>framesGenerated;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i<sp/>&lt;<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*stereo++<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*stereo++<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>IsTestSignalFinished(<sp/><ref refid="struct_test_data" kindref="compound">TestData</ref><sp/>*data<sp/>)</highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>data-&gt;<ref refid="struct_test_data_1a635ef4394012dfaf9516c59488ea874d" kindref="member">repeatCount</ref><sp/>&gt;=<sp/><ref refid="patest__stop__playout_8c_1a2ab5aa7bd39ce78ebe5576343388ab97" kindref="member">NUM_REPEATS</ref><sp/>)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TestCallback1(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*inputBuffer,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*outputBuffer,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameCount,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_callback_time_info" kindref="compound">PaStreamCallbackTimeInfo</ref>*<sp/>timeInfo,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a55a005924bcfa0424594f4f65cd4ae82" kindref="member">PaStreamCallbackFlags</ref><sp/>statusFlags,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="xmlparse_8c_1a4b666535c828e23ccd16510a0a1a1943" kindref="member">userData</ref><sp/>)</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>inputBuffer;<sp/></highlight><highlight class="comment">/*<sp/>Prevent<sp/>unused<sp/>variable<sp/>warnings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>timeInfo;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>statusFlags;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>GenerateTestSignal(<sp/>(<ref refid="struct_test_data" kindref="compound">TestData</ref>*)userData,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)outputBuffer,<sp/>frameCount<sp/>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>IsTestSignalFinished(<sp/>(<ref refid="struct_test_data" kindref="compound">TestData</ref>*)userData<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1ae9bfb9c4e1895326f30f80d415c66c32aa01800db52ead393d8b0016f63d76650" kindref="member">paComplete</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1ae9bfb9c4e1895326f30f80d415c66c32acba49cbf0e3bf605bb3deecef3b4fce3" kindref="member">paContinue</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="patest__stop__playout_8c_1ab45e806412df30e321115f81dc9ee013" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="patest__stop__playout_8c_1ab45e806412df30e321115f81dc9ee013" kindref="member">testCallback2Finished</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TestCallback2(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*inputBuffer,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*outputBuffer,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameCount,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_callback_time_info" kindref="compound">PaStreamCallbackTimeInfo</ref>*<sp/>timeInfo,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a55a005924bcfa0424594f4f65cd4ae82" kindref="member">PaStreamCallbackFlags</ref><sp/>statusFlags,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="xmlparse_8c_1a4b666535c828e23ccd16510a0a1a1943" kindref="member">userData</ref><sp/>)</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>inputBuffer;<sp/></highlight><highlight class="comment">/*<sp/>Prevent<sp/>unused<sp/>variable<sp/>warnings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>timeInfo;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>statusFlags;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>GenerateTestSignal(<sp/>(<ref refid="struct_test_data" kindref="compound">TestData</ref>*)userData,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)outputBuffer,<sp/>frameCount<sp/>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>IsTestSignalFinished(<sp/>(<ref refid="struct_test_data" kindref="compound">TestData</ref>*)userData<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="patest__stop__playout_8c_1ab45e806412df30e321115f81dc9ee013" kindref="member">testCallback2Finished</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1ae9bfb9c4e1895326f30f80d415c66c32acba49cbf0e3bf605bb3deecef3b4fce3" kindref="member">paContinue</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="patest__stop__playout_8c_1a840291bc02cba5474a4cb46a9b9566fe" kindref="member">main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295" refid="patest__stop__playout_8c_1a840291bc02cba5474a4cb46a9b9566fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="patest__stop__playout_8c_1a840291bc02cba5474a4cb46a9b9566fe" kindref="member">main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref><sp/>outputParameters;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref><sp/>*stream;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>err;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_test_data" kindref="compound">TestData</ref><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>writeBuffer[<sp/><ref refid="patest__stop__playout_8c_1af4f62216aa14e0407faa6631e9ec4c62" kindref="member">FRAMES_PER_BUFFER</ref><sp/>*<sp/>2<sp/>];</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;PortAudio<sp/>Test:<sp/>check<sp/>that<sp/>stopping<sp/>stream<sp/>plays<sp/>out<sp/>all<sp/>queued<sp/>samples.<sp/>SR<sp/>=<sp/>%d,<sp/>BufSize<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="patest__stop__playout_8c_1a4b76a0c2859cfd819a343a780070ee2b" kindref="member">SAMPLE_RATE</ref>,<sp/><ref refid="patest__stop__playout_8c_1af4f62216aa14e0407faa6631e9ec4c62" kindref="member">FRAMES_PER_BUFFER</ref>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>InitTestSignalGenerator(<sp/>&amp;data<sp/>);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1abed859482d156622d9332dff9b2d89da" kindref="member">Pa_Initialize</ref>();</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>outputParameters.<ref refid="struct_pa_stream_parameters_1aebaf648b4d11dd1252a747b76b8da084" kindref="member">device</ref><sp/>=<sp/><ref refid="portaudio_8h_1adc955dfab007624000695c48d4f876dc" kindref="member">Pa_GetDefaultOutputDevice</ref>();<sp/></highlight><highlight class="comment">/*<sp/>default<sp/>output<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>outputParameters.<ref refid="struct_pa_stream_parameters_1a861ff361da71fc2572dd356c9c9878ca" kindref="member">channelCount</ref><sp/>=<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>stereo<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>outputParameters.<ref refid="struct_pa_stream_parameters_1ad8d2d3063757b812f9e5f8709f41052b" kindref="member">sampleFormat</ref><sp/>=<sp/><ref refid="portaudio_8h_1a2f16d29916725b8791eae60ab9e0b081" kindref="member">paFloat32</ref>;<sp/></highlight><highlight class="comment">/*<sp/>32<sp/>bit<sp/>floating<sp/>point<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>outputParameters.<ref refid="struct_pa_stream_parameters_1aa1e80ac0551162fd091db8936ccbe9a0" kindref="member">suggestedLatency</ref><sp/>=<sp/><ref refid="portaudio_8h_1ac7d8e091ffc1d1d4a035704660e117eb" kindref="member">Pa_GetDeviceInfo</ref>(<sp/>outputParameters.<ref refid="struct_pa_stream_parameters_1aebaf648b4d11dd1252a747b76b8da084" kindref="member">device</ref><sp/>)-&gt;<ref refid="struct_pa_device_info_1a2a43dbc2b158806a937065bda037070e" kindref="member">defaultHighOutputLatency</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>outputParameters.<ref refid="struct_pa_stream_parameters_1aff01b9fa0710ad1654471e97665c06a9" kindref="member">hostApiSpecificStreamInfo</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>test<sp/>paComplete<sp/>----------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>ResetTestSignalGenerator(<sp/>&amp;data<sp/>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1a443ad16338191af364e3be988014cbbe" kindref="member">Pa_OpenStream</ref>(</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;stream,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;outputParameters,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="patest__stop__playout_8c_1a4b76a0c2859cfd819a343a780070ee2b" kindref="member">SAMPLE_RATE</ref>,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="patest__stop__playout_8c_1af4f62216aa14e0407faa6631e9ec4c62" kindref="member">FRAMES_PER_BUFFER</ref>,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a837b8a81be3f7e36c96003e0d8dcec12" kindref="member">paClipOff</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>won&apos;t<sp/>output<sp/>out<sp/>of<sp/>range<sp/>samples<sp/>so<sp/>don&apos;t<sp/>bother<sp/>clipping<sp/>them<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TestCallback1,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;data<sp/>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1a7432aadd26c40452da12fa99fc1a047b" kindref="member">Pa_StartStream</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;\nPlaying<sp/>&apos;tone-blip&apos;<sp/>%d<sp/>times<sp/>using<sp/>callback,<sp/>stops<sp/>by<sp/>returning<sp/>paComplete<sp/>from<sp/>callback.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="patest__stop__playout_8c_1a2ab5aa7bd39ce78ebe5576343388ab97" kindref="member">NUM_REPEATS</ref><sp/>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;If<sp/>final<sp/>blip<sp/>is<sp/>not<sp/>intact,<sp/>callback+paComplete<sp/>implementation<sp/>may<sp/>be<sp/>faulty.\n\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>(err<sp/>=<sp/><ref refid="portaudio_8h_1a1f8709c4971932643681a6f374c4bb5a" kindref="member">Pa_IsStreamActive</ref>(<sp/>stream<sp/>))<sp/>==<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a1b3c20044c9401c42add29475636e83d" kindref="member">Pa_Sleep</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1af18dd60220251286c337631a855e38a0" kindref="member">Pa_StopStream</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1a92f56f88cbd14da0e8e03077e835d104" kindref="member">Pa_CloseStream</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a1b3c20044c9401c42add29475636e83d" kindref="member">Pa_Sleep</ref>(<sp/>500<sp/>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>test<sp/>paComplete<sp/>----------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>ResetTestSignalGenerator(<sp/>&amp;data<sp/>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1a443ad16338191af364e3be988014cbbe" kindref="member">Pa_OpenStream</ref>(</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;stream,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;outputParameters,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="patest__stop__playout_8c_1a4b76a0c2859cfd819a343a780070ee2b" kindref="member">SAMPLE_RATE</ref>,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="patest__stop__playout_8c_1af4f62216aa14e0407faa6631e9ec4c62" kindref="member">FRAMES_PER_BUFFER</ref>,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a837b8a81be3f7e36c96003e0d8dcec12" kindref="member">paClipOff</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>won&apos;t<sp/>output<sp/>out<sp/>of<sp/>range<sp/>samples<sp/>so<sp/>don&apos;t<sp/>bother<sp/>clipping<sp/>them<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TestCallback1,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;data<sp/>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1a7432aadd26c40452da12fa99fc1a047b" kindref="member">Pa_StartStream</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;\nPlaying<sp/>&apos;tone-blip&apos;<sp/>%d<sp/>times<sp/>using<sp/>callback,<sp/>stops<sp/>by<sp/>returning<sp/>paComplete<sp/>from<sp/>callback.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="patest__stop__playout_8c_1a2ab5aa7bd39ce78ebe5576343388ab97" kindref="member">NUM_REPEATS</ref><sp/>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;If<sp/>final<sp/>blip<sp/>is<sp/>not<sp/>intact<sp/>or<sp/>is<sp/>followed<sp/>by<sp/>garbage,<sp/>callback+paComplete<sp/>implementation<sp/>may<sp/>be<sp/>faulty.\n\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>(err<sp/>=<sp/><ref refid="portaudio_8h_1a1f8709c4971932643681a6f374c4bb5a" kindref="member">Pa_IsStreamActive</ref>(<sp/>stream<sp/>))<sp/>==<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a1b3c20044c9401c42add29475636e83d" kindref="member">Pa_Sleep</ref>(<sp/>5<sp/>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;Waiting<sp/>5<sp/>seconds<sp/>after<sp/>paComplete<sp/>before<sp/>stopping<sp/>the<sp/>stream.<sp/>Tests<sp/>that<sp/>buffers<sp/>are<sp/>flushed<sp/>correctly.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a1b3c20044c9401c42add29475636e83d" kindref="member">Pa_Sleep</ref>(<sp/>5000<sp/>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1af18dd60220251286c337631a855e38a0" kindref="member">Pa_StopStream</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1a92f56f88cbd14da0e8e03077e835d104" kindref="member">Pa_CloseStream</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a1b3c20044c9401c42add29475636e83d" kindref="member">Pa_Sleep</ref>(<sp/>500<sp/>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>test<sp/>Pa_StopStream()<sp/>with<sp/>callback<sp/>---------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>ResetTestSignalGenerator(<sp/>&amp;data<sp/>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="patest__stop__playout_8c_1ab45e806412df30e321115f81dc9ee013" kindref="member">testCallback2Finished</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1a443ad16338191af364e3be988014cbbe" kindref="member">Pa_OpenStream</ref>(</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;stream,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;outputParameters,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="patest__stop__playout_8c_1a4b76a0c2859cfd819a343a780070ee2b" kindref="member">SAMPLE_RATE</ref>,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="patest__stop__playout_8c_1af4f62216aa14e0407faa6631e9ec4c62" kindref="member">FRAMES_PER_BUFFER</ref>,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a837b8a81be3f7e36c96003e0d8dcec12" kindref="member">paClipOff</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>won&apos;t<sp/>output<sp/>out<sp/>of<sp/>range<sp/>samples<sp/>so<sp/>don&apos;t<sp/>bother<sp/>clipping<sp/>them<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TestCallback2,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;data<sp/>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1a7432aadd26c40452da12fa99fc1a047b" kindref="member">Pa_StartStream</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;\nPlaying<sp/>&apos;tone-blip&apos;<sp/>%d<sp/>times<sp/>using<sp/>callback,<sp/>stops<sp/>by<sp/>calling<sp/>Pa_StopStream.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="patest__stop__playout_8c_1a2ab5aa7bd39ce78ebe5576343388ab97" kindref="member">NUM_REPEATS</ref><sp/>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;If<sp/>final<sp/>blip<sp/>is<sp/>not<sp/>intact,<sp/>callback+Pa_StopStream<sp/>implementation<sp/>may<sp/>be<sp/>faulty.\n\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>note<sp/>that<sp/>polling<sp/>a<sp/>volatile<sp/>flag<sp/>is<sp/>not<sp/>a<sp/>good<sp/>way<sp/>to<sp/>synchronise<sp/>with</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>callback,<sp/>but<sp/>it&apos;s<sp/>the<sp/>best<sp/>we<sp/>can<sp/>do<sp/>portably.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>!<ref refid="patest__stop__playout_8c_1ab45e806412df30e321115f81dc9ee013" kindref="member">testCallback2Finished</ref><sp/>)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a1b3c20044c9401c42add29475636e83d" kindref="member">Pa_Sleep</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a1b3c20044c9401c42add29475636e83d" kindref="member">Pa_Sleep</ref>(<sp/>500<sp/>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1af18dd60220251286c337631a855e38a0" kindref="member">Pa_StopStream</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1a92f56f88cbd14da0e8e03077e835d104" kindref="member">Pa_CloseStream</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a1b3c20044c9401c42add29475636e83d" kindref="member">Pa_Sleep</ref>(<sp/>500<sp/>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>test<sp/>Pa_StopStream()<sp/>with<sp/>Pa_WriteStream<sp/>---------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>ResetTestSignalGenerator(<sp/>&amp;data<sp/>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1a443ad16338191af364e3be988014cbbe" kindref="member">Pa_OpenStream</ref>(</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;stream,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;outputParameters,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="patest__stop__playout_8c_1a4b76a0c2859cfd819a343a780070ee2b" kindref="member">SAMPLE_RATE</ref>,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="patest__stop__playout_8c_1af4f62216aa14e0407faa6631e9ec4c62" kindref="member">FRAMES_PER_BUFFER</ref>,</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a837b8a81be3f7e36c96003e0d8dcec12" kindref="member">paClipOff</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>won&apos;t<sp/>output<sp/>out<sp/>of<sp/>range<sp/>samples<sp/>so<sp/>don&apos;t<sp/>bother<sp/>clipping<sp/>them<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>callback,<sp/>use<sp/>blocking<sp/>API<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>callback,<sp/>so<sp/>no<sp/>callback<sp/>userData<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1a7432aadd26c40452da12fa99fc1a047b" kindref="member">Pa_StartStream</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;\nPlaying<sp/>&apos;tone-blip&apos;<sp/>%d<sp/>times<sp/>using<sp/>Pa_WriteStream,<sp/>stops<sp/>by<sp/>calling<sp/>Pa_StopStream.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="patest__stop__playout_8c_1a2ab5aa7bd39ce78ebe5576343388ab97" kindref="member">NUM_REPEATS</ref><sp/>);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;If<sp/>final<sp/>blip<sp/>is<sp/>not<sp/>intact,<sp/>Pa_WriteStream+Pa_StopStream<sp/>implementation<sp/>may<sp/>be<sp/>faulty.\n\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GenerateTestSignal(<sp/>&amp;data,<sp/>writeBuffer,<sp/><ref refid="patest__stop__playout_8c_1af4f62216aa14e0407faa6631e9ec4c62" kindref="member">FRAMES_PER_BUFFER</ref><sp/>);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1a075a6efb503a728213bdae24347ed27d" kindref="member">Pa_WriteStream</ref>(<sp/>stream,<sp/>writeBuffer,<sp/><ref refid="patest__stop__playout_8c_1af4f62216aa14e0407faa6631e9ec4c62" kindref="member">FRAMES_PER_BUFFER</ref><sp/>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>!IsTestSignalFinished(<sp/>&amp;data<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1af18dd60220251286c337631a855e38a0" kindref="member">Pa_StopStream</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1a92f56f88cbd14da0e8e03077e835d104" kindref="member">Pa_CloseStream</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a0db317604e916e8bd6098e60e6237221" kindref="member">Pa_Terminate</ref>();</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;Test<sp/>finished.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a0db317604e916e8bd6098e60e6237221" kindref="member">Pa_Terminate</ref>();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/><ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;An<sp/>error<sp/>occured<sp/>while<sp/>using<sp/>the<sp/>portaudio<sp/>stream\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/><ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>number:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>err<sp/>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/><ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>message:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="portaudio_8h_1ae606855a611cf29c7d2d7421df5e3b5d" kindref="member">Pa_GetErrorText</ref>(<sp/>err<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_stop_playout.c"/>
  </compounddef>
</doxygen>
