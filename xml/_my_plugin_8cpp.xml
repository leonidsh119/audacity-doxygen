<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_my_plugin_8cpp" kind="file" language="C++">
    <compoundname>MyPlugin.cpp</compoundname>
    <includes refid="_my_plugin_8h" local="yes">MyPlugin.h</includes>
    <incdepgraph>
      <node id="21671">
        <label>vamp-sdk/Plugin.h</label>
        <link refid="libvamp_2vamp-sdk_2plugin_8h"/>
        <childnode refid="21672" relation="include">
        </childnode>
        <childnode refid="21673" relation="include">
        </childnode>
        <childnode refid="21674" relation="include">
        </childnode>
        <childnode refid="21675" relation="include">
        </childnode>
        <childnode refid="21677" relation="include">
        </childnode>
        <childnode refid="21676" relation="include">
        </childnode>
      </node>
      <node id="21669">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/skeleton/MyPlugin.cpp</label>
        <link refid="MyPlugin.cpp"/>
        <childnode refid="21670" relation="include">
        </childnode>
      </node>
      <node id="21670">
        <label>MyPlugin.h</label>
        <link refid="_my_plugin_8h"/>
        <childnode refid="21671" relation="include">
        </childnode>
      </node>
      <node id="21672">
        <label>string</label>
      </node>
      <node id="21674">
        <label>map</label>
      </node>
      <node id="21676">
        <label>plugguard.h</label>
        <link refid="plugguard_8h"/>
      </node>
      <node id="21675">
        <label>PluginBase.h</label>
        <link refid="vamp-sdk_2_plugin_base_8h"/>
        <childnode refid="21672" relation="include">
        </childnode>
        <childnode refid="21673" relation="include">
        </childnode>
        <childnode refid="21676" relation="include">
        </childnode>
      </node>
      <node id="21673">
        <label>vector</label>
      </node>
      <node id="21677">
        <label>RealTime.h</label>
        <link refid="vamp-sdk_2_real_time_8h"/>
        <childnode refid="21678" relation="include">
        </childnode>
        <childnode refid="21672" relation="include">
        </childnode>
        <childnode refid="21676" relation="include">
        </childnode>
      </node>
      <node id="21678">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>skeleton<sp/>file<sp/>for<sp/>use<sp/>in<sp/>creating<sp/>your<sp/>own<sp/>plugin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>libraries.<sp/><sp/>Replace<sp/>MyPlugin<sp/>and<sp/>myPlugin<sp/>throughout<sp/>with<sp/>the<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>your<sp/>first<sp/>plugin<sp/>class,<sp/>and<sp/>fill<sp/>in<sp/>the<sp/>gaps<sp/>as<sp/>appropriate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_my_plugin_8h" kindref="compound">MyPlugin.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="class_my_plugin_1a190b665cb1688d8dd09b2f9bb59eabcf" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1a190b665cb1688d8dd09b2f9bb59eabcf" kindref="member">MyPlugin::MyPlugin</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inputSampleRate)<sp/>:</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>Plugin(inputSampleRate)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>be<sp/>sure<sp/>to<sp/>set<sp/>your<sp/>plugin<sp/>parameters<sp/>(presumably<sp/>stored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>member<sp/>variables)<sp/>to<sp/>their<sp/>default<sp/>values<sp/>here<sp/>--<sp/>the<sp/>host</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>not<sp/>do<sp/>that<sp/>for<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="class_my_plugin_1ac79e4db12ed1764dda2e43a671c23198" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1ac79e4db12ed1764dda2e43a671c23198" kindref="member">MyPlugin::~MyPlugin</ref>()</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="class_my_plugin_1a65cc80b7044e4b69d4618709a9562b63" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1a65cc80b7044e4b69d4618709a9562b63" kindref="member">MyPlugin::getIdentifier</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="24"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;myplugin&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_my_plugin_1aa29c4758d0441cea22c5f677bc0533c9" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1aa29c4758d0441cea22c5f677bc0533c9" kindref="member">MyPlugin::getName</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="30"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;My<sp/>Plugin&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_my_plugin_1a714bfe4d7c447767a9d24a626e702d3f" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1a714bfe4d7c447767a9d24a626e702d3f" kindref="member">MyPlugin::getDescription</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="36"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>something<sp/>helpful<sp/>here!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_my_plugin_1a35aabf14bf6ecd67046849ee57e703e1" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1a35aabf14bf6ecd67046849ee57e703e1" kindref="member">MyPlugin::getMaker</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="43"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Your<sp/>name<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_my_plugin_1ac84f4863a39b25bb04c02a5188bf35d4" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1ac84f4863a39b25bb04c02a5188bf35d4" kindref="member">MyPlugin::getPluginVersion</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="50"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>this<sp/>each<sp/>time<sp/>you<sp/>release<sp/>a<sp/>version<sp/>that<sp/>behaves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>differently<sp/>from<sp/>the<sp/>previous<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_my_plugin_1aaf4e313da4a5301229130e84bdf075a5" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1aaf4e313da4a5301229130e84bdf075a5" kindref="member">MyPlugin::getCopyright</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="58"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>is<sp/>not<sp/>ideally<sp/>named.<sp/><sp/>It<sp/>does<sp/>not<sp/>necessarily</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>say<sp/>who<sp/>made<sp/>the<sp/>plugin<sp/>--<sp/>getMaker<sp/>does<sp/>that<sp/>--<sp/>but<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>indicate<sp/>the<sp/>terms<sp/>under<sp/>which<sp/>it<sp/>is<sp/>distributed.<sp/><sp/>For</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>example,<sp/>&quot;Copyright<sp/>(year).<sp/>All<sp/>Rights<sp/>Reserved&quot;,<sp/>or<sp/>&quot;GPL&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_1a39cb7649d6dcc20e4cb1640cd55907bc" kindref="member">MyPlugin::InputDomain</ref></highlight></codeline>
<codeline lineno="67" refid="class_my_plugin_1a5f9677ca1cc7f2df4a30101cf2b89611" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1a5f9677ca1cc7f2df4a30101cf2b89611" kindref="member">MyPlugin::getInputDomain</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="68"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_1a39cb7649d6dcc20e4cb1640cd55907bcad4a9f31b958a43a9757af7893aa2e7ff" kindref="member">TimeDomain</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_my_plugin_1aa9763dd2f57976688be8dc209c5665df" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1aa9763dd2f57976688be8dc209c5665df" kindref="member">MyPlugin::getPreferredBlockSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="74"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>0<sp/>means<sp/>&quot;I<sp/>can<sp/>handle<sp/>any<sp/>block<sp/>size&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="79" refid="class_my_plugin_1aefb4cdfbd98d363bac0e4343b944a08e" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1aefb4cdfbd98d363bac0e4343b944a08e" kindref="member">MyPlugin::getPreferredStepSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="80"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>0<sp/>means<sp/>&quot;anything<sp/>sensible&quot;;<sp/>in<sp/>practice<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>means<sp/>the<sp/>same<sp/>as<sp/>the<sp/>block<sp/>size<sp/>for<sp/>TimeDomain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>plugins,<sp/>or<sp/>half<sp/>of<sp/>it<sp/>for<sp/>FrequencyDomain<sp/>plugins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="class_my_plugin_1adaf7b214e75222cdfdbc795a36d0ca1e" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1adaf7b214e75222cdfdbc795a36d0ca1e" kindref="member">MyPlugin::getMinChannelCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="88"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="class_my_plugin_1a5c9146dd98f82d9a40b37b05c509daae" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1a5c9146dd98f82d9a40b37b05c509daae" kindref="member">MyPlugin::getMaxChannelCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="94"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_base_1a3b6bb4bbd86affe1ca9deceea1aad4f8" kindref="member">MyPlugin::ParameterList</ref></highlight></codeline>
<codeline lineno="99" refid="class_my_plugin_1a0a8eef408f4064eba399f1dd7df551dd" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1a0a8eef408f4064eba399f1dd7df551dd" kindref="member">MyPlugin::getParameterDescriptors</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="100"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_base_1a3b6bb4bbd86affe1ca9deceea1aad4f8" kindref="member">ParameterList</ref><sp/>list;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>plugin<sp/>has<sp/>no<sp/>adjustable<sp/>parameters,<sp/>return<sp/>an<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>list<sp/>here<sp/>(and<sp/>there&apos;s<sp/>no<sp/>need<sp/>to<sp/>provide<sp/>implementations<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>getParameter<sp/>and<sp/>setParameter<sp/>in<sp/>that<sp/>case<sp/>either).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>it<sp/>is<sp/>your<sp/>responsibility<sp/>to<sp/>make<sp/>sure<sp/>the<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>off<sp/>having<sp/>their<sp/>default<sp/>values<sp/>(e.g.<sp/>in<sp/>the<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>above).<sp/><sp/>The<sp/>host<sp/>needs<sp/>to<sp/>know<sp/>the<sp/>default<sp/>value<sp/>so<sp/>it<sp/>can<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>things<sp/>like<sp/>provide<sp/>a<sp/>&quot;reset<sp/>to<sp/>default&quot;<sp/>function,<sp/>but<sp/>it<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>explicitly<sp/>set<sp/>your<sp/>parameters<sp/>to<sp/>their<sp/>defaults<sp/>for<sp/>you<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>they<sp/>have<sp/>not<sp/>changed<sp/>in<sp/>the<sp/>mean<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor" kindref="compound">ParameterDescriptor</ref><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a116fd9f0dc94c2bc4bbc60b5443c598c" kindref="member">identifier</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;parameter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a0ecebb94fb4ada4aad2640e20aa57084" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Some<sp/>Parameter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a780ddad41e433d85c82f9ea4d959cbaf" kindref="member">description</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a3bc3df322e4c02e17e96bc6d44982d7b" kindref="member">unit</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1ab3e4d84f5bc199eea8b642b27e425ec8" kindref="member">minValue</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1ab934b20dd708228a0e3c2811a3e2cec4" kindref="member">maxValue</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1aec4ef77451ec02193ecc4a0856673fbc" kindref="member">defaultValue</ref><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a7c556d58d552f737ee5a34efdf7f9425" kindref="member">isQuantized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>list.push_back(d);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="class_my_plugin_1a51cafbc261f6caf2e945f19b7488f308" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1a51cafbc261f6caf2e945f19b7488f308" kindref="member">MyPlugin::getParameter</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>identifier)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="130"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(identifier<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;parameter&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>5;<sp/></highlight><highlight class="comment">//<sp/>return<sp/>the<sp/>ACTUAL<sp/>current<sp/>value<sp/>of<sp/>your<sp/>parameter<sp/>here!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="class_my_plugin_1a8d109316d8d72420619749d46c85dd89" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1a8d109316d8d72420619749d46c85dd89" kindref="member">MyPlugin::setParameter</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>identifier,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>)<sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(identifier<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;parameter&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>actual<sp/>value<sp/>of<sp/>your<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_base_1a7f66f00437b21e5f694fe02356b12f20" kindref="member">MyPlugin::ProgramList</ref></highlight></codeline>
<codeline lineno="146" refid="class_my_plugin_1ab100832a8b92d3fcc46ca76ef391fefe" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1ab100832a8b92d3fcc46ca76ef391fefe" kindref="member">MyPlugin::getPrograms</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="147"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_base_1a7f66f00437b21e5f694fe02356b12f20" kindref="member">ProgramList</ref><sp/>list;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>have<sp/>no<sp/>programs,<sp/>return<sp/>an<sp/>empty<sp/>list<sp/>(or<sp/>simply<sp/>don&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>implement<sp/>this<sp/>function<sp/>or<sp/>getCurrentProgram/selectProgram)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="class_my_plugin_1a578bf0aacd96f14eb4833aa62f4e33f4" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1a578bf0aacd96f14eb4833aa62f4e33f4" kindref="member">MyPlugin::getCurrentProgram</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="158"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>no<sp/>programs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="class_my_plugin_1aa83a6338d7c8f7fdd4067523a5e1cb96" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1aa83a6338d7c8f7fdd4067523a5e1cb96" kindref="member">MyPlugin::selectProgram</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_1a30f531b8fb69fac41a24e3d2a6a08ed9" kindref="member">MyPlugin::OutputList</ref></highlight></codeline>
<codeline lineno="168" refid="class_my_plugin_1a1905e7875803d51df6ffd5e7643e5db0" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1a1905e7875803d51df6ffd5e7643e5db0" kindref="member">MyPlugin::getOutputDescriptors</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="169"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_1a30f531b8fb69fac41a24e3d2a6a08ed9" kindref="member">OutputList</ref><sp/>list;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>OutputDescriptor<sp/>documentation<sp/>for<sp/>the<sp/>possibilities<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Every<sp/>plugin<sp/>must<sp/>have<sp/>at<sp/>least<sp/>one<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor" kindref="compound">OutputDescriptor</ref><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ae2c893ddb1860589517ab7eaa989a18b" kindref="member">identifier</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;output&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ab824b2b34ee50f897a30901c620e8d87" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;My<sp/>Output&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1af9b4fe8f78e7126ead820ba5dc55efd1" kindref="member">description</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1aa057a8833fa037f06ac9f7b85b85d5e4" kindref="member">unit</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1af0e577e1a256ff6eed6ea42133fec77d" kindref="member">hasFixedBinCount</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1afdd006959a995e40ef7d565a3a4df6dc" kindref="member">binCount</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ae9ccb65f99f477096b65dd031f4c5e31" kindref="member">hasKnownExtents</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1a1b4858928d23bfd7d5bc557c82a83fb4" kindref="member">isQuantized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1a0d1194980d44e31b25ef3b4b070d6b5d" kindref="member">sampleType</ref><sp/>=<sp/><ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1abffa9ed50cd756df70fd51f0355f448ca0459d5d0d2198d21e8bc90abe4fdccca" kindref="member">OutputDescriptor::OneSamplePerStep</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ab0d7cc6ab19e53b5bd12ee234f549ea3" kindref="member">hasDuration</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>list.push_back(d);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="class_my_plugin_1a4ab9a13bc22e053361bf7440690cc6d7" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1a4ab9a13bc22e053361bf7440690cc6d7" kindref="member">MyPlugin::initialise</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>channels,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stepSize,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>blockSize)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channels<sp/>&lt;<sp/><ref refid="class_my_plugin_1adaf7b214e75222cdfdbc795a36d0ca1e" kindref="member">getMinChannelCount</ref>()<sp/>||</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>channels<sp/>&gt;<sp/><ref refid="class_my_plugin_1a5c9146dd98f82d9a40b37b05c509daae" kindref="member">getMaxChannelCount</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Real<sp/>initialisation<sp/>work<sp/>goes<sp/>here!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="class_my_plugin_1a135adf01e28932b74f4e166f0c989c95" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1a135adf01e28932b74f4e166f0c989c95" kindref="member">MyPlugin::reset</ref>()</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>buffers,<sp/>reset<sp/>stored<sp/>values,<sp/>etc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">MyPlugin::FeatureSet</ref></highlight></codeline>
<codeline lineno="209" refid="class_my_plugin_1ac2fc9b4ea10d472211bd319ecd870611" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1ac2fc9b4ea10d472211bd319ecd870611" kindref="member">MyPlugin::process</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*inputBuffers,<sp/><ref refid="struct_vamp_1_1_real_time" kindref="compound">Vamp::RealTime</ref><sp/>timestamp)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>actual<sp/>work!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">FeatureSet</ref>();</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">MyPlugin::FeatureSet</ref></highlight></codeline>
<codeline lineno="216" refid="class_my_plugin_1a4bc66da2111b34cfb2967805c2fa38c4" refkind="member"><highlight class="normal"><ref refid="class_my_plugin_1a4bc66da2111b34cfb2967805c2fa38c4" kindref="member">MyPlugin::getRemainingFeatures</ref>()</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">FeatureSet</ref>();</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/skeleton/MyPlugin.cpp"/>
  </compounddef>
</doxygen>
