<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="stkint_8cpp" kind="file" language="C++">
    <compoundname>stkint.cpp</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes refid="stkint_8h" local="yes">stkint.h</includes>
    <includes refid="_n_rev_8h" local="yes">NRev.h</includes>
    <includes refid="_j_c_rev_8h" local="yes">JCRev.h</includes>
    <includes refid="_p_r_c_rev_8h" local="yes">PRCRev.h</includes>
    <includes refid="_pit_shift_8h" local="yes">PitShift.h</includes>
    <includes refid="_chorus_8h" local="yes">Chorus.h</includes>
    <incdepgraph>
      <node id="15551">
        <label>Chorus.h</label>
        <link refid="_chorus_8h"/>
        <childnode refid="15539" relation="include">
        </childnode>
        <childnode refid="15550" relation="include">
        </childnode>
        <childnode refid="15552" relation="include">
        </childnode>
      </node>
      <node id="15544">
        <label>Delay.h</label>
        <link refid="_delay_8h"/>
        <childnode refid="15545" relation="include">
        </childnode>
      </node>
      <node id="15552">
        <label>SineWave.h</label>
        <link refid="_sine_wave_8h"/>
        <childnode refid="15553" relation="include">
        </childnode>
      </node>
      <node id="15550">
        <label>DelayL.h</label>
        <link refid="_delay_l_8h"/>
        <childnode refid="15544" relation="include">
        </childnode>
      </node>
      <node id="15536">
        <label>stdlib.h</label>
      </node>
      <node id="15548">
        <label>PRCRev.h</label>
        <link refid="_p_r_c_rev_8h"/>
        <childnode refid="15539" relation="include">
        </childnode>
        <childnode refid="15544" relation="include">
        </childnode>
      </node>
      <node id="15541">
        <label>string</label>
      </node>
      <node id="15535">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/stkint.cpp</label>
        <link refid="stkint.cpp"/>
        <childnode refid="15536" relation="include">
        </childnode>
        <childnode refid="15537" relation="include">
        </childnode>
        <childnode refid="15538" relation="include">
        </childnode>
        <childnode refid="15547" relation="include">
        </childnode>
        <childnode refid="15548" relation="include">
        </childnode>
        <childnode refid="15549" relation="include">
        </childnode>
        <childnode refid="15551" relation="include">
        </childnode>
      </node>
      <node id="15539">
        <label>Effect.h</label>
        <link refid="lib-src_2libnyquist_2nyquist_2nyqstk_2include_2_effect_8h"/>
        <childnode refid="15540" relation="include">
        </childnode>
      </node>
      <node id="15546">
        <label>vector</label>
      </node>
      <node id="15545">
        <label>Filter.h</label>
        <link refid="libnyquist_2nyquist_2nyqstk_2include_2_filter_8h"/>
        <childnode refid="15540" relation="include">
        </childnode>
        <childnode refid="15546" relation="include">
        </childnode>
      </node>
      <node id="15543">
        <label>sstream</label>
      </node>
      <node id="15547">
        <label>JCRev.h</label>
        <link refid="_j_c_rev_8h"/>
        <childnode refid="15539" relation="include">
        </childnode>
        <childnode refid="15544" relation="include">
        </childnode>
      </node>
      <node id="15549">
        <label>PitShift.h</label>
        <link refid="_pit_shift_8h"/>
        <childnode refid="15539" relation="include">
        </childnode>
        <childnode refid="15550" relation="include">
        </childnode>
      </node>
      <node id="15540">
        <label>Stk.h</label>
        <link refid="_stk_8h"/>
        <childnode refid="15541" relation="include">
        </childnode>
        <childnode refid="15542" relation="include">
        </childnode>
        <childnode refid="15543" relation="include">
        </childnode>
      </node>
      <node id="15542">
        <label>iostream</label>
      </node>
      <node id="15553">
        <label>Generator.h</label>
        <link refid="lib-src_2libnyquist_2nyquist_2nyqstk_2include_2_generator_8h"/>
        <childnode refid="15540" relation="include">
        </childnode>
      </node>
      <node id="15538">
        <label>NRev.h</label>
        <link refid="_n_rev_8h"/>
        <childnode refid="15539" relation="include">
        </childnode>
        <childnode refid="15544" relation="include">
        </childnode>
      </node>
      <node id="15537">
        <label>stkint.h</label>
        <link refid="stkint_8h"/>
      </node>
    </incdepgraph>
    <innerclass refid="structstk_effect" prot="public">stkEffect</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="stkint_8cpp_1aa5f12ce4f4d785e4545f77a68adeab30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structstk_effect" kindref="compound">stkEffect</ref> *</type>
        <definition>struct stkEffect* initStkEffect</definition>
        <argsstring>(int eff_type,::StkFloat trev, int sample_rate)</argsstring>
        <name>initStkEffect</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>eff_type</declname>
        </param>
        <param>
          <type>::<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>trev</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>sample_rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/stkint.cpp" line="19" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/stkint.cpp" bodystart="19" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="stkint_8cpp_1ac39526b69d6f12ecf3c5a30804749510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int deleteStkEffect</definition>
        <argsstring>(struct stkEffect *eff)</argsstring>
        <name>deleteStkEffect</name>
        <param>
          <type>struct <ref refid="structstk_effect" kindref="compound">stkEffect</ref> *</type>
          <declname>eff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/stkint.cpp" line="38" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/stkint.cpp" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="stkint_8cpp_1af4fefe798a012e13c2f21ed5287ff669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>::<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
        <definition>::StkFloat stkEffectTick</definition>
        <argsstring>(struct stkEffect *eff,::StkFloat s)</argsstring>
        <name>stkEffectTick</name>
        <param>
          <type>struct <ref refid="structstk_effect" kindref="compound">stkEffect</ref> *</type>
          <declname>eff</declname>
        </param>
        <param>
          <type>::<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/stkint.cpp" line="44" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/stkint.cpp" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="stkint_8cpp_1abb847eb9562e8fbf5513564a5637625e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void stkEffectSetMix</definition>
        <argsstring>(struct stkEffect *eff,::StkFloat mix)</argsstring>
        <name>stkEffectSetMix</name>
        <param>
          <type>struct <ref refid="structstk_effect" kindref="compound">stkEffect</ref> *</type>
          <declname>eff</declname>
        </param>
        <param>
          <type>::<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>mix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/stkint.cpp" line="48" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/stkint.cpp" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="stkint_8cpp_1ad554a7497ba1735a035b30a07ff8fb39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structstk_effect" kindref="compound">stkEffect</ref> *</type>
        <definition>struct stkEffect* initStkPitShift</definition>
        <argsstring>(::StkFloat shift, int sample_rate)</argsstring>
        <name>initStkPitShift</name>
        <param>
          <type>::<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>shift</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>sample_rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/stkint.cpp" line="56" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/stkint.cpp" bodystart="56" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="stkint_8cpp_1a8687959ba91435d46bbc4afc6b331e8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structstk_effect" kindref="compound">stkEffect</ref> *</type>
        <definition>struct stkEffect* initStkChorus</definition>
        <argsstring>(::StkFloat baseDelay,::StkFloat depth,::StkFloat freq, int sample_rate)</argsstring>
        <name>initStkChorus</name>
        <param>
          <type>::<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>baseDelay</declname>
        </param>
        <param>
          <type>::<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>depth</declname>
        </param>
        <param>
          <type>::<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>freq</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>sample_rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/stkint.cpp" line="70" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/stkint.cpp" bodystart="70" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>interface<sp/>for<sp/>STK<sp/>Effects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stkint_8h" kindref="compound">stkint.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_n_rev_8h" kindref="compound">NRev.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_j_c_rev_8h" kindref="compound">JCRev.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_p_r_c_rev_8h" kindref="compound">PRCRev.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_nyq" kindref="compound">Nyq</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reverb<sp/>Effects<sp/>==========================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="structstk_effect" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstk_effect" kindref="compound">stkEffect</ref><sp/>{</highlight></codeline>
<codeline lineno="16" refid="structstk_effect_1a83c32729f1b30086c16fd9a3111d4dc1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_effect" kindref="compound">Effect</ref><sp/>*<sp/><ref refid="structstk_effect_1a83c32729f1b30086c16fd9a3111d4dc1" kindref="member">effectPtr</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="stkint_8cpp_1aa5f12ce4f4d785e4545f77a68adeab30" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstk_effect" kindref="compound">stkEffect</ref><sp/>*<ref refid="stkint_8cpp_1aa5f12ce4f4d785e4545f77a68adeab30" kindref="member">initStkEffect</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eff_type,<sp/>::<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>trev,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sample_rate)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstk_effect" kindref="compound">stkEffect</ref><sp/>*<sp/>eff<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstk_effect" kindref="compound">stkEffect</ref><sp/>*)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structstk_effect" kindref="compound">stkEffect</ref>));</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_stk_1a4a22b5faa4bf01ed8a667bf3d120dcc1" kindref="member">Stk::setSampleRate</ref>(sample_rate);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(eff_type)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="stkint_8h_1a707fc54304eb1b4df0fe4145337f9d42" kindref="member">NREV</ref>:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>eff-&gt;<ref refid="structstk_effect_1a83c32729f1b30086c16fd9a3111d4dc1" kindref="member">effectPtr</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_n_rev" kindref="compound">NRev</ref>(trev);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="stkint_8h_1a2be5abfa924e002ad99b7388c941762d" kindref="member">JCREV</ref>:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>eff-&gt;<ref refid="structstk_effect_1a83c32729f1b30086c16fd9a3111d4dc1" kindref="member">effectPtr</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_j_c_rev" kindref="compound">JCRev</ref>(trev);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="stkint_8h_1aef72059541fd1e154792757c0d3089b8" kindref="member">PRCREV</ref>:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>eff-&gt;<ref refid="structstk_effect_1a83c32729f1b30086c16fd9a3111d4dc1" kindref="member">effectPtr</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_p_r_c_rev" kindref="compound">PRCRev</ref>(trev);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eff;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="stkint_8h_1aaae41a0e378b456f42f5860c1f1001c4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="stkint_8cpp_1ac39526b69d6f12ecf3c5a30804749510" kindref="member">deleteStkEffect</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structstk_effect" kindref="compound">stkEffect</ref><sp/>*<sp/>eff)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(eff-&gt;<ref refid="structstk_effect_1a83c32729f1b30086c16fd9a3111d4dc1" kindref="member">effectPtr</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>free(eff);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="stkint_8cpp_1af4fefe798a012e13c2f21ed5287ff669" refkind="member"><highlight class="normal"><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">::StkFloat</ref><sp/><ref refid="stkint_8cpp_1af4fefe798a012e13c2f21ed5287ff669" kindref="member">stkEffectTick</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structstk_effect" kindref="compound">stkEffect</ref><sp/>*<sp/>eff,<sp/>::<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eff-&gt;<ref refid="structstk_effect_1a83c32729f1b30086c16fd9a3111d4dc1" kindref="member">effectPtr</ref>-&gt;<ref refid="class_nyq_1_1_effect_1a2da4c41a4d12c7d348c43909b9c8ab4a" kindref="member">tick</ref>(s);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="stkint_8cpp_1abb847eb9562e8fbf5513564a5637625e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stkint_8cpp_1abb847eb9562e8fbf5513564a5637625e" kindref="member">stkEffectSetMix</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structstk_effect" kindref="compound">stkEffect</ref><sp/>*<sp/>eff,<sp/>::<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>mix)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>eff-&gt;<ref refid="structstk_effect_1a83c32729f1b30086c16fd9a3111d4dc1" kindref="member">effectPtr</ref>-&gt;<ref refid="class_nyq_1_1_effect_1a4ffed75ab6daef44ff99268423a5c421" kindref="member">setEffectMix</ref>(mix);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PitShift<sp/>===================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_pit_shift_8h" kindref="compound">PitShift.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="stkint_8cpp_1ad554a7497ba1735a035b30a07ff8fb39" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstk_effect" kindref="compound">stkEffect</ref><sp/>*<ref refid="stkint_8cpp_1ad554a7497ba1735a035b30a07ff8fb39" kindref="member">initStkPitShift</ref>(::<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>shift,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sample_rate)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_pit_shift" kindref="compound">PitShift</ref><sp/>*<sp/>ps;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>ps<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_pit_shift" kindref="compound">PitShift</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>ps-&gt;<ref refid="class_nyq_1_1_pit_shift_1a81627a65c4affcf55863c2b00d45bccf" kindref="member">setShift</ref>(shift);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstk_effect" kindref="compound">stkEffect</ref><sp/>*<sp/>eff<sp/><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstk_effect" kindref="compound">stkEffect</ref><sp/>*)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structstk_effect" kindref="compound">stkEffect</ref>));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_stk_1a4a22b5faa4bf01ed8a667bf3d120dcc1" kindref="member">Stk::setSampleRate</ref>(sample_rate);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>eff-&gt;<ref refid="structstk_effect_1a83c32729f1b30086c16fd9a3111d4dc1" kindref="member">effectPtr</ref><sp/>=<sp/>ps;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eff;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Chorus<sp/>=====================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_chorus_8h" kindref="compound">Chorus.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="stkint_8cpp_1a8687959ba91435d46bbc4afc6b331e8c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstk_effect" kindref="compound">stkEffect</ref><sp/>*<ref refid="stkint_8cpp_1a8687959ba91435d46bbc4afc6b331e8c" kindref="member">initStkChorus</ref>(::<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>baseDelay,<sp/>::<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>depth,<sp/>::<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>freq,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sample_rate)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_chorus" kindref="compound">Chorus</ref><sp/>*<sp/>ch;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>ch<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_chorus" kindref="compound">Chorus</ref>(baseDelay);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>ch-&gt;<ref refid="class_nyq_1_1_chorus_1af4e834c2787443a9f339f5988d4964fd" kindref="member">setModDepth</ref>(depth);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>ch-&gt;<ref refid="class_nyq_1_1_chorus_1a2000850b04b120b134bf20249ac14946" kindref="member">setModFrequency</ref>(freq);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstk_effect" kindref="compound">stkEffect</ref><sp/>*<sp/>eff<sp/><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstk_effect" kindref="compound">stkEffect</ref><sp/>*)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structstk_effect" kindref="compound">stkEffect</ref>));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_stk_1a4a22b5faa4bf01ed8a667bf3d120dcc1" kindref="member">Stk::setSampleRate</ref>(sample_rate);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>eff-&gt;<ref refid="structstk_effect_1a83c32729f1b30086c16fd9a3111d4dc1" kindref="member">effectPtr</ref><sp/>=<sp/>ch;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eff;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/stkint.cpp"/>
  </compounddef>
</doxygen>
