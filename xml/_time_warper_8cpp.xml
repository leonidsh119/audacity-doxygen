<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_time_warper_8cpp" kind="file" language="C++">
    <compoundname>TimeWarper.cpp</compoundname>
    <includes local="no">wx/string.h</includes>
    <includes refid="_time_warper_8h" local="yes">TimeWarper.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="44240">
        <label>TimeWarper.h</label>
        <link refid="_time_warper_8h"/>
      </node>
      <node id="44238">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/TimeWarper.cpp</label>
        <link refid="TimeWarper.cpp"/>
        <childnode refid="44239" relation="include">
        </childnode>
        <childnode refid="44240" relation="include">
        </childnode>
        <childnode refid="44241" relation="include">
        </childnode>
      </node>
      <node id="44239">
        <label>wx/string.h</label>
      </node>
      <node id="44241">
        <label>math.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para>Contains definitions for <ref refid="class_identity_time_warper" kindref="compound">IdentityTimeWarper</ref>, <ref refid="class_shift_time_warper" kindref="compound">ShiftTimeWarper</ref>, <ref refid="class_linear_time_warper" kindref="compound">LinearTimeWarper</ref>, LogarithmicTimeWarper, QuadraticTimeWarper, Geometric <ref refid="class_time_warper" kindref="compound">TimeWarper</ref> classes. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/>Audacity<sp/>-<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/>Copyright<sp/>1999-2009<sp/>Audacity<sp/>Team</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/>License:<sp/>GPL<sp/>v2<sp/>-<sp/>see<sp/>LICENSE.txt</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>Dan<sp/>Horgan</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_time_warper_8h" kindref="compound">TimeWarper.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_identity_time_warper_1a132a89ca220726ff167ac7fe0e74c78a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_identity_time_warper_1a132a89ca220726ff167ac7fe0e74c78a" kindref="member">IdentityTimeWarper::Warp</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>originalTime)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="23"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>originalTime;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_shift_time_warper_1aa6a42aa3049c47ab5fb98001c4ccbf0c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_shift_time_warper_1aa6a42aa3049c47ab5fb98001c4ccbf0c" kindref="member">ShiftTimeWarper::Warp</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>originalTime)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="28"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mWarper-&gt;Warp(originalTime<sp/>+<sp/>mShift);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_linear_time_warper_1aef575f23fda617c30721ff2fdb2a2f37" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_linear_time_warper_1aef575f23fda617c30721ff2fdb2a2f37" kindref="member">LinearTimeWarper::Warp</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>originalTime)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="33"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>originalTime*mScale<sp/>+<sp/>mShift;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="class_linear_input_rate_time_warper_1ac1077d12f93ed8925b9920009d45fe9b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_linear_input_rate_time_warper_1ac1077d12f93ed8925b9920009d45fe9b" kindref="member">LinearInputRateTimeWarper::Warp</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>originalTime)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="38"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref><sp/>=<sp/>mRateWarper.Warp(originalTime);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTStart<sp/>+<sp/>mScale*log(rate/mRStart);</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_linear_input_rate_time_warper_1a847089a0e0ac0e7c8ed5daa86e80b96d" refkind="member"><highlight class="normal"><ref refid="class_linear_input_rate_time_warper_1a847089a0e0ac0e7c8ed5daa86e80b96d" kindref="member">LinearInputRateTimeWarper::LinearInputRateTimeWarper</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tStart,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tEnd,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rStart,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rEnd)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">:<sp/>mRateWarper(tStart,<sp/>rStart,<sp/>tEnd,<sp/>rEnd),<sp/>mRStart(rStart),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>mTStart(tStart),<sp/>mScale((tEnd-tStart)/(rEnd-rStart))</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(mRStart<sp/>!=<sp/>0.0);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(tStart<sp/>&lt;<sp/>tEnd);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_linear_output_rate_time_warper_1a5b0926127b90c5649ec201d5c0d29036" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_linear_output_rate_time_warper_1a5b0926127b90c5649ec201d5c0d29036" kindref="member">LinearOutputRateTimeWarper::Warp</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>originalTime)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="53"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scaledTime<sp/>=<sp/>mTimeWarper.Warp(originalTime);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTStart<sp/>+<sp/>mScale*(sqrt(mC1<sp/>+<sp/>scaledTime<sp/>*<sp/>mC2)<sp/>-<sp/>mRStart);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_linear_output_rate_time_warper_1a4498674e5f1bf0f198d41f983ff6cd66" refkind="member"><highlight class="normal"><ref refid="class_linear_output_rate_time_warper_1a4498674e5f1bf0f198d41f983ff6cd66" kindref="member">LinearOutputRateTimeWarper::LinearOutputRateTimeWarper</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tStart,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tEnd,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rStart,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rEnd)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">:<sp/>mTimeWarper(tStart,<sp/>0.0,<sp/>tEnd,<sp/>1.0),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>mRStart(rStart),<sp/>mTStart(tStart),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>mScale(2.0*(tEnd-tStart)/(rEnd*rEnd-rStart*rStart)),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>mC1(rStart*rStart),<sp/>mC2(rEnd*rEnd-rStart*rStart)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(rStart<sp/>!=<sp/>rEnd);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(rStart<sp/>&gt;<sp/>0.0);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(rEnd<sp/>&gt;<sp/>0.0);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(tStart<sp/>&lt;<sp/>tEnd);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="class_linear_input_stretch_time_warper_1a90043df8df79b7638c142b4e046598fa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_linear_input_stretch_time_warper_1a90043df8df79b7638c142b4e046598fa" kindref="member">LinearInputStretchTimeWarper::Warp</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>originalTime)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="72"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scaledTime<sp/>=<sp/>mTimeWarper.<ref refid="class_linear_time_warper_1aef575f23fda617c30721ff2fdb2a2f37" kindref="member">Warp</ref>(originalTime);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTStart<sp/>+<sp/>mC1<sp/>*<sp/>scaledTime<sp/>*<sp/>(1.0<sp/>+<sp/>mC2<sp/>*<sp/>scaledTime);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="class_linear_input_stretch_time_warper_1affe79e48a1386794286dfbb14052c102" refkind="member"><highlight class="normal"><ref refid="class_linear_input_stretch_time_warper_1affe79e48a1386794286dfbb14052c102" kindref="member">LinearInputStretchTimeWarper::LinearInputStretchTimeWarper</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tStart,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tEnd,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rStart,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rEnd)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">:<sp/>mTimeWarper(tStart,<sp/>0.0,<sp/>tEnd,<sp/>1.0),<sp/>mTStart(tStart),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>mC1((tEnd-tStart)/rStart),<sp/>mC2(0.5*(rStart/rEnd<sp/>-<sp/>1.0))</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(rStart<sp/>&gt;<sp/>0.0);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(rEnd<sp/>&gt;<sp/>0.0);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(tStart<sp/>&lt;<sp/>tEnd);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="class_linear_output_stretch_time_warper_1ad01ef22134b2c6e5eb0d14a920cc2907" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_linear_output_stretch_time_warper_1ad01ef22134b2c6e5eb0d14a920cc2907" kindref="member">LinearOutputStretchTimeWarper::Warp</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>originalTime)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="88"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scaledTime<sp/>=<sp/>mTimeWarper.<ref refid="class_linear_time_warper_1aef575f23fda617c30721ff2fdb2a2f37" kindref="member">Warp</ref>(originalTime);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTStart<sp/>+<sp/>mC1<sp/>*<sp/>(pow(mC2,<sp/>scaledTime)<sp/>-<sp/>1.0);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="class_linear_output_stretch_time_warper_1a99e9ce55f814a902828c008a5d1ba3ff" refkind="member"><highlight class="normal"><ref refid="class_linear_output_stretch_time_warper_1a99e9ce55f814a902828c008a5d1ba3ff" kindref="member">LinearOutputStretchTimeWarper::LinearOutputStretchTimeWarper</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tStart,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tEnd,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rStart,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rEnd)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">:<sp/>mTimeWarper(tStart,<sp/>0.0,<sp/>tEnd,<sp/>1.0),<sp/>mTStart(tStart),</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>mC1((tEnd-tStart)/(rStart*log(rStart/rEnd))),<sp/>mC2(rStart/rEnd)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(rStart<sp/>!=<sp/>rEnd);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(rStart<sp/>&gt;<sp/>0.0);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(rEnd<sp/>&gt;<sp/>0.0);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(tStart<sp/>&lt;<sp/>tEnd);</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="class_geometric_input_time_warper_1aa0a5547421befe96fd42b2b76aa4a55a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_geometric_input_time_warper_1aa0a5547421befe96fd42b2b76aa4a55a" kindref="member">GeometricInputTimeWarper::Warp</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>originalTime)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="105"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scaledTime<sp/>=<sp/>mTimeWarper.<ref refid="class_linear_time_warper_1aef575f23fda617c30721ff2fdb2a2f37" kindref="member">Warp</ref>(originalTime);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTStart<sp/>+<sp/>mScale*(pow(mRatio,scaledTime)<sp/>-<sp/>1.0);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="class_geometric_input_time_warper_1a71f48f49996614fbfe03371ed37e14d7" refkind="member"><highlight class="normal"><ref refid="class_geometric_input_time_warper_1a71f48f49996614fbfe03371ed37e14d7" kindref="member">GeometricInputTimeWarper::GeometricInputTimeWarper</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tStart,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tEnd,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rStart,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rEnd)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">:<sp/>mTimeWarper(tStart,<sp/>0.0,<sp/>tEnd,<sp/>1.0),<sp/>mTStart(tStart),</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>mScale((tEnd-tStart)/(log(rStart/rEnd)*rStart)),<sp/>mRatio(rStart/rEnd)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(rStart<sp/>!=<sp/>rEnd);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(rStart<sp/>&gt;<sp/>0.0);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(rEnd<sp/>&gt;<sp/>0.0);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(tStart<sp/>&lt;<sp/>tEnd);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="class_geometric_output_time_warper_1a753407b406acf7775927b62e771f4ad9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_geometric_output_time_warper_1a753407b406acf7775927b62e771f4ad9" kindref="member">GeometricOutputTimeWarper::Warp</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>originalTime)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="122"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scaledTime<sp/>=<sp/>mTimeWarper.<ref refid="class_linear_time_warper_1aef575f23fda617c30721ff2fdb2a2f37" kindref="member">Warp</ref>(originalTime);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTStart<sp/>+<sp/>mScale*log1p(mC0<sp/>*<sp/>scaledTime);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="class_geometric_output_time_warper_1a78d4bdca575be0f105bf97c650ffc623" refkind="member"><highlight class="normal"><ref refid="class_geometric_output_time_warper_1a78d4bdca575be0f105bf97c650ffc623" kindref="member">GeometricOutputTimeWarper::GeometricOutputTimeWarper</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tStart,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tEnd,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rStart,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rEnd)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">:<sp/>mTimeWarper(tStart,<sp/>0.0,<sp/>tEnd,<sp/>1.0),<sp/>mTStart(tStart),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>mScale((tEnd-tStart)/(rEnd-rStart)),<sp/>mC0((rEnd-rStart)/rStart)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(rStart<sp/>&gt;<sp/>0.0);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(rEnd<sp/>&gt;<sp/>0.0);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(tStart<sp/>&lt;<sp/>tEnd);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="class_step_time_warper_1a66d98bdc8dc799d304afa953ff1a83a8" refkind="member"><highlight class="normal"><ref refid="class_step_time_warper_1a66d98bdc8dc799d304afa953ff1a83a8" kindref="member">StepTimeWarper::StepTimeWarper</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tStep,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">:<sp/>mTStep(tStep),<sp/>mOffset(offset)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{<sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="class_step_time_warper_1aad8ca2366905c91d7f5e809115ed3052" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_step_time_warper_1aad8ca2366905c91d7f5e809115ed3052" kindref="member">StepTimeWarper::Warp</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>originalTime)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="142"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>originalTime<sp/>+<sp/>((originalTime<sp/>&gt;<sp/>mTStep)<sp/>?<sp/>mOffset<sp/>:<sp/>0.0);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/TimeWarper.cpp"/>
  </compounddef>
</doxygen>
