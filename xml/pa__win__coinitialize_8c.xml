<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="pa__win__coinitialize_8c" kind="file" language="C++">
    <compoundname>pa_win_coinitialize.c</compoundname>
    <includes local="no">windows.h</includes>
    <includes local="no">objbase.h</includes>
    <includes refid="portaudio_8h" local="yes">portaudio.h</includes>
    <includes refid="pa__util_8h" local="yes">pa_util.h</includes>
    <includes refid="pa__debugprint_8h" local="yes">pa_debugprint.h</includes>
    <includes refid="pa__win__coinitialize_8h" local="yes">pa_win_coinitialize.h</includes>
    <incdepgraph>
      <node id="30426">
        <label>windows.h</label>
      </node>
      <node id="30427">
        <label>objbase.h</label>
      </node>
      <node id="30428">
        <label>portaudio.h</label>
        <link refid="portaudio_8h"/>
      </node>
      <node id="30425">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/win/pa_win_coinitialize.c</label>
        <link refid="pa_win_coinitialize.c"/>
        <childnode refid="30426" relation="include">
        </childnode>
        <childnode refid="30427" relation="include">
        </childnode>
        <childnode refid="30428" relation="include">
        </childnode>
        <childnode refid="30429" relation="include">
        </childnode>
        <childnode refid="30430" relation="include">
        </childnode>
        <childnode refid="30431" relation="include">
        </childnode>
      </node>
      <node id="30431">
        <label>pa_win_coinitialize.h</label>
        <link refid="pa__win__coinitialize_8h"/>
      </node>
      <node id="30430">
        <label>pa_debugprint.h</label>
        <link refid="pa__debugprint_8h"/>
      </node>
      <node id="30429">
        <label>pa_util.h</label>
        <link refid="pa__util_8h"/>
        <childnode refid="30428" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="pa__win__coinitialize_8c_1a183e0fdc872497e23efff8b729ed1448" prot="public" static="no">
        <name>PAWINUTIL_COM_INITIALIZED</name>
        <initializer>(0xb38f)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/win/pa_win_coinitialize.c" line="61" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/win/pa_win_coinitialize.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__win__coinitialize_8c_1aa8f367230ec78ea978ec9c923f0037ba" prot="public" static="no">
        <name>PAWINUTIL_COM_NOT_INITIALIZED</name>
        <initializer>(0xf1cd)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/win/pa_win_coinitialize.c" line="62" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/win/pa_win_coinitialize.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pa__win__coinitialize_8c_1a9839b804bf6920677e3ef262ea5f9e75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>PaError PaWinUtil_CoInitialize</definition>
        <argsstring>(PaHostApiTypeId hostApiType, PaWinUtilComInitializationResult *comInitializationResult)</argsstring>
        <name>PaWinUtil_CoInitialize</name>
        <param>
          <type><ref refid="portaudio_8h_1a8eaebe3d39c5ea45598da8f86dc2e5ae" kindref="member">PaHostApiTypeId</ref></type>
          <declname>hostApiType</declname>
        </param>
        <param>
          <type><ref refid="struct_pa_win_util_com_initialization_result" kindref="compound">PaWinUtilComInitializationResult</ref> *</type>
          <declname>comInitializationResult</declname>
        </param>
        <briefdescription>
<para>Initialize Microsoft COM subsystem on the current thread. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hostApiType</parametername>
</parameternamelist>
<parameterdescription>
<para>the host API type id of the caller. Used for error reporting.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comInitializationResult</parametername>
</parameternamelist>
<parameterdescription>
<para>An output parameter. The value pointed to by this parameter stores information required by PaWinUtil_CoUninitialize to correctly uninitialize COM. The value should be retained and later passed to PaWinUtil_CoUninitialize.</para></parameterdescription>
</parameteritem>
</parameterlist>
If PaWinUtil_CoInitialize returns paNoError, the caller must later call PaWinUtil_CoUninitialize once. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/win/pa_win_coinitialize.c" line="65" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/win/pa_win_coinitialize.c" bodystart="65" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="pa__win__coinitialize_8c_1adf8a7e487441c8b976cf6fadbc830d7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaWinUtil_CoUninitialize</definition>
        <argsstring>(PaHostApiTypeId hostApiType, PaWinUtilComInitializationResult *comInitializationResult)</argsstring>
        <name>PaWinUtil_CoUninitialize</name>
        <param>
          <type><ref refid="portaudio_8h_1a8eaebe3d39c5ea45598da8f86dc2e5ae" kindref="member">PaHostApiTypeId</ref></type>
          <declname>hostApiType</declname>
        </param>
        <param>
          <type><ref refid="struct_pa_win_util_com_initialization_result" kindref="compound">PaWinUtilComInitializationResult</ref> *</type>
          <declname>comInitializationResult</declname>
        </param>
        <briefdescription>
<para>Uninitialize the Microsoft COM subsystem on the current thread using the result of a previous call to PaWinUtil_CoInitialize. Must be called on the same thread as PaWinUtil_CoInitialize. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hostApiType</parametername>
</parameternamelist>
<parameterdescription>
<para>the host API type id of the caller. Used for error reporting.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comInitializationResult</parametername>
</parameternamelist>
<parameterdescription>
<para>An input parameter. A pointer to a value previously initialized by a call to PaWinUtil_CoInitialize. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/win/pa_win_coinitialize.c" line="121" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/win/pa_win_coinitialize.c" bodystart="121" bodyend="144"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Microsoft COM initialization routines. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Microsoft<sp/>COM<sp/>initialization<sp/>routines</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2011<sp/>Ross<sp/>Bencina,<sp/>Dmitry<sp/>Kostjuchenko</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Based<sp/>on<sp/>the<sp/>Open<sp/>Source<sp/>API<sp/>proposed<sp/>by<sp/>Ross<sp/>Bencina</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2011<sp/>Ross<sp/>Bencina,<sp/>Phil<sp/>Burk</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>The<sp/>text<sp/>above<sp/>constitutes<sp/>the<sp/>entire<sp/>PortAudio<sp/>license;<sp/>however,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>the<sp/>PortAudio<sp/>community<sp/>also<sp/>makes<sp/>the<sp/>following<sp/>non-binding<sp/>requests:</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>Any<sp/>person<sp/>wishing<sp/>to<sp/>distribute<sp/>modifications<sp/>to<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>requested<sp/>to<sp/>send<sp/>the<sp/>modifications<sp/>to<sp/>the<sp/>original<sp/>developer<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>they<sp/>can<sp/>be<sp/>incorporated<sp/>into<sp/>the<sp/>canonical<sp/>version.<sp/>It<sp/>is<sp/>also</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>requested<sp/>that<sp/>these<sp/>non-binding<sp/>requests<sp/>be<sp/>included<sp/>along<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>license<sp/>above.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;objbase.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="portaudio_8h" kindref="compound">portaudio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__util_8h" kindref="compound">pa_util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__debugprint_8h" kindref="compound">pa_debugprint.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__win__coinitialize_8h" kindref="compound">pa_win_coinitialize.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(WIN32)<sp/>&amp;&amp;<sp/>(defined(_MSC_VER)<sp/>&amp;&amp;<sp/>(_MSC_VER<sp/>&gt;=<sp/>1200)))<sp/>&amp;&amp;<sp/>!defined(_WIN32_WCE)<sp/></highlight><highlight class="comment">/*<sp/>MSC<sp/>version<sp/>6<sp/>and<sp/>above<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>comment(<sp/>lib,<sp/>&quot;ole32.lib&quot;<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>use<sp/>some<sp/>special<sp/>bit<sp/>patterns<sp/>here<sp/>to<sp/>try<sp/>to<sp/>guard<sp/>against<sp/>uninitialized<sp/>memory<sp/>errors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="pa__win__coinitialize_8c_1a183e0fdc872497e23efff8b729ed1448" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PAWINUTIL_COM_INITIALIZED<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0xb38f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="pa__win__coinitialize_8c_1aa8f367230ec78ea978ec9c923f0037ba" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PAWINUTIL_COM_NOT_INITIALIZED<sp/><sp/><sp/>(0xf1cd)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="pa__win__coinitialize_8h_1a9839b804bf6920677e3ef262ea5f9e75" refkind="member"><highlight class="normal"><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/><ref refid="pa__win__coinitialize_8c_1a9839b804bf6920677e3ef262ea5f9e75" kindref="member">PaWinUtil_CoInitialize</ref>(<sp/><ref refid="portaudio_8h_1a8eaebe3d39c5ea45598da8f86dc2e5ae" kindref="member">PaHostApiTypeId</ref><sp/>hostApiType,<sp/><ref refid="struct_pa_win_util_com_initialization_result" kindref="compound">PaWinUtilComInitializationResult</ref><sp/>*comInitializationResult<sp/>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="px__win__ds_8c_1a6ad46d30b0323d7b029e41f32f8a2571" kindref="member">HRESULT</ref><sp/>hr;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>comInitializationResult-&gt;<ref refid="struct_pa_win_util_com_initialization_result_1aebe3fcf1b606a3280125c8caae68fb44" kindref="member">state</ref><sp/>=<sp/><ref refid="pa__win__coinitialize_8c_1aa8f367230ec78ea978ec9c923f0037ba" kindref="member">PAWINUTIL_COM_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>COM<sp/>is<sp/>already<sp/>initialized<sp/>CoInitialize<sp/>will<sp/>either<sp/>return</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FALSE,<sp/>or<sp/>RPC_E_CHANGED_MODE<sp/>if<sp/>it<sp/>was<sp/>initialised<sp/>in<sp/>a<sp/>different</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threading<sp/>mode.<sp/>In<sp/>either<sp/>case<sp/>we<sp/>shouldn&apos;t<sp/>consider<sp/>it<sp/>an<sp/>error</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>we<sp/>need<sp/>to<sp/>be<sp/>careful<sp/>to<sp/>not<sp/>call<sp/>CoUninitialize()<sp/>if<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RPC_E_CHANGED_MODE<sp/>was<sp/>returned.</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>CoInitialize(0);<sp/></highlight><highlight class="comment">/*<sp/>use<sp/>legacy-safe<sp/>equivalent<sp/>to<sp/>CoInitializeEx(NULL,<sp/>COINIT_APARTMENTTHREADED)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>FAILED(hr)<sp/>&amp;&amp;<sp/>hr<sp/>!=<sp/>RPC_E_CHANGED_MODE<sp/>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((</highlight><highlight class="stringliteral">&quot;CoInitialize(0)<sp/>failed.<sp/>hr=%d\n&quot;</highlight><highlight class="normal">,<sp/>hr));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>hr<sp/>==<sp/>E_OUTOFMEMORY<sp/>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7ad58986a9b5064d5a29c7ed0837bfc621" kindref="member">paInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lpMsgBuf;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FormatMessage(</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FORMAT_MESSAGE_ALLOCATE_BUFFER<sp/>|<sp/>FORMAT_MESSAGE_FROM_SYSTEM,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hr,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAKELANGID(LANG_NEUTRAL,<sp/>SUBLANG_DEFAULT),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="mapinls_8h_1a374c06818df7bdfcb627956b2e49ba08" kindref="member">LPTSTR</ref>)<sp/>&amp;lpMsgBuf,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__front_8c_1a9c3ad627c13c1d695fef054c216667f7" kindref="member">PaUtil_SetLastHostErrorInfo</ref>(<sp/>hostApiType,<sp/>hr,<sp/>lpMsgBuf<sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LocalFree(<sp/>lpMsgBuf<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>hr<sp/>!=<sp/>RPC_E_CHANGED_MODE<sp/>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comInitializationResult-&gt;<ref refid="struct_pa_win_util_com_initialization_result_1aebe3fcf1b606a3280125c8caae68fb44" kindref="member">state</ref><sp/>=<sp/><ref refid="pa__win__coinitialize_8c_1a183e0fdc872497e23efff8b729ed1448" kindref="member">PAWINUTIL_COM_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Memorize<sp/>calling<sp/>thread<sp/>id<sp/>and<sp/>report<sp/>warning<sp/>on<sp/>Uninitialize<sp/>if<sp/></highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calling<sp/>thread<sp/>is<sp/>different<sp/>as<sp/>CoInitialize<sp/>must<sp/>match<sp/>CoUninitialize<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>same<sp/>thread.</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comInitializationResult-&gt;<ref refid="struct_pa_win_util_com_initialization_result_1a4523b33a8dd63e34ad278769ec882237" kindref="member">initializingThreadId</ref><sp/>=<sp/>GetCurrentThreadId();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="pa__win__coinitialize_8h_1adf8a7e487441c8b976cf6fadbc830d7e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__win__coinitialize_8c_1adf8a7e487441c8b976cf6fadbc830d7e" kindref="member">PaWinUtil_CoUninitialize</ref>(<sp/><ref refid="portaudio_8h_1a8eaebe3d39c5ea45598da8f86dc2e5ae" kindref="member">PaHostApiTypeId</ref><sp/>hostApiType,<sp/><ref refid="struct_pa_win_util_com_initialization_result" kindref="compound">PaWinUtilComInitializationResult</ref><sp/>*comInitializationResult<sp/>)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>comInitializationResult-&gt;<ref refid="struct_pa_win_util_com_initialization_result_1aebe3fcf1b606a3280125c8caae68fb44" kindref="member">state</ref><sp/>!=<sp/><ref refid="pa__win__coinitialize_8c_1aa8f367230ec78ea978ec9c923f0037ba" kindref="member">PAWINUTIL_COM_NOT_INITIALIZED</ref></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>comInitializationResult-&gt;<ref refid="struct_pa_win_util_com_initialization_result_1aebe3fcf1b606a3280125c8caae68fb44" kindref="member">state</ref><sp/>!=<sp/><ref refid="pa__win__coinitialize_8c_1a183e0fdc872497e23efff8b729ed1448" kindref="member">PAWINUTIL_COM_INITIALIZED</ref><sp/>){</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>PaWinUtil_CoUninitialize<sp/>called<sp/>without<sp/>calling<sp/>PaWinUtil_CoInitialize\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>comInitializationResult-&gt;<ref refid="struct_pa_win_util_com_initialization_result_1aebe3fcf1b606a3280125c8caae68fb44" kindref="member">state</ref><sp/>==<sp/><ref refid="pa__win__coinitialize_8c_1a183e0fdc872497e23efff8b729ed1448" kindref="member">PAWINUTIL_COM_INITIALIZED</ref><sp/>)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>currentThreadId<sp/>=<sp/>GetCurrentThreadId();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>comInitializationResult-&gt;<ref refid="struct_pa_win_util_com_initialization_result_1a4523b33a8dd63e34ad278769ec882237" kindref="member">initializingThreadId</ref><sp/>!=<sp/>currentThreadId<sp/>)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>failed<sp/>PaWinUtil_CoUninitialize<sp/>calling<sp/>thread[%d]<sp/>does<sp/>not<sp/>match<sp/>initializing<sp/>thread[%d]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentThreadId,<sp/>comInitializationResult-&gt;<ref refid="struct_pa_win_util_com_initialization_result_1a4523b33a8dd63e34ad278769ec882237" kindref="member">initializingThreadId</ref>));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CoUninitialize();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comInitializationResult-&gt;<ref refid="struct_pa_win_util_com_initialization_result_1aebe3fcf1b606a3280125c8caae68fb44" kindref="member">state</ref><sp/>=<sp/><ref refid="pa__win__coinitialize_8c_1aa8f367230ec78ea978ec9c923f0037ba" kindref="member">PAWINUTIL_COM_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/os/win/pa_win_coinitialize.c"/>
  </compounddef>
</doxygen>
