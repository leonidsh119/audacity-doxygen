<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="group__suil" kind="group">
    <compoundname>suil</compoundname>
    <title>Suil</title>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__suil_1gac10e100afa94a434461386b79528c00c" prot="public" static="no">
        <type>struct <ref refid="struct_suil_host_impl" kindref="compound">SuilHostImpl</ref></type>
        <definition>typedef struct SuilHostImpl SuilHost</definition>
        <argsstring></argsstring>
        <name>SuilHost</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>UI host descriptor.</para><para>This contains the various functions that a plugin UI may use to communicate with the plugin. It is passed to <ref refid="group__suil_1gaa1efdd8087ff0d275e2d75b6980d30a2" kindref="member">suil_instance_new()</ref> to provide these functions to the UI. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" line="69" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__suil_1ga767e978a8c5f7c0d5246da79c9b97c6b" prot="public" static="no">
        <type>struct <ref refid="struct_suil_instance_impl" kindref="compound">SuilInstanceImpl</ref></type>
        <definition>typedef struct SuilInstanceImpl SuilInstance</definition>
        <argsstring></argsstring>
        <name>SuilInstance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An instance of an LV2 plugin UI. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" line="69" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__suil_1gac9633f3ec108da4fb7ad0b64796f66fa" prot="public" static="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>typedef void* SuilHandle</definition>
        <argsstring></argsstring>
        <name>SuilHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opaque pointer to a UI handle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" line="79" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__suil_1ga11e97b978f15e8b4273f3bc59265458f" prot="public" static="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>typedef void* SuilWidget</definition>
        <argsstring></argsstring>
        <name>SuilWidget</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opaque pointer to a UI widget. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" line="82" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__suil_1gad056063f5a1fafbb2ae1354edf16c21a" prot="public" static="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>typedef void* SuilController</definition>
        <argsstring></argsstring>
        <name>SuilController</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>UI controller.</para><para>This is an opaque pointer passed by the user which is passed to the various UI control functions (e.g. SuilPortWriteFunc). It is typically used to pass a pointer to some controller object the host uses to communicate with plugins. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" line="92" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__suil_1ga2da768960d0b91c1515288387f4e5582" prot="public" static="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>(*</type>
        <definition>typedef void(* SuilPortWriteFunc) (SuilController controller, uint32_t port_index, uint32_t buffer_size, uint32_t protocol, void const *buffer)</definition>
        <argsstring>)(SuilController controller, uint32_t port_index, uint32_t buffer_size, uint32_t protocol, void const *buffer)</argsstring>
        <name>SuilPortWriteFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_function" kindref="compound">Function</ref> to write/send a value to a port. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" line="95" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__suil_1ga94e7dc09d4747a1d40f69ff4bef1e242" prot="public" static="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref>(*</type>
        <definition>typedef uint32_t(* SuilPortIndexFunc) (SuilController controller, const char *port_symbol)</definition>
        <argsstring>)(SuilController controller, const char *port_symbol)</argsstring>
        <name>SuilPortIndexFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_function" kindref="compound">Function</ref> to return the index for a port by symbol. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" line="103" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__suil_1gab178a917cd59601d1c54121638dc8a3a" prot="public" static="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref>(*</type>
        <definition>typedef uint32_t(* SuilPortSubscribeFunc) (SuilController controller, uint32_t port_index, uint32_t protocol, const LV2_Feature *const *features)</definition>
        <argsstring>)(SuilController controller, uint32_t port_index, uint32_t protocol, const LV2_Feature *const *features)</argsstring>
        <name>SuilPortSubscribeFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_function" kindref="compound">Function</ref> to subscribe to notifications for a port. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" line="108" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__suil_1gaa38ef1f02fde6358c58b5c533b916797" prot="public" static="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref>(*</type>
        <definition>typedef uint32_t(* SuilPortUnsubscribeFunc) (SuilController controller, uint32_t port_index, uint32_t protocol, const LV2_Feature *const *features)</definition>
        <argsstring>)(SuilController controller, uint32_t port_index, uint32_t protocol, const LV2_Feature *const *features)</argsstring>
        <name>SuilPortUnsubscribeFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_function" kindref="compound">Function</ref> to unsubscribe from notifications for a port. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" line="115" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__suil_1gaf64d2d3854b4fbe2de355407e5899aeb" prot="public" static="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>(*</type>
        <definition>typedef void(* SuilTouchFunc) (SuilController controller, uint32_t port_index, bool grabbed)</definition>
        <argsstring>)(SuilController controller, uint32_t port_index, bool grabbed)</argsstring>
        <name>SuilTouchFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_function" kindref="compound">Function</ref> called when a control is grabbed or released. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" line="122" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__suil_1ga340293f89dd2317c673b85961f069c13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="suil_8h_1a471ed687e8f67356d9926abaa1b9e2eb" kindref="member">SUIL_API</ref> <ref refid="group__suil_1gac10e100afa94a434461386b79528c00c" kindref="member">SuilHost</ref> *</type>
        <definition>SUIL_API SuilHost* suil_host_new</definition>
        <argsstring>(SuilPortWriteFunc write_func, SuilPortIndexFunc index_func, SuilPortSubscribeFunc subscribe_func, SuilPortUnsubscribeFunc unsubscribe_func)</argsstring>
        <name>suil_host_new</name>
        <param>
          <type><ref refid="group__suil_1ga2da768960d0b91c1515288387f4e5582" kindref="member">SuilPortWriteFunc</ref></type>
          <declname>write_func</declname>
        </param>
        <param>
          <type><ref refid="group__suil_1ga94e7dc09d4747a1d40f69ff4bef1e242" kindref="member">SuilPortIndexFunc</ref></type>
          <declname>index_func</declname>
        </param>
        <param>
          <type><ref refid="group__suil_1gab178a917cd59601d1c54121638dc8a3a" kindref="member">SuilPortSubscribeFunc</ref></type>
          <declname>subscribe_func</declname>
        </param>
        <param>
          <type><ref refid="group__suil_1gaa38ef1f02fde6358c58b5c533b916797" kindref="member">SuilPortUnsubscribeFunc</ref></type>
          <declname>unsubscribe_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new UI host descriptor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>write_func</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_function" kindref="compound">Function</ref> to send a value to a plugin port. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index_func</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_function" kindref="compound">Function</ref> to get the index for a port by symbol. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subscribe_func</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_function" kindref="compound">Function</ref> to subscribe to port updates. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unsubscribe_func</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_function" kindref="compound">Function</ref> to unsubscribe from port updates. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" line="136" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/src/host.c" bodystart="21" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="group__suil_1ga6b8b669476988086e5a58243500ee8b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="suil_8h_1a471ed687e8f67356d9926abaa1b9e2eb" kindref="member">SUIL_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SUIL_API void suil_host_set_touch_func</definition>
        <argsstring>(SuilHost *host, SuilTouchFunc touch_func)</argsstring>
        <name>suil_host_set_touch_func</name>
        <param>
          <type><ref refid="group__suil_1gac10e100afa94a434461386b79528c00c" kindref="member">SuilHost</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type><ref refid="group__suil_1gaf64d2d3854b4fbe2de355407e5899aeb" kindref="member">SuilTouchFunc</ref></type>
          <declname>touch_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a touch function for a host descriptor.</para><para>Note this function will only be called if the UI supports it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" line="148" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/src/host.c" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="group__suil_1ga8c26998668de1e134c1bcba72b3eede2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="suil_8h_1a471ed687e8f67356d9926abaa1b9e2eb" kindref="member">SUIL_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SUIL_API void suil_host_free</definition>
        <argsstring>(SuilHost *host)</argsstring>
        <name>suil_host_free</name>
        <param>
          <type><ref refid="group__suil_1gac10e100afa94a434461386b79528c00c" kindref="member">SuilHost</ref> *</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free <computeroutput>host</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" line="156" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/src/host.c" bodystart="46" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="group__suil_1gaf5add06fb50f1ba582552f6f15db403c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="suil_8h_1a471ed687e8f67356d9926abaa1b9e2eb" kindref="member">SUIL_API</ref> unsigned</type>
        <definition>SUIL_API unsigned suil_ui_supported</definition>
        <argsstring>(const char *host_type_uri, const char *ui_type_uri)</argsstring>
        <name>suil_ui_supported</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>host_type_uri</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>ui_type_uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if suil can wrap a UI type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>host_type_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The URI of the desired widget type of the host, corresponding to the <computeroutput>type_uri</computeroutput> parameter of <ref refid="group__suil_1gaa1efdd8087ff0d275e2d75b6980d30a2" kindref="member">suil_instance_new()</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ui_type_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The URI of the UI widget type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if wrapping is unsupported, otherwise the quality of the wrapping where 1 is the highest quality (direct native embedding with no wrapping) and increasing values are of a progressively lower quality and/or stability. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" line="169" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/src/suil_instance.c" bodystart="32" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="group__suil_1gaa1efdd8087ff0d275e2d75b6980d30a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="suil_8h_1a471ed687e8f67356d9926abaa1b9e2eb" kindref="member">SUIL_API</ref> <ref refid="group__suil_1ga767e978a8c5f7c0d5246da79c9b97c6b" kindref="member">SuilInstance</ref> *</type>
        <definition>SUIL_API SuilInstance* suil_instance_new</definition>
        <argsstring>(SuilHost *host, SuilController controller, const char *container_type_uri, const char *plugin_uri, const char *ui_uri, const char *ui_type_uri, const char *ui_bundle_path, const char *ui_binary_path, const LV2_Feature *const *features)</argsstring>
        <name>suil_instance_new</name>
        <param>
          <type><ref refid="group__suil_1gac10e100afa94a434461386b79528c00c" kindref="member">SuilHost</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type><ref refid="group__suil_1gad056063f5a1fafbb2ae1354edf16c21a" kindref="member">SuilController</ref></type>
          <declname>controller</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>container_type_uri</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>plugin_uri</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>ui_uri</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>ui_type_uri</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>ui_bundle_path</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>ui_binary_path</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lv2_8h_1a78d13b607443404459db283371723234" kindref="member">LV2_Feature</ref> *<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>features</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Instantiate a UI for an LV2 plugin.</para><para>This funcion may load a suil module to adapt the UI to the desired toolkit. Suil is configured at compile time to load modules from the appropriate place, but this can be changed at run-time via the environment variable SUIL_MODULE_DIR. This makes it possible to bundle suil with an application.</para><para>Note that some situations (Gtk in Qt, Windows in Gtk) require a parent container to be passed as a feature with URI LV2_UI__parent (<ulink url="http://lv2plug.in/ns/extensions/ui#ui">http://lv2plug.in/ns/extensions/ui#ui</ulink>) in order to work correctly. The data must point to a single child container of the host widget set.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host descriptor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque host controller pointer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>container_type_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>URI of the desired host container widget type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plugin_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>URI of the plugin to instantiate this UI for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ui_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>URI of the specifically desired UI. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ui_type_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>URI of the actual UI widget type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ui_bundle_path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path of the UI bundle. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ui_binary_path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path of the UI binary. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>NULL-terminated array of supported features, or NULL. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new UI instance, or NULL if instantiation failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" line="198" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/src/suil_instance.c" bodystart="141" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="group__suil_1ga9d2ccde18cb57b35fe037ed9c479bf5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="suil_8h_1a471ed687e8f67356d9926abaa1b9e2eb" kindref="member">SUIL_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SUIL_API void suil_instance_free</definition>
        <argsstring>(SuilInstance *instance)</argsstring>
        <name>suil_instance_free</name>
        <param>
          <type><ref refid="group__suil_1ga767e978a8c5f7c0d5246da79c9b97c6b" kindref="member">SuilInstance</ref> *</type>
          <declname>instance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free a plugin UI instance.</para><para>The caller must ensure all references to the UI have been dropped before calling this function (e.g. it has been removed from its parent). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" line="216" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/src/suil_instance.c" bodystart="270" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="group__suil_1gad372f72eb96737081682c20597bf03ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="suil_8h_1a471ed687e8f67356d9926abaa1b9e2eb" kindref="member">SUIL_API</ref> <ref refid="group__suil_1gac9633f3ec108da4fb7ad0b64796f66fa" kindref="member">SuilHandle</ref></type>
        <definition>SUIL_API SuilHandle suil_instance_get_handle</definition>
        <argsstring>(SuilInstance *instance)</argsstring>
        <name>suil_instance_get_handle</name>
        <param>
          <type><ref refid="group__suil_1ga767e978a8c5f7c0d5246da79c9b97c6b" kindref="member">SuilInstance</ref> *</type>
          <declname>instance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the handle for a UI instance.</para><para>Returns the handle to the UI instance. The returned handle has opaque type to insulate the Suil API from LV2 extensions, but in pactice it is currently of type <computeroutput>LV2UI_Handle</computeroutput>. This should not normally be needed.</para><para>The returned handle is shared and must not be deleted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" line="229" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/src/suil_instance.c" bodystart="300" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="group__suil_1ga8cd6fe8e9345defa65bbe760d3a03bb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="suil_8h_1a471ed687e8f67356d9926abaa1b9e2eb" kindref="member">SUIL_API</ref> <ref refid="group__suil_1ga11e97b978f15e8b4273f3bc59265458f" kindref="member">SuilWidget</ref></type>
        <definition>SUIL_API SuilWidget suil_instance_get_widget</definition>
        <argsstring>(SuilInstance *instance)</argsstring>
        <name>suil_instance_get_widget</name>
        <param>
          <type><ref refid="group__suil_1ga767e978a8c5f7c0d5246da79c9b97c6b" kindref="member">SuilInstance</ref> *</type>
          <declname>instance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the widget for a UI instance.</para><para>Returns an opaque pointer to a widget, the type of which matches the <computeroutput>container_type_uri</computeroutput> parameter of <ref refid="group__suil_1gaa1efdd8087ff0d275e2d75b6980d30a2" kindref="member">suil_instance_new()</ref>. Note this may be a wrapper widget created by Suil, and not necessarily the widget directly implemented by the UI. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" line="241" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/src/suil_instance.c" bodystart="307" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="group__suil_1gad7f7a12bc8e9c329603127d922f1ed09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="suil_8h_1a471ed687e8f67356d9926abaa1b9e2eb" kindref="member">SUIL_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SUIL_API void suil_instance_port_event</definition>
        <argsstring>(SuilInstance *instance, uint32_t port_index, uint32_t buffer_size, uint32_t format, const void *buffer)</argsstring>
        <name>suil_instance_port_event</name>
        <param>
          <type><ref refid="group__suil_1ga767e978a8c5f7c0d5246da79c9b97c6b" kindref="member">SuilInstance</ref> *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>port_index</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>buffer_size</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Notify the UI about a change in a plugin port. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>instance</parametername>
</parameternamelist>
<parameterdescription>
<para>UI instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the port which has changed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of <computeroutput>buffer</computeroutput> in bytes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_format" kindref="compound">Format</ref> of <computeroutput>buffer</computeroutput> (mapped URI, or 0 for float). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Change data, e.g. the new port value.</para></parameterdescription>
</parameteritem>
</parameterlist>
This function can be used to notify the UI about any port change, but in the simplest case is used to set the value of lv2:ControlPort ports. For simplicity, this is a special case where <computeroutput>format</computeroutput> is 0, <computeroutput>buffer_size</computeroutput> is 4, and <computeroutput>buffer</computeroutput> should point to a single float.</para><para>The <computeroutput>buffer</computeroutput> must be valid only for the duration of this call, the UI must not keep a reference to it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" line="261" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/src/suil_instance.c" bodystart="314" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="group__suil_1ga7edf0fffbe14840d78c27a8b06a612c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="suil_8h_1a471ed687e8f67356d9926abaa1b9e2eb" kindref="member">SUIL_API</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>SUIL_API const void* suil_instance_extension_data</definition>
        <argsstring>(SuilInstance *instance, const char *uri)</argsstring>
        <name>suil_instance_extension_data</name>
        <param>
          <type><ref refid="group__suil_1ga767e978a8c5f7c0d5246da79c9b97c6b" kindref="member">SuilInstance</ref> *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a data structure defined by some LV2 extension URI. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/suil/suil.h" line="272" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/src/suil_instance.c" bodystart="331" bodyend="338"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Suil is a library for loading and wrapping LV2 plugin UIs. With Suil, a host written in one supported toolkit can embed a plugin UI written in a different supported toolkit. Suil insulates hosts from toolkit libraries used by plugin UIs. For example, a Gtk host can embed a Qt UI without linking against Qt at compile time.</para><para>Visit <ulink url="http://drobilla.net/software/suil">http://drobilla.net/software/suil</ulink> for more information. </para>    </detaileddescription>
  </compounddef>
</doxygen>
