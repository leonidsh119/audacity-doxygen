<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="struct_pa_util_host_api_representation" kind="struct" language="C++" prot="public">
    <compoundname>PaUtilHostApiRepresentation</compoundname>
    <includes refid="pa__hostapi_8h" local="no">pa_hostapi.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_pa_util_host_api_representation_1a5bef19eb1f47b8b5153d5f2fb76699eb" prot="public" static="no" mutable="no">
        <type><ref refid="struct_pa_util_private_pa_front_host_api_info" kindref="compound">PaUtilPrivatePaFrontHostApiInfo</ref></type>
        <definition>PaUtilPrivatePaFrontHostApiInfo PaUtilHostApiRepresentation::privatePaFrontInfo</definition>
        <argsstring></argsstring>
        <name>privatePaFrontInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_hostapi.h" line="195" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_hostapi.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_pa_util_host_api_representation_1a9c443aa6cf07d3c46167a91b274a9e94" prot="public" static="no" mutable="no">
        <type><ref refid="struct_pa_host_api_info" kindref="compound">PaHostApiInfo</ref></type>
        <definition>PaHostApiInfo PaUtilHostApiRepresentation::info</definition>
        <argsstring></argsstring>
        <name>info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The host api implementation should populate the info field. In the case of info.defaultInputDevice and info.defaultOutputDevice the values stored should be 0 based indices within the host api&apos;s own device index range (0 to deviceCount). These values will be converted to global device indices by pa_front after <ref refid="pa__hostapi_8h_1ab0c89969a0c6107e7bf8e8f96adaa72d" kindref="member">PaUtilHostApiInitializer()</ref> returns. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_hostapi.h" line="204" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_hostapi.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_pa_util_host_api_representation_1a48dcfdf57e6d12d33314929ac213ae28" prot="public" static="no" mutable="no">
        <type><ref refid="struct_pa_device_info" kindref="compound">PaDeviceInfo</ref> **</type>
        <definition>PaDeviceInfo** PaUtilHostApiRepresentation::deviceInfos</definition>
        <argsstring></argsstring>
        <name>deviceInfos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_hostapi.h" line="206" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_hostapi.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_pa_util_host_api_representation_1a832b3f01b9d9a84b5442e27d365f8b9f" prot="public" static="no" mutable="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>(*</type>
        <definition>void(* PaUtilHostApiRepresentation::Terminate) (struct PaUtilHostApiRepresentation *hostApi)</definition>
        <argsstring>)(struct PaUtilHostApiRepresentation *hostApi)</argsstring>
        <name>Terminate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>(*Terminate)() is guaranteed to be called with a valid &lt;hostApi&gt; parameter, which was previously returned from the same implementation&apos;s initializer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_hostapi.h" line="213" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_hostapi.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_pa_util_host_api_representation_1aa415b57fadf39a49d6bc5740f06089e4" prot="public" static="no" mutable="no">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref>(*</type>
        <definition>PaError(* PaUtilHostApiRepresentation::OpenStream) (struct PaUtilHostApiRepresentation *hostApi, PaStream **stream, const PaStreamParameters *inputParameters, const PaStreamParameters *outputParameters, double sampleRate, unsigned long framesPerCallback, PaStreamFlags streamFlags, PaStreamCallback *streamCallback, void *userData)</definition>
        <argsstring>)(struct PaUtilHostApiRepresentation *hostApi, PaStream **stream, const PaStreamParameters *inputParameters, const PaStreamParameters *outputParameters, double sampleRate, unsigned long framesPerCallback, PaStreamFlags streamFlags, PaStreamCallback *streamCallback, void *userData)</argsstring>
        <name>OpenStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The inputParameters and outputParameters pointers should not be saved as they will not remain valid after OpenStream is called.</para><para>The following guarantees are made about parameters to (*OpenStream)(): <verbatim>[NOTE: the following list up to *END PA FRONT VALIDATIONS* should be
    kept in sync with the one for ValidateOpenStreamParameters and
    Pa_OpenStream in pa_front.c]

PaHostApiRepresentation *hostApi
    - is valid for this implementation

PaStream** stream
    - is non-null

- at least one of inputParameters &amp; outputParmeters is valid (not NULL)

- if inputParameters &amp; outputParmeters are both valid, that
    inputParameters-&gt;device &amp; outputParmeters-&gt;device  both use the same host api

PaDeviceIndex inputParameters-&gt;device
    - is within range (0 to Pa_CountDevices-1) Or:
    - is paUseHostApiSpecificDeviceSpecification and
        inputParameters-&gt;hostApiSpecificStreamInfo is non-NULL and refers
        to a valid host api

int inputParameters-&gt;numChannels
    - if inputParameters-&gt;device is not paUseHostApiSpecificDeviceSpecification, numInputChannels is &gt; 0
    - upper bound is NOT validated against device capabilities

PaSampleFormat inputParameters-&gt;sampleFormat
    - is one of the sample formats defined in portaudio.h

void *inputParameters-&gt;hostApiSpecificStreamInfo
    - if supplied its hostApi field matches the input device&apos;s host Api

PaDeviceIndex outputParmeters-&gt;device
    - is within range (0 to Pa_CountDevices-1)

int outputParmeters-&gt;numChannels
    - if inputDevice is valid, numInputChannels is &gt; 0
    - upper bound is NOT validated against device capabilities

PaSampleFormat outputParmeters-&gt;sampleFormat
    - is one of the sample formats defined in portaudio.h

void *outputParmeters-&gt;hostApiSpecificStreamInfo
    - if supplied its hostApi field matches the output device&apos;s host Api

double sampleRate
    - is not an &apos;absurd&apos; rate (less than 1000. or greater than 384000.)
    - sampleRate is NOT validated against device capabilities

PaStreamFlags streamFlags
    - unused platform neutral flags are zero
    - paNeverDropInput is only used for full-duplex callback streams
        with variable buffer size (paFramesPerBufferUnspecified)

[*END PA FRONT VALIDATIONS*]
</verbatim></para><para>The following validations MUST be performed by (*OpenStream)(): <verbatim>- check that input device can support numInputChannels

- check that input device can support inputSampleFormat, or that
    we have the capability to convert from outputSampleFormat to
    a native format

- if inputStreamInfo is supplied, validate its contents,
    or return an error if no inputStreamInfo is expected

- check that output device can support numOutputChannels

- check that output device can support outputSampleFormat, or that
    we have the capability to convert from outputSampleFormat to
    a native format

- if outputStreamInfo is supplied, validate its contents,
    or return an error if no outputStreamInfo is expected

- if a full duplex stream is requested, check that the combination
    of input and output parameters is supported

- check that the device supports sampleRate

- alter sampleRate to a close allowable rate if necessary

- validate inputLatency and outputLatency

- validate any platform specific flags, if flags are supplied they
    must be valid.</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_hostapi.h" line="310" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_hostapi.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_pa_util_host_api_representation_1a54205572c891d43272de45be0994c377" prot="public" static="no" mutable="no">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref>(*</type>
        <definition>PaError(* PaUtilHostApiRepresentation::IsFormatSupported) (struct PaUtilHostApiRepresentation *hostApi, const PaStreamParameters *inputParameters, const PaStreamParameters *outputParameters, double sampleRate)</definition>
        <argsstring>)(struct PaUtilHostApiRepresentation *hostApi, const PaStreamParameters *inputParameters, const PaStreamParameters *outputParameters, double sampleRate)</argsstring>
        <name>IsFormatSupported</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_hostapi.h" line="321" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_hostapi.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A structure representing the interface to a host API. Contains both concrete data and pointers to functions which implement the interface. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="8541">
        <label>PaUtilHostApiRepresentation</label>
        <link refid="struct_pa_util_host_api_representation"/>
        <childnode refid="8542" relation="usage">
          <edgelabel>privatePaFrontInfo</edgelabel>
        </childnode>
        <childnode refid="8543" relation="usage">
          <edgelabel>deviceInfos</edgelabel>
        </childnode>
        <childnode refid="8544" relation="usage">
          <edgelabel>info</edgelabel>
        </childnode>
      </node>
      <node id="8544">
        <label>PaHostApiInfo</label>
        <link refid="struct_pa_host_api_info"/>
      </node>
      <node id="8543">
        <label>PaDeviceInfo</label>
        <link refid="struct_pa_device_info"/>
      </node>
      <node id="8542">
        <label>PaUtilPrivatePaFrontHostApiInfo</label>
        <link refid="struct_pa_util_private_pa_front_host_api_info"/>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_hostapi.h" line="194" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_hostapi.h" bodystart="194" bodyend="325"/>
    <listofallmembers>
      <member refid="struct_pa_util_host_api_representation_1a48dcfdf57e6d12d33314929ac213ae28" prot="public" virt="non-virtual"><scope>PaUtilHostApiRepresentation</scope><name>deviceInfos</name></member>
      <member refid="struct_pa_util_host_api_representation_1a9c443aa6cf07d3c46167a91b274a9e94" prot="public" virt="non-virtual"><scope>PaUtilHostApiRepresentation</scope><name>info</name></member>
      <member refid="struct_pa_util_host_api_representation_1a54205572c891d43272de45be0994c377" prot="public" virt="non-virtual"><scope>PaUtilHostApiRepresentation</scope><name>IsFormatSupported</name></member>
      <member refid="struct_pa_util_host_api_representation_1aa415b57fadf39a49d6bc5740f06089e4" prot="public" virt="non-virtual"><scope>PaUtilHostApiRepresentation</scope><name>OpenStream</name></member>
      <member refid="struct_pa_util_host_api_representation_1a5bef19eb1f47b8b5153d5f2fb76699eb" prot="public" virt="non-virtual"><scope>PaUtilHostApiRepresentation</scope><name>privatePaFrontInfo</name></member>
      <member refid="struct_pa_util_host_api_representation_1a832b3f01b9d9a84b5442e27d365f8b9f" prot="public" virt="non-virtual"><scope>PaUtilHostApiRepresentation</scope><name>Terminate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
