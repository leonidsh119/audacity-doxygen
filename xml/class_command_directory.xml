<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_command_directory" kind="class" language="C++" prot="public">
    <compoundname>CommandDirectory</compoundname>
    <includes refid="_command_directory_8h" local="no">CommandDirectory.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_command_directory_1a5593456c3f6e2cb049e974bad2e979d3" prot="private" static="yes" mutable="no">
        <type><ref refid="class_command_directory" kindref="compound">CommandDirectory</ref> *</type>
        <definition>CommandDirectory * CommandDirectory::mInstance</definition>
        <argsstring></argsstring>
        <name>mInstance</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/commands/CommandDirectory.h" line="35" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/commands/CommandDirectory.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_command_directory_1a4015df636e51d7d4678c9d5771c82c3c" prot="private" static="no" mutable="no">
        <type><ref refid="_command_misc_8h_1ab014fe62ba019a37da7364274d2fed22" kindref="member">CommandMap</ref></type>
        <definition>CommandMap CommandDirectory::mCmdMap</definition>
        <argsstring></argsstring>
        <name>mCmdMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/commands/CommandDirectory.h" line="36" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/commands/CommandDirectory.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_command_directory_1a26112149054feb4f81c60be03468a4b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CommandDirectory::CommandDirectory</definition>
        <argsstring>()</argsstring>
        <name>CommandDirectory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/commands/CommandDirectory.h" line="38" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/commands/CommandDirectory.cpp" bodystart="37" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_command_directory_1a37740cce2e9c1201a2650d19b10c75dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CommandDirectory::~CommandDirectory</definition>
        <argsstring>()</argsstring>
        <name>~CommandDirectory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/commands/CommandDirectory.h" line="39" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/commands/CommandDirectory.cpp" bodystart="66" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_command_directory_1a1e07e146ccfa51b9011084e8a467b385" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_command_type" kindref="compound">CommandType</ref> *</type>
        <definition>CommandType * CommandDirectory::LookUp</definition>
        <argsstring>(const wxString &amp;cmdName) const </argsstring>
        <name>LookUp</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> wxString &amp;</type>
          <declname>cmdName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If a command with the given name has been registered in the directory, return a pointer to the factory for commands of that type. Otherwise return NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/commands/CommandDirectory.h" line="44" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/commands/CommandDirectory.cpp" bodystart="76" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_command_directory_1af3d3f4de666a03fa5fd76c0435fa6bab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void CommandDirectory::AddCommand</definition>
        <argsstring>(CommandType *type)</argsstring>
        <name>AddCommand</name>
        <param>
          <type><ref refid="class_command_type" kindref="compound">CommandType</ref> *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Register a type of command with the directory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/commands/CommandDirectory.h" line="47" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/commands/CommandDirectory.cpp" bodystart="86" bodyend="95"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_command_directory_1af75ad5df0389c85cf40f6940cb3219d4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_command_directory" kindref="compound">CommandDirectory</ref> *</type>
        <definition>CommandDirectory * CommandDirectory::Get</definition>
        <argsstring>()</argsstring>
        <name>Get</name>
        <briefdescription>
<para>Get a pointer to the singleton instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/commands/CommandDirectory.h" line="50" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/commands/CommandDirectory.cpp" bodystart="97" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_command_directory_1a8bfa1657f052cd3367a793754d00889f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void CommandDirectory::Destroy</definition>
        <argsstring>()</argsstring>
        <name>Destroy</name>
        <briefdescription>
<para>Manually DELETE the singleton instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/commands/CommandDirectory.h" line="53" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/commands/CommandDirectory.cpp" bodystart="106" bodyend="112"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Allows registration and lookup (by name) of command types. </para>    </briefdescription>
    <detaileddescription>
<para>A singleton. This fulfills a similar purpose to <ref refid="class_command_manager" kindref="compound">CommandManager</ref>, but for general Commands rather than menu items. Eventually they could be unified but for now they are kept separate to make things simpler. </para>    </detaileddescription>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/commands/CommandDirectory.h" line="33" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/commands/CommandDirectory.h" bodystart="32" bodyend="54"/>
    <listofallmembers>
      <member refid="class_command_directory_1af3d3f4de666a03fa5fd76c0435fa6bab" prot="public" virt="non-virtual"><scope>CommandDirectory</scope><name>AddCommand</name></member>
      <member refid="class_command_directory_1a26112149054feb4f81c60be03468a4b4" prot="public" virt="non-virtual"><scope>CommandDirectory</scope><name>CommandDirectory</name></member>
      <member refid="class_command_directory_1a8bfa1657f052cd3367a793754d00889f" prot="public" virt="non-virtual"><scope>CommandDirectory</scope><name>Destroy</name></member>
      <member refid="class_command_directory_1af75ad5df0389c85cf40f6940cb3219d4" prot="public" virt="non-virtual"><scope>CommandDirectory</scope><name>Get</name></member>
      <member refid="class_command_directory_1a1e07e146ccfa51b9011084e8a467b385" prot="public" virt="non-virtual"><scope>CommandDirectory</scope><name>LookUp</name></member>
      <member refid="class_command_directory_1a4015df636e51d7d4678c9d5771c82c3c" prot="private" virt="non-virtual"><scope>CommandDirectory</scope><name>mCmdMap</name></member>
      <member refid="class_command_directory_1a5593456c3f6e2cb049e974bad2e979d3" prot="private" virt="non-virtual"><scope>CommandDirectory</scope><name>mInstance</name></member>
      <member refid="class_command_directory_1a37740cce2e9c1201a2650d19b10c75dc" prot="public" virt="non-virtual"><scope>CommandDirectory</scope><name>~CommandDirectory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
