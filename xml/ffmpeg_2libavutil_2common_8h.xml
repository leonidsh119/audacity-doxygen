<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="ffmpeg_2libavutil_2common_8h" kind="file" language="C++">
    <compoundname>common.h</compoundname>
    <includes local="no">errno.h</includes>
    <includes local="no">inttypes.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="attributes_8h" local="yes">attributes.h</includes>
    <includes refid="ffmpeg_2libavutil_2version_8h" local="yes">version.h</includes>
    <includes refid="avconfig_8h" local="yes">libavutil/avconfig.h</includes>
    <includes refid="ffmpeg_2libavutil_2common_8h" local="yes">common.h</includes>
    <includes refid="ffmpeg_2libavutil_2mem_8h" local="yes">mem.h</includes>
    <includedby refid="old__codec__ids_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/old_codec_ids.h</includedby>
    <includedby refid="avio_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h</includedby>
    <includedby refid="avutil_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/avutil.h</includedby>
    <includedby refid="ffmpeg_2libavutil_2common_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h</includedby>
    <includedby refid="timestamp_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/timestamp.h</includedby>
    <incdepgraph>
      <node id="3474">
        <label>mathematics.h</label>
        <link refid="mathematics_8h"/>
        <childnode refid="3462" relation="include">
        </childnode>
        <childnode refid="3461" relation="include">
        </childnode>
        <childnode refid="3466" relation="include">
        </childnode>
        <childnode refid="3475" relation="include">
        </childnode>
        <childnode refid="3476" relation="include">
        </childnode>
      </node>
      <node id="3475">
        <label>rational.h</label>
        <link refid="rational_8h"/>
        <childnode refid="3462" relation="include">
        </childnode>
        <childnode refid="3460" relation="include">
        </childnode>
        <childnode refid="3466" relation="include">
        </childnode>
      </node>
      <node id="3478">
        <label>stdarg.h</label>
      </node>
      <node id="3466">
        <label>attributes.h</label>
        <link refid="attributes_8h"/>
      </node>
      <node id="3473">
        <label>avutil.h</label>
        <link refid="avutil_8h"/>
        <childnode refid="3457" relation="include">
        </childnode>
        <childnode refid="3471" relation="include">
        </childnode>
        <childnode refid="3467" relation="include">
        </childnode>
        <childnode refid="3468" relation="include">
        </childnode>
        <childnode refid="3474" relation="include">
        </childnode>
        <childnode refid="3475" relation="include">
        </childnode>
        <childnode refid="3477" relation="include">
        </childnode>
        <childnode refid="3479" relation="include">
        </childnode>
      </node>
      <node id="3462">
        <label>stdint.h</label>
      </node>
      <node id="3469">
        <label>libavutil/avconfig.h</label>
        <link refid="avconfig_8h"/>
      </node>
      <node id="3464">
        <label>stdlib.h</label>
      </node>
      <node id="3458">
        <label>errno.h</label>
      </node>
      <node id="3467">
        <label>version.h</label>
        <link refid="ffmpeg_2libavutil_2version_8h"/>
        <childnode refid="3468" relation="include">
        </childnode>
      </node>
      <node id="3472">
        <label>stddef.h</label>
      </node>
      <node id="3460">
        <label>limits.h</label>
      </node>
      <node id="3471">
        <label>error.h</label>
        <link refid="error_8h"/>
        <childnode refid="3458" relation="include">
        </childnode>
        <childnode refid="3472" relation="include">
        </childnode>
      </node>
      <node id="3477">
        <label>log.h</label>
        <link refid="ffmpeg_2libavutil_2log_8h"/>
        <childnode refid="3478" relation="include">
        </childnode>
        <childnode refid="3473" relation="include">
        </childnode>
        <childnode refid="3466" relation="include">
        </childnode>
      </node>
      <node id="3465">
        <label>string.h</label>
      </node>
      <node id="3470">
        <label>mem.h</label>
        <link refid="ffmpeg_2libavutil_2mem_8h"/>
        <childnode refid="3460" relation="include">
        </childnode>
        <childnode refid="3462" relation="include">
        </childnode>
        <childnode refid="3466" relation="include">
        </childnode>
        <childnode refid="3471" relation="include">
        </childnode>
        <childnode refid="3473" relation="include">
        </childnode>
      </node>
      <node id="3476">
        <label>intfloat.h</label>
        <link refid="intfloat_8h"/>
        <childnode refid="3462" relation="include">
        </childnode>
        <childnode refid="3466" relation="include">
        </childnode>
      </node>
      <node id="3480">
        <label>old_pix_fmts.h</label>
        <link refid="old__pix__fmts_8h"/>
      </node>
      <node id="3461">
        <label>math.h</label>
      </node>
      <node id="3468">
        <label>macros.h</label>
        <link refid="ffmpeg_2libavutil_2macros_8h"/>
      </node>
      <node id="3457">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h</label>
        <link refid="ffmpeg/libavutil/common.h"/>
        <childnode refid="3458" relation="include">
        </childnode>
        <childnode refid="3459" relation="include">
        </childnode>
        <childnode refid="3460" relation="include">
        </childnode>
        <childnode refid="3461" relation="include">
        </childnode>
        <childnode refid="3462" relation="include">
        </childnode>
        <childnode refid="3463" relation="include">
        </childnode>
        <childnode refid="3464" relation="include">
        </childnode>
        <childnode refid="3465" relation="include">
        </childnode>
        <childnode refid="3466" relation="include">
        </childnode>
        <childnode refid="3467" relation="include">
        </childnode>
        <childnode refid="3469" relation="include">
        </childnode>
        <childnode refid="3457" relation="include">
        </childnode>
        <childnode refid="3470" relation="include">
        </childnode>
      </node>
      <node id="3463">
        <label>stdio.h</label>
      </node>
      <node id="3479">
        <label>pixfmt.h</label>
        <link refid="pixfmt_8h"/>
        <childnode refid="3469" relation="include">
        </childnode>
        <childnode refid="3467" relation="include">
        </childnode>
        <childnode refid="3480" relation="include">
        </childnode>
      </node>
      <node id="3459">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3488">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/avutil.h</label>
        <link refid="avutil_8h"/>
        <childnode refid="3483" relation="include">
        </childnode>
        <childnode refid="3489" relation="include">
        </childnode>
        <childnode refid="3490" relation="include">
        </childnode>
        <childnode refid="3491" relation="include">
        </childnode>
        <childnode refid="3494" relation="include">
        </childnode>
        <childnode refid="3495" relation="include">
        </childnode>
        <childnode refid="3492" relation="include">
        </childnode>
        <childnode refid="3496" relation="include">
        </childnode>
        <childnode refid="3499" relation="include">
        </childnode>
        <childnode refid="3500" relation="include">
        </childnode>
        <childnode refid="3501" relation="include">
        </childnode>
        <childnode refid="3493" relation="include">
        </childnode>
      </node>
      <node id="3500">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/file.h</label>
        <link refid="ffmpeg_2libavutil_2file_8h"/>
      </node>
      <node id="3497">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/downmix_info.h</label>
        <link refid="downmix__info_8h"/>
      </node>
      <node id="3489">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/audio_fifo.h</label>
        <link refid="audio__fifo_8h"/>
      </node>
      <node id="3496">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h</label>
        <link refid="ffmpeg_2libavutil_2frame_8h"/>
        <childnode refid="3483" relation="include">
        </childnode>
        <childnode refid="3497" relation="include">
        </childnode>
        <childnode refid="3498" relation="include">
        </childnode>
      </node>
      <node id="3485">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/xvmc.h</label>
        <link refid="xvmc_8h"/>
      </node>
      <node id="3484">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/vdpau.h</label>
        <link refid="vdpau_8h"/>
      </node>
      <node id="3499">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/eval.h</label>
        <link refid="eval_8h"/>
      </node>
      <node id="3494">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/fifo.h</label>
        <link refid="ffmpeg_2libavutil_2fifo_8h"/>
        <childnode refid="3489" relation="include">
        </childnode>
      </node>
      <node id="3482">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/old_codec_ids.h</label>
        <link refid="old__codec__ids_8h"/>
        <childnode refid="3483" relation="include">
        </childnode>
      </node>
      <node id="3491">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/log.h</label>
        <link refid="ffmpeg_2libavutil_2log_8h"/>
        <childnode refid="3483" relation="include">
        </childnode>
        <childnode refid="3486" relation="include">
        </childnode>
        <childnode refid="3487" relation="include">
        </childnode>
        <childnode refid="3488" relation="include">
        </childnode>
        <childnode refid="3492" relation="include">
        </childnode>
        <childnode refid="3493" relation="include">
        </childnode>
      </node>
      <node id="3490">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/mem.h</label>
        <link refid="ffmpeg_2libavutil_2mem_8h"/>
        <childnode refid="3483" relation="include">
        </childnode>
        <childnode refid="3481" relation="include">
        </childnode>
      </node>
      <node id="3502">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/timestamp.h</label>
        <link refid="timestamp_8h"/>
      </node>
      <node id="3487">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h</label>
        <link refid="avio_8h"/>
        <childnode refid="3486" relation="include">
        </childnode>
      </node>
      <node id="3495">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/samplefmt.h</label>
        <link refid="samplefmt_8h"/>
        <childnode refid="3483" relation="include">
        </childnode>
        <childnode refid="3489" relation="include">
        </childnode>
        <childnode refid="3496" relation="include">
        </childnode>
        <childnode refid="3493" relation="include">
        </childnode>
      </node>
      <node id="3493">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h</label>
        <link refid="opt_8h"/>
      </node>
      <node id="3492">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/avassert.h</label>
        <link refid="avassert_8h"/>
      </node>
      <node id="3486">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h</label>
        <link refid="avformat_8h"/>
      </node>
      <node id="3481">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h</label>
        <link refid="ffmpeg/libavutil/common.h"/>
        <childnode refid="3482" relation="include">
        </childnode>
        <childnode refid="3487" relation="include">
        </childnode>
        <childnode refid="3488" relation="include">
        </childnode>
        <childnode refid="3481" relation="include">
        </childnode>
        <childnode refid="3502" relation="include">
        </childnode>
      </node>
      <node id="3501">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/imgutils.h</label>
        <link refid="imgutils_8h"/>
      </node>
      <node id="3498">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/stereo3d.h</label>
        <link refid="stereo3d_8h"/>
      </node>
      <node id="3483">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h</label>
        <link refid="avcodec_8h"/>
        <childnode refid="3484" relation="include">
        </childnode>
        <childnode refid="3485" relation="include">
        </childnode>
        <childnode refid="3486" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="ffmpeg_2libavutil_2common_8h_1a309bdca20f6a78431379fc69442d98ea" prot="public" static="no">
        <name>AV_NE</name>
        <param><defname>be</defname></param>
        <param><defname>le</defname></param>
        <initializer>(le)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="49" column="13" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ffmpeg_2libavutil_2common_8h_1aa79ca71ef110a498d8275cbf7aa75a93" prot="public" static="no">
        <name>RSHIFT</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) &gt; 0 ? ((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) + ((1&lt;&lt;(<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>))&gt;&gt;1))&gt;&gt;(<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>) : ((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) + ((1&lt;&lt;(<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>))&gt;&gt;1)-1)&gt;&gt;(<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="53" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ffmpeg_2libavutil_2common_8h_1a7a2a86492a286d6d20678da1dbb00525" prot="public" static="no">
        <name>ROUNDED_DIV</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>(((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)&gt;0 ? (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) + ((<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>)&gt;&gt;1) : (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) - ((<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>)&gt;&gt;1))/(<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="55" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ffmpeg_2libavutil_2common_8h_1a6fa4d4c04620a5112cafd0a86dca9f0a" prot="public" static="no">
        <name>FF_CEIL_RSHIFT</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>(!<ref refid="attributes_8h_1a438e7ed66a9e258ea0d1d1ff0c91e608" kindref="member">av_builtin_constant_p</ref>(<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>) ? -((-(<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)) &gt;&gt; (<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>)) \
                                                       : ((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) + (1&lt;&lt;(<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>)) - 1) &gt;&gt; (<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="57" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ffmpeg_2libavutil_2common_8h_1a5117194af5289224bceaaa5466586d8f" prot="public" static="no">
        <name>FFUDIV</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>(((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)&gt;0 ?(<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>):(<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)-(<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>)+1) / (<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="59" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ffmpeg_2libavutil_2common_8h_1aa0241c1e04e45d7be1b388d83ab57f22" prot="public" static="no">
        <name>FFUMOD</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)-(<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>)*<ref refid="ffmpeg_2libavutil_2common_8h_1a5117194af5289224bceaaa5466586d8f" kindref="member">FFUDIV</ref>(<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>,<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="60" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ffmpeg_2libavutil_2common_8h_1ad6d88940cfc29c13a3e51ded211fc242" prot="public" static="no">
        <name>FFABS</name>
        <param><defname>a</defname></param>
        <initializer>((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) &gt;= 0 ? (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) : (-(<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="61" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ffmpeg_2libavutil_2common_8h_1af5e4ff7761996bc901e59bd59756268d" prot="public" static="no">
        <name>FFSIGN</name>
        <param><defname>a</defname></param>
        <initializer>((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) &gt; 0 ? 1 : -1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="62" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ffmpeg_2libavutil_2common_8h_1a9960bd6780a9b16a216a57be1ee04359" prot="public" static="no">
        <name>FFMAX</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) &gt; (<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>) ? (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) : (<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="64" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ffmpeg_2libavutil_2common_8h_1a013fdaa079045ec5632fe121e211e516" prot="public" static="no">
        <name>FFMAX3</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer><ref refid="ffmpeg_2libavutil_2common_8h_1a9960bd6780a9b16a216a57be1ee04359" kindref="member">FFMAX</ref>(<ref refid="ffmpeg_2libavutil_2common_8h_1a9960bd6780a9b16a216a57be1ee04359" kindref="member">FFMAX</ref>(<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>,<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>),<ref refid="rfft2d_test_m_l_8m_1ae0323a9039add2978bf5b49550572c7c" kindref="member">c</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="65" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ffmpeg_2libavutil_2common_8h_1a0f84cbd7fd810cd678157c98cbfad4b0" prot="public" static="no">
        <name>FFMIN</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) &gt; (<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>) ? (<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>) : (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="66" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ffmpeg_2libavutil_2common_8h_1af6afbffa12562b076c34055bdcb3ad65" prot="public" static="no">
        <name>FFMIN3</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer><ref refid="ffmpeg_2libavutil_2common_8h_1a0f84cbd7fd810cd678157c98cbfad4b0" kindref="member">FFMIN</ref>(<ref refid="ffmpeg_2libavutil_2common_8h_1a0f84cbd7fd810cd678157c98cbfad4b0" kindref="member">FFMIN</ref>(<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>,<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>),<ref refid="rfft2d_test_m_l_8m_1ae0323a9039add2978bf5b49550572c7c" kindref="member">c</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="67" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ffmpeg_2libavutil_2common_8h_1a09a0bb7d8fcfac416de7a5fe7fd8b0f1" prot="public" static="no">
        <name>FFSWAP</name>
        <param><defname>type</defname></param>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>do{type SWAP_tmp= <ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>; <ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>= <ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>; <ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>= SWAP_tmp;}while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="69" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ffmpeg_2libavutil_2common_8h_1a3508a98d3ee7e2c9a4841fe264cf70f7" prot="public" static="no">
        <name>FF_ARRAY_ELEMS</name>
        <param><defname>a</defname></param>
        <initializer>(sizeof(<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) / sizeof((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)[0]))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="70" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ffmpeg_2libavutil_2common_8h_1acae4ba605b3a7d535b7ac058ffe96892" prot="public" static="no">
        <name>FFALIGN</name>
        <param><defname>x</defname></param>
        <param><defname>a</defname></param>
        <initializer>(((x)+(<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)-1)&amp;~((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)-1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="71" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ffmpeg_2libavutil_2common_8h_1a19c68e2b5efcbab914d79db1e4fee734" prot="public" static="no">
        <name>MKTAG</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <param><defname>d</defname></param>
        <initializer>((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) | ((<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>) &lt;&lt; 8) | ((<ref refid="rfft2d_test_m_l_8m_1ae0323a9039add2978bf5b49550572c7c" kindref="member">c</ref>) &lt;&lt; 16) | ((unsigned)(<ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>) &lt;&lt; 24))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="290" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ffmpeg_2libavutil_2common_8h_1a1e233db224cd0a3079fd4572d1a3d717" prot="public" static="no">
        <name>MKBETAG</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <param><defname>d</defname></param>
        <initializer>((<ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>) | ((<ref refid="rfft2d_test_m_l_8m_1ae0323a9039add2978bf5b49550572c7c" kindref="member">c</ref>) &lt;&lt; 8) | ((<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>) &lt;&lt; 16) | ((unsigned)(<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) &lt;&lt; 24))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="291" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ffmpeg_2libavutil_2common_8h_1a1a2fd8cd42afb00c9f69562f52b1ae4b" prot="public" static="no">
        <name>GET_UTF8</name>
        <param><defname>val</defname></param>
        <param><defname>GET_BYTE</defname></param>
        <param><defname>ERROR</defname></param>
        <initializer>val= GET_BYTE;\
    {\
        <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref> top = (val &amp; 128) &gt;&gt; 1;\
        <ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref> ((val &amp; 0xc0) == 0x80 || val &gt;= 0xFE)\
            ERROR\
        while (val &amp; top) {\
            int tmp= GET_BYTE - 128;\
            if(tmp&gt;&gt;6)\
                ERROR\
            val= (val&lt;&lt;6) + tmp;\
            top &lt;&lt;= 5;\
        }\
        val &amp;= (top &lt;&lt; 1) - 1;\
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a UTF-8 character (up to 4 bytes) to its 32-bit UCS-4 encoded form.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Output value, must be an lvalue of type uint32_t. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GET_BYTE</parametername>
</parameternamelist>
<parameterdescription>
<para>Expression reading one byte from the input. Evaluated up to 7 times (4 for the currently assigned Unicode range). With a memory buffer input, this could be *ptr++. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>Expression to be evaluated on invalid input, typically a goto statement.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>ERROR should not contain a loop control statement which could interact with the internal while loop, and should force an exit from the macro code (e.g. through a goto or a return) in order to prevent undefined results. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="309" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ffmpeg_2libavutil_2common_8h_1a2665137b6cc64bb5cf491ba9f9dbd215" prot="public" static="no">
        <name>GET_UTF16</name>
        <param><defname>val</defname></param>
        <param><defname>GET_16BIT</defname></param>
        <param><defname>ERROR</defname></param>
        <initializer>val = GET_16BIT;\
    {\
        unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> hi = val - 0xD800;\
        if (hi &lt; 0x800) {\
            val = GET_16BIT - 0xDC00;\
            if (val &gt; 0x3FFU || hi &gt; 0x3FFU)\
                ERROR\
            val += (hi&lt;&lt;10) + 0x10000;\
        }\
    }\</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a UTF-16 character (2 or 4 bytes) to its 32-bit UCS-4 encoded form.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Output value, must be an lvalue of type uint32_t. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GET_16BIT</parametername>
</parameternamelist>
<parameterdescription>
<para>Expression returning two bytes of UTF-16 data converted to native byte order. Evaluated one or two times. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>Expression to be evaluated on invalid input, typically a goto statement. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="334" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ffmpeg_2libavutil_2common_8h_1ac6a994fe28410a8d14f70f0992db4f42" prot="public" static="no">
        <name>PUT_UTF8</name>
        <param><defname>val</defname></param>
        <param><defname>tmp</defname></param>
        <param><defname>PUT_BYTE</defname></param>
        <initializer>{\
        <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> bytes, shift;\
        <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref> <ref refid="latency_8c_1a7d946209d777cb95fe30364b8d321207" kindref="member">in</ref> = val;\
        <ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref> (<ref refid="latency_8c_1a7d946209d777cb95fe30364b8d321207" kindref="member">in</ref> &lt; 0x80) {\
            tmp = in;\
            PUT_BYTE\
        } else {\
            bytes = (av_log2(in) + 4) / 5;\
            shift = (bytes - 1) * 6;\
            tmp = (256 - (256 &gt;&gt; bytes)) | (in &gt;&gt; shift);\
            PUT_BYTE\
            while (shift &gt;= 6) {\
                shift -= 6;\
                tmp = 0x80 | ((in &gt;&gt; shift) &amp; 0x3f);\
                PUT_BYTE\
            }\
        }\
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a 32-bit Unicode character to its UTF-8 encoded form (up to 4 bytes long). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>is an input-only argument and should be of type uint32_t. It holds a UCS-4 encoded Unicode character that is to be converted to UTF-8. If val is given as a function it is executed only once. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tmp</parametername>
</parameternamelist>
<parameterdescription>
<para>is a temporary variable and should be of type uint8_t. It represents an intermediate value during conversion that is to be output by PUT_BYTE. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PUT_BYTE</parametername>
</parameternamelist>
<parameterdescription>
<para>writes the converted UTF-8 bytes to any proper destination. It could be a function or a statement, and uses tmp as the input byte. For example, PUT_BYTE could be &quot;*output++ = tmp;&quot; PUT_BYTE will be executed up to 4 times for values in the valid UTF-8 range and up to 7 times in the general case, depending on the length of the converted Unicode character. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="362" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ffmpeg_2libavutil_2common_8h_1a6486c4a216b16b4d2615c23d8429cd6b" prot="public" static="no">
        <name>PUT_UTF16</name>
        <param><defname>val</defname></param>
        <param><defname>tmp</defname></param>
        <param><defname>PUT_16BIT</defname></param>
        <initializer>{\
        <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref> <ref refid="latency_8c_1a7d946209d777cb95fe30364b8d321207" kindref="member">in</ref> = val;\
        <ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref> (<ref refid="latency_8c_1a7d946209d777cb95fe30364b8d321207" kindref="member">in</ref> &lt; 0x10000) {\
            tmp = in;\
            PUT_16BIT\
        } else {\
            tmp = 0xD800 | ((in - 0x10000) &gt;&gt; 10);\
            PUT_16BIT\
            tmp = 0xDC00 | ((in - 0x10000) &amp; 0x3FF);\
            PUT_16BIT\
        }\
    }\</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a 32-bit Unicode character to its UTF-16 encoded form (2 or 4 bytes). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>is an input-only argument and should be of type uint32_t. It holds a UCS-4 encoded Unicode character that is to be converted to UTF-16. If val is given as a function it is executed only once. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tmp</parametername>
</parameternamelist>
<parameterdescription>
<para>is a temporary variable and should be of type uint16_t. It represents an intermediate value during conversion that is to be output by PUT_16BIT. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PUT_16BIT</parametername>
</parameternamelist>
<parameterdescription>
<para>writes the converted UTF-16 data to any proper destination in desired endianness. It could be a function or a statement, and uses tmp as the input byte. For example, PUT_BYTE could be &quot;*output++ = tmp;&quot; PUT_BYTE will be executed 1 or 2 times depending on input character. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="396" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ffmpeg_2libavutil_2common_8h_1ab9440da135b8ae3651d5d35d861387cd" prot="public" static="no" mutable="no">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
        <definition>attribute_deprecated const uint8_t av_reverse[256]</definition>
        <argsstring>[256]</argsstring>
        <name>av_reverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reverse the order of the bits of an 8-bits unsigned integer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="79" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ffmpeg_2libavutil_2common_8h_1a10e72d08c6a66c91cf7218532631684e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>av_const int av_log2</definition>
        <argsstring>(unsigned v)</argsstring>
        <name>av_log2</name>
        <param>
          <type>unsigned</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2common_8h_1a8a1d3f387b1eab65327453f6a8e7e9ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>av_const int av_log2_16bit</definition>
        <argsstring>(unsigned v)</argsstring>
        <name>av_log2_16bit</name>
        <param>
          <type>unsigned</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2common_8h_1a465f39d69c5a5fe0e070b6ec4d0fed29" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref> <ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static av_always_inline av_const int av_clip_c</definition>
        <argsstring>(int a, int amin, int amax)</argsstring>
        <name>av_clip_c</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>amin</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>amax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clip a signed integer value into the amin-amax range. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>value to clip </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>amin</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value of the clip range </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>amax</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value of the clip range </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>clipped value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="105" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="105" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2common_8h_1aa4ed7e144d5b8397cff8656e9c786cb2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref> <ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>static av_always_inline av_const int64_t av_clip64_c</definition>
        <argsstring>(int64_t a, int64_t amin, int64_t amax)</argsstring>
        <name>av_clip64_c</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>amin</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>amax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clip a signed 64bit integer value into the amin-amax range. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>value to clip </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>amin</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value of the clip range </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>amax</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value of the clip range </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>clipped value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="122" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="122" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2common_8h_1a8deed4a1ec39d0b1ab82d1f0e590a6f5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref> <ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
        <definition>static av_always_inline av_const uint8_t av_clip_uint8_c</definition>
        <argsstring>(int a)</argsstring>
        <name>av_clip_uint8_c</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clip a signed integer value into the 0-255 range. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>value to clip </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>clipped value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="137" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="137" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2common_8h_1a3091e5b3f2a340c3ddb29f6733fb2a4c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref> <ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a27eddd12ef1271a2ea8629e1148e7e63" kindref="member">int8_t</ref></type>
        <definition>static av_always_inline av_const int8_t av_clip_int8_c</definition>
        <argsstring>(int a)</argsstring>
        <name>av_clip_int8_c</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clip a signed integer value into the -128,127 range. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>value to clip </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>clipped value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="148" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="148" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2common_8h_1a70a9a6b77373c47c48ef93511edaf9ce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref> <ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref></type>
        <definition>static av_always_inline av_const uint16_t av_clip_uint16_c</definition>
        <argsstring>(int a)</argsstring>
        <name>av_clip_uint16_c</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clip a signed integer value into the 0-65535 range. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>value to clip </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>clipped value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="159" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="159" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2common_8h_1aae95fa7073f1caa097951161985240f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref> <ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a044293bfeff56852a28ed6c2cfbb2649" kindref="member">int16_t</ref></type>
        <definition>static av_always_inline av_const int16_t av_clip_int16_c</definition>
        <argsstring>(int a)</argsstring>
        <name>av_clip_int16_c</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clip a signed integer value into the -32768,32767 range. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>value to clip </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>clipped value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="170" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="170" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2common_8h_1ae245fb123a6e2a664c4806c034421e1e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref> <ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref></type>
        <definition>static av_always_inline av_const int32_t av_clipl_int32_c</definition>
        <argsstring>(int64_t a)</argsstring>
        <name>av_clipl_int32_c</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clip a signed 64-bit integer value into the -2147483648,2147483647 range. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>value to clip </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>clipped value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="181" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="181" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2common_8h_1a867dba37c785d27d42b272aa968efda8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref> <ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref> unsigned</type>
        <definition>static av_always_inline av_const unsigned av_clip_uintp2_c</definition>
        <argsstring>(int a, int p)</argsstring>
        <name>av_clip_uintp2_c</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clip a signed integer to an unsigned power of two range. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>value to clip </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>bit position to clip at </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>clipped value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="193" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="193" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2common_8h_1a2ff75b1bf7fd1a261dd2f2919e8d23e1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static av_always_inline int av_sat_add32_c</definition>
        <argsstring>(int a, int b)</argsstring>
        <name>av_sat_add32_c</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add two signed 32-bit values with saturation.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>one value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>another value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>sum with signed saturation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="206" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="206" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2common_8h_1af235b48678850832493ac21160ff8458" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static av_always_inline int av_sat_dadd32_c</definition>
        <argsstring>(int a, int b)</argsstring>
        <name>av_sat_dadd32_c</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a doubled value to another value with saturation at both stages.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>first value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>value doubled and added to a </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>sum with signed saturation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="218" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2common_8h_1a7d5a6331d8708d4516aeab2413f86392" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref> <ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref> float</type>
        <definition>static av_always_inline av_const float av_clipf_c</definition>
        <argsstring>(float a, float amin, float amax)</argsstring>
        <name>av_clipf_c</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>amin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>amax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clip a float value into the amin-amax range. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>value to clip </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>amin</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value of the clip range </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>amax</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value of the clip range </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>clipped value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="230" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="230" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2common_8h_1a9a257b0d07c767325ee48b5e16e0b97f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref> <ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref> double</type>
        <definition>static av_always_inline av_const double av_clipd_c</definition>
        <argsstring>(double a, double amin, double amax)</argsstring>
        <name>av_clipd_c</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>amin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>amax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clip a double value into the amin-amax range. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>value to clip </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>amin</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value of the clip range </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>amax</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value of the clip range </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>clipped value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="247" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="247" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2common_8h_1ad94b463be296690fc9c096d55203b42b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref> <ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static av_always_inline av_const int av_ceil_log2_c</definition>
        <argsstring>(int x)</argsstring>
        <name>av_ceil_log2_c</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute ceil(log2(x)). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>value used to compute ceil(log2(x)) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>computed ceiling of log2(x) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="261" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="261" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2common_8h_1a73ced2c040c8e53f58a6073c3f3927b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref> <ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static av_always_inline av_const int av_popcount_c</definition>
        <argsstring>(uint32_t x)</argsstring>
        <name>av_popcount_c</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Count number of bits set to one in x <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>value to count bits of </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of bits set to one in x </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="271" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="271" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2common_8h_1a1016d46d60ca2d27d8ab2af5f0f7c57a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref> <ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static av_always_inline av_const int av_popcount64_c</definition>
        <argsstring>(uint64_t x)</argsstring>
        <name>av_popcount64_c</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Count number of bits set to one in x <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>value to count bits of </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of bits set to one in x </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" line="285" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h" bodystart="285" bodyend="288"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>common internal and external API header </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>copyright<sp/>(c)<sp/>2006<sp/>Michael<sp/>Niedermayer<sp/>&lt;michaelni@gmx.at&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>FFmpeg.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>FFmpeg<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>FFmpeg<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>FFmpeg;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110-1301<sp/>USA</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor">#ifndef<sp/>AVUTIL_COMMON_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AVUTIL_COMMON_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)<sp/>&amp;&amp;<sp/>!defined(__STDC_CONSTANT_MACROS)<sp/>&amp;&amp;<sp/>!defined(UINT64_C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>missing<sp/>-D__STDC_CONSTANT_MACROS<sp/>/<sp/>#define<sp/>__STDC_CONSTANT_MACROS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="attributes_8h" kindref="compound">attributes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ffmpeg_2libavutil_2version_8h" kindref="compound">version.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="avconfig_8h" kindref="compound">libavutil/avconfig.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>AV_HAVE_BIGENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>AV_NE(be,<sp/>le)<sp/>(be)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="ffmpeg_2libavutil_2common_8h_1a309bdca20f6a78431379fc69442d98ea" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>AV_NE(be,<sp/>le)<sp/>(le)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//rounded<sp/>division<sp/>&amp;<sp/>shift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="ffmpeg_2libavutil_2common_8h_1aa79ca71ef110a498d8275cbf7aa75a93" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RSHIFT(a,b)<sp/>((a)<sp/>&gt;<sp/>0<sp/>?<sp/>((a)<sp/>+<sp/>((1&lt;&lt;(b))&gt;&gt;1))&gt;&gt;(b)<sp/>:<sp/>((a)<sp/>+<sp/>((1&lt;&lt;(b))&gt;&gt;1)-1)&gt;&gt;(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>assume<sp/>b&gt;0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="ffmpeg_2libavutil_2common_8h_1a7a2a86492a286d6d20678da1dbb00525" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ROUNDED_DIV(a,b)<sp/>(((a)&gt;0<sp/>?<sp/>(a)<sp/>+<sp/>((b)&gt;&gt;1)<sp/>:<sp/>(a)<sp/>-<sp/>((b)&gt;&gt;1))/(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>assume<sp/>a&gt;0<sp/>and<sp/>b&gt;0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="ffmpeg_2libavutil_2common_8h_1a6fa4d4c04620a5112cafd0a86dca9f0a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FF_CEIL_RSHIFT(a,b)<sp/>(!av_builtin_constant_p(b)<sp/>?<sp/>-((-(a))<sp/>&gt;&gt;<sp/>(b))<sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>((a)<sp/>+<sp/>(1&lt;&lt;(b))<sp/>-<sp/>1)<sp/>&gt;&gt;<sp/>(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="ffmpeg_2libavutil_2common_8h_1a5117194af5289224bceaaa5466586d8f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FFUDIV(a,b)<sp/>(((a)&gt;0<sp/>?(a):(a)-(b)+1)<sp/>/<sp/>(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="ffmpeg_2libavutil_2common_8h_1aa0241c1e04e45d7be1b388d83ab57f22" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FFUMOD(a,b)<sp/>((a)-(b)*FFUDIV(a,b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="ffmpeg_2libavutil_2common_8h_1ad6d88940cfc29c13a3e51ded211fc242" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FFABS(a)<sp/>((a)<sp/>&gt;=<sp/>0<sp/>?<sp/>(a)<sp/>:<sp/>(-(a)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="ffmpeg_2libavutil_2common_8h_1af5e4ff7761996bc901e59bd59756268d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FFSIGN(a)<sp/>((a)<sp/>&gt;<sp/>0<sp/>?<sp/>1<sp/>:<sp/>-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="ffmpeg_2libavutil_2common_8h_1a9960bd6780a9b16a216a57be1ee04359" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FFMAX(a,b)<sp/>((a)<sp/>&gt;<sp/>(b)<sp/>?<sp/>(a)<sp/>:<sp/>(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="ffmpeg_2libavutil_2common_8h_1a013fdaa079045ec5632fe121e211e516" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FFMAX3(a,b,c)<sp/>FFMAX(FFMAX(a,b),c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="ffmpeg_2libavutil_2common_8h_1a0f84cbd7fd810cd678157c98cbfad4b0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FFMIN(a,b)<sp/>((a)<sp/>&gt;<sp/>(b)<sp/>?<sp/>(b)<sp/>:<sp/>(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="ffmpeg_2libavutil_2common_8h_1af6afbffa12562b076c34055bdcb3ad65" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FFMIN3(a,b,c)<sp/>FFMIN(FFMIN(a,b),c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="ffmpeg_2libavutil_2common_8h_1a09a0bb7d8fcfac416de7a5fe7fd8b0f1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FFSWAP(type,a,b)<sp/>do{type<sp/>SWAP_tmp=<sp/>b;<sp/>b=<sp/>a;<sp/>a=<sp/>SWAP_tmp;}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="ffmpeg_2libavutil_2common_8h_1a3508a98d3ee7e2c9a4841fe264cf70f7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FF_ARRAY_ELEMS(a)<sp/>(sizeof(a)<sp/>/<sp/>sizeof((a)[0]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="ffmpeg_2libavutil_2common_8h_1acae4ba605b3a7d535b7ac058ffe96892" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FFALIGN(x,<sp/>a)<sp/>(((x)+(a)-1)&amp;~((a)-1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>misc<sp/>math<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor">#if<sp/>FF_API_AV_REVERSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="ffmpeg_2libavutil_2common_8h_1ab9440da135b8ae3651d5d35d861387cd" kindref="member">av_reverse</ref>[256];</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_AV_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;intmath.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Pull<sp/>in<sp/>unguarded<sp/>fallback<sp/>defines<sp/>at<sp/>the<sp/>end<sp/>of<sp/>this<sp/>file.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ffmpeg_2libavutil_2common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>av_log2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2libavutil_2common_8h_1a10e72d08c6a66c91cf7218532631684e" kindref="member">av_log2</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>v);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>av_log2_16bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2libavutil_2common_8h_1a8a1d3f387b1eab65327453f6a8e7e9ae" kindref="member">av_log2_16bit</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>v);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref><sp/><ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>av_clip_c(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amax)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAVE_AV_CONFIG_H)<sp/>&amp;&amp;<sp/>defined(ASSERT_LEVEL)<sp/>&amp;&amp;<sp/>ASSERT_LEVEL<sp/>&gt;=<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(amin<sp/>&gt;<sp/>amax)<sp/>abort();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(a<sp/>&lt;<sp/>amin)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>amin;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>&gt;<sp/>amax)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>amax;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref><sp/><ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>av_clip64_c(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>a,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>amin,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>amax)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAVE_AV_CONFIG_H)<sp/>&amp;&amp;<sp/>defined(ASSERT_LEVEL)<sp/>&amp;&amp;<sp/>ASSERT_LEVEL<sp/>&gt;=<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(amin<sp/>&gt;<sp/>amax)<sp/>abort();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(a<sp/>&lt;<sp/>amin)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>amin;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>&gt;<sp/>amax)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>amax;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref><sp/><ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>av_clip_uint8_c(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a&amp;(~0xFF))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-a)&gt;&gt;31;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref><sp/><ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a27eddd12ef1271a2ea8629e1148e7e63" kindref="member">int8_t</ref><sp/>av_clip_int8_c(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((a+0x80)<sp/>&amp;<sp/>~0xFF)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a&gt;&gt;31)<sp/>^<sp/>0x7F;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref><sp/><ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref><sp/>av_clip_uint16_c(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a&amp;(~0xFFFF))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-a)&gt;&gt;31;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref><sp/><ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a044293bfeff56852a28ed6c2cfbb2649" kindref="member">int16_t</ref><sp/>av_clip_int16_c(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((a+0x8000)<sp/>&amp;<sp/>~0xFFFF)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a&gt;&gt;31)<sp/>^<sp/>0x7FFF;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref><sp/><ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/>av_clipl_int32_c(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>a)</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((a+0x80000000u)<sp/>&amp;<sp/>~<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a8da5373e041921aa34c2b6172ac3babc" kindref="member">UINT64_C</ref>(0xFFFFFFFF))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref>)((a&gt;&gt;63)<sp/>^<sp/>0x7FFFFFFF);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref>)<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref><sp/><ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>av_clip_uintp2_c(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>&amp;<sp/>~((1&lt;&lt;p)<sp/>-<sp/>1))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-a<sp/>&gt;&gt;<sp/>31<sp/>&amp;<sp/>((1&lt;&lt;<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>av_sat_add32_c(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>av_clipl_int32((<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref>)a<sp/>+<sp/>b);</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>av_sat_dadd32_c(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>av_sat_add32(a,<sp/>av_sat_add32(b,<sp/>b));</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref><sp/><ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>av_clipf_c(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>amin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>amax)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAVE_AV_CONFIG_H)<sp/>&amp;&amp;<sp/>defined(ASSERT_LEVEL)<sp/>&amp;&amp;<sp/>ASSERT_LEVEL<sp/>&gt;=<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(amin<sp/>&gt;<sp/>amax)<sp/>abort();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(a<sp/>&lt;<sp/>amin)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>amin;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>&gt;<sp/>amax)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>amax;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref><sp/><ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>av_clipd_c(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>amin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>amax)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAVE_AV_CONFIG_H)<sp/>&amp;&amp;<sp/>defined(ASSERT_LEVEL)<sp/>&amp;&amp;<sp/>ASSERT_LEVEL<sp/>&gt;=<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(amin<sp/>&gt;<sp/>amax)<sp/>abort();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(a<sp/>&lt;<sp/>amin)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>amin;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>&gt;<sp/>amax)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>amax;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref><sp/><ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>av_ceil_log2_c(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2libavutil_2common_8h_1a10e72d08c6a66c91cf7218532631684e" kindref="member">av_log2</ref>((x<sp/>-<sp/>1)<sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref><sp/><ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>av_popcount_c(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/>x)</highlight></codeline>
<codeline lineno="272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>-=<sp/>(x<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>0x55555555;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>(x<sp/>&amp;<sp/>0x33333333)<sp/>+<sp/>((x<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>0x33333333);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>(x<sp/>+<sp/>(x<sp/>&gt;&gt;<sp/>4))<sp/>&amp;<sp/>0x0F0F0F0F;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>x<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>+<sp/>(x<sp/>&gt;&gt;<sp/>16))<sp/>&amp;<sp/>0x3F;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref><sp/><ref refid="attributes_8h_1a9eaead3cde73464fd66bab4cef9307ad" kindref="member">av_const</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>av_popcount64_c(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>x)</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>av_popcount((<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref>)x)<sp/>+<sp/>av_popcount((<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref>)(x<sp/>&gt;&gt;<sp/>32));</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="ffmpeg_2libavutil_2common_8h_1a19c68e2b5efcbab914d79db1e4fee734" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MKTAG(a,b,c,d)<sp/>((a)<sp/>|<sp/>((b)<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>((c)<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>((unsigned)(d)<sp/>&lt;&lt;<sp/>24))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="ffmpeg_2libavutil_2common_8h_1a1e233db224cd0a3079fd4572d1a3d717" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MKBETAG(a,b,c,d)<sp/>((d)<sp/>|<sp/>((c)<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>((b)<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>((unsigned)(a)<sp/>&lt;&lt;<sp/>24))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="ffmpeg_2libavutil_2common_8h_1a1a2fd8cd42afb00c9f69562f52b1ae4b" refkind="member"><highlight class="preprocessor">#define<sp/>GET_UTF8(val,<sp/>GET_BYTE,<sp/>ERROR)\</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>val=<sp/>GET_BYTE;\</highlight></codeline>
<codeline lineno="311"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="312"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>top<sp/>=<sp/>(val<sp/>&amp;<sp/>128)<sp/>&gt;&gt;<sp/>1;\</highlight></codeline>
<codeline lineno="313"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((val<sp/>&amp;<sp/>0xc0)<sp/>==<sp/>0x80<sp/>||<sp/>val<sp/>&gt;=<sp/>0xFE)\</highlight></codeline>
<codeline lineno="314"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR\</highlight></codeline>
<codeline lineno="315"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(val<sp/>&amp;<sp/>top)<sp/>{\</highlight></codeline>
<codeline lineno="316"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>tmp=<sp/>GET_BYTE<sp/>-<sp/>128;\</highlight></codeline>
<codeline lineno="317"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(tmp&gt;&gt;6)\</highlight></codeline>
<codeline lineno="318"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR\</highlight></codeline>
<codeline lineno="319"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val=<sp/>(val&lt;&lt;6)<sp/>+<sp/>tmp;\</highlight></codeline>
<codeline lineno="320"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top<sp/>&lt;&lt;=<sp/>5;\</highlight></codeline>
<codeline lineno="321"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="322"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>&amp;=<sp/>(top<sp/>&lt;&lt;<sp/>1)<sp/>-<sp/>1;\</highlight></codeline>
<codeline lineno="323"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="ffmpeg_2libavutil_2common_8h_1a2665137b6cc64bb5cf491ba9f9dbd215" refkind="member"><highlight class="preprocessor">#define<sp/>GET_UTF16(val,<sp/>GET_16BIT,<sp/>ERROR)\</highlight></codeline>
<codeline lineno="335"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>GET_16BIT;\</highlight></codeline>
<codeline lineno="336"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="337"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned<sp/>int<sp/>hi<sp/>=<sp/>val<sp/>-<sp/>0xD800;\</highlight></codeline>
<codeline lineno="338"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(hi<sp/>&lt;<sp/>0x800)<sp/>{\</highlight></codeline>
<codeline lineno="339"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>GET_16BIT<sp/>-<sp/>0xDC00;\</highlight></codeline>
<codeline lineno="340"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(val<sp/>&gt;<sp/>0x3FFU<sp/>||<sp/>hi<sp/>&gt;<sp/>0x3FFU)\</highlight></codeline>
<codeline lineno="341"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR\</highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>+=<sp/>(hi&lt;&lt;10)<sp/>+<sp/>0x10000;\</highlight></codeline>
<codeline lineno="343"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="344"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="345"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="ffmpeg_2libavutil_2common_8h_1ac6a994fe28410a8d14f70f0992db4f42" refkind="member"><highlight class="preprocessor">#define<sp/>PUT_UTF8(val,<sp/>tmp,<sp/>PUT_BYTE)\</highlight></codeline>
<codeline lineno="363"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="364"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>bytes,<sp/>shift;\</highlight></codeline>
<codeline lineno="365"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>in<sp/>=<sp/>val;\</highlight></codeline>
<codeline lineno="366"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(in<sp/>&lt;<sp/>0x80)<sp/>{\</highlight></codeline>
<codeline lineno="367"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>in;\</highlight></codeline>
<codeline lineno="368"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUT_BYTE\</highlight></codeline>
<codeline lineno="369"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{\</highlight></codeline>
<codeline lineno="370"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes<sp/>=<sp/>(av_log2(in)<sp/>+<sp/>4)<sp/>/<sp/>5;\</highlight></codeline>
<codeline lineno="371"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift<sp/>=<sp/>(bytes<sp/>-<sp/>1)<sp/>*<sp/>6;\</highlight></codeline>
<codeline lineno="372"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(256<sp/>-<sp/>(256<sp/>&gt;&gt;<sp/>bytes))<sp/>|<sp/>(in<sp/>&gt;&gt;<sp/>shift);\</highlight></codeline>
<codeline lineno="373"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUT_BYTE\</highlight></codeline>
<codeline lineno="374"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(shift<sp/>&gt;=<sp/>6)<sp/>{\</highlight></codeline>
<codeline lineno="375"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift<sp/>-=<sp/>6;\</highlight></codeline>
<codeline lineno="376"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>0x80<sp/>|<sp/>((in<sp/>&gt;&gt;<sp/>shift)<sp/>&amp;<sp/>0x3f);\</highlight></codeline>
<codeline lineno="377"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUT_BYTE\</highlight></codeline>
<codeline lineno="378"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="379"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="380"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="ffmpeg_2libavutil_2common_8h_1a6486c4a216b16b4d2615c23d8429cd6b" refkind="member"><highlight class="preprocessor">#define<sp/>PUT_UTF16(val,<sp/>tmp,<sp/>PUT_16BIT)\</highlight></codeline>
<codeline lineno="397"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="398"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>in<sp/>=<sp/>val;\</highlight></codeline>
<codeline lineno="399"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(in<sp/>&lt;<sp/>0x10000)<sp/>{\</highlight></codeline>
<codeline lineno="400"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>in;\</highlight></codeline>
<codeline lineno="401"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUT_16BIT\</highlight></codeline>
<codeline lineno="402"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{\</highlight></codeline>
<codeline lineno="403"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>0xD800<sp/>|<sp/>((in<sp/>-<sp/>0x10000)<sp/>&gt;&gt;<sp/>10);\</highlight></codeline>
<codeline lineno="404"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUT_16BIT\</highlight></codeline>
<codeline lineno="405"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>0xDC00<sp/>|<sp/>((in<sp/>-<sp/>0x10000)<sp/>&amp;<sp/>0x3FF);\</highlight></codeline>
<codeline lineno="406"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUT_16BIT\</highlight></codeline>
<codeline lineno="407"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="408"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="409"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ffmpeg_2libavutil_2mem_8h" kindref="compound">mem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_AV_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&quot;internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAVE_AV_CONFIG_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>AVUTIL_COMMON_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>definitions<sp/>are<sp/>outside<sp/>the<sp/>multiple<sp/>inclusion<sp/>guard</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/>*<sp/>to<sp/>ensure<sp/>they<sp/>are<sp/>immediately<sp/>available<sp/>in<sp/>intmath.h.</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>av_ceil_log2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>av_ceil_log2<sp/><sp/><sp/><sp/><sp/>av_ceil_log2_c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>av_clip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>av_clip<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>av_clip_c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>av_clip64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>av_clip64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>av_clip64_c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>av_clip_uint8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>av_clip_uint8<sp/><sp/><sp/><sp/>av_clip_uint8_c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>av_clip_int8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>av_clip_int8<sp/><sp/><sp/><sp/><sp/>av_clip_int8_c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>av_clip_uint16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>av_clip_uint16<sp/><sp/><sp/>av_clip_uint16_c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>av_clip_int16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>av_clip_int16<sp/><sp/><sp/><sp/>av_clip_int16_c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>av_clipl_int32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>av_clipl_int32<sp/><sp/><sp/>av_clipl_int32_c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>av_clip_uintp2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>av_clip_uintp2<sp/><sp/><sp/>av_clip_uintp2_c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>av_sat_add32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>av_sat_add32<sp/><sp/><sp/><sp/><sp/>av_sat_add32_c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>av_sat_dadd32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>av_sat_dadd32<sp/><sp/><sp/><sp/>av_sat_dadd32_c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>av_clipf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>av_clipf<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>av_clipf_c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>av_clipd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>av_clipd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>av_clipd_c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>av_popcount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>av_popcount<sp/><sp/><sp/><sp/><sp/><sp/>av_popcount_c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>av_popcount64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>av_popcount64<sp/><sp/><sp/><sp/>av_popcount64_c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/common.h"/>
  </compounddef>
</doxygen>
