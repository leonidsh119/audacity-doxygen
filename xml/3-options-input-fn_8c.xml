<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="3-options-input-fn_8c" kind="file" language="C++">
    <compoundname>3-options-input-fn.c</compoundname>
    <includes refid="soxr_8h" local="no">soxr.h</includes>
    <includes refid="examples-common_8h" local="yes">examples-common.h</includes>
    <incdepgraph>
      <node id="21010">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/3-options-input-fn.c</label>
        <link refid="3-options-input-fn.c"/>
        <childnode refid="21011" relation="include">
        </childnode>
        <childnode refid="21013" relation="include">
        </childnode>
      </node>
      <node id="21019">
        <label>stdlib.h</label>
      </node>
      <node id="21015">
        <label>errno.h</label>
      </node>
      <node id="21012">
        <label>stddef.h</label>
      </node>
      <node id="21014">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="21016">
        <label>limits.h</label>
      </node>
      <node id="21020">
        <label>string.h</label>
      </node>
      <node id="21017">
        <label>math.h</label>
      </node>
      <node id="21013">
        <label>examples-common.h</label>
        <link refid="examples-common_8h"/>
        <childnode refid="21014" relation="include">
        </childnode>
        <childnode refid="21015" relation="include">
        </childnode>
        <childnode refid="21016" relation="include">
        </childnode>
        <childnode refid="21017" relation="include">
        </childnode>
        <childnode refid="21012" relation="include">
        </childnode>
        <childnode refid="21018" relation="include">
        </childnode>
        <childnode refid="21019" relation="include">
        </childnode>
        <childnode refid="21020" relation="include">
        </childnode>
      </node>
      <node id="21011">
        <label>soxr.h</label>
        <link refid="soxr_8h"/>
        <childnode refid="21012" relation="include">
        </childnode>
      </node>
      <node id="21018">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structinput__context__t" prot="public">input_context_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="3-options-input-fn_8c_1a58c391d4fe581fb9e15cf5c89099f1d7" prot="public" static="no">
        <name>buf_total_len</name>
        <initializer>15000  /* <ref refid="devicetopology_8h_1aab6c7474a070d22bf61ccf21b532412fad8ff8dfc9381018e97fce86d909f8975" kindref="member">In</ref> <ref refid="test__w__saw8_8c_1a54185623a5a093f671a73e5fba6197a1" kindref="member">samples</ref> per channel. */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/3-options-input-fn.c" line="64" column="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="3-options-input-fn_8c_1ae55d1112e8a422618b93502f6713b0e3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t input_fn</definition>
        <argsstring>(input_context_t *p, soxr_cbuf_t *buf, size_t len)</argsstring>
        <name>input_fn</name>
        <param>
          <type><ref refid="structinput__context__t" kindref="compound">input_context_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="soxr_8h_1a6a4a582225738aaea35a30c77b9d55a5" kindref="member">soxr_cbuf_t</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/3-options-input-fn.c" line="31" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/3-options-input-fn.c" bodystart="31" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="3-options-input-fn_8c_1a2948288d5a202a7f1bec9085b62efce2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int main</definition>
        <argsstring>(int n, char const *arg[])</argsstring>
        <name>main</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>char <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>arg</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/3-options-input-fn.c" line="43" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/3-options-input-fn.c" bodystart="43" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>SoX<sp/>Resampler<sp/>Library<sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2007-13<sp/>robs@users.sourceforge.net</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licence<sp/>for<sp/>this<sp/>file:<sp/>LGPL<sp/>v2.1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>See<sp/>LICENCE<sp/>for<sp/>details.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Example<sp/>3:<sp/>extends<sp/>example<sp/>2<sp/>with<sp/>multiple<sp/>channels,<sp/>multiple<sp/>datatypes,</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>and<sp/>other<sp/>options.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>The<sp/>application<sp/>provides<sp/>an<sp/>input<sp/>function,<sp/>called<sp/>on<sp/>demand<sp/>by<sp/>libsoxr,<sp/>in</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>response<sp/>to<sp/>calls<sp/>to<sp/>soxr_output();<sp/>compared<sp/>to<sp/>the<sp/>`process&apos;<sp/>approach</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>(illustrated<sp/>in<sp/>example<sp/>2)<sp/>this<sp/>requires<sp/>that<sp/>the<sp/>application<sp/>implements</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>less<sp/>logic,<sp/>but<sp/>one<sp/>more<sp/>function.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>11<sp/>arguments<sp/>(which<sp/>are<sp/>optional,<sp/>from<sp/>last<sp/>to<sp/>first)<sp/>are:</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>INPUT-RATE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>As<sp/>example<sp/>2</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/>OUTPUT-RATE<sp/><sp/><sp/><sp/><sp/><sp/>Ditto</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/>NUM-CHANNELS<sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>interleaved<sp/>channels</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/>IN-DATATYPE#<sp/><sp/><sp/><sp/><sp/>0:float32<sp/>1:float64<sp/>2:int32<sp/>3:int16</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/>OUT-DATATYPE#<sp/><sp/><sp/><sp/>Ditto</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Q-RECIPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Quality<sp/>recipe<sp/>(in<sp/>hex)<sp/>See<sp/>soxr.h</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Q-FLAGS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Quality<sp/>flags<sp/><sp/>(in<sp/>hex)<sp/>See<sp/>soxr.h</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/><sp/>PASSBAND-END<sp/><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/><sp/>STOPBAND-BEGIN<sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/><sp/>PHASE-RESPONSE<sp/><sp/><sp/>[0,100]</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/><sp/>USE-THREADS<sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>to<sp/>use<sp/>multi-threading<sp/>(where<sp/>available)</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="soxr_8h" kindref="compound">soxr.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="examples-common_8h" kindref="compound">examples-common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="structinput__context__t_1a5e8a3a7a71cb8a97ff04fe622c82bd56" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>ibuf;<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structinput__context__t_1a5e8a3a7a71cb8a97ff04fe622c82bd56" kindref="member">isize</ref>;}<sp/><ref refid="structinput__context__t" kindref="compound">input_context_t</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>input_fn(<ref refid="structinput__context__t" kindref="compound">input_context_t</ref><sp/>*<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/><ref refid="soxr_8h_1a6a4a582225738aaea35a30c77b9d55a5" kindref="member">soxr_cbuf_t</ref><sp/>*<sp/><ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>one<sp/>block<sp/>into<sp/>the<sp/>buffer,<sp/>ready<sp/>to<sp/>be<sp/>input<sp/>to<sp/>the<sp/>resampler:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>len<sp/>=<sp/>fread(p-&gt;<ref refid="structinput__context__t_1a82d344eaa1b2b0f977bfb4346139b8f0" kindref="member">ibuf</ref>,<sp/>p-&gt;<ref refid="structinput__context__t_1a5e8a3a7a71cb8a97ff04fe622c82bd56" kindref="member">isize</ref>,<sp/>len,<sp/>stdin);<sp/></highlight><highlight class="comment">/*<sp/>Actual<sp/>len<sp/>read<sp/>may<sp/>be<sp/>less.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Inform<sp/>the<sp/>resampler<sp/>of<sp/>the<sp/>data&apos;s<sp/>whereabouts<sp/>(which<sp/>could<sp/>be<sp/>anywhere,<sp/>in</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/>*<sp/>a<sp/>freshly<sp/>malloc&apos;d<sp/>buffer,<sp/>for<sp/>example):<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>*<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref><sp/>=<sp/>(!len<sp/>&amp;&amp;<sp/>ferror(stdin))?<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>:<sp/>p-&gt;<ref refid="structinput__context__t_1a82d344eaa1b2b0f977bfb4346139b8f0" kindref="member">ibuf</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>NULL<sp/>if<sp/>error<sp/>occurred.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>#<sp/>of<sp/>samples<sp/>per<sp/>channel<sp/>to<sp/>input.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="3-options-input-fn_8c_1a2948288d5a202a7f1bec9085b62efce2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="3-options-input-fn_8c_1a2948288d5a202a7f1bec9085b62efce2" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>arg[])</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arg0<sp/>=<sp/>n?<sp/>--n,<sp/>*arg++<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>irate<sp/>=<sp/>n?<sp/>--n,<sp/><ref refid="xlread_8c_1ad37d469faf1f38a3c35d1253575a513a" kindref="member">atof</ref>(*arg++)<sp/>:<sp/>96000.;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>orate<sp/>=<sp/>n?<sp/>--n,<sp/><ref refid="xlread_8c_1ad37d469faf1f38a3c35d1253575a513a" kindref="member">atof</ref>(*arg++)<sp/>:<sp/>44100.;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>chans<sp/>=<sp/>n?<sp/>--n,<sp/>(unsigned)atoi(*arg++)<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66d" kindref="member">soxr_datatype_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>itype<sp/>=<sp/>n?<sp/>--n,<sp/>(<ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66d" kindref="member">soxr_datatype_t</ref>)atoi(*arg++)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66d" kindref="member">soxr_datatype_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>otype<sp/>=<sp/>n?<sp/>--n,<sp/>(<ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66d" kindref="member">soxr_datatype_t</ref>)atoi(*arg++)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q_recipe=<sp/>n?<sp/>--n,<sp/>strtoul(*arg++,<sp/>0,<sp/>16)<sp/>:<sp/><ref refid="soxr_8h_1aea42ded9f1863b84c90e95de3b250a9b" kindref="member">SOXR_HQ</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q_flags<sp/>=<sp/>n?<sp/>--n,<sp/>strtoul(*arg++,<sp/>0,<sp/>16)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>passband_end<sp/>=<sp/>n?<sp/>--n,<sp/><ref refid="xlread_8c_1ad37d469faf1f38a3c35d1253575a513a" kindref="member">atof</ref>(*arg++)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>stopband_begin<sp/>=<sp/>n?<sp/>--n,<sp/><ref refid="xlread_8c_1ad37d469faf1f38a3c35d1253575a513a" kindref="member">atof</ref>(*arg++)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>phase_response<sp/>=<sp/>n?<sp/>--n,<sp/><ref refid="xlread_8c_1ad37d469faf1f38a3c35d1253575a513a" kindref="member">atof</ref>(*arg++)<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>use_threads<sp/>=<sp/>n?<sp/>--n,<sp/>atoi(*arg++)<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="structsoxr__quality__spec" kindref="compound">soxr_quality_spec_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q_spec<sp/>=<sp/><ref refid="soxr_8c_1a8bc34e71491e5ab698dcccdfc06c7ad8" kindref="member">soxr_quality_spec</ref>(q_recipe,<sp/>q_flags);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="structsoxr__io__spec" kindref="compound">soxr_io_spec_t</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>io_spec<sp/>=<sp/><ref refid="soxr_8c_1a6003249f89c7705eef58d69f0afae011" kindref="member">soxr_io_spec</ref>(itype,<sp/>otype);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="structsoxr__runtime__spec" kindref="compound">soxr_runtime_spec_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>runtime_spec<sp/>=<sp/><ref refid="soxr_8c_1adef2594d0bbe957075423c9450477fc2" kindref="member">soxr_runtime_spec</ref>(!use_threads);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>resampling<sp/>input<sp/>and<sp/>output<sp/>buffers<sp/>in<sp/>proportion<sp/>to<sp/>the<sp/>input</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/>*<sp/>and<sp/>output<sp/>rates:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>buf_total_len<sp/>15000<sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>samples<sp/>per<sp/>channel.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>osize<sp/>=<sp/><ref refid="soxr_8h_1ace5ac3572ab64ec7d335f5e278a446e4" kindref="member">soxr_datatype_size</ref>(otype)<sp/>*<sp/>chans;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>isize<sp/>=<sp/><ref refid="soxr_8h_1ace5ac3572ab64ec7d335f5e278a446e4" kindref="member">soxr_datatype_size</ref>(itype)<sp/>*<sp/>chans;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>olen0=<sp/>(size_t)(orate<sp/>*<sp/><ref refid="3-options-input-fn_8c_1a58c391d4fe581fb9e15cf5c89099f1d7" kindref="member">buf_total_len</ref><sp/>/<sp/>(irate<sp/>+<sp/>orate)<sp/>+<sp/>.5);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>olen<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(olen0,<sp/>1),<sp/><ref refid="3-options-input-fn_8c_1a58c391d4fe581fb9e15cf5c89099f1d7" kindref="member">buf_total_len</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ilen<sp/>=<sp/><ref refid="3-options-input-fn_8c_1a58c391d4fe581fb9e15cf5c89099f1d7" kindref="member">buf_total_len</ref><sp/>-<sp/>olen;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>obuf<sp/>=<sp/>malloc(osize<sp/>*<sp/>olen);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ibuf<sp/>=<sp/>malloc(isize<sp/>*<sp/>ilen);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="structinput__context__t" kindref="compound">input_context_t</ref><sp/>icontext;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>odone,<sp/>clips<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/><ref refid="structsoxr" kindref="compound">soxr</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Overrides<sp/>(if<sp/>given):<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(passband_end<sp/><sp/><sp/>&gt;<sp/>0)<sp/>q_spec.<ref refid="structsoxr__quality__spec_1aac468916caf37b279bffc2f30d004fa8" kindref="member">passband_end</ref><sp/><sp/><sp/>=<sp/>passband_end<sp/>/<sp/>100;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopband_begin<sp/>&gt;<sp/>0)<sp/>q_spec.<ref refid="structsoxr__quality__spec_1a87bce61f87f57da23f63d9634a89975e" kindref="member">stopband_begin</ref><sp/>=<sp/>stopband_begin<sp/>/<sp/>100;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phase_response<sp/>&gt;=0)<sp/>q_spec.<ref refid="structsoxr__quality__spec_1ad600c30fb76a8faf3ac1709d3ab08595" kindref="member">phase_response</ref><sp/>=<sp/>phase_response;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>a<sp/>stream<sp/>resampler:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>soxr<sp/>=<sp/><ref refid="soxr_8c_1a763983e4a1f00869383ba22421b768e5" kindref="member">soxr_create</ref>(</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>irate,<sp/>orate,<sp/>chans,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Input<sp/>rate,<sp/>output<sp/>rate,<sp/>#<sp/>of<sp/>channels.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;error,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>To<sp/>report<sp/>any<sp/>error<sp/>during<sp/>creation.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;io_spec,<sp/>&amp;q_spec,<sp/>&amp;runtime_spec);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!error)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Register<sp/>input_fn<sp/>with<sp/>the<sp/>resampler:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>icontext.<ref refid="structinput__context__t_1a82d344eaa1b2b0f977bfb4346139b8f0" kindref="member">ibuf</ref><sp/>=<sp/>ibuf,<sp/>icontext.<ref refid="structinput__context__t_1a5e8a3a7a71cb8a97ff04fe622c82bd56" kindref="member">isize</ref><sp/>=<sp/>isize;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="soxr_8c_1a5ef8012f6d313a2887c135359af035f6" kindref="member">soxr_set_input_fn</ref>(soxr,<sp/>(<ref refid="soxr_8h_1a75de274660354270e1e92a4b66a6e915" kindref="member">soxr_input_fn_t</ref>)input_fn,<sp/>&amp;icontext,<sp/>ilen);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!error)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>all<sp/>is<sp/>well,<sp/>run<sp/>the<sp/>resampler:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="examples-common_8h_1ae8f98482924f7cbfd7a7b7f926b9bb17" kindref="member">USE_STD_STDIO</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Resample<sp/>in<sp/>blocks:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>odone<sp/>=<sp/><ref refid="soxr_8c_1ae01b0184f5952309aa868d2d3dbd92d7" kindref="member">soxr_output</ref>(soxr,<sp/>obuf,<sp/>olen);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fwrite(obuf,<sp/>osize,<sp/>odone,<sp/><ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Consume<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="soxr_8c_1a51a9c751bbd6d122e55f7aad7b31ccea" kindref="member">soxr_error</ref>(soxr);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>any<sp/>soxr<sp/>error<sp/>occurred.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>clips<sp/>=<sp/>*<ref refid="soxr_8c_1ab2ae956aeb86e03efb5c068a6bb52955" kindref="member">soxr_num_clips</ref>(soxr);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Can<sp/>occur<sp/>only<sp/>with<sp/>integer<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Tidy<sp/>up:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><ref refid="soxr_8c_1af3bff5e9b256197fd02730fea110a5ea" kindref="member">soxr_delete</ref>(soxr);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>free(obuf),<sp/>free(ibuf);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Diagnostics:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%-26s<sp/>%s;<sp/>%lu<sp/>clips;<sp/>I/O:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>arg0,<sp/><ref refid="soxr_8h_1a2f44b4b77b6b4f69d9b4fae79c14bcea" kindref="member">soxr_strerror</ref>(error),</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)clips,<sp/>errno?<sp/>strerror(errno)<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error<sp/>||<sp/>errno;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/3-options-input-fn.c"/>
  </compounddef>
</doxygen>
