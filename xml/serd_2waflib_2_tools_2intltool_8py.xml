<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="serd_2waflib_2_tools_2intltool_8py" kind="file" language="Python">
    <compoundname>intltool.py</compoundname>
    <innerclass refid="classwaflib_1_1_tools_1_1intltool_1_1po" prot="public">waflib::Tools::intltool::po</innerclass>
    <innerclass refid="classwaflib_1_1_tools_1_1intltool_1_1intltool" prot="public">waflib::Tools::intltool::intltool</innerclass>
    <innernamespace refid="namespacewaflib_1_1_tools_1_1intltool">waflib::Tools::intltool</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!<sp/>/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>encoding:<sp/>utf-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>WARNING!<sp/>Do<sp/>not<sp/>edit!<sp/>http://waf.googlecode.com/git/docs/wafbook/single.html#_obtaining_the_waf_file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os,re</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>waflib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Configure,TaskGen,Task,Utils,Runner,Options,Build,Logs</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools_1_1ccroot" kindref="compound">waflib.Tools.ccroot</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_task_gen" kindref="compound">waflib.TaskGen</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>feature,before_method</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_logs" kindref="compound">waflib.Logs</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>error</highlight></codeline>
<codeline lineno="10"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a56d188988dd3babc77f1d283e1f8c1b1" kindref="member">before_method</ref>(</highlight><highlight class="stringliteral">&apos;process_source&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a839f18f16539f3131cbe573262099bf1" kindref="member">feature</ref>(</highlight><highlight class="stringliteral">&apos;intltool_in&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1intltool_1aa64909ee30db7f6c262eb9c6bacc5f08" kindref="member">apply_intltool_in_f</ref>(self):</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:self.meths.remove(</highlight><highlight class="stringliteral">&apos;process_source&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ValueError:</highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.env.LOCALEDIR:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.env.LOCALEDIR=self.env.PREFIX+</highlight><highlight class="stringliteral">&apos;/share/locale&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.to_list(self.source):</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node=self.path.find_resource(i)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>podir=getattr(self,</highlight><highlight class="stringliteral">&apos;podir&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;po&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>podirnode=self.path.find_dir(podir)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>podirnode:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(</highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>find<sp/>the<sp/>podir<sp/>%r&quot;</highlight><highlight class="normal">%podir)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache=getattr(self,</highlight><highlight class="stringliteral">&apos;intlcache&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;.intlcache&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.env[</highlight><highlight class="stringliteral">&apos;INTLCACHE&apos;</highlight><highlight class="normal">]=os.path.join(self.path.bldpath(),podir,cache)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.env[</highlight><highlight class="stringliteral">&apos;INTLPODIR&apos;</highlight><highlight class="normal">]=podirnode.bldpath()</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.env[</highlight><highlight class="stringliteral">&apos;INTLFLAGS&apos;</highlight><highlight class="normal">]=getattr(self,</highlight><highlight class="stringliteral">&apos;flags&apos;</highlight><highlight class="normal">,[</highlight><highlight class="stringliteral">&apos;-q&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-u&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-c&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task=self.create_task(</highlight><highlight class="stringliteral">&apos;intltool&apos;</highlight><highlight class="normal">,node,node.change_ext(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inst=getattr(self,</highlight><highlight class="stringliteral">&apos;install_path&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;${LOCALEDIR}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>inst:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.bld.install_files(inst,task.outputs)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a839f18f16539f3131cbe573262099bf1" kindref="member">feature</ref>(</highlight><highlight class="stringliteral">&apos;intltool_po&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1intltool_1a8e47eb8e5671c4d3f18cdb788a5868b6" kindref="member">apply_intltool_po</ref>(self):</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:self.meths.remove(</highlight><highlight class="stringliteral">&apos;process_source&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ValueError:</highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.env.LOCALEDIR:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.env.LOCALEDIR=self.env.PREFIX+</highlight><highlight class="stringliteral">&apos;/share/locale&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>appname=getattr(self,</highlight><highlight class="stringliteral">&apos;appname&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;set_your_app_name&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>podir=getattr(self,</highlight><highlight class="stringliteral">&apos;podir&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>inst=getattr(self,</highlight><highlight class="stringliteral">&apos;install_path&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;${LOCALEDIR}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>linguas=self.path.find_node(os.path.join(podir,</highlight><highlight class="stringliteral">&apos;LINGUAS&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>linguas:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file=open(linguas.abspath())</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>langs=[]</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>file.readlines():</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>line.startswith(</highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>langs+=line.split()</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file.close()</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>re_linguas=re.compile(</highlight><highlight class="stringliteral">&apos;[-a-zA-Z_@.]+&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>lang<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>langs:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>re_linguas.match(lang):</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node=self.path.find_resource(os.path.join(podir,re_linguas.match(lang).group()+</highlight><highlight class="stringliteral">&apos;.po&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task=self.create_task(</highlight><highlight class="stringliteral">&apos;po&apos;</highlight><highlight class="normal">,node,node.change_ext(</highlight><highlight class="stringliteral">&apos;.mo&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>inst:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename=task.outputs[0].name</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(langname,ext)=os.path.splitext(filename)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inst_file=inst+os.sep+langname+os.sep+</highlight><highlight class="stringliteral">&apos;LC_MESSAGES&apos;</highlight><highlight class="normal">+os.sep+appname+</highlight><highlight class="stringliteral">&apos;.mo&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.bld.install_as(inst_file,task.outputs[0],chmod=getattr(self,</highlight><highlight class="stringliteral">&apos;chmod&apos;</highlight><highlight class="normal">,Utils.O644),env=task.env)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.pprint(</highlight><highlight class="stringliteral">&apos;RED&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Error<sp/>no<sp/>LINGUAS<sp/>file<sp/>found<sp/>in<sp/>po<sp/>directory&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">po(Task.Task):</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>run_str=</highlight><highlight class="stringliteral">&apos;${MSGFMT}<sp/>-o<sp/>${TGT}<sp/>${SRC}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>color=</highlight><highlight class="stringliteral">&apos;BLUE&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">intltool(Task.Task):</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>run_str=</highlight><highlight class="stringliteral">&apos;${INTLTOOL}<sp/>${INTLFLAGS}<sp/>${INTLCACHE}<sp/>${INTLPODIR}<sp/>${SRC}<sp/>${TGT}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>color=</highlight><highlight class="stringliteral">&apos;BLUE&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1intltool_1a6e857d8fd69986194be76352936c4db1" kindref="member">configure</ref>(conf):</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.find_program(</highlight><highlight class="stringliteral">&apos;msgfmt&apos;</highlight><highlight class="normal">,var=</highlight><highlight class="stringliteral">&apos;MSGFMT&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.find_perl_program(</highlight><highlight class="stringliteral">&apos;intltool-merge&apos;</highlight><highlight class="normal">,var=</highlight><highlight class="stringliteral">&apos;INTLTOOL&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>prefix=conf.env.PREFIX</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>datadir=conf.env.DATADIR</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>datadir:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datadir=os.path.join(prefix,</highlight><highlight class="stringliteral">&apos;share&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.define(</highlight><highlight class="stringliteral">&apos;LOCALEDIR&apos;</highlight><highlight class="normal">,os.path.join(datadir,</highlight><highlight class="stringliteral">&apos;locale&apos;</highlight><highlight class="normal">).<ref refid="namespacewaflib_1_1_tools_1_1errcheck_1a3c373d095646ee41f81dd43ade9e0b63" kindref="member">replace</ref>(</highlight><highlight class="stringliteral">&apos;\\&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;\\\\&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.define(</highlight><highlight class="stringliteral">&apos;DATADIR&apos;</highlight><highlight class="normal">,datadir.replace(</highlight><highlight class="stringliteral">&apos;\\&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;\\\\&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>conf.env.CC<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>conf.env.CXX:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.check(header_name=</highlight><highlight class="stringliteral">&apos;locale.h&apos;</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/waflib/Tools/intltool.py"/>
  </compounddef>
</doxygen>
