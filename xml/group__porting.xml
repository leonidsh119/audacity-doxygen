<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="group__porting" kind="group">
    <compoundname>porting</compoundname>
    <title>Porting Guide for New Versions</title>
    <innergroup refid="group__porting__1__1__2__to__1__1__3">Porting from FLAC 1.1.2 to 1.1.3</innergroup>
    <innergroup refid="group__porting__1__1__3__to__1__1__4">Porting from FLAC 1.1.3 to 1.1.4</innergroup>
    <innergroup refid="group__porting__1__1__4__to__1__2__0">Porting from FLAC 1.1.4 to 1.2.0</innergroup>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This module describes differences in the library interfaces from version to version. It assists in the porting of code that uses the libraries to newer versions of <ref refid="namespace_f_l_a_c" kindref="compound">FLAC</ref>.</para><para>One simple facility for making porting easier that has been added in <ref refid="namespace_f_l_a_c" kindref="compound">FLAC</ref> 1.1.3 is a set of <computeroutput>#defines</computeroutput> in <computeroutput>export.h</computeroutput> of each library&apos;s includes (e.g. <computeroutput><ref refid="lib-src_2libflac_2include_2_f_l_a_c_2export_8h" kindref="compound">include/FLAC/export.h</ref></computeroutput>). The <computeroutput>#defines</computeroutput> mirror the libraries&apos; <ulink url="http://www.gnu.org/software/libtool/manual/libtool.html#Libtool-versioning">libtool version numbers</ulink>, e.g. in libFLAC there are <computeroutput>FLAC_API_VERSION_CURRENT</computeroutput>, <computeroutput>FLAC_API_VERSION_REVISION</computeroutput>, and <computeroutput>FLAC_API_VERSION_AGE</computeroutput>. These can be used to support multiple versions of an API during the transition phase, e.g.</para><para><programlisting><codeline><highlight class="normal">#if<sp/>!defined(FLAC_API_VERSION_CURRENT)<sp/>||<sp/>FLAC_API_VERSION_CURRENT<sp/>&lt;=<sp/>7</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>legacy<sp/>code</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>new<sp/>code</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
</programlisting></para><para>The the source will work for multiple versions and the legacy code can easily be removed when the transition is complete.</para><para>Another available symbol is FLAC_API_SUPPORTS_OGG_FLAC (defined in <ref refid="lib-src_2libflac_2include_2_f_l_a_c_2export_8h" kindref="compound">include/FLAC/export.h</ref>), which can be used to determine whether or not the library has been compiled with support for Ogg <ref refid="namespace_f_l_a_c" kindref="compound">FLAC</ref>. This is simpler than trying to call an Ogg init function and catching the error. </para>    </detaileddescription>
  </compounddef>
</doxygen>
