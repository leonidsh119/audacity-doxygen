<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="group__lavc__resample" kind="group">
    <compoundname>lavc_resample</compoundname>
    <title>Audio resampling</title>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__lavc__resample_1ga0051f36cfec3437423a131c085ff5ea2" prot="public" static="no">
        <type>struct <ref refid="group__lavc__resample_1ga0051f36cfec3437423a131c085ff5ea2" kindref="member">ReSampleContext</ref></type>
        <definition>typedef struct ReSampleContext ReSampleContext</definition>
        <argsstring></argsstring>
        <name>ReSampleContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4381" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="4400" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__lavc__resample_1ga6837453b6819cf2f4d26c2d320b1d696" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="group__lavc__resample_1ga0051f36cfec3437423a131c085ff5ea2" kindref="member">ReSampleContext</ref> *</type>
        <definition>attribute_deprecated ReSampleContext* av_audio_resample_init</definition>
        <argsstring>(int output_channels, int input_channels, int output_rate, int input_rate, enum AVSampleFormat sample_fmt_out, enum AVSampleFormat sample_fmt_in, int filter_length, int log2_phase_count, int linear, double cutoff)</argsstring>
        <name>av_audio_resample_init</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>output_channels</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>input_channels</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>output_rate</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>input_rate</declname>
        </param>
        <param>
          <type>enum <ref refid="samplefmt_8h_1af9a51ca15301871723577c730b5865c5" kindref="member">AVSampleFormat</ref></type>
          <declname>sample_fmt_out</declname>
        </param>
        <param>
          <type>enum <ref refid="samplefmt_8h_1af9a51ca15301871723577c730b5865c5" kindref="member">AVSampleFormat</ref></type>
          <declname>sample_fmt_in</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>filter_length</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>log2_phase_count</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>linear</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cutoff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize audio resampling context.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output_channels</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output channels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input_channels</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input channels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output_rate</parametername>
</parameternamelist>
<parameterdescription>
<para>output sample rate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input_rate</parametername>
</parameternamelist>
<parameterdescription>
<para>input sample rate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sample_fmt_out</parametername>
</parameternamelist>
<parameterdescription>
<para>requested output sample format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sample_fmt_in</parametername>
</parameternamelist>
<parameterdescription>
<para>input sample format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter_length</parametername>
</parameternamelist>
<parameterdescription>
<para>length of each FIR filter in the filterbank relative to the cutoff frequency </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>log2_phase_count</parametername>
</parameternamelist>
<parameterdescription>
<para>log2 of the number of entries in the polyphase filterbank </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linear</parametername>
</parameternamelist>
<parameterdescription>
<para>if 1 then the used FIR filter will be linearly interpolated between the 2 closest, if 0 the closest will be used </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cutoff</parametername>
</parameternamelist>
<parameterdescription>
<para>cutoff frequency, 1.0 corresponds to half the output sampling rate </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>allocated ReSampleContext, NULL if error occurred </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4419" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__resample_1ga4a2391f7d72287f478ae9dfc0ae373f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>attribute_deprecated int audio_resample</definition>
        <argsstring>(ReSampleContext *s, short *output, short *input, int nb_samples)</argsstring>
        <name>audio_resample</name>
        <param>
          <type><ref refid="group__lavc__resample_1ga0051f36cfec3437423a131c085ff5ea2" kindref="member">ReSampleContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>nb_samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4427" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__resample_1ga06447648458074fba375b9cc069664e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>attribute_deprecated void audio_resample_close</definition>
        <argsstring>(ReSampleContext *s)</argsstring>
        <name>audio_resample_close</name>
        <param>
          <type><ref refid="group__lavc__resample_1ga0051f36cfec3437423a131c085ff5ea2" kindref="member">ReSampleContext</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free resample context.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>a non-NULL pointer to a resample context previously created with <ref refid="group__lavc__resample_1ga6837453b6819cf2f4d26c2d320b1d696" kindref="member">av_audio_resample_init()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4436" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__resample_1ga9f11d551d458bb904e1078c65121fe03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> struct AVResampleContext *</type>
        <definition>attribute_deprecated struct AVResampleContext* av_resample_init</definition>
        <argsstring>(int out_rate, int in_rate, int filter_length, int log2_phase_count, int linear, double cutoff)</argsstring>
        <name>av_resample_init</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>out_rate</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>in_rate</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>filter_length</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>log2_phase_count</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>linear</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cutoff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize an audio resampler. Note, if either rate is not an integer then simply scale both rates up so they are. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filter_length</parametername>
</parameternamelist>
<parameterdescription>
<para>length of each FIR filter in the filterbank relative to the cutoff freq </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>log2_phase_count</parametername>
</parameternamelist>
<parameterdescription>
<para>log2 of the number of entries in the polyphase filterbank </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linear</parametername>
</parameternamelist>
<parameterdescription>
<para>If 1 then the used FIR filter will be linearly interpolated between the 2 closest, if 0 the closest will be used </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cutoff</parametername>
</parameternamelist>
<parameterdescription>
<para>cutoff frequency, 1.0 corresponds to half the output sampling rate </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4449" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__resample_1gaced5571eafa8e23a25b96e1755f8f65c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>attribute_deprecated int av_resample</definition>
        <argsstring>(struct AVResampleContext *c, short *dst, short *src, int *consumed, int src_size, int dst_size, int update_ctx)</argsstring>
        <name>av_resample</name>
        <param>
          <type>struct AVResampleContext *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>consumed</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>src_size</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>dst_size</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>update_ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_resample" kindref="compound">Resample</ref> an array of samples using a previously configured context. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of unconsumed samples </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>consumed</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of samples of src which have been consumed are returned here </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of unconsumed samples available </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the amount of space in samples available in dst </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>update_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>If this is 0 then the context will not be modified, that way several channels can be resampled with the same context. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of samples written in dst or -1 if an error occurred </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4461" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__resample_1gadf6acc7cdbbf2fe8d6a7990a22662c0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>attribute_deprecated void av_resample_compensate</definition>
        <argsstring>(struct AVResampleContext *c, int sample_delta, int compensation_distance)</argsstring>
        <name>av_resample_compensate</name>
        <param>
          <type>struct AVResampleContext *</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>sample_delta</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>compensation_distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compensate samplerate/timestamp drift. The compensation is done by changing the resampler parameters, so no audible clicks or similar distortions occur <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compensation_distance</parametername>
</parameternamelist>
<parameterdescription>
<para>distance in output samples over which the compensation should be performed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sample_delta</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output samples which should be output less</para></parameterdescription>
</parameteritem>
</parameterlist>
example: av_resample_compensate(c, 10, 500) here instead of 510 samples only 500 samples would be output</para><para>note, due to rounding the actual compensation might be slightly different, especially if the compensation_distance is large and the in_rate used during init is small </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4477" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__resample_1ga2901688d58c5a64b97436288b301ad18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>attribute_deprecated void av_resample_close</definition>
        <argsstring>(struct AVResampleContext *c)</argsstring>
        <name>av_resample_close</name>
        <param>
          <type>struct AVResampleContext *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4479" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000010"><xreftitle>Deprecated</xreftitle><xrefdescription><para>use libswresample instead</para></xrefdescription></xrefsect></para>    </detaileddescription>
  </compounddef>
</doxygen>
