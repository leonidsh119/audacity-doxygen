<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="lilv_2waflib_2_tools_2vala_8py" kind="file" language="Python">
    <compoundname>vala.py</compoundname>
    <innerclass refid="classwaflib_1_1_tools_1_1vala_1_1valac" prot="public">waflib::Tools::vala::valac</innerclass>
    <innernamespace refid="namespacewaflib_1_1_tools_1_1vala">waflib::Tools::vala</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacewaflib_1_1_tools_1_1vala" refkind="compound"><highlight class="comment">#!<sp/>/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>encoding:<sp/>utf-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>WARNING!<sp/>Do<sp/>not<sp/>edit!<sp/>http://waf.googlecode.com/git/docs/wafbook/single.html#_obtaining_the_waf_file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os.path,shutil,re</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>waflib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Context,Task,Utils,Logs,Options,Errors</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_task_gen" kindref="compound">waflib.TaskGen</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>extension,taskgen_method</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_configure" kindref="compound">waflib.Configure</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>conf</highlight></codeline>
<codeline lineno="9" refid="classwaflib_1_1_tools_1_1vala_1_1valac" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1vala_1_1valac" kindref="compound">valac</ref>(<ref refid="classwaflib_1_1_task_1_1_task" kindref="compound">Task.Task</ref>):</highlight></codeline>
<codeline lineno="10" refid="classwaflib_1_1_tools_1_1vala_1_1valac_1a0ee3c3bbaf3101f29bb38f1cda5befa8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>vars=[</highlight><highlight class="stringliteral">&quot;VALAC&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;VALAC_VERSION&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;VALAFLAGS&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="11" refid="classwaflib_1_1_tools_1_1vala_1_1valac_1a25947a1acce51cf10cde7b8d66f932b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ext_out=[</highlight><highlight class="stringliteral">&apos;.h&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="12" refid="classwaflib_1_1_tools_1_1vala_1_1valac_1a605d28e4c33834d34d4a10a21d657f77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1vala_1_1valac_1a605d28e4c33834d34d4a10a21d657f77" kindref="member">run</ref>(self):</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd=[self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref>[</highlight><highlight class="stringliteral">&apos;VALAC&apos;</highlight><highlight class="normal">]]+self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref>[</highlight><highlight class="stringliteral">&apos;VALAFLAGS&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd.extend([a.abspath()</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1a84db2881aae1bcc2ad19c0eecf24804c" kindref="member">inputs</ref>])</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret=self.<ref refid="classwaflib_1_1_task_1_1_task_base_1a6326ff82d67a2b629c8d78b95cb8fec6" kindref="member">exec_command</ref>(cmd,cwd=self.<ref refid="classwaflib_1_1_task_1_1_task_1a7183c692f1eb01b9f7e66daca035bce4" kindref="member">outputs</ref>[0].parent.abspath())</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ret:</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1a7183c692f1eb01b9f7e66daca035bce4" kindref="member">outputs</ref>:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>id(x.parent)!=id(self.<ref refid="classwaflib_1_1_task_1_1_task_1a7183c692f1eb01b9f7e66daca035bce4" kindref="member">outputs</ref>[0].parent):</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shutil.move(self.<ref refid="classwaflib_1_1_task_1_1_task_1a7183c692f1eb01b9f7e66daca035bce4" kindref="member">outputs</ref>[0].parent.abspath()+os.sep+x.name,x.abspath())</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.generator.dump_deps_node:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.generator.dump_deps_node.write(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">.join(self.generator.packages))</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret</highlight></codeline>
<codeline lineno="24"><highlight class="normal">valac=Task.update_outputs(valac)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">@taskgen_method</highlight></codeline>
<codeline lineno="26" refid="namespacewaflib_1_1_tools_1_1vala_1afedcf657dff8a988abdf3f52dc1b1584" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1vala_1afedcf657dff8a988abdf3f52dc1b1584" kindref="member">init_vala_task</ref>(self):</highlight></codeline>
<codeline lineno="27" refid="namespacewaflib_1_1_tools_1_1vala_1ac0c3b4f3bf828ae6dda80b90a16994e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.profile=getattr(self,</highlight><highlight class="stringliteral">&apos;profile&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;gobject&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.profile==</highlight><highlight class="stringliteral">&apos;gobject&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29" refid="namespacewaflib_1_1_tools_1_1vala_1ae1307477fe2c49e6c3c5b324108e7e9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.uselib=Utils.to_list(getattr(self,</highlight><highlight class="stringliteral">&apos;uselib&apos;</highlight><highlight class="normal">,[]))</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;GOBJECT&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.uselib:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.uselib.append(</highlight><highlight class="stringliteral">&apos;GOBJECT&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">addflags(flags):</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.env.append_value(</highlight><highlight class="stringliteral">&apos;VALAFLAGS&apos;</highlight><highlight class="normal">,flags)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.profile:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addflags(</highlight><highlight class="stringliteral">&apos;--profile=%s&apos;</highlight><highlight class="normal">%self.profile)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasattr(self,</highlight><highlight class="stringliteral">&apos;threading&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.profile==</highlight><highlight class="stringliteral">&apos;gobject&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;GTHREAD&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.uselib:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.uselib.append(</highlight><highlight class="stringliteral">&apos;GTHREAD&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.warn(</highlight><highlight class="stringliteral">&quot;Profile<sp/>%s<sp/>means<sp/>no<sp/>threading<sp/>support&quot;</highlight><highlight class="normal">%self.profile)</highlight></codeline>
<codeline lineno="42" refid="namespacewaflib_1_1_tools_1_1vala_1a5324237aeb8614255136caaa81f95154" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.threading=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.threading:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addflags(</highlight><highlight class="stringliteral">&apos;--threading&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>valatask=self.valatask</highlight></codeline>
<codeline lineno="46" refid="namespacewaflib_1_1_tools_1_1vala_1a87b3d15fccce2261a30b1fd250af9d2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.is_lib=</highlight><highlight class="stringliteral">&apos;cprogram&apos;</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.features</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.is_lib:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addflags(</highlight><highlight class="stringliteral">&apos;--library=%s&apos;</highlight><highlight class="normal">%self.target)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_node=self.path.find_or_declare(</highlight><highlight class="stringliteral">&apos;%s.h&apos;</highlight><highlight class="normal">%self.target)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valatask.outputs.append(h_node)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addflags(</highlight><highlight class="stringliteral">&apos;--header=%s&apos;</highlight><highlight class="normal">%h_node.name)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valatask.outputs.append(self.path.find_or_declare(</highlight><highlight class="stringliteral">&apos;%s.vapi&apos;</highlight><highlight class="normal">%self.target))</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>getattr(self,</highlight><highlight class="stringliteral">&apos;gir&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gir_node=self.path.find_or_declare(</highlight><highlight class="stringliteral">&apos;%s.gir&apos;</highlight><highlight class="normal">%self.gir)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addflags(</highlight><highlight class="stringliteral">&apos;--gir=%s&apos;</highlight><highlight class="normal">%gir_node.name)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valatask.outputs.append(gir_node)</highlight></codeline>
<codeline lineno="57" refid="namespacewaflib_1_1_tools_1_1vala_1aeb3f063bb00b999bcee84bfb8b9f6d29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.vala_target_glib=getattr(self,</highlight><highlight class="stringliteral">&apos;vala_target_glib&apos;</highlight><highlight class="normal">,getattr(Options.options,</highlight><highlight class="stringliteral">&apos;vala_target_glib&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.vala_target_glib:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addflags(</highlight><highlight class="stringliteral">&apos;--target-glib=%s&apos;</highlight><highlight class="normal">%self.vala_target_glib)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>addflags([</highlight><highlight class="stringliteral">&apos;--define=%s&apos;</highlight><highlight class="normal">%x<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>getattr(self,</highlight><highlight class="stringliteral">&apos;vala_defines&apos;</highlight><highlight class="normal">,[])])</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>packages_private=Utils.to_list(getattr(self,</highlight><highlight class="stringliteral">&apos;packages_private&apos;</highlight><highlight class="normal">,[]))</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>addflags([</highlight><highlight class="stringliteral">&apos;--pkg=%s&apos;</highlight><highlight class="normal">%x<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>packages_private])</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_get_api_version():</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_version=</highlight><highlight class="stringliteral">&apos;1.0&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasattr(Context.g_module,</highlight><highlight class="stringliteral">&apos;API_VERSION&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version=Context.g_module.API_VERSION.split(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>version[0]==</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_version=</highlight><highlight class="stringliteral">&quot;0.&quot;</highlight><highlight class="normal">+version[1]</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_version=version[0]+</highlight><highlight class="stringliteral">&quot;.0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api_version</highlight></codeline>
<codeline lineno="72" refid="namespacewaflib_1_1_tools_1_1vala_1adc79ca8e84ec2047379c7a5acdd6b148" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.includes=Utils.to_list(getattr(self,</highlight><highlight class="stringliteral">&apos;includes&apos;</highlight><highlight class="normal">,[]))</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>self.uselib=self.to_list(getattr(self,</highlight><highlight class="stringliteral">&apos;uselib&apos;</highlight><highlight class="normal">,[]))</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>valatask.install_path=getattr(self,</highlight><highlight class="stringliteral">&apos;install_path&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>valatask.vapi_path=getattr(self,</highlight><highlight class="stringliteral">&apos;vapi_path&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;${DATAROOTDIR}/vala/vapi&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>valatask.pkg_name=getattr(self,</highlight><highlight class="stringliteral">&apos;pkg_name&apos;</highlight><highlight class="normal">,self.env[</highlight><highlight class="stringliteral">&apos;PACKAGE&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>valatask.header_path=getattr(self,</highlight><highlight class="stringliteral">&apos;header_path&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;${INCLUDEDIR}/%s-%s&apos;</highlight><highlight class="normal">%(valatask.pkg_name,_get_api_version()))</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>valatask.install_binding=getattr(self,</highlight><highlight class="stringliteral">&apos;install_binding&apos;</highlight><highlight class="normal">,</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="79" refid="namespacewaflib_1_1_tools_1_1vala_1a8238eaae6fab21857172c5d14cd274a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.packages=packages=Utils.to_list(getattr(self,</highlight><highlight class="stringliteral">&apos;packages&apos;</highlight><highlight class="normal">,[]))</highlight></codeline>
<codeline lineno="80" refid="namespacewaflib_1_1_tools_1_1vala_1aa257ce1418040461bced7d2d05bdaf75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.vapi_dirs=vapi_dirs=Utils.to_list(getattr(self,</highlight><highlight class="stringliteral">&apos;vapi_dirs&apos;</highlight><highlight class="normal">,[]))</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>includes=[]</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasattr(self,</highlight><highlight class="stringliteral">&apos;use&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_packages=Utils.to_list(self.use)[:]</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seen=[]</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>len(local_packages)&gt;0:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>package=local_packages.pop()</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>package<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>seen:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seen.append(package)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>package_obj=self.bld.get_tgen_by_name(package)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/><ref refid="classwaflib_1_1_errors_1_1_waf_error" kindref="compound">Errors.WafError</ref>:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>package_name=package_obj.target</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>package_node=package_obj.path</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>package_dir=package_node.path_from(self.path)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>task<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>package_obj.tasks:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>output<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>task.outputs:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>output.name==package_name+</highlight><highlight class="stringliteral">&quot;.vapi&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valatask.set_run_after(task)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>package_name<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>packages:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packages.append(package_name)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>package_dir<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>vapi_dirs:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vapi_dirs.append(package_dir)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>package_dir<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>includes:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>includes.append(package_dir)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasattr(package_obj,</highlight><highlight class="stringliteral">&apos;use&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst=self.to_list(package_obj.use)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst.reverse()</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_packages=[pkg<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>pkg<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lst<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pkg<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>seen]+local_packages</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>addflags([</highlight><highlight class="stringliteral">&apos;--pkg=%s&apos;</highlight><highlight class="normal">%p<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>packages])</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>vapi_dir<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>vapi_dirs:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_node=self.path.find_dir(vapi_dir)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>v_node:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.warn(</highlight><highlight class="stringliteral">&apos;Unable<sp/>to<sp/>locate<sp/>Vala<sp/>API<sp/>directory:<sp/>%r&apos;</highlight><highlight class="normal">%vapi_dir)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addflags(</highlight><highlight class="stringliteral">&apos;--vapidir=%s&apos;</highlight><highlight class="normal">%v_node.abspath())</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addflags(</highlight><highlight class="stringliteral">&apos;--vapidir=%s&apos;</highlight><highlight class="normal">%v_node.get_bld().abspath())</highlight></codeline>
<codeline lineno="119" refid="namespacewaflib_1_1_tools_1_1vala_1ac017e8cf8d9237c8906ee97a3bcec0e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.dump_deps_node=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.is_lib<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.packages:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.dump_deps_node=self.path.find_or_declare(</highlight><highlight class="stringliteral">&apos;%s.deps&apos;</highlight><highlight class="normal">%self.target)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valatask.outputs.append(self.dump_deps_node)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>self.includes.append(self.bld.srcnode.abspath())</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>self.includes.append(self.bld.bldnode.abspath())</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>include<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>includes:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.includes.append(self.path.find_dir(include).abspath())</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.includes.append(self.path.find_dir(include).get_bld().abspath())</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.warn(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>locate<sp/>include<sp/>directory:<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">%include)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.is_lib<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>valatask.install_binding:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>headers_list=[o<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>o<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>valatask.outputs<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>o.suffix()==</highlight><highlight class="stringliteral">&quot;.h&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.install_vheader.source=headers_list</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="136" refid="namespacewaflib_1_1_tools_1_1vala_1af800b938b7287032b592a0db86b3345b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.install_vheader=self.bld.install_files(valatask.header_path,headers_list,self.env)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vapi_list=[o<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>o<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>valatask.outputs<sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref>(o.suffix()<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>(</highlight><highlight class="stringliteral">&quot;.vapi&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;.deps&quot;</highlight><highlight class="normal">))]</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.install_vapi.source=vapi_list</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="141" refid="namespacewaflib_1_1_tools_1_1vala_1a16c49317454c9080e0dee44e07f00d09" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.install_vapi=self.bld.install_files(valatask.vapi_path,vapi_list,self.env)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gir_list=[o<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>o<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>valatask.outputs<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>o.suffix()==</highlight><highlight class="stringliteral">&apos;.gir&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.install_gir.source=gir_list</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="146" refid="namespacewaflib_1_1_tools_1_1vala_1a6d5b038dc439abe3c8b941a02977614d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.install_gir=self.bld.install_files(getattr(self,</highlight><highlight class="stringliteral">&apos;gir_path&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;${DATAROOTDIR}/gir-1.0&apos;</highlight><highlight class="normal">),gir_list,self.env)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1ab4b159e661d17937cf1be8254dedb12f" kindref="member">extension</ref>(</highlight><highlight class="stringliteral">&apos;.vala&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;.gs&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="148" refid="namespacewaflib_1_1_tools_1_1vala_1a6baf611b698503ed4c43e8ff2e870acd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1vala_1a6baf611b698503ed4c43e8ff2e870acd" kindref="member">vala_file</ref>(self,node):</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valatask=self.valatask</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="152" refid="namespacewaflib_1_1_tools_1_1vala_1ad126b4a64437383ddaf43ac3b47df2c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valatask=self.valatask=self.create_task(</highlight><highlight class="stringliteral">&apos;valac&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.init_vala_task()</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>valatask.inputs.append(node)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>c_node=node.change_ext(</highlight><highlight class="stringliteral">&apos;.c&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>valatask.outputs.append(c_node)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>self.source.append(c_node)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="159" refid="namespacewaflib_1_1_tools_1_1vala_1afcb54ec67c0f38a26b8cf34ae9c89b7b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1vala_1afcb54ec67c0f38a26b8cf34ae9c89b7b" kindref="member">find_valac</ref>(self,valac_name,min_version):</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>valac=self.find_program(valac_name,var=</highlight><highlight class="stringliteral">&apos;VALAC&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output=self.cmd_and_log(valac+</highlight><highlight class="stringliteral">&apos;<sp/>--version&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valac_version=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ver=re.search(</highlight><highlight class="stringliteral">r&apos;\d+.\d+.\d+&apos;</highlight><highlight class="normal">,output).group(0).split(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valac_version=tuple([<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>(x)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ver])</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>self.msg(</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>%s<sp/>version<sp/>&gt;=<sp/>%r&apos;</highlight><highlight class="normal">%(valac_name,min_version),valac_version,valac_version<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>valac_version&gt;=min_version)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>valac<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>valac_version&lt;min_version:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(</highlight><highlight class="stringliteral">&quot;%s<sp/>version<sp/>%r<sp/>is<sp/>too<sp/>old,<sp/>need<sp/>&gt;=<sp/>%r&quot;</highlight><highlight class="normal">%(valac_name,valac_version,min_version))</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>self.env[</highlight><highlight class="stringliteral">&apos;VALAC_VERSION&apos;</highlight><highlight class="normal">]=valac_version</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>valac</highlight></codeline>
<codeline lineno="173"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="174" refid="namespacewaflib_1_1_tools_1_1vala_1a3093897181665808445ee213a19a6d64" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1vala_1a3093897181665808445ee213a19a6d64" kindref="member">check_vala</ref>(self,min_version=(0,8,0),branch=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>branch:</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>branch=min_version[:2]</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1_tools_1_1vala_1afcb54ec67c0f38a26b8cf34ae9c89b7b" kindref="member">find_valac</ref>(self,</highlight><highlight class="stringliteral">&apos;valac-%d.%d&apos;</highlight><highlight class="normal">%(branch[0],branch[1]),min_version)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>self.errors.ConfigurationError:</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1_tools_1_1vala_1afcb54ec67c0f38a26b8cf34ae9c89b7b" kindref="member">find_valac</ref>(self,</highlight><highlight class="stringliteral">&apos;valac&apos;</highlight><highlight class="normal">,min_version)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="182" refid="namespacewaflib_1_1_tools_1_1vala_1a0e50168b039627d93b07929537af57af" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1vala_1a0e50168b039627d93b07929537af57af" kindref="member">check_vala_deps</ref>(self):</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.env[</highlight><highlight class="stringliteral">&apos;HAVE_GOBJECT&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pkg_args={</highlight><highlight class="stringliteral">&apos;package&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;gobject-2.0&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;uselib_store&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;GOBJECT&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;args&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;--cflags<sp/>--libs&apos;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>getattr(Options.options,</highlight><highlight class="stringliteral">&apos;vala_target_glib&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pkg_args[</highlight><highlight class="stringliteral">&apos;atleast_version&apos;</highlight><highlight class="normal">]=Options.options.vala_target_glib</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.check_cfg(**pkg_args)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.env[</highlight><highlight class="stringliteral">&apos;HAVE_GTHREAD&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pkg_args={</highlight><highlight class="stringliteral">&apos;package&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;gthread-2.0&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;uselib_store&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;GTHREAD&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;args&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;--cflags<sp/>--libs&apos;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>getattr(Options.options,</highlight><highlight class="stringliteral">&apos;vala_target_glib&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pkg_args[</highlight><highlight class="stringliteral">&apos;atleast_version&apos;</highlight><highlight class="normal">]=Options.options.vala_target_glib</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.check_cfg(**pkg_args)</highlight></codeline>
<codeline lineno="193" refid="namespacewaflib_1_1_tools_1_1vala_1aa13ac0bb84782b53e5cf4761adb55657" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1vala_1aa13ac0bb84782b53e5cf4761adb55657" kindref="member">configure</ref>(self):</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>self.load(</highlight><highlight class="stringliteral">&apos;gnu_dirs&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>self.check_vala_deps()</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>self.check_vala()</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>self.env.VALAFLAGS=[</highlight><highlight class="stringliteral">&apos;-C&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;--quiet&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="198" refid="namespacewaflib_1_1_tools_1_1vala_1a17771e1da92206049384a4fea5523b78" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1vala_1a17771e1da92206049384a4fea5523b78" kindref="member">options</ref>(opt):</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>opt.load(</highlight><highlight class="stringliteral">&apos;gnu_dirs&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>valaopts=opt.add_option_group(</highlight><highlight class="stringliteral">&apos;Vala<sp/>Compiler<sp/>Options&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>valaopts.add_option(</highlight><highlight class="stringliteral">&apos;--vala-target-glib&apos;</highlight><highlight class="normal">,default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,dest=</highlight><highlight class="stringliteral">&apos;vala_target_glib&apos;</highlight><highlight class="normal">,metavar=</highlight><highlight class="stringliteral">&apos;MAJOR.MINOR&apos;</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&apos;Target<sp/>version<sp/>of<sp/>glib<sp/>for<sp/>Vala<sp/>GObject<sp/>code<sp/>generation&apos;</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/waflib/Tools/vala.py"/>
  </compounddef>
</doxygen>
