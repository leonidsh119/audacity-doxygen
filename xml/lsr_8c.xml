<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="lsr_8c" kind="file" language="C++">
    <compoundname>lsr.c</compoundname>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="soxr_8h" local="yes">soxr.h</includes>
    <includes refid="soxr-lsr_8h" local="yes">soxr-lsr.h</includes>
    <includes refid="rint_8h" local="yes">rint.h</includes>
    <incdepgraph>
      <node id="21206">
        <label>stdlib.h</label>
      </node>
      <node id="21204">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c</label>
        <link refid="lsr.c"/>
        <childnode refid="21205" relation="include">
        </childnode>
        <childnode refid="21206" relation="include">
        </childnode>
        <childnode refid="21207" relation="include">
        </childnode>
        <childnode refid="21209" relation="include">
        </childnode>
        <childnode refid="21210" relation="include">
        </childnode>
      </node>
      <node id="21208">
        <label>stddef.h</label>
      </node>
      <node id="21205">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="21210">
        <label>rint.h</label>
        <link refid="rint_8h"/>
        <childnode refid="21211" relation="include">
        </childnode>
      </node>
      <node id="21211">
        <label>soxr-config.h</label>
      </node>
      <node id="21207">
        <label>soxr.h</label>
        <link refid="soxr_8h"/>
        <childnode refid="21208" relation="include">
        </childnode>
      </node>
      <node id="21209">
        <label>soxr-lsr.h</label>
        <link refid="soxr-lsr_8h"/>
      </node>
    </incdepgraph>
    <innerclass refid="structio__t" prot="public">io_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="lsr_8c_1af3b2f81e680b267a1ff8790be79c8d6f" prot="public" static="no">
        <name>SRC_DATA</name>
        <initializer><ref refid="structio__t" kindref="compound">io_t</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="13" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lsr_8c_1af36ed608e03b5972b4ff25e127d0f94a" prot="public" static="no">
        <name>src_callback_t</name>
        <initializer><ref refid="soxr_8h_1a75de274660354270e1e92a4b66a6e915" kindref="member">soxr_input_fn_t</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="15" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lsr_8c_1ac9f78af09ea0531cd87a00335bff00cd" prot="public" static="no">
        <name>SRC_ERROR</name>
        <initializer><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="16" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lsr_8c_1add63a8a34cd52a3e67af4ebdaaa9d624" prot="public" static="no">
        <name>SRC_SRCTYPE</name>
        <initializer>unsigned</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="17" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="lsr_8c_1a32f4c85c7f603e3819bad6546818de41" prot="public" static="no">
        <type>struct <ref refid="structio__t" kindref="compound">io_t</ref></type>
        <definition>typedef struct io_t  io_t</definition>
        <argsstring></argsstring>
        <name>io_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="12" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="lsr_8c_1af3b690745d177a40cb1ba01f5804378b" prot="public" static="no">
        <type>struct <ref refid="structsoxr" kindref="compound">soxr</ref></type>
        <definition>typedef struct soxr SRC_STATE</definition>
        <argsstring></argsstring>
        <name>SRC_STATE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="37" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="lsr_8c_1a2d30b928e153a71f6139b15731d1d373" prot="public" static="yes" mutable="no">
        <type>char <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref></type>
        <definition>char const* const names[]</definition>
        <argsstring>[]</argsstring>
        <name>names</name>
        <initializer>= {&quot;LSR best sinc&quot;, &quot;LSR medium sinc&quot;, &quot;LSR fastest sinc&quot;, &quot;LSR ZOH&quot;, &quot;LSR linear&quot;, &quot;SoX VHQ&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="104" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lsr_8c_1af1ad40e6a46d42f2d77afd5fc18f7427" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref></type>
        <definition>soxr_error_t src_simple</definition>
        <argsstring>(io_t *p, unsigned id, int channels)</argsstring>
        <name>src_simple</name>
        <param>
          <type><ref refid="structio__t" kindref="compound">io_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="22" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="22" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="lsr_8c_1ac1c51c1518426411436f251146d33041" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
        <definition>soxr_t src_callback_new</definition>
        <argsstring>(soxr_input_fn_t fn, unsigned id, int channels, SRC_ERROR *error0, void *p)</argsstring>
        <name>src_callback_new</name>
        <param>
          <type><ref refid="soxr_8h_1a75de274660354270e1e92a4b66a6e915" kindref="member">soxr_input_fn_t</ref></type>
          <declname>fn</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channels</declname>
        </param>
        <param>
          <type><ref refid="soxr-lsr_8h_1a430d922cd937a18ab0bce9f817baecfe" kindref="member">SRC_ERROR</ref> *</type>
          <declname>error0</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="39" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="39" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="lsr_8c_1a4c2d54fa4ab90e28af2e8999d2747a65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref></type>
        <definition>soxr_error_t src_process</definition>
        <argsstring>(soxr_t p, io_t *io)</argsstring>
        <name>src_process</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structio__t" kindref="compound">io_t</ref> *</type>
          <declname>io</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="59" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="59" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="lsr_8c_1a0989280879727045098e684b34cc6594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long src_callback_read</definition>
        <argsstring>(soxr_t p, double oi_ratio, long olen, float *obuf)</argsstring>
        <name>src_callback_read</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>oi_ratio</declname>
        </param>
        <param>
          <type>long</type>
          <declname>olen</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>obuf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="71" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="71" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="lsr_8c_1a003e74fa7d9a049347788df48ba28a06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void src_float_to_short_array</definition>
        <argsstring>(float const *src, short *dest, int len)</argsstring>
        <name>src_float_to_short_array</name>
        <param>
          <type>float <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="78" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="78" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="lsr_8c_1a3e154849f6115af5401c40b988298d91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void src_short_to_float_array</definition>
        <argsstring>(short const *src, float *dest, int len)</argsstring>
        <name>src_short_to_float_array</name>
        <param>
          <type>short <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="85" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="85" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="lsr_8c_1aa64e0b8918271729be0b7cb2401e3ef3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void src_float_to_int_array</definition>
        <argsstring>(float const *src, int *dest, int len)</argsstring>
        <name>src_float_to_int_array</name>
        <param>
          <type>float <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="91" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="91" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="lsr_8c_1a212c794020d7344f8bedd7ebf10ec457" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void src_int_to_float_array</definition>
        <argsstring>(int const *src, float *dest, int len)</argsstring>
        <name>src_int_to_float_array</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="98" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="98" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="lsr_8c_1aa95444f6df9231a8b0ff6d58ff3f7540" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
        <definition>char const* src_get_name</definition>
        <argsstring>(unsigned n)</argsstring>
        <name>src_get_name</name>
        <param>
          <type>unsigned</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="105" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="lsr_8c_1a05845a402d71e0ca7c38a876e5be5931" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
        <definition>char const* src_get_description</definition>
        <argsstring>(unsigned id)</argsstring>
        <name>src_get_description</name>
        <param>
          <type>unsigned</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="106" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="lsr_8c_1a19c5aa8553215726f5b4bbd044c167c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
        <definition>char const* src_get_version</definition>
        <argsstring>(void)</argsstring>
        <name>src_get_version</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="107" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="lsr_8c_1acb71bd29fed25bae2ec393d833a07719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
        <definition>char const* src_strerror</definition>
        <argsstring>(soxr_error_t error)</argsstring>
        <name>src_strerror</name>
        <param>
          <type><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref></type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="108" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="lsr_8c_1a4fdf2f1efb108b054bc1689ccda739bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int src_is_valid_ratio</definition>
        <argsstring>(double oi_ratio)</argsstring>
        <name>src_is_valid_ratio</name>
        <param>
          <type>double</type>
          <declname>oi_ratio</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="109" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="lsr_8c_1a433d961a70976cbbe6be1962c90f2d11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref></type>
        <definition>soxr_error_t src_error</definition>
        <argsstring>(soxr_t p)</argsstring>
        <name>src_error</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="110" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="lsr_8c_1ab8bb147efa2670341b4b460037bfa73a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref></type>
        <definition>soxr_error_t src_reset</definition>
        <argsstring>(soxr_t p)</argsstring>
        <name>src_reset</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="111" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="lsr_8c_1a89442a21c0b901e0f7dbe4ef330dd7a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
        <definition>soxr_t src_delete</definition>
        <argsstring>(soxr_t p)</argsstring>
        <name>src_delete</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="112" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="lsr_8c_1ad9acdac39e4e80167a9418d7fabd0082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref></type>
        <definition>soxr_error_t src_set_ratio</definition>
        <argsstring>(soxr_t p, double oi_ratio)</argsstring>
        <name>src_set_ratio</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>oi_ratio</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="113" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="lsr_8c_1a98dbd2124b92ef9c70708f120e1b9cbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
        <definition>soxr_t src_new</definition>
        <argsstring>(unsigned id, int channels, SRC_ERROR *error)</argsstring>
        <name>src_new</name>
        <param>
          <type>unsigned</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channels</declname>
        </param>
        <param>
          <type><ref refid="soxr-lsr_8h_1a430d922cd937a18ab0bce9f817baecfe" kindref="member">SRC_ERROR</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" line="114" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c" bodystart="114" bodyend="114"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>SoX<sp/>Resampler<sp/>Library<sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2007-13<sp/>robs@users.sourceforge.net</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licence<sp/>for<sp/>this<sp/>file:<sp/>LGPL<sp/>v2.1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>See<sp/>LICENCE<sp/>for<sp/>details.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Wrapper<sp/>mostly<sp/>compatible<sp/>with<sp/>`libsamplerate&apos;.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="soxr_8h" kindref="compound">soxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Runtime<sp/>casts:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="structio__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio__t" kindref="compound">io_t</ref><sp/>{</highlight></codeline>
<codeline lineno="12" refid="structio__t_1a7b0d24f27a02a9463729fd249a7cde92" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structio__t_1a14bfa8629c0718832491dfce0a901541" kindref="member">in</ref>,*<ref refid="structio__t_1a7b0d24f27a02a9463729fd249a7cde92" kindref="member">out</ref>;<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structio__t_1a35fa9a6d9d270f8b0cfac647fc601320" kindref="member">ilen</ref>,<ref refid="structio__t_1ada97da468f87f6edf29b5e74851f6ec1" kindref="member">olen</ref>,<ref refid="structio__t_1a6b516e6573f44ec3439ba54dd01a3d6d" kindref="member">idone</ref>,<ref refid="structio__t_1a214ab873ded1d3f2848e96b2826fd541" kindref="member">odone</ref>;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structio__t_1a8f13f87a9b78c97729609ce579098a12" kindref="member">eoi</ref>;<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structio__t_1abe24f477b0a765c6cfdd143aa55d892e" kindref="member">oi_ratio</ref>;}<sp/><ref refid="lsr_8c_1a32f4c85c7f603e3819bad6546818de41" kindref="member">io_t</ref>;</highlight></codeline>
<codeline lineno="13" refid="lsr_8c_1af3b2f81e680b267a1ff8790be79c8d6f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SRC_DATA<sp/>io_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="lsr_8c_1af3b690745d177a40cb1ba01f5804378b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="structsoxr" kindref="compound">soxr</ref><sp/><ref refid="structsoxr" kindref="compound">SRC_STATE</ref>;</highlight></codeline>
<codeline lineno="15" refid="lsr_8c_1af36ed608e03b5972b4ff25e127d0f94a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>src_callback_t<sp/>soxr_input_fn_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="lsr_8c_1ac9f78af09ea0531cd87a00335bff00cd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SRC_ERROR<sp/>soxr_error_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="lsr_8c_1add63a8a34cd52a3e67af4ebdaaa9d624" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SRC_SRCTYPE<sp/>unsigned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="soxr-lsr_8h" kindref="compound">soxr-lsr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rint_8h" kindref="compound">rint.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="lsr_8c_1af1ad40e6a46d42f2d77afd5fc18f7427" refkind="member"><highlight class="normal"><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="lsr_8c_1af1ad40e6a46d42f2d77afd5fc18f7427" kindref="member">src_simple</ref>(<ref refid="structio__t" kindref="compound">io_t</ref><sp/>*<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structio__t_1a6b516e6573f44ec3439ba54dd01a3d6d" kindref="member">idone</ref>,<sp/><ref refid="structio__t_1a214ab873ded1d3f2848e96b2826fd541" kindref="member">odone</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><ref refid="structsoxr__quality__spec" kindref="compound">soxr_quality_spec_t</ref><sp/><ref refid="structsoxr_1ad86308d2e768fb9f67ec488772e73d5c" kindref="member">q_spec</ref><sp/>=<sp/><ref refid="soxr_8c_1a8bc34e71491e5ab698dcccdfc06c7ad8" kindref="member">soxr_quality_spec</ref>(<ref refid="soxr_8h_1aef7077df634ff6a262698dd0a92cb904" kindref="member">SOXR_LSR0Q</ref><sp/>+<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref><sp/>=<sp/><ref refid="getopt_8c_1abc6595dbf6880c71628fecf0dbb23d66" kindref="member">getenv</ref>(</highlight><highlight class="stringliteral">&quot;SOXR_LSR_NUM_THREADS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="structsoxr__runtime__spec" kindref="compound">soxr_runtime_spec_t</ref><sp/>r_spec<sp/>=<sp/><ref refid="soxr_8c_1adef2594d0bbe957075423c9450477fc2" kindref="member">soxr_runtime_spec</ref>(!(e<sp/>&amp;&amp;<sp/>atoi(e)<sp/>!=<sp/>1));</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref><sp/>(channels<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref><sp/>(p-&gt;<ref refid="structio__t_1a35fa9a6d9d270f8b0cfac647fc601320" kindref="member">ilen</ref><sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref><sp/>(p-&gt;<ref refid="structio__t_1ada97da468f87f6edf29b5e74851f6ec1" kindref="member">olen</ref><sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>error<sp/>=<sp/><ref refid="soxr_8c_1aca5d92f0da0d2dab566516564ab69e28" kindref="member">soxr_oneshot</ref>(1,<sp/>p-&gt;<ref refid="structio__t_1abe24f477b0a765c6cfdd143aa55d892e" kindref="member">oi_ratio</ref>,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)channels,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structio__t_1a14bfa8629c0718832491dfce0a901541" kindref="member">in</ref>,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)p-&gt;<ref refid="structio__t_1a35fa9a6d9d270f8b0cfac647fc601320" kindref="member">ilen</ref>,<sp/>&amp;idone,<sp/>p-&gt;<ref refid="structio__t_1a7b0d24f27a02a9463729fd249a7cde92" kindref="member">out</ref>,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)p-&gt;<ref refid="structio__t_1ada97da468f87f6edf29b5e74851f6ec1" kindref="member">olen</ref>,<sp/>&amp;odone,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>&amp;q_spec,<sp/>&amp;r_spec);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structio__t_1a6b516e6573f44ec3439ba54dd01a3d6d" kindref="member">idone</ref><sp/>=<sp/>(long)idone,<sp/>p-&gt;<ref refid="structio__t_1a214ab873ded1d3f2848e96b2826fd541" kindref="member">odone</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<ref refid="structio__t_1a214ab873ded1d3f2848e96b2826fd541" kindref="member">odone</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="lsr_8c_1ac1c51c1518426411436f251146d33041" refkind="member"><highlight class="normal"><ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/><ref refid="lsr_8c_1ac1c51c1518426411436f251146d33041" kindref="member">src_callback_new</ref>(<ref refid="soxr_8h_1a75de274660354270e1e92a4b66a6e915" kindref="member">soxr_input_fn_t</ref><sp/><ref refid="filters_8h_1af9d9c04c1350b9a6f62c9a09d378b91b" kindref="member">fn</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels,<sp/><ref refid="soxr-lsr_8h_1a430d922cd937a18ab0bce9f817baecfe" kindref="member">SRC_ERROR</ref><sp/>*<sp/>error0,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="structsoxr__quality__spec" kindref="compound">soxr_quality_spec_t</ref><sp/><ref refid="structsoxr_1ad86308d2e768fb9f67ec488772e73d5c" kindref="member">q_spec</ref><sp/>=<sp/><ref refid="soxr_8c_1a8bc34e71491e5ab698dcccdfc06c7ad8" kindref="member">soxr_quality_spec</ref>(<ref refid="soxr_8h_1aef7077df634ff6a262698dd0a92cb904" kindref="member">SOXR_LSR0Q</ref><sp/>+<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref><sp/>=<sp/><ref refid="getopt_8c_1abc6595dbf6880c71628fecf0dbb23d66" kindref="member">getenv</ref>(</highlight><highlight class="stringliteral">&quot;SOXR_LSR_NUM_THREADS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="structsoxr__runtime__spec" kindref="compound">soxr_runtime_spec_t</ref><sp/>r_spec<sp/>=<sp/><ref refid="soxr_8c_1adef2594d0bbe957075423c9450477fc2" kindref="member">soxr_runtime_spec</ref>(!(e<sp/>&amp;&amp;<sp/>atoi(e)<sp/>!=<sp/>1));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/><ref refid="structsoxr" kindref="compound">soxr</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref><sp/>(channels<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>To<sp/>minimise<sp/>latency<sp/>e.g.<sp/>for<sp/>real-time<sp/>playback:</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/>if<sp/>(id<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/>r_spec.log2_large_dft_size<sp/>=<sp/>r_spec.log2_min_dft_size<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>soxr<sp/>=<sp/><ref refid="soxr_8c_1a763983e4a1f00869383ba22421b768e5" kindref="member">soxr_create</ref>(0,<sp/>0,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)channels,<sp/>&amp;error,<sp/>0,<sp/>&amp;q_spec,<sp/>&amp;r_spec);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(soxr)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="soxr_8c_1a5ef8012f6d313a2887c135359af035f6" kindref="member">soxr_set_input_fn</ref>(soxr,<sp/>fn,<sp/>p,<sp/>0);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error0)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>*(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)error0<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(ptrdiff_t)error;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>soxr;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="lsr_8c_1a4c2d54fa4ab90e28af2e8999d2747a65" refkind="member"><highlight class="normal"><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="lsr_8c_1a4c2d54fa4ab90e28af2e8999d2747a65" kindref="member">src_process</ref>(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/><ref refid="structio__t" kindref="compound">io_t</ref><sp/>*<sp/>io)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p<sp/>||<sp/>!io)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;null<sp/>pointer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="soxr_8c_1a02c27ecbb519f99e44db7e61800db57c" kindref="member">soxr_set_error</ref>(p,<sp/><ref refid="soxr_8c_1ab9cd1051c49c8a0fa8cc8957d1a7186e" kindref="member">soxr_set_io_ratio</ref>(p,<sp/>1/io-&gt;<ref refid="structio__t_1abe24f477b0a765c6cfdd143aa55d892e" kindref="member">oi_ratio</ref>,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)io-&gt;<ref refid="structio__t_1ada97da468f87f6edf29b5e74851f6ec1" kindref="member">olen</ref>));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structio__t_1a6b516e6573f44ec3439ba54dd01a3d6d" kindref="member">idone</ref><sp/>,<sp/><ref refid="structio__t_1a214ab873ded1d3f2848e96b2826fd541" kindref="member">odone</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="soxr_8c_1a853769187cb96f9e89aadcfe8a0deb10" kindref="member">soxr_process</ref>(p,<sp/>io-&gt;<ref refid="structio__t_1a14bfa8629c0718832491dfce0a901541" kindref="member">in</ref>,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(io-&gt;<ref refid="structio__t_1a8f13f87a9b78c97729609ce579098a12" kindref="member">eoi</ref>?<sp/>~io-&gt;<ref refid="structio__t_1a35fa9a6d9d270f8b0cfac647fc601320" kindref="member">ilen</ref><sp/>:<sp/>io-&gt;<ref refid="structio__t_1a35fa9a6d9d270f8b0cfac647fc601320" kindref="member">ilen</ref>),<sp/></highlight><highlight class="comment">/*<sp/>hack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;idone,<sp/>io-&gt;<ref refid="structio__t_1a7b0d24f27a02a9463729fd249a7cde92" kindref="member">out</ref>,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)io-&gt;<ref refid="structio__t_1ada97da468f87f6edf29b5e74851f6ec1" kindref="member">olen</ref>,<sp/>&amp;odone);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>io-&gt;<ref refid="structio__t_1a6b516e6573f44ec3439ba54dd01a3d6d" kindref="member">idone</ref><sp/>=<sp/>(long)idone,<sp/>io-&gt;<ref refid="structio__t_1a214ab873ded1d3f2848e96b2826fd541" kindref="member">odone</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<ref refid="structio__t_1a214ab873ded1d3f2848e96b2826fd541" kindref="member">odone</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="soxr_8c_1a51a9c751bbd6d122e55f7aad7b31ccea" kindref="member">soxr_error</ref>(p);<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="lsr_8c_1a0989280879727045098e684b34cc6594" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lsr_8c_1a0989280879727045098e684b34cc6594" kindref="member">src_callback_read</ref>(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structio__t_1abe24f477b0a765c6cfdd143aa55d892e" kindref="member">oi_ratio</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structio__t_1ada97da468f87f6edf29b5e74851f6ec1" kindref="member">olen</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>obuf)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p<sp/>||<sp/>olen<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="soxr_8c_1a02c27ecbb519f99e44db7e61800db57c" kindref="member">soxr_set_error</ref>(p,<sp/><ref refid="soxr_8c_1ab9cd1051c49c8a0fa8cc8957d1a7186e" kindref="member">soxr_set_io_ratio</ref>(p,<sp/>1/oi_ratio,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)olen));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<ref refid="soxr_8c_1ae01b0184f5952309aa868d2d3dbd92d7" kindref="member">soxr_output</ref>(p,<sp/>obuf,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)olen);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="soxr-lsr_8h_1a29d6130b4770d0cacf3474275f6e1419" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lsr_8c_1a003e74fa7d9a049347788df48ba28a06" kindref="member">src_float_to_short_array</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>src,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>,<sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref><sp/>=<sp/>1.<sp/>+<sp/>SHRT_MAX;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref><sp/>(src<sp/>&amp;&amp;<sp/>dest);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len--)<sp/>d<sp/>=<sp/>src[<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>]<sp/>*<sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>,<sp/>dest[<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>]<sp/>=<sp/>(short)(d<sp/>&gt;<sp/>N<sp/>-<sp/>1?<sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)(N<sp/>-<sp/>1)<sp/>:<sp/>d<sp/>&lt;<sp/>-N?<sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)-N<sp/>:<sp/><ref refid="rint_8h_1a10606628b8eb18a3e8730e5aa5311c29" kindref="member">rint16</ref>(d));</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="soxr-lsr_8h_1a1e675a44f62fc7e44d777354b076920f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lsr_8c_1a3e154849f6115af5401c40b988298d91" kindref="member">src_short_to_float_array</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>src,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref><sp/>(src<sp/>&amp;&amp;<sp/>dest);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len--)<sp/>dest[<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>]<sp/>=<sp/>(float)(src[len]<sp/>*<sp/>(1<sp/>/<sp/>(1.<sp/>+<sp/>SHRT_MAX)));</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="soxr-lsr_8h_1afe9201c807ce2501a03a08e594852ec2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lsr_8c_1aa64e0b8918271729be0b7cb2401e3ef3" kindref="member">src_float_to_int_array</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>,<sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref><sp/>=<sp/>32768.<sp/>*<sp/>65536.;<sp/></highlight><highlight class="comment">/*<sp/>N.B.<sp/>int32,<sp/>not<sp/>int!<sp/>(Also<sp/>next<sp/>fn.)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref><sp/>(src<sp/>&amp;&amp;<sp/>dest);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len--)<sp/>d<sp/>=<sp/>src[<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>]<sp/>*<sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>,<sp/>dest[<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>]<sp/>=<sp/>d<sp/>&gt;=<sp/>N<sp/>-<sp/>1?<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(N<sp/>-<sp/>1)<sp/>:<sp/>d<sp/>&lt;<sp/>-N?<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(-N)<sp/>:<sp/><ref refid="rint_8h_1a36052787328a325be43e56aaca27dacc" kindref="member">rint32</ref>(d);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="soxr-lsr_8h_1a1bfe57bbce3ea32abe7e10f0ee34dfe9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lsr_8c_1a212c794020d7344f8bedd7ebf10ec457" kindref="member">src_int_to_float_array</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>src,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref><sp/>(src<sp/>&amp;&amp;<sp/>dest);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len--)<sp/>dest[<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>]<sp/>=<sp/>(float)(src[len]<sp/>*<sp/>(1<sp/>/<sp/>(32768.<sp/>*<sp/>65536.)));</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>names[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;LSR<sp/>best<sp/>sinc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;LSR<sp/>medium<sp/>sinc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;LSR<sp/>fastest<sp/>sinc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;LSR<sp/>ZOH&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;LSR<sp/>linear&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SoX<sp/>VHQ&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="105" refid="lsr_8c_1aa95444f6df9231a8b0ff6d58ff3f7540" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="lsr_8c_1aa95444f6df9231a8b0ff6d58ff3f7540" kindref="member">src_get_name</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n<sp/>&lt;<sp/>5u<sp/>+<sp/>!<ref refid="getopt_8c_1abc6595dbf6880c71628fecf0dbb23d66" kindref="member">getenv</ref>(</highlight><highlight class="stringliteral">&quot;SOXR_LSR_STRICT&quot;</highlight><highlight class="normal">)?<sp/>names[n]<sp/>:<sp/>0;}</highlight></codeline>
<codeline lineno="106" refid="lsr_8c_1a05845a402d71e0ca7c38a876e5be5931" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="lsr_8c_1a05845a402d71e0ca7c38a876e5be5931" kindref="member">src_get_description</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lsr_8c_1aa95444f6df9231a8b0ff6d58ff3f7540" kindref="member">src_get_name</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="107" refid="soxr-lsr_8h_1aeb019f98200ac7d8474e9397eef7527b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="lsr_8c_1a19c5aa8553215726f5b4bbd044c167c6" kindref="member">src_get_version</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="soxr_8c_1a720fb029d3c0845c3a3aba9bcf2b16e4" kindref="member">soxr_version</ref>();}</highlight></codeline>
<codeline lineno="108" refid="lsr_8c_1acb71bd29fed25bae2ec393d833a07719" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="lsr_8c_1acb71bd29fed25bae2ec393d833a07719" kindref="member">src_strerror</ref>(<ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error<sp/>==<sp/>(<ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref>)1?<sp/></highlight><highlight class="stringliteral">&quot;Placeholder.&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>||<sp/>!error<sp/>?<sp/><ref refid="soxr_8h_1a2f44b4b77b6b4f69d9b4fae79c14bcea" kindref="member">soxr_strerror</ref>(error)<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;soxr<sp/>error&quot;</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="109" refid="soxr-lsr_8h_1a94fedb86bb8b09a1cbcdac92364eb757" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lsr_8c_1a4fdf2f1efb108b054bc1689ccda739bc" kindref="member">src_is_valid_ratio</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structio__t_1abe24f477b0a765c6cfdd143aa55d892e" kindref="member">oi_ratio</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt_8c_1abc6595dbf6880c71628fecf0dbb23d66" kindref="member">getenv</ref>(</highlight><highlight class="stringliteral">&quot;SOXR_LSR_STRICT&quot;</highlight><highlight class="normal">)?<sp/>oi_ratio<sp/>&gt;=<sp/>1./256<sp/>&amp;&amp;<sp/>oi_ratio<sp/>&lt;=<sp/>256<sp/>:<sp/>oi_ratio<sp/>&gt;<sp/>0;}</highlight></codeline>
<codeline lineno="110" refid="lsr_8c_1a433d961a70976cbbe6be1962c90f2d11" refkind="member"><highlight class="normal"><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="lsr_8c_1a433d961a70976cbbe6be1962c90f2d11" kindref="member">src_error</ref>(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="soxr_8c_1a51a9c751bbd6d122e55f7aad7b31ccea" kindref="member">soxr_error</ref>(p);}</highlight></codeline>
<codeline lineno="111" refid="lsr_8c_1ab8bb147efa2670341b4b460037bfa73a" refkind="member"><highlight class="normal"><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="lsr_8c_1ab8bb147efa2670341b4b460037bfa73a" kindref="member">src_reset</ref>(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="soxr_8c_1afecae2e5d944a6e4ba9eccd18f5584e2" kindref="member">soxr_clear</ref>(p);}</highlight></codeline>
<codeline lineno="112" refid="lsr_8c_1a89442a21c0b901e0f7dbe4ef330dd7a5" refkind="member"><highlight class="normal"><ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/><ref refid="lsr_8c_1a89442a21c0b901e0f7dbe4ef330dd7a5" kindref="member">src_delete</ref>(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="soxr_8c_1af3bff5e9b256197fd02730fea110a5ea" kindref="member">soxr_delete</ref>(p);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}</highlight></codeline>
<codeline lineno="113" refid="lsr_8c_1ad9acdac39e4e80167a9418d7fabd0082" refkind="member"><highlight class="normal"><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="lsr_8c_1ad9acdac39e4e80167a9418d7fabd0082" kindref="member">src_set_ratio</ref>(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structio__t_1abe24f477b0a765c6cfdd143aa55d892e" kindref="member">oi_ratio</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="soxr_8c_1ab9cd1051c49c8a0fa8cc8957d1a7186e" kindref="member">soxr_set_io_ratio</ref>(p,<sp/>1/oi_ratio,<sp/>0);}</highlight></codeline>
<codeline lineno="114" refid="lsr_8c_1a98dbd2124b92ef9c70708f120e1b9cbe" refkind="member"><highlight class="normal"><ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/><ref refid="lsr_8c_1a98dbd2124b92ef9c70708f120e1b9cbe" kindref="member">src_new</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels,<sp/><ref refid="soxr-lsr_8h_1a430d922cd937a18ab0bce9f817baecfe" kindref="member">SRC_ERROR</ref><sp/>*<sp/><ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lsr_8c_1ac1c51c1518426411436f251146d33041" kindref="member">src_callback_new</ref>(0,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>channels,<sp/>error,<sp/>0);}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/lsr.c"/>
  </compounddef>
</doxygen>
