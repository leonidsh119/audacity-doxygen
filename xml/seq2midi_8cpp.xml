<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="seq2midi_8cpp" kind="file" language="C++">
    <compoundname>seq2midi.cpp</compoundname>
    <includes local="no">fstream</includes>
    <includes refid="allegro_8h" local="yes">allegro.h</includes>
    <includes refid="porttime_8h" local="yes">porttime.h</includes>
    <includes refid="portmidi_8h" local="yes">portmidi.h</includes>
    <includes refid="portsmf_2apps_2midicode_8h" local="yes">midicode.h</includes>
    <incdepgraph>
      <node id="31479">
        <label>allegro.h</label>
        <link refid="allegro_8h"/>
        <childnode refid="31480" relation="include">
        </childnode>
        <childnode refid="31481" relation="include">
        </childnode>
        <childnode refid="31482" relation="include">
        </childnode>
      </node>
      <node id="31484">
        <label>stdint.h</label>
      </node>
      <node id="31483">
        <label>porttime.h</label>
        <link refid="porttime_8h"/>
        <childnode refid="31484" relation="include">
        </childnode>
      </node>
      <node id="31480">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="31478">
        <label>fstream</label>
      </node>
      <node id="31482">
        <label>ostream</label>
      </node>
      <node id="31477">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp</label>
        <link refid="seq2midi.cpp"/>
        <childnode refid="31478" relation="include">
        </childnode>
        <childnode refid="31479" relation="include">
        </childnode>
        <childnode refid="31483" relation="include">
        </childnode>
        <childnode refid="31485" relation="include">
        </childnode>
        <childnode refid="31486" relation="include">
        </childnode>
      </node>
      <node id="31485">
        <label>portmidi.h</label>
        <link refid="portmidi_8h"/>
        <childnode refid="31484" relation="include">
        </childnode>
      </node>
      <node id="31481">
        <label>istream</label>
      </node>
      <node id="31486">
        <label>midicode.h</label>
        <link refid="portsmf_2apps_2midicode_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="seq2midi_8cpp_1acd66e8cacf954c3bc3bba81d09425a12" prot="public" static="no">
        <name>ROUND</name>
        <param><defname>x</defname></param>
        <initializer>(<ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>) ((x)+0.5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" line="12" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="seq2midi_8cpp_1a3a32062110fa975b1721c449fa7863dc" prot="public" static="no">
        <name>never</name>
        <initializer>1000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" line="41" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="seq2midi_8cpp_1a2c1ffd106e7ef0d7722be20be0b77803" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* pressure_attr</definition>
        <argsstring></argsstring>
        <name>pressure_attr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" line="82" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="seq2midi_8cpp_1a46d5b71c872fc669bcdc716b989230f6" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* bend_attr</definition>
        <argsstring></argsstring>
        <name>bend_attr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" line="83" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="seq2midi_8cpp_1a84b7c9982f54b4917146b243a68bf58f" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* program_attr</definition>
        <argsstring></argsstring>
        <name>program_attr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" line="84" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="seq2midi_8cpp_1afd1cb7ce7f5888541ce8d0375c4362b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double time_elapsed</definition>
        <argsstring>()</argsstring>
        <name>time_elapsed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" line="15" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" bodystart="15" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="seq2midi_8cpp_1a13ae98030df5c7bdc7ed36e446f76f8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void wait_until</definition>
        <argsstring>(double time)</argsstring>
        <name>wait_until</name>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" line="21" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" bodystart="21" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="seq2midi_8cpp_1a8de0ef23d41028ebfa17b95bf061d63d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void midi_note_on</definition>
        <argsstring>(PortMidiStream *midi, double when, int chan, int key, int loud)</argsstring>
        <name>midi_note_on</name>
        <param>
          <type><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>when</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>chan</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>loud</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" line="43" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" bodystart="43" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="seq2midi_8cpp_1ac3f0abbf4865a6f573ec943a22c7b6b0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void midi_channel_message_2</definition>
        <argsstring>(PortMidiStream *midi, double when, int status, int chan, int data)</argsstring>
        <name>midi_channel_message_2</name>
        <param>
          <type><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>when</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>status</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>chan</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" line="56" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" bodystart="56" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="seq2midi_8cpp_1a27e057302e54aa1b4ce2f22b9a1c9bd5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void midi_channel_message</definition>
        <argsstring>(PortMidiStream *midi, double when, int status, int chan, int data, int data2)</argsstring>
        <name>midi_channel_message</name>
        <param>
          <type><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>when</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>status</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>chan</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>data2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" line="68" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" bodystart="68" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="seq2midi_8cpp_1a1219d16be687736c97105bf27756e603" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void send_midi_update</definition>
        <argsstring>(Alg_update_ptr u, PortMidiStream *midi)</argsstring>
        <name>send_midi_update</name>
        <param>
          <type><ref refid="allegro_8h_1a6d95856d6fa2d9efcd3e2c0046c2989a" kindref="member">Alg_update_ptr</ref></type>
          <declname>u</declname>
        </param>
        <param>
          <type><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" line="87" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" bodystart="87" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="seq2midi_8cpp_1acf02dc87a223001119be1760dca31d0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void seq2midi</definition>
        <argsstring>(Alg_seq &amp;seq, PortMidiStream *midi)</argsstring>
        <name>seq2midi</name>
        <param>
          <type><ref refid="class_alg__seq" kindref="compound">Alg_seq</ref> &amp;</type>
          <declname>seq</declname>
        </param>
        <param>
          <type><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" line="116" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" bodystart="116" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="seq2midi_8cpp_1a3c19d9addce72f3f87a9847d97de5980" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void seq_play</definition>
        <argsstring>(Alg_seq &amp;seq)</argsstring>
        <name>seq_play</name>
        <param>
          <type><ref refid="class_alg__seq" kindref="compound">Alg_seq</ref> &amp;</type>
          <declname>seq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" line="149" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp" bodystart="149" bodyend="166"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>seq2midi.cpp<sp/>--<sp/>simple<sp/>sequence<sp/>player,<sp/>intended<sp/>to<sp/>help<sp/>test/demo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>allegro<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="allegro_8h" kindref="compound">allegro.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="porttime_8h" kindref="compound">porttime.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="portmidi_8h" kindref="compound">portmidi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="portsmf_2apps_2midicode_8h" kindref="compound">midicode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="seq2midi_8cpp_1acd66e8cacf954c3bc3bba81d09425a12" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ROUND(x)<sp/>(int)<sp/>((x)+0.5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="seq2midi_8cpp_1afd1cb7ce7f5888541ce8d0375c4362b6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="seq2midi_8cpp_1afd1cb7ce7f5888541ce8d0375c4362b6" kindref="member">time_elapsed</ref>()</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="porttime_8h_1a9a335bb8c04c85bf85d807dd448d72d0" kindref="member">Pt_Time</ref>()<sp/>*<sp/>0.001;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="seq2midi_8cpp_1a13ae98030df5c7bdc7ed36e446f76f8f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="seq2midi_8cpp_1a13ae98030df5c7bdc7ed36e446f76f8f" kindref="member">wait_until</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref>)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>&quot;.&quot;<sp/>to<sp/>stdout<sp/>while<sp/>waiting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>last_time<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>now<sp/>=<sp/><ref refid="seq2midi_8cpp_1afd1cb7ce7f5888541ce8d0375c4362b6" kindref="member">time_elapsed</ref>();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(now<sp/>&lt;<sp/>last_time)<sp/>last_time<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(now<sp/>&lt;<sp/>time)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="porttime_8h_1ab9628bde1cf3eef8b5b37c25145b63d9" kindref="member">Pt_Sleep</ref>(1);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now<sp/>=<sp/><ref refid="seq2midi_8cpp_1afd1cb7ce7f5888541ce8d0375c4362b6" kindref="member">time_elapsed</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>now_sec<sp/>=<sp/>(long)<sp/>now;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>last_sec<sp/>=<sp/>(long)<sp/>last_time;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(now_sec<sp/>&gt;<sp/>last_sec)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>,<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_time<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="seq2midi_8cpp_1a3a32062110fa975b1721c449fa7863dc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>never<sp/>1000000<sp/>//<sp/>represents<sp/>infinite<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="seq2midi_8cpp_1a8de0ef23d41028ebfa17b95bf061d63d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="seq2midi_8cpp_1a8de0ef23d41028ebfa17b95bf061d63d" kindref="member">midi_note_on</ref>(<ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref><sp/>*<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>when,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chan,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1a5a5d60bf3f2b4f8782cb5515f887dfc9" kindref="member">loud</ref>)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>timestamp<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)<sp/>(when<sp/>*<sp/>1000);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>chan<sp/>=<sp/>chan<sp/>&amp;<sp/>15;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key<sp/>&gt;<sp/>127)<sp/>key<sp/>=<sp/>127;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key<sp/>&lt;<sp/>0)<sp/>key<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loud<sp/>&gt;<sp/>127)<sp/>loud<sp/>=<sp/>127;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loud<sp/>&lt;<sp/>0)<sp/>loud<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>=<sp/><ref refid="group__grp__events__filters_1gaf1c22515214f7a2cbb1e1e8fb02602bd" kindref="member">Pm_Message</ref>(0x90<sp/>+<sp/>chan,<sp/>key,<sp/>loud);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__grp__io_1ga4a8cdd77e5b2ad4c16338eed475dfc6b" kindref="member">Pm_WriteShort</ref>(midi,<sp/>timestamp,<sp/>data);</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midi_channel_message_2(<ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref><sp/>*<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>when,<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="conv2dtest_8m_1a1b5437a866e6f95107b07ba845bc1800" kindref="member">status</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chan,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>timestamp<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)<sp/>(when<sp/>*<sp/>1000);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>chan<sp/>=<sp/>chan<sp/>&amp;<sp/>15;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>&gt;<sp/>127)<sp/>data<sp/>=<sp/>127;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>&lt;<sp/>0)<sp/>data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>msg<sp/>=<sp/><ref refid="group__grp__events__filters_1gaf1c22515214f7a2cbb1e1e8fb02602bd" kindref="member">Pm_Message</ref>(<ref refid="conv2dtest_8m_1a1b5437a866e6f95107b07ba845bc1800" kindref="member">status</ref><sp/>+<sp/>chan,<sp/>data,<sp/>0);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__grp__io_1ga4a8cdd77e5b2ad4c16338eed475dfc6b" kindref="member">Pm_WriteShort</ref>(<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>,<sp/>timestamp,<sp/>msg);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midi_channel_message(<ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref><sp/>*<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>when,<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="conv2dtest_8m_1a1b5437a866e6f95107b07ba845bc1800" kindref="member">status</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chan,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data2)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>timestamp<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)<sp/>(when<sp/>*<sp/>1000);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>chan<sp/>=<sp/>chan<sp/>&amp;<sp/>15;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>&gt;<sp/>127)<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>=<sp/>127;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>&lt;<sp/>0)<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data2<sp/>&gt;<sp/>127)<sp/>data2<sp/>=<sp/>127;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data2<sp/>&lt;<sp/>0)<sp/>data2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>msg<sp/>=<sp/><ref refid="group__grp__events__filters_1gaf1c22515214f7a2cbb1e1e8fb02602bd" kindref="member">Pm_Message</ref>(<ref refid="conv2dtest_8m_1a1b5437a866e6f95107b07ba845bc1800" kindref="member">status</ref><sp/>+<sp/>chan,<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/>data2);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__grp__io_1ga4a8cdd77e5b2ad4c16338eed475dfc6b" kindref="member">Pm_WriteShort</ref>(<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>,<sp/>timestamp,<sp/>msg);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pressure_attr;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bend_attr;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*program_attr;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="seq2midi_8cpp_1a1219d16be687736c97105bf27756e603" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="seq2midi_8cpp_1a1219d16be687736c97105bf27756e603" kindref="member">send_midi_update</ref>(<ref refid="class_alg__update" kindref="compound">Alg_update_ptr</ref><sp/>u,<sp/><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref><sp/>*<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u-&gt;<ref refid="class_alg__event_1ae2b65f882af7d067bd2ea64f8f85433a" kindref="member">get_attribute</ref>()<sp/>==<sp/>pressure_attr)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u-&gt;<ref refid="class_alg__event_1a63d0c75e88e076602983188043b0da5e" kindref="member">get_identifier</ref>()<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi_channel_message_2(midi,<sp/>u-&gt;<ref refid="class_alg__event_1a7d31289f03b355f25e0ddd4657783a13" kindref="member">time</ref>,<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a3bbe71db78d44f6f45cdd778fc86ffbb" kindref="member">MIDI_TOUCH</ref>,<sp/>u-&gt;<ref refid="class_alg__event_1aad79cff0b92503c9ad4f6fc7a6425d74" kindref="member">chan</ref>,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(u-&gt;<ref refid="class_alg__event_1a155897bdbad31cb8dbd31983638c6cb9" kindref="member">get_real_value</ref>()<sp/>*<sp/>127));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi_channel_message(midi,<sp/>u-&gt;<ref refid="class_alg__event_1a7d31289f03b355f25e0ddd4657783a13" kindref="member">time</ref>,<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1afabc79495fd6a929f4ec570ac1796326" kindref="member">MIDI_POLY_TOUCH</ref>,<sp/>u-&gt;<ref refid="class_alg__event_1aad79cff0b92503c9ad4f6fc7a6425d74" kindref="member">chan</ref>,<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u-&gt;<ref refid="class_alg__event_1a63d0c75e88e076602983188043b0da5e" kindref="member">get_identifier</ref>(),<sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>(u-&gt;<ref refid="class_alg__event_1a155897bdbad31cb8dbd31983638c6cb9" kindref="member">get_real_value</ref>()<sp/>*<sp/>127));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u-&gt;<ref refid="class_alg__event_1ae2b65f882af7d067bd2ea64f8f85433a" kindref="member">get_attribute</ref>()<sp/>==<sp/>bend_attr)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="midifns_8c_1ac29ce357c4c7bfce06bb98b839d38ed2" kindref="member">bend</ref><sp/>=<sp/><ref refid="seq2midi_8cpp_1acd66e8cacf954c3bc3bba81d09425a12" kindref="member">ROUND</ref>((u-&gt;<ref refid="class_alg__event_1a155897bdbad31cb8dbd31983638c6cb9" kindref="member">get_real_value</ref>()<sp/>+<sp/>1)<sp/>*<sp/>8192);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bend<sp/>&gt;<sp/>8191)<sp/>bend<sp/>=<sp/>8191;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bend<sp/>&lt;<sp/>0)<sp/>bend<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi_channel_message(midi,<sp/>u-&gt;<ref refid="class_alg__event_1a7d31289f03b355f25e0ddd4657783a13" kindref="member">time</ref>,<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a0585fa061162b26f17693f0add57db6c" kindref="member">MIDI_BEND</ref>,<sp/>u-&gt;<ref refid="class_alg__event_1aad79cff0b92503c9ad4f6fc7a6425d74" kindref="member">chan</ref>,<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bend<sp/>&gt;&gt;<sp/>7,<sp/>bend<sp/>&amp;<sp/>0x7F);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u-&gt;<ref refid="class_alg__event_1ae2b65f882af7d067bd2ea64f8f85433a" kindref="member">get_attribute</ref>()<sp/>==<sp/>program_attr)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi_channel_message_2(midi,<sp/>u-&gt;<ref refid="class_alg__event_1a7d31289f03b355f25e0ddd4657783a13" kindref="member">time</ref>,<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1ac214d76a2221db38b283109496a784b8" kindref="member">MIDI_CH_PROGRAM</ref>,<sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u-&gt;<ref refid="class_alg__event_1aad79cff0b92503c9ad4f6fc7a6425d74" kindref="member">chan</ref>,<sp/>u-&gt;<ref refid="class_alg__event_1a2d22f645f653bf132b0768fb5fd5b39d" kindref="member">get_integer_value</ref>());</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(</highlight><highlight class="stringliteral">&quot;control&quot;</highlight><highlight class="normal">,<sp/>u-&gt;<ref refid="class_alg__event_1ae2b65f882af7d067bd2ea64f8f85433a" kindref="member">get_attribute</ref>(),<sp/>7)<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u-&gt;<ref refid="class_alg__event_1aec80dc5f09019f34c9950e7143e552f0" kindref="member">get_update_type</ref>()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>control<sp/>=<sp/>atoi(u-&gt;<ref refid="class_alg__event_1ae2b65f882af7d067bd2ea64f8f85433a" kindref="member">get_attribute</ref>()<sp/>+<sp/>7);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val<sp/>=<sp/><ref refid="seq2midi_8cpp_1acd66e8cacf954c3bc3bba81d09425a12" kindref="member">ROUND</ref>(u-&gt;<ref refid="class_alg__event_1a155897bdbad31cb8dbd31983638c6cb9" kindref="member">get_real_value</ref>()<sp/>*<sp/>127);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi_channel_message(midi,<sp/>u-&gt;<ref refid="class_alg__event_1a7d31289f03b355f25e0ddd4657783a13" kindref="member">time</ref>,<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a64b08db61b463b1769d8f18fae1ea8e4" kindref="member">MIDI_CTRL</ref>,<sp/>u-&gt;<ref refid="class_alg__event_1aad79cff0b92503c9ad4f6fc7a6425d74" kindref="member">chan</ref>,<sp/>control,<sp/>val);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="seq2midi_8h_1acf02dc87a223001119be1760dca31d0b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="seq2midi_8cpp_1acf02dc87a223001119be1760dca31d0b" kindref="member">seq2midi</ref>(<ref refid="class_alg__seq" kindref="compound">Alg_seq</ref><sp/>&amp;seq,<sp/><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref><sp/>*<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prepare<sp/>by<sp/>doing<sp/>lookup<sp/>of<sp/>important<sp/>symbols</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>pressure_attr<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;pressurer&quot;</highlight><highlight class="normal">)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>bend_attr<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;bendr&quot;</highlight><highlight class="normal">)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>program_attr<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;programi&quot;</highlight><highlight class="normal">)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_alg__iterator" kindref="compound">Alg_iterator</ref><sp/>iterator(&amp;seq,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator.<ref refid="class_alg__iterator_1a59c05da591cc008ff1be195335646046" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="latency_8c_1a3960aab9a5bdee464614429f8ccb6a80" kindref="member">note_on</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="allegro_8h_1aeb8db009b4ffadef2e7ca0e4936f0307" kindref="member">Alg_event_ptr</ref><sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref><sp/>=<sp/>iterator.<ref refid="class_alg__iterator_1af175a74563cdefc967e4b568763fa818" kindref="member">next</ref>(&amp;note_on);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="porttime_8h_1aa0fd8500047387bbe26b5f1c4d91831c" kindref="member">Pt_Start</ref>(1,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(e)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>next_time<sp/>=<sp/>(note_on<sp/>?<sp/>e-&gt;time<sp/>:<sp/>e-&gt;get_end_time());</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seq2midi_8cpp_1a13ae98030df5c7bdc7ed36e446f76f8f" kindref="member">wait_until</ref>(next_time);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e-&gt;is_note()<sp/>&amp;&amp;<sp/><ref refid="latency_8c_1a3960aab9a5bdee464614429f8ccb6a80" kindref="member">note_on</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>process<sp/>notes<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Note<sp/>at<sp/>%g:<sp/>chan<sp/>%d<sp/>key<sp/>%d<sp/>loud<sp/>%d\n&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_time,<sp/>e-&gt;chan,<sp/>e-&gt;key,<sp/>(int)<sp/>e-&gt;loud);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seq2midi_8cpp_1a8de0ef23d41028ebfa17b95bf061d63d" kindref="member">midi_note_on</ref>(midi,<sp/>next_time,<sp/>e-&gt;chan,<sp/>e-&gt;get_identifier(),</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>e-&gt;get_loud());</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e-&gt;is_note())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>must<sp/>be<sp/>a<sp/>note<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seq2midi_8cpp_1a8de0ef23d41028ebfa17b95bf061d63d" kindref="member">midi_note_on</ref>(midi,<sp/>next_time,<sp/>e-&gt;chan,<sp/>e-&gt;get_identifier(),<sp/>0);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e-&gt;is_update())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>process<sp/>updates<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alg__update" kindref="compound">Alg_update_ptr</ref><sp/>u<sp/>=<sp/>(<ref refid="allegro_8h_1a6d95856d6fa2d9efcd3e2c0046c2989a" kindref="member">Alg_update_ptr</ref>)<sp/>e;<sp/></highlight><highlight class="comment">//<sp/>coerce<sp/>to<sp/>proper<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seq2midi_8cpp_1a1219d16be687736c97105bf27756e603" kindref="member">send_midi_update</ref>(u,<sp/>midi);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>next<sp/>note</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>iterator.<ref refid="class_alg__iterator_1af175a74563cdefc967e4b568763fa818" kindref="member">next</ref>(&amp;note_on);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator.<ref refid="class_alg__iterator_1a92b44e65fa07d97f7f41494b06201543" kindref="member">end</ref>();</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="seq2midi_8h_1a3c19d9addce72f3f87a9847d97de5980" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="seq2midi_8cpp_1a3c19d9addce72f3f87a9847d97de5980" kindref="member">seq_play</ref>(<ref refid="class_alg__seq" kindref="compound">Alg_seq</ref><sp/>&amp;seq)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref><sp/>*mo;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1a5e9d0c116061f0cc25fb789fc393b417" kindref="member">Pm_Initialize</ref>();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref><sp/>dev<sp/>=<sp/><ref refid="portmidi_8h_1a5fc98bd54bd260f0db1e4e67513c838d" kindref="member">Pm_GetDefaultOutputDeviceID</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>the<sp/>Pt_Time<sp/>type<sp/>cast<sp/>is<sp/>required<sp/>because<sp/>Pt_Time<sp/>does<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>take<sp/>an<sp/>input<sp/>parameter,<sp/>whereas<sp/>for<sp/>generality,<sp/>PortMidi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>passes<sp/>in<sp/>a<sp/>void<sp/>*<sp/>so<sp/>the<sp/>time<sp/>function<sp/>can<sp/>get<sp/>some<sp/>context.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>safe<sp/>to<sp/>call<sp/>Pt_Time<sp/>with<sp/>a<sp/>parameter<sp/>--<sp/>it<sp/>will<sp/>just<sp/>be<sp/>ignored.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__grp__device_1ga134924cfa8badeecff3c5e1f22aee178" kindref="member">Pm_OpenOutput</ref>(&amp;mo,<sp/>dev,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>256,<sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*))&amp;<ref refid="porttime_8h_1a9a335bb8c04c85bf85d807dd448d72d0" kindref="member">Pt_Time</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>100)<sp/>==<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seq2midi_8cpp_1acf02dc87a223001119be1760dca31d0b" kindref="member">seq2midi</ref>(seq,<sp/>mo);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seq2midi_8cpp_1a13ae98030df5c7bdc7ed36e446f76f8f" kindref="member">wait_until</ref>(<ref refid="seq2midi_8cpp_1afd1cb7ce7f5888541ce8d0375c4362b6" kindref="member">time_elapsed</ref>()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__grp__events__filters_1ga6b26be2fbcf092c9625ade5303edd0ac" kindref="member">Pm_Close</ref>(mo);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1a6c5dd5cd3657ac1cdab6bc5f3063193e" kindref="member">Pm_Terminate</ref>();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/apps/seq2midi.cpp"/>
  </compounddef>
</doxygen>
