<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="lib-src_2libscorealign_2main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes local="yes">stdio.h</includes>
    <includes refid="main_8h" local="yes">main.h</includes>
    <includes local="no">fstream</includes>
    <includes refid="allegro_8h" local="yes">allegro.h</includes>
    <includes refid="audioreader_8h" local="yes">audioreader.h</includes>
    <includes refid="scorealign_8h" local="yes">scorealign.h</includes>
    <includes refid="sautils_8h" local="yes">sautils.h</includes>
    <includes refid="alignfiles_8h" local="yes">alignfiles.h</includes>
    <includes refid="gen__chroma_8h" local="yes">gen_chroma.h</includes>
    <includes refid="comp__chroma_8h" local="yes">comp_chroma.h</includes>
    <incdepgraph>
      <node id="5920">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp</label>
        <link refid="lib-src/libscorealign/main.cpp"/>
        <childnode refid="5921" relation="include">
        </childnode>
        <childnode refid="5922" relation="include">
        </childnode>
        <childnode refid="5923" relation="include">
        </childnode>
        <childnode refid="5924" relation="include">
        </childnode>
        <childnode refid="5928" relation="include">
        </childnode>
        <childnode refid="5929" relation="include">
        </childnode>
        <childnode refid="5930" relation="include">
        </childnode>
        <childnode refid="5931" relation="include">
        </childnode>
        <childnode refid="5932" relation="include">
        </childnode>
        <childnode refid="5933" relation="include">
        </childnode>
      </node>
      <node id="5924">
        <label>allegro.h</label>
        <link refid="allegro_8h"/>
        <childnode refid="5925" relation="include">
        </childnode>
        <childnode refid="5926" relation="include">
        </childnode>
        <childnode refid="5927" relation="include">
        </childnode>
      </node>
      <node id="5932">
        <label>gen_chroma.h</label>
        <link refid="gen__chroma_8h"/>
      </node>
      <node id="5929">
        <label>scorealign.h</label>
        <link refid="scorealign_8h"/>
      </node>
      <node id="5928">
        <label>audioreader.h</label>
        <link refid="audioreader_8h"/>
      </node>
      <node id="5925">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="5923">
        <label>fstream</label>
      </node>
      <node id="5927">
        <label>ostream</label>
      </node>
      <node id="5931">
        <label>alignfiles.h</label>
        <link refid="alignfiles_8h"/>
      </node>
      <node id="5922">
        <label>main.h</label>
        <link refid="main_8h"/>
      </node>
      <node id="5930">
        <label>sautils.h</label>
        <link refid="sautils_8h"/>
      </node>
      <node id="5933">
        <label>comp_chroma.h</label>
        <link refid="comp__chroma_8h"/>
      </node>
      <node id="5921">
        <label>stdio.h</label>
      </node>
      <node id="5926">
        <label>istream</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="lib-src_2libscorealign_2main_8cpp_1a1aa9083626d69f94349750d974f0359a" prot="public" static="no" mutable="no">
        <type><ref refid="class_scorealign" kindref="compound">Scorealign</ref></type>
        <definition>Scorealign sa</definition>
        <argsstring></argsstring>
        <name>sa</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp" line="18" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lib-src_2libscorealign_2main_8cpp_1ab2c277065ed6129e20463d411c837cad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void print_usage</definition>
        <argsstring>(const char *progname)</argsstring>
        <name>print_usage</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>progname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp" line="20" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp" bodystart="20" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="lib-src_2libscorealign_2main_8cpp_1af4ceae4cce9a48fdb35453cd6059fe72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void save_smooth_file</definition>
        <argsstring>(const char *smooth_filename, Scorealign &amp;sa)</argsstring>
        <name>save_smooth_file</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>smooth_filename</declname>
        </param>
        <param>
          <type><ref refid="class_scorealign" kindref="compound">Scorealign</ref> &amp;</type>
          <declname>sa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp" line="58" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp" bodystart="58" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="lib-src_2libscorealign_2main_8cpp_1a4af4ae16fcb94d013886626659766194" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void print_beat_map</definition>
        <argsstring>(Alg_seq &amp;seq, const char *filename)</argsstring>
        <name>print_beat_map</name>
        <param>
          <type><ref refid="class_alg__seq" kindref="compound">Alg_seq</ref> &amp;</type>
          <declname>seq</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp" line="73" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp" bodystart="73" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="lib-src_2libscorealign_2main_8cpp_1a58dea0247084953b4385cb710b9ae3eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void edit_transcription</definition>
        <argsstring>(Alg_seq &amp;seq, bool warp, FILE *outf, const char *midi_filename, const char *beat_filename)</argsstring>
        <name>edit_transcription</name>
        <param>
          <type><ref refid="class_alg__seq" kindref="compound">Alg_seq</ref> &amp;</type>
          <declname>seq</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>warp</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>outf</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>midi_filename</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>beat_filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp" line="94" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp" bodystart="94" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="lib-src_2libscorealign_2main_8cpp_1a0db0ee3cc3ce61a59933e2578d5076b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void save_image</definition>
        <argsstring>(const char *image_filename, Scorealign &amp;sa)</argsstring>
        <name>save_image</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>image_filename</declname>
        </param>
        <param>
          <type><ref refid="class_scorealign" kindref="compound">Scorealign</ref> &amp;</type>
          <declname>sa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp" line="130" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp" bodystart="130" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="lib-src_2libscorealign_2main_8cpp_1a23b2552c1c76e177a4ba838947812ac9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void save_transcription</definition>
        <argsstring>(const char *file0, const char *file1, bool warp, const char *filename, const char *smooth_filename, const char *midi_filename, const char *beat_filename)</argsstring>
        <name>save_transcription</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>file0</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>file1</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>warp</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>smooth_filename</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>midi_filename</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>beat_filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp" line="177" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp" bodystart="177" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="lib-src_2libscorealign_2main_8cpp_1a68b0155f4a61a1261614714abd27dab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void save_path</definition>
        <argsstring>(const char *filename, int pathlen, short *pathx, short *pathy, float actual_frame_period_0, float actual_frame_period_1)</argsstring>
        <name>save_path</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>pathlen</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>pathx</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>pathy</declname>
        </param>
        <param>
          <type>float</type>
          <declname>actual_frame_period_0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>actual_frame_period_1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp" line="222" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp" bodystart="222" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="lib-src_2libscorealign_2main_8cpp_1a4c70cd48d529ccaad182022ec8ac262e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void print_chroma_table</definition>
        <argsstring>(const float *chrom_energy, int frames)</argsstring>
        <name>print_chroma_table</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float *</type>
          <declname>chrom_energy</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>frames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp" line="241" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp" bodystart="241" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="lib-src_2libscorealign_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp" line="253" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp" bodystart="253" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="lib-src_2libscorealign_2main_8cpp_1af8df65564a341b00b420df5d6c970a61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void print_path_range</definition>
        <argsstring>(const short *pathx, const short *pathy, int i, int j)</argsstring>
        <name>print_path_range</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> short *</type>
          <declname>pathx</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> short *</type>
          <declname>pathy</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp" line="399" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp" bodystart="399" bodyend="405"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>main.cpp<sp/>--<sp/>the<sp/>command<sp/>line<sp/>interface<sp/>for<sp/>scorealign</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>14-Jul-08<sp/>RBD</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="main_8h" kindref="compound">main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="allegro_8h" kindref="compound">allegro.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="audioreader_8h" kindref="compound">audioreader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scorealign_8h" kindref="compound">scorealign.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sautils_8h" kindref="compound">sautils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="alignfiles_8h" kindref="compound">alignfiles.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gen__chroma_8h" kindref="compound">gen_chroma.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="comp__chroma_8h" kindref="compound">comp_chroma.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>global<sp/>object<sp/>with<sp/>score<sp/>alignment<sp/>parameters<sp/>and<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="lib-src_2libscorealign_2main_8cpp_1a1aa9083626d69f94349750d974f0359a" refkind="member"><highlight class="normal"><ref refid="class_scorealign" kindref="compound">Scorealign</ref><sp/><ref refid="lib-src_2libscorealign_2main_8cpp_1a1aa9083626d69f94349750d974f0359a" kindref="member">sa</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="compare_8cpp_1aa4c888ac08148b1a8427491238530dc7" kindref="member">print_usage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*progname)<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;\nUsage:<sp/>%s<sp/>[-&lt;flags&gt;<sp/>[&lt;period&gt;<sp/>&lt;windowsize&gt;<sp/>&lt;path&gt;<sp/>&lt;smooth&gt;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;trans&gt;<sp/>&lt;midi&gt;<sp/>&lt;beatmap&gt;<sp/>&lt;image&gt;]]<sp/>&lt;file0&gt;<sp/>[&lt;file1&gt;]\n&quot;</highlight><highlight class="normal">,<sp/>progname);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>specifying<sp/>only<sp/>&lt;file0&gt;<sp/>simply<sp/>transcribes<sp/>MIDI<sp/>in<sp/>&lt;file0&gt;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;to\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>transcription.txt.<sp/>Otherwise,<sp/>align<sp/>&lt;file0&gt;<sp/>and<sp/>&lt;file1&gt;.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>-h<sp/>0.25<sp/>indicates<sp/>a<sp/>frame<sp/>period<sp/>of<sp/>0.25<sp/>seconds\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>-w<sp/>0.25<sp/>indicates<sp/>a<sp/>window<sp/>size<sp/>of<sp/>0.25<sp/>seconds.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>-d<sp/>0.1<sp/>indicates<sp/>a<sp/>silence<sp/>threshold<sp/>of<sp/>RMS=0.1.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>-r<sp/>indicates<sp/>filename<sp/>to<sp/>write<sp/>raw<sp/>alignment<sp/>path<sp/>to<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(default<sp/>path.data)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>-s<sp/>is<sp/>filename<sp/>to<sp/>write<sp/>smoothed<sp/>alignment<sp/>path(default<sp/>is<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;smooth.data)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>-t<sp/>is<sp/>filename<sp/>to<sp/>write<sp/>the<sp/>time<sp/>aligned<sp/>transcription<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(default<sp/>is<sp/>transcription.txt)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>-m<sp/>is<sp/>filename<sp/>to<sp/>write<sp/>the<sp/>time<sp/>aligned<sp/>midi<sp/>file<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(default<sp/>is<sp/>midi.mid)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>-b<sp/>is<sp/>filename<sp/>to<sp/>write<sp/>the<sp/>time<sp/>aligned<sp/>beat<sp/>times<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(default<sp/>is<sp/>beatmap.txt)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>-i<sp/>is<sp/>filename<sp/>to<sp/>write<sp/>an<sp/>image<sp/>of<sp/>the<sp/>distance<sp/>matrix<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(default<sp/>is<sp/>distance.pnm)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>-o<sp/>2.0<sp/>indicates<sp/>a<sp/>smoothing<sp/>window<sp/>time<sp/>of<sp/>2.0s\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>-p<sp/>3.0<sp/>indicates<sp/>presmoothing<sp/>with<sp/>a<sp/>3s<sp/>window\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>-x<sp/>6.0<sp/>indicates<sp/>6s<sp/>line<sp/>segment<sp/>approximation\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined<sp/>(_WIN32)<sp/>||<sp/>defined<sp/>(WIN32))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>This<sp/>is<sp/>a<sp/>Unix<sp/>style<sp/>command<sp/>line<sp/>application<sp/>which\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>should<sp/>be<sp/>run<sp/>in<sp/>a<sp/>MSDOS<sp/>box<sp/>or<sp/>Command<sp/>Shell<sp/>window.\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>Type<sp/>RETURN<sp/>to<sp/>exit.\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>getchar();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>print_usage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SAVE_SMOOTH_FILE<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/>saves<sp/>the<sp/>smooth<sp/>time<sp/>map<sp/>in<sp/>SMOOTH_FILENAME</highlight></codeline>
<codeline lineno="56"><highlight class="comment"></highlight></codeline>
<codeline lineno="57"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="lib-src_2libscorealign_2main_8cpp_1af4ceae4cce9a48fdb35453cd6059fe72" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib-src_2libscorealign_2main_8cpp_1af4ceae4cce9a48fdb35453cd6059fe72" kindref="member">save_smooth_file</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*smooth_filename,<sp/><ref refid="class_scorealign" kindref="compound">Scorealign</ref><sp/>&amp;sa)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*smoothf<sp/>=<sp/>fopen(smooth_filename,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(smoothf);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>sa.<ref refid="class_scorealign_1a43bab7477ee687ed17d676a81c3e9ced" kindref="member">file0_frames</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(smoothf,<sp/></highlight><highlight class="stringliteral">&quot;%g<sp/>\t%g\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>*<sp/>sa.<ref refid="class_scorealign_1afd2fe7e5977be513cf0255a8d3836678" kindref="member">actual_frame_period_0</ref>,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sa.<ref refid="class_scorealign_1ab207618c47378f693d84b72f36ac0eb8" kindref="member">smooth_time_map</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>*<sp/>sa.<ref refid="class_scorealign_1a446b2b9c38cc31932120ea4749b5eb9f" kindref="member">actual_frame_period_1</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(smoothf);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINT_BEAT_MAP</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/>prints<sp/>the<sp/>allegro<sp/>beat_map<sp/>(for<sp/>debugging)<sp/>which<sp/>contain</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/>the<sp/>time,<sp/>beat<sp/>pair<sp/>for<sp/>a<sp/>song<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="lib-src_2libscorealign_2main_8cpp_1a4af4ae16fcb94d013886626659766194" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib-src_2libscorealign_2main_8cpp_1a4af4ae16fcb94d013886626659766194" kindref="member">print_beat_map</ref>(<ref refid="class_alg__seq" kindref="compound">Alg_seq</ref><sp/>&amp;seq,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*beatmap_print<sp/>=<sp/>fopen(filename,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_alg__beats" kindref="compound">Alg_beats</ref><sp/>&amp;<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>=<sp/>seq.<ref refid="class_alg__track_1ae8e1634bcf46d3cce796ed82b76e8b82" kindref="member">get_time_map</ref>()-&gt;<ref refid="class_alg__time__map_1a33aa9f11030f021a2decc6de3b935cfb" kindref="member">beats</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>num_beats<sp/>=<sp/>seq.<ref refid="class_alg__track_1ae8e1634bcf46d3cce796ed82b76e8b82" kindref="member">get_time_map</ref>()-&gt;<ref refid="class_alg__time__map_1aa683d3482ccaef8843015c03d8cf380e" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>num_beats;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(beatmap_print,</highlight><highlight class="stringliteral">&quot;<sp/>%f<sp/><sp/>%f<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>b[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].beat,<sp/>b[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref>);<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(beatmap_print);<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EDIT_TRANSCRIPTION</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/>edit<sp/>the<sp/>allegro<sp/>time<sp/>map<sp/>structure<sp/>according</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/>to<sp/>the<sp/>warping<sp/>and<sp/>output<sp/>a<sp/>midi<sp/>file<sp/>and<sp/>transcription</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/>file<sp/></highlight></codeline>
<codeline lineno="92"><highlight class="comment"></highlight></codeline>
<codeline lineno="93"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="lib-src_2libscorealign_2main_8cpp_1a58dea0247084953b4385cb710b9ae3eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib-src_2libscorealign_2main_8cpp_1a58dea0247084953b4385cb710b9ae3eb" kindref="member">edit_transcription</ref>(<ref refid="class_alg__seq" kindref="compound">Alg_seq</ref><sp/>&amp;seq<sp/>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>warp,<sp/>FILE<sp/>*outf,<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*midi_filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*beat_filename)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>note_x<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>seq.<ref refid="class_alg__seq_1adb0471cd38ff38433afd46f726efa5c2" kindref="member">convert_to_seconds</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_alg__iterator" kindref="compound">Alg_iterator</ref><sp/>iter(&amp;seq,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>no<sp/>note-offs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>iter.<ref refid="class_alg__iterator_1a59c05da591cc008ff1be195335646046" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="allegro_8h_1aeb8db009b4ffadef2e7ca0e4936f0307" kindref="member">Alg_event_ptr</ref><sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref><sp/>=<sp/>iter.<ref refid="class_alg__iterator_1af175a74563cdefc967e4b568763fa818" kindref="member">next</ref>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(e)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e-&gt;is_note())<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alg__note" kindref="compound">Alg_note_ptr</ref><sp/>n<sp/>=<sp/>(<ref refid="allegro_8h_1a49bc03b187e4468a764d73df4c860206" kindref="member">Alg_note_ptr</ref>)<sp/>e;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(outf,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%ld<sp/>%d<sp/>%d<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>note_x++,<sp/>n-&gt;<ref refid="class_alg__event_1aad79cff0b92503c9ad4f6fc7a6425d74" kindref="member">chan</ref>,<sp/><ref refid="cext_8h_1acd66e8cacf954c3bc3bba81d09425a12" kindref="member">ROUND</ref>(n-&gt;<ref refid="class_alg__note_1a01dc46324d580898c16fe09d2e85c424" kindref="member">pitch</ref>),<sp/><ref refid="cext_8h_1acd66e8cacf954c3bc3bba81d09425a12" kindref="member">ROUND</ref>(n-&gt;<ref refid="class_alg__note_1aefa0a5b76a5747b0e95f96bc8046e199" kindref="member">loud</ref>));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>compute<sp/>onset<sp/>time<sp/>mapped<sp/>to<sp/>audio<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref><sp/>=<sp/>n-&gt;<ref refid="class_alg__event_1a7d31289f03b355f25e0ddd4657783a13" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>finish<sp/>=<sp/>n-&gt;<ref refid="class_alg__event_1a7d31289f03b355f25e0ddd4657783a13" kindref="member">time</ref><sp/>+<sp/>n-&gt;<ref refid="class_alg__note_1ae15463f6b0deca3ac1a179683dd8e6ee" kindref="member">dur</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(warp)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>sa.<ref refid="class_scorealign_1aeebbba309cdbaa0a82de51906cfa243b" kindref="member">map_time</ref>(start);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finish<sp/>=<sp/>sa.<ref refid="class_scorealign_1aeebbba309cdbaa0a82de51906cfa243b" kindref="member">map_time</ref>(finish);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(outf,<sp/></highlight><highlight class="stringliteral">&quot;%.3f<sp/>%.3f\n&quot;</highlight><highlight class="normal">,<sp/>start,<sp/>finish-start);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>iter.<ref refid="class_alg__iterator_1af175a74563cdefc967e4b568763fa818" kindref="member">next</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>iter.<ref refid="class_alg__iterator_1a92b44e65fa07d97f7f41494b06201543" kindref="member">end</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(outf);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(warp)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>align<sp/>the<sp/>midi<sp/>file<sp/>and<sp/>write<sp/>out<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sa.<ref refid="class_scorealign_1a1b7f13d3e4cd822b05f54e56eb644b1b" kindref="member">midi_tempo_align</ref>(seq);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seq.<ref refid="class_alg__seq_1af360cc6536299c79144e0e1aad97d935" kindref="member">smf_write</ref>(midi_filename);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2libscorealign_2main_8cpp_1a4af4ae16fcb94d013886626659766194" kindref="member">print_beat_map</ref>(seq,<sp/>beat_filename);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>save<sp/>image<sp/>of<sp/>distance<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="lib-src_2libscorealign_2main_8cpp_1a0db0ee3cc3ce61a59933e2578d5076b5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib-src_2libscorealign_2main_8cpp_1a0db0ee3cc3ce61a59933e2578d5076b5" kindref="member">save_image</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*image_filename,<sp/><ref refid="class_scorealign" kindref="compound">Scorealign</ref><sp/>&amp;sa)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*outf<sp/>=<sp/>fopen(image_filename,<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!outf)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>could<sp/>not<sp/>open<sp/>%s<sp/>for<sp/>write.\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_filename);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_d<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_d<sp/>=<sp/>999999.0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>fputs(</highlight><highlight class="stringliteral">&quot;P5\n&quot;</highlight><highlight class="normal">,<sp/>outf);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(outf,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>255\n&quot;</highlight><highlight class="normal">,<sp/>sa.<ref refid="class_scorealign_1ab0ea5cd44003743384ac8e39752155cb" kindref="member">file1_frames</ref>,<sp/>sa.<ref refid="class_scorealign_1a43bab7477ee687ed17d676a81c3e9ced" kindref="member">file0_frames</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>sa.<ref refid="class_scorealign_1a43bab7477ee687ed17d676a81c3e9ced" kindref="member">file0_frames</ref>;<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>sa.<ref refid="class_scorealign_1ab0ea5cd44003743384ac8e39752155cb" kindref="member">file1_frames</ref>;<sp/>col++)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref><sp/>=<sp/>sa.<ref refid="class_scorealign_1a626ed8876bafc5bbf5c86db23864c942" kindref="member">gen_dist</ref>(row,<sp/>col);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_LOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(dbf,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>row,<sp/>col,<sp/>d);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&gt;<sp/>max_d)<sp/>max_d<sp/>=<sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;<sp/>min_d)<sp/>min_d<sp/>=<sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixel<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>(255<sp/>*<sp/>(d<sp/>/<sp/>6.0)<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixel<sp/>&gt;<sp/>255)<sp/>pixel<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putc(pixel,<sp/>outf);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(outf);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;max<sp/>distance<sp/>%g,<sp/>min<sp/>distance<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>max_d,<sp/>min_d);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>SAVE_TRANSCRIPTION</highlight></codeline>
<codeline lineno="160"><highlight class="comment">write<sp/>note<sp/>data<sp/>corresponding<sp/>to<sp/>audio<sp/>file</highlight></codeline>
<codeline lineno="161"><highlight class="comment"></highlight></codeline>
<codeline lineno="162"><highlight class="comment">assume<sp/>audio<sp/>file<sp/>is<sp/>file<sp/>1<sp/>and<sp/>midi<sp/>file<sp/>is<sp/>file<sp/>2</highlight></codeline>
<codeline lineno="163"><highlight class="comment">so<sp/>pathx<sp/>is<sp/>index<sp/>into<sp/>audio,<sp/>pathy<sp/>is<sp/>index<sp/>into<sp/>MIDI</highlight></codeline>
<codeline lineno="164"><highlight class="comment"></highlight></codeline>
<codeline lineno="165"><highlight class="comment">If<sp/>warp<sp/>is<sp/>false,<sp/>simply<sp/>write<sp/>a<sp/>transcription<sp/>of<sp/>the<sp/>midi<sp/>file.</highlight></codeline>
<codeline lineno="166"><highlight class="comment"></highlight></codeline>
<codeline lineno="167"><highlight class="comment">Every<sp/>note<sp/>has<sp/>6<sp/>fields<sp/>separated<sp/>by<sp/>a<sp/>space<sp/>character.<sp/>The<sp/>fields<sp/>are:</highlight></codeline>
<codeline lineno="168"><highlight class="comment">&lt;sequence<sp/>number&gt;<sp/>&lt;channel&gt;<sp/>&lt;pitch&gt;<sp/>&lt;velocity&gt;<sp/>&lt;onset&gt;<sp/>&lt;duration&gt;<sp/></highlight></codeline>
<codeline lineno="169"><highlight class="comment">Where</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/>&lt;sequence<sp/>number&gt;<sp/>is<sp/>just<sp/>an<sp/>integer<sp/>note<sp/>number,<sp/>e.g.<sp/>1,<sp/>2,<sp/>3,<sp/>...</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/>&lt;channel&gt;<sp/>is<sp/>MIDI<sp/>channel<sp/>from<sp/>0<sp/>to<sp/>15<sp/></highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/>&lt;pitch&gt;<sp/>is<sp/>MIDI<sp/>key<sp/>number<sp/>(60<sp/>=<sp/>middle<sp/>C)</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/>&lt;velocity&gt;<sp/>is<sp/>MIDI<sp/>key<sp/>velocity<sp/>(1<sp/>to<sp/>127)</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/>&lt;onset&gt;<sp/>is<sp/>time<sp/>in<sp/>seconds,<sp/>rounded<sp/>to<sp/>3<sp/>decimal<sp/>places<sp/>(milliseconds)</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/>&lt;duration&gt;<sp/>is<sp/>time<sp/>in<sp/>seconds,<sp/>rounded<sp/>to<sp/>3<sp/>decimal<sp/>places</highlight></codeline>
<codeline lineno="176"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="lib-src_2libscorealign_2main_8cpp_1a23b2552c1c76e177a4ba838947812ac9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib-src_2libscorealign_2main_8cpp_1a23b2552c1c76e177a4ba838947812ac9" kindref="member">save_transcription</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file1,<sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>warp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*smooth_filename,<sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*midi_filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*beat_filename)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*midiname;<sp/></highlight><highlight class="comment">//midi<sp/>file<sp/>to<sp/>be<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*audioname;<sp/></highlight><highlight class="comment">//audio<sp/>file<sp/>to<sp/>be<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(warp)<sp/><ref refid="lib-src_2libscorealign_2main_8cpp_1af4ceae4cce9a48fdb35453cd6059fe72" kindref="member">save_smooth_file</ref>(smooth_filename,<sp/>sa);<sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>either<sp/>is<sp/>a<sp/>midifile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="alignfiles_8cpp_1a14bdd827a3a3b458663783cb09800fbb" kindref="member">is_midi_file</ref>(file0)<sp/>||<sp/><ref refid="alignfiles_8cpp_1a14bdd827a3a3b458663783cb09800fbb" kindref="member">is_midi_file</ref>(file1))<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="alignfiles_8cpp_1a14bdd827a3a3b458663783cb09800fbb" kindref="member">is_midi_file</ref>(file0))<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midiname=file0;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>audioname=file1;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midiname=file1;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>audioname=file0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alg__seq" kindref="compound">Alg_seq</ref><sp/>seq(midiname,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*outf<sp/>=<sp/>fopen(filename,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!outf)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>could<sp/>not<sp/>open<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>filename);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(outf,<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>transcription<sp/>of<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>midiname);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(warp)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(outf,<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>note<sp/>times<sp/>are<sp/>aligned<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>audioname);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(outf,<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>times<sp/>are<sp/>unmodified<sp/>from<sp/>those<sp/>in<sp/>MIDI<sp/>file\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(outf,<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>transcription<sp/>format<sp/>:<sp/>&lt;sequence<sp/>number&gt;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;channel&gt;<sp/>&lt;pitch&gt;<sp/>&lt;velocity&gt;<sp/>&lt;onset&gt;<sp/>&lt;duration&gt;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2libscorealign_2main_8cpp_1a58dea0247084953b4385cb710b9ae3eb" kindref="member">edit_transcription</ref>(seq,<sp/>warp,<sp/>outf,<sp/>midi_filename,<sp/>beat_filename);<sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>SAVE_PATH</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/><sp/>write<sp/>the<sp/>alignment<sp/>path<sp/>to<sp/>FILENAME</highlight></codeline>
<codeline lineno="221"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="lib-src_2libscorealign_2main_8cpp_1a68b0155f4a61a1261614714abd27dab0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib-src_2libscorealign_2main_8cpp_1a68b0155f4a61a1261614714abd27dab0" kindref="member">save_path</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pathlen,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*<sp/>pathx,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*pathy,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>actual_frame_period_0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>actual_frame_period_1)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>the<sp/>path<sp/>to<sp/>a<sp/>(plot)<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*pathf<sp/>=<sp/>fopen(filename,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(pathf);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>pathlen;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(pathf,<sp/></highlight><highlight class="stringliteral">&quot;%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>pathx[p]<sp/>*<sp/>actual_frame_period_0,<sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathy[p]<sp/>*<sp/>actual_frame_period_1);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(pathf);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/>Prints<sp/>the<sp/>chroma<sp/>table<sp/>(for<sp/>debugging)</highlight></codeline>
<codeline lineno="239"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="main_8h_1a4c70cd48d529ccaad182022ec8ac262e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib-src_2libscorealign_2main_8cpp_1a4c70cd48d529ccaad182022ec8ac262e" kindref="member">print_chroma_table</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*chrom_energy,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frames)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>frames;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/><ref refid="gen__chroma_8h_1a90c6cc0f5dead0329b02cc71e4291394" kindref="member">CHROMA_BIN_COUNT</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;%5.2f<sp/>|<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="gen__chroma_8h_1aa24b5ea7f722ee34c89ecdc485193381" kindref="member">AREF2</ref>(chrom_energy,<sp/>j,<sp/>i));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="lib-src_2libscorealign_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib-src_2libflac_2examples_2cpp_2decode_2file_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref><sp/>[])<sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*progname,<sp/>*infilename0,<sp/>*infilename1;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*smooth_filename,<sp/>*path_filename,<sp/>*trans_filename;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*midi_filename,<sp/>*beat_filename,<sp/>*image_filename;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//just<sp/>transcribe<sp/>if<sp/>trasncribe<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>transcribe<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>for<sp/>the<sp/>user<sp/>definable<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>path_filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;path.data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>smooth_filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;smooth.data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>trans_filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;transcription.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;midi.mid&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>beat_filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;beatmap.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>image_filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;distance.pnm&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>progname<sp/>=<sp/>strrchr(argv<sp/>[0],<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>progname<sp/>=<sp/>progname<sp/>?<sp/>progname<sp/>+<sp/>1<sp/>:<sp/>argv[0]<sp/>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>no<sp/>arguments,<sp/>return<sp/>usage<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="compare_8cpp_1aa4c888ac08148b1a8427491238530dc7" kindref="member">print_usage</ref>(progname);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*******PARSING<sp/>CODE<sp/>BEGINS*********/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>1;<sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>argc)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//expected<sp/>flagged<sp/>argument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argv[i][0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>flag<sp/>=<sp/>argv[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>][1];</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag<sp/>==<sp/></highlight><highlight class="charliteral">&apos;h&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sa.<ref refid="class_scorealign_1a47f51125e3cb2018d1baa349be161be7" kindref="member">frame_period</ref><sp/>=<sp/><ref refid="xlread_8c_1ad37d469faf1f38a3c35d1253575a513a" kindref="member">atof</ref>(argv[i+1]);<sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag<sp/>==<sp/></highlight><highlight class="charliteral">&apos;w&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sa.<ref refid="class_scorealign_1a303f57cd6200fd229f7f92fb0bfa95bc" kindref="member">window_size</ref><sp/>=<sp/><ref refid="xlread_8c_1ad37d469faf1f38a3c35d1253575a513a" kindref="member">atof</ref>(argv[i+1]);<sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag<sp/>==<sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path_filename<sp/>=<sp/>argv[i+1];</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag<sp/>==<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smooth_filename<sp/>=<sp/>argv[i+1];</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag<sp/>==<sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trans_filename<sp/>=<sp/>argv[i+1];<sp/></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag<sp/>==<sp/></highlight><highlight class="charliteral">&apos;m&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi_filename<sp/>=<sp/>argv[i+1];</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag<sp/>==<sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_filename<sp/>=<sp/>argv[i+1];</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag<sp/>==<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beat_filename<sp/>=<sp/>argv[i+1];</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag<sp/>==<sp/></highlight><highlight class="charliteral">&apos;o&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sa.<ref refid="class_scorealign_1ab2421e375fa06931019107530ef0362d" kindref="member">smooth_time</ref><sp/>=<sp/><ref refid="xlread_8c_1ad37d469faf1f38a3c35d1253575a513a" kindref="member">atof</ref>(argv[i+1]);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag<sp/>==<sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sa.<ref refid="class_scorealign_1abf993742219359f789e1695b546cda87" kindref="member">presmooth_time</ref><sp/>=<sp/><ref refid="xlread_8c_1ad37d469faf1f38a3c35d1253575a513a" kindref="member">atof</ref>(argv[i+1]);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag<sp/>==<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sa.<ref refid="class_scorealign_1a0e8480364897c190afc0c7fd432a78f7" kindref="member">line_time</ref><sp/>=<sp/><ref refid="xlread_8c_1ad37d469faf1f38a3c35d1253575a513a" kindref="member">atof</ref>(argv[i+1]);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag<sp/>==<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sa.<ref refid="class_scorealign_1ac8da1d180b5d33a6f4bda884acaa2a23" kindref="member">silence_threshold</ref><sp/>=<sp/><ref refid="xlread_8c_1ad37d469faf1f38a3c35d1253575a513a" kindref="member">atof</ref>(argv[i+1]);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>aligning<sp/>audio<sp/>to<sp/>midi<sp/>we<sp/>must<sp/>force<sp/>file0<sp/>to<sp/>be<sp/>midi<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>1<sp/>is<sp/>midi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transcribe<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infilename0<sp/>=<sp/>argv[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transcribe++;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>2<sp/>is<sp/>audio<sp/>or<sp/>a<sp/>second<sp/>midi<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infilename1<sp/>=<sp/>argv[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transcribe++;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**********END<sp/>PARSING<sp/>***********/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sa.<ref refid="class_scorealign_1abf993742219359f789e1695b546cda87" kindref="member">presmooth_time</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>sa.<ref refid="class_scorealign_1a0e8480364897c190afc0c7fd432a78f7" kindref="member">line_time</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;WARNING:<sp/>both<sp/>-p<sp/>and<sp/>-x<sp/>options<sp/>selected.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transcribe<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>only<sp/>one<sp/>midi<sp/>file,<sp/>just<sp/>write<sp/>transcription<sp/>and<sp/>exit,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>alignment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2libscorealign_2main_8cpp_1a23b2552c1c76e177a4ba838947812ac9" kindref="member">save_transcription</ref>(infilename0,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>trans_filename,<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;Wrote<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>trans_filename);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>finish;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>midi<sp/>only<sp/>in<sp/>infilename1,<sp/>make<sp/>it<sp/>infilename0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="alignfiles_8cpp_1a14bdd827a3a3b458663783cb09800fbb" kindref="member">is_midi_file</ref>(infilename1)<sp/>&amp;&amp;<sp/>!<ref refid="alignfiles_8cpp_1a14bdd827a3a3b458663783cb09800fbb" kindref="member">is_midi_file</ref>(infilename0))<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*temp;<sp/></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>infilename0;<sp/></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infilename0<sp/>=<sp/>infilename1;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infilename1<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="alignfiles_8cpp_1a8b9411cbde8a9cdc2b75fd1e7f85c8e2" kindref="member">align_files</ref>(infilename0,<sp/>infilename1,<sp/>sa,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>verbose<sp/>*/</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;An<sp/>error<sp/>occurred,<sp/>not<sp/>saving<sp/>path<sp/>and<sp/>transcription<sp/>data\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>finish;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sa.<ref refid="class_scorealign_1a43bab7477ee687ed17d676a81c3e9ced" kindref="member">file0_frames</ref><sp/>&lt;=<sp/>2<sp/>||<sp/>sa.<ref refid="class_scorealign_1ab0ea5cd44003743384ac8e39752155cb" kindref="member">file1_frames</ref><sp/>&lt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>file<sp/>frame<sp/>counts<sp/>are<sp/>low:<sp/>%d<sp/>(for<sp/>input<sp/>1)<sp/>and<sp/>%d<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;for<sp/>input<sp/>2)\n...not<sp/>saving<sp/>path<sp/>and<sp/>transcription<sp/>data\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sa.<ref refid="class_scorealign_1a43bab7477ee687ed17d676a81c3e9ced" kindref="member">file0_frames</ref>,<sp/>sa.<ref refid="class_scorealign_1ab0ea5cd44003743384ac8e39752155cb" kindref="member">file1_frames</ref>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>finish;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2libscorealign_2main_8cpp_1a68b0155f4a61a1261614714abd27dab0" kindref="member">save_path</ref>(path_filename,<sp/>sa.<ref refid="class_scorealign_1a3a22e20e8be472e87e0f43443c930316" kindref="member">pathlen</ref>,<sp/>sa.<ref refid="class_scorealign_1a9aa670b061ce18988086803992d7d1c5" kindref="member">pathx</ref>,<sp/>sa.<ref refid="class_scorealign_1a6c09342db2cad202c698da99c4ae0e98" kindref="member">pathy</ref>,<sp/></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sa.<ref refid="class_scorealign_1afd2fe7e5977be513cf0255a8d3836678" kindref="member">actual_frame_period_0</ref>,<sp/>sa.<ref refid="class_scorealign_1a446b2b9c38cc31932120ea4749b5eb9f" kindref="member">actual_frame_period_1</ref>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>image<sp/>of<sp/>distance<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2libscorealign_2main_8cpp_1a0db0ee3cc3ce61a59933e2578d5076b5" kindref="member">save_image</ref>(image_filename,<sp/>sa);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>smooth,<sp/>midi,<sp/>transcription</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2libscorealign_2main_8cpp_1a23b2552c1c76e177a4ba838947812ac9" kindref="member">save_transcription</ref>(infilename0,<sp/>infilename1,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>trans_filename,<sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smooth_filename,<sp/>midi_filename,<sp/>beat_filename);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>what<sp/>the<sp/>chroma<sp/>matrix<sp/>looks<sp/>like</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;file0<sp/>chroma<sp/>table:<sp/>\n&quot;);<sp/></highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>print_chroma_table(chrom_energy0,file0_frames);</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;\nfile1<sp/>chroma<sp/>table:<sp/>\n&quot;);<sp/></highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>print_chroma_table(chrom_energy1,<sp/>file1_frames);<sp/></highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>path<sp/>and<sp/>smooth<sp/>are<sp/>written<sp/>when<sp/>aligning<sp/>two<sp/>audio<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="alignfiles_8cpp_1a14bdd827a3a3b458663783cb09800fbb" kindref="member">is_midi_file</ref>(infilename0)<sp/>||<sp/><ref refid="alignfiles_8cpp_1a14bdd827a3a3b458663783cb09800fbb" kindref="member">is_midi_file</ref>(infilename1))</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;Wrote<sp/>%s,<sp/>%s,<sp/>%s,<sp/>and<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>path_filename,<sp/>smooth_filename,<sp/></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trans_filename,<sp/>beat_filename);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;Wrote<sp/>%s<sp/>and<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/>path_filename,<sp/>smooth_filename);<sp/></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal">finish:</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;Type<sp/>RETURN<sp/>to<sp/>exit\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>getchar();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0<sp/>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>main<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>print_path_range<sp/>--<sp/>debugging<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="main_8h_1af8df65564a341b00b420df5d6c970a61" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib-src_2libscorealign_2main_8cpp_1af8df65564a341b00b420df5d6c970a61" kindref="member">print_path_range</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*pathx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*pathy,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j)</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;=<sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pathx[i],<sp/>pathy[i]);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/main.cpp"/>
  </compounddef>
</doxygen>
