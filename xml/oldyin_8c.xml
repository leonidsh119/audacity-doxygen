<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="oldyin_8c" kind="file" language="C++">
    <compoundname>oldyin.c</compoundname>
    <includes local="yes">stdio.h</includes>
    <includes local="yes">stdlib.h</includes>
    <includes local="yes">snd.h</includes>
    <includes refid="xlisp_8h" local="yes">xlisp.h</includes>
    <includes refid="sound_8h" local="yes">sound.h</includes>
    <includes refid="falloc_8h" local="yes">falloc.h</includes>
    <includes refid="yin_8h" local="yes">yin.h</includes>
    <incdepgraph>
      <node id="12739">
        <label>yin.h</label>
        <link refid="yin_8h"/>
      </node>
      <node id="12723">
        <label>snd.h</label>
      </node>
      <node id="12722">
        <label>stdlib.h</label>
      </node>
      <node id="12726">
        <label>setjmp.h</label>
      </node>
      <node id="12736">
        <label>falloc.h</label>
        <link refid="falloc_8h"/>
        <childnode refid="12737" relation="include">
        </childnode>
        <childnode refid="12738" relation="include">
        </childnode>
      </node>
      <node id="12724">
        <label>xlisp.h</label>
        <link refid="xlisp_8h"/>
        <childnode refid="12722" relation="include">
        </childnode>
        <childnode refid="12721" relation="include">
        </childnode>
        <childnode refid="12725" relation="include">
        </childnode>
        <childnode refid="12726" relation="include">
        </childnode>
        <childnode refid="12727" relation="include">
        </childnode>
      </node>
      <node id="12735">
        <label>cleanup.h</label>
        <link refid="cleanup_8h"/>
      </node>
      <node id="12734">
        <label>mem.h</label>
        <link refid="libnyquist_2nyquist_2cmt_2mem_8h"/>
      </node>
      <node id="12733">
        <label>string.h</label>
      </node>
      <node id="12737">
        <label>cque.h</label>
        <link refid="cque_8h"/>
      </node>
      <node id="12728">
        <label>sound.h</label>
        <link refid="sound_8h"/>
        <childnode refid="12729" relation="include">
        </childnode>
        <childnode refid="12730" relation="include">
        </childnode>
      </node>
      <node id="12729">
        <label>math.h</label>
      </node>
      <node id="12732">
        <label>switches.h</label>
      </node>
      <node id="12730">
        <label>stdefs.h</label>
        <link refid="stdefs_8h"/>
        <childnode refid="12731" relation="include">
        </childnode>
      </node>
      <node id="12727">
        <label>xldmem.h</label>
        <link refid="xldmem_8h"/>
      </node>
      <node id="12725">
        <label>ctype.h</label>
      </node>
      <node id="12720">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/oldyin.c</label>
        <link refid="oldyin.c"/>
        <childnode refid="12721" relation="include">
        </childnode>
        <childnode refid="12722" relation="include">
        </childnode>
        <childnode refid="12723" relation="include">
        </childnode>
        <childnode refid="12724" relation="include">
        </childnode>
        <childnode refid="12728" relation="include">
        </childnode>
        <childnode refid="12736" relation="include">
        </childnode>
        <childnode refid="12739" relation="include">
        </childnode>
      </node>
      <node id="12738">
        <label>debug.h</label>
        <link refid="libnyquist_2nyquist_2nyqsrc_2debug_8h"/>
      </node>
      <node id="12721">
        <label>stdio.h</label>
      </node>
      <node id="12731">
        <label>cext.h</label>
        <link refid="cext_8h"/>
        <childnode refid="12732" relation="include">
        </childnode>
        <childnode refid="12721" relation="include">
        </childnode>
        <childnode refid="12733" relation="include">
        </childnode>
        <childnode refid="12729" relation="include">
        </childnode>
        <childnode refid="12734" relation="include">
        </childnode>
        <childnode refid="12735" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structyin__susp__struct" prot="public">yin_susp_struct</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="oldyin_8c_1a69d524e927c73b0ea5e2c691e5498577" prot="public" static="no">
        <type>struct <ref refid="structyin__susp__struct" kindref="compound">yin_susp_struct</ref></type>
        <definition>typedef struct yin_susp_struct  yin_susp_node</definition>
        <argsstring></argsstring>
        <name>yin_susp_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/oldyin.c" line="41" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="oldyin_8c_1ab02a09eecb3b617f96bc770102252f1e" prot="public" static="no">
        <type>struct <ref refid="structyin__susp__struct" kindref="compound">yin_susp_struct</ref> *</type>
        <definition>typedef struct yin_susp_struct * yin_susp_type</definition>
        <argsstring></argsstring>
        <name>yin_susp_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/oldyin.c" line="41" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="oldyin_8c_1a1de5618cee236d7f4defce69918b8994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void yin_free</definition>
        <argsstring>()</argsstring>
        <name>yin_free</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/oldyin.c" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="oldyin_8c_1a5a780d5f00a46f37eac3a3f8493625b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float CubicMaximize</definition>
        <argsstring>(float y0, float y1, float y2, float y3)</argsstring>
        <name>CubicMaximize</name>
        <param>
          <type>float</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/oldyin.c" line="48" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/oldyin.c" bodystart="48" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="oldyin_8c_1a67127ad9ab79d5268180ab3c629aeea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void yin_compute</definition>
        <argsstring>(yin_susp_type susp, float *pitch, float *harmonicity)</argsstring>
        <name>yin_compute</name>
        <param>
          <type><ref refid="oldyin_8c_1ab02a09eecb3b617f96bc770102252f1e" kindref="member">yin_susp_type</ref></type>
          <declname>susp</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>pitch</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>harmonicity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/oldyin.c" line="92" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/oldyin.c" bodystart="92" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="oldyin_8c_1a6e6a85317b38e1425160059f43b557ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void yin_fetch</definition>
        <argsstring>(yin_susp_type susp, snd_list_type snd_list)</argsstring>
        <name>yin_fetch</name>
        <param>
          <type><ref refid="oldyin_8c_1ab02a09eecb3b617f96bc770102252f1e" kindref="member">yin_susp_type</ref></type>
          <declname>susp</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
          <declname>snd_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/oldyin.c" line="189" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/oldyin.c" bodystart="189" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="oldyin_8c_1a3802dc4edc1b43e273d0f60318baaadb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void yin_mark</definition>
        <argsstring>(yin_susp_type susp)</argsstring>
        <name>yin_mark</name>
        <param>
          <type><ref refid="oldyin_8c_1ab02a09eecb3b617f96bc770102252f1e" kindref="member">yin_susp_type</ref></type>
          <declname>susp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/oldyin.c" line="369" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/oldyin.c" bodystart="369" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="oldyin_8c_1a546aca5c0151cf91b49ab61518015f4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void yin_free</definition>
        <argsstring>(yin_susp_type susp)</argsstring>
        <name>yin_free</name>
        <param>
          <type><ref refid="oldyin_8c_1ab02a09eecb3b617f96bc770102252f1e" kindref="member">yin_susp_type</ref></type>
          <declname>susp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/oldyin.c" line="375" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/oldyin.c" bodystart="375" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="oldyin_8c_1abb63e618f274154ba11d42d0c0115577" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void yin_print_tree</definition>
        <argsstring>(yin_susp_type susp, int n)</argsstring>
        <name>yin_print_tree</name>
        <param>
          <type><ref refid="oldyin_8c_1ab02a09eecb3b617f96bc770102252f1e" kindref="member">yin_susp_type</ref></type>
          <declname>susp</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/oldyin.c" line="400" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/oldyin.c" bodystart="400" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="oldyin_8c_1a616aad3e1035ad5e1833ca360758c314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL snd_make_yin</definition>
        <argsstring>(sound_type s, double low_step, double high_step, long stepsize)</argsstring>
        <name>snd_make_yin</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>low_step</declname>
        </param>
        <param>
          <type>double</type>
          <declname>high_step</declname>
        </param>
        <param>
          <type>long</type>
          <declname>stepsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/oldyin.c" line="408" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/oldyin.c" bodystart="408" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="oldyin_8c_1a5dc6efc2480c3b3cceb5a5398fab34ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL snd_yin</definition>
        <argsstring>(sound_type s, double low_step, double high_step, long stepsize)</argsstring>
        <name>snd_yin</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>low_step</declname>
        </param>
        <param>
          <type>double</type>
          <declname>high_step</declname>
        </param>
        <param>
          <type>long</type>
          <declname>stepsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/oldyin.c" line="462" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/oldyin.c" bodystart="462" bodyend="466"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>yin.c<sp/>--<sp/>partial<sp/>implementation<sp/>of<sp/>the<sp/>YIN<sp/>algorithm,<sp/>with<sp/>some<sp/></highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/>fixes<sp/>by<sp/>DM.<sp/>This<sp/>code<sp/>should<sp/>be<sp/>replaced<sp/>with<sp/>the<sp/>fall<sp/>2002</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/><sp/>intro<sp/>to<sp/>computer<sp/>music<sp/>implementation<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sys/file.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>mips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;snd.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xlisp_8h" kindref="compound">xlisp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sound_8h" kindref="compound">sound.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="falloc_8h" kindref="compound">falloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="yin_8h" kindref="compound">yin.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="oldyin_8c_1a1de5618cee236d7f4defce69918b8994" kindref="member">yin_free</ref>();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>for<sp/>multiple<sp/>channel<sp/>results,<sp/>one<sp/>susp<sp/>is<sp/>shared<sp/>by<sp/>all<sp/>sounds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>the<sp/>susp<sp/>in<sp/>turn<sp/>must<sp/>point<sp/>back<sp/>to<sp/>all<sp/>sound<sp/>list<sp/>tails<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="structyin__susp__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structyin__susp__struct" kindref="compound">yin_susp_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="25" refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsnd__susp__struct" kindref="compound">snd_susp_node</ref><sp/><ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>;</highlight></codeline>
<codeline lineno="26" refid="structyin__susp__struct_1ae0dc53f4b8e251a1e1e2ba540151f221" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structyin__susp__struct_1ae0dc53f4b8e251a1e1e2ba540151f221" kindref="member">terminate_cnt</ref>;</highlight></codeline>
<codeline lineno="27" refid="structyin__susp__struct_1abeef0ed483d9b85ddf4c02d2cff8bcec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="structyin__susp__struct_1abeef0ed483d9b85ddf4c02d2cff8bcec" kindref="member">logically_stopped</ref>;</highlight></codeline>
<codeline lineno="28" refid="structyin__susp__struct_1a8877982a4c335caab398bee5f8c71e33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="structyin__susp__struct_1a8877982a4c335caab398bee5f8c71e33" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="29" refid="structyin__susp__struct_1a0747b5cf407ffb737710d97e9b6b4711" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structyin__susp__struct_1a0747b5cf407ffb737710d97e9b6b4711" kindref="member">s_cnt</ref>;</highlight></codeline>
<codeline lineno="30" refid="structyin__susp__struct_1ab60761876663def5eeccb88c03ae4f50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/><ref refid="structyin__susp__struct_1ab60761876663def5eeccb88c03ae4f50" kindref="member">s_ptr</ref>;</highlight></codeline>
<codeline lineno="31" refid="structyin__susp__struct_1a1e8feb96618ed3cab2833b3babfadfc4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structyin__susp__struct_1a1e8feb96618ed3cab2833b3babfadfc4" kindref="member">blocksize</ref>;</highlight></codeline>
<codeline lineno="32" refid="structyin__susp__struct_1aca4a51a1b0e6e15fef714eb6ddc3e287" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structyin__susp__struct_1aca4a51a1b0e6e15fef714eb6ddc3e287" kindref="member">stepsize</ref>;</highlight></codeline>
<codeline lineno="33" refid="structyin__susp__struct_1a8c97a26cf5ab9530883a11d0d4c2e381" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*<ref refid="structyin__susp__struct_1a8c97a26cf5ab9530883a11d0d4c2e381" kindref="member">block</ref>;</highlight></codeline>
<codeline lineno="34" refid="structyin__susp__struct_1aefb3a784c4e0854229044f3d45bd613e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structyin__susp__struct_1aefb3a784c4e0854229044f3d45bd613e" kindref="member">temp</ref>;</highlight></codeline>
<codeline lineno="35" refid="structyin__susp__struct_1ad56f64c1188c8aa9843a54fde58af580" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*<ref refid="structyin__susp__struct_1ad56f64c1188c8aa9843a54fde58af580" kindref="member">fillptr</ref>;</highlight></codeline>
<codeline lineno="36" refid="structyin__susp__struct_1a1f3f6f61101e12c8f81bcf7381c68e0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*<ref refid="structyin__susp__struct_1a1f3f6f61101e12c8f81bcf7381c68e0d" kindref="member">endptr</ref>;</highlight></codeline>
<codeline lineno="37" refid="structyin__susp__struct_1a8ed5abf4c9ced2a2de05db880e6c2bcb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/><ref refid="structyin__susp__struct_1a8ed5abf4c9ced2a2de05db880e6c2bcb" kindref="member">chan</ref>[2];<sp/><sp/></highlight><highlight class="comment">/*<sp/>array<sp/>of<sp/>back<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structyin__susp__struct_1a4899b99a1ecf0fdd5a5c8b1aa8d25836" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structyin__susp__struct_1a4899b99a1ecf0fdd5a5c8b1aa8d25836" kindref="member">cnt</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>how<sp/>many<sp/>sample<sp/>frames<sp/>to<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="structyin__susp__struct_1ad4c2052aa918a157ac89a56b3f44191e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structyin__susp__struct_1ad4c2052aa918a157ac89a56b3f44191e" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="40" refid="structyin__susp__struct_1a3d35ef2064fcba2280b537ad3124467b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structyin__susp__struct_1a3d35ef2064fcba2280b537ad3124467b" kindref="member">middle</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}<sp/><ref refid="oldyin_8c_1a69d524e927c73b0ea5e2c691e5498577" kindref="member">yin_susp_node</ref>,<sp/>*<ref refid="oldyin_8c_1ab02a09eecb3b617f96bc770102252f1e" kindref="member">yin_susp_type</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Uses<sp/>cubic<sp/>interpolation<sp/>to<sp/>return<sp/>the<sp/>value<sp/>of<sp/>x<sp/>such</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>the<sp/>function<sp/>defined<sp/>by<sp/>f(0),<sp/>f(1),<sp/>f(2),<sp/>and<sp/>f(3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>maximized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="oldyin_8c_1a5a780d5f00a46f37eac3a3f8493625b4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="oldyin_8c_1a5a780d5f00a46f37eac3a3f8493625b4" kindref="member">CubicMaximize</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y3)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>coefficients<sp/>of<sp/>cubic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>da,<sp/>db,<sp/>dc;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>discriminant;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1,<sp/>x2;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dda,<sp/>ddb;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>a<sp/>=<sp/>(float)<sp/>(y0/-6.0<sp/>+<sp/>y1/2.0<sp/>-<sp/>y2/2.0<sp/>+<sp/>y3/6.0);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/>(float)<sp/>(y0<sp/>-<sp/>5.0*y1/2.0<sp/>+<sp/>2.0*y2<sp/>-<sp/>y3/2.0);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>c<sp/>=<sp/>(float)<sp/>(-11.0*y0/6.0<sp/>+<sp/>3.0*y1<sp/>-<sp/>3.0*y2/2.0<sp/>+<sp/>y3/3.0);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>d<sp/>=<sp/>y0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>derivative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>da<sp/>=<sp/>3*<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>db<sp/>=<sp/>2*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>dc<sp/>=<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>zeroes<sp/>of<sp/>derivative<sp/>using<sp/>quadratic<sp/>equation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>discriminant<sp/>=<sp/>db*db<sp/>-<sp/>4*da*dc;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(discriminant<sp/>&lt;<sp/>0.0)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;<sp/></highlight><highlight class="comment">//<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>x1<sp/>=<sp/>(float)<sp/>((-db<sp/>+<sp/>sqrt(discriminant))<sp/>/<sp/>(2<sp/>*<sp/>da));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>x2<sp/>=<sp/>(float)<sp/>((-db<sp/>-<sp/>sqrt(discriminant))<sp/>/<sp/>(2<sp/>*<sp/>da));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>one<sp/>which<sp/>corresponds<sp/>to<sp/>a<sp/>local<sp/>_maximum_<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cubic<sp/>is<sp/>the<sp/>one<sp/>we<sp/>want<sp/>-<sp/>the<sp/>one<sp/>with<sp/>a<sp/>negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>second<sp/>derivative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>dda<sp/>=<sp/>2*da;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>ddb<sp/>=<sp/>db;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dda*x1<sp/>+<sp/>ddb<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x1;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x2;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="oldyin_8c_1a67127ad9ab79d5268180ab3c629aeea4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="oldyin_8c_1a67127ad9ab79d5268180ab3c629aeea4" kindref="member">yin_compute</ref>(yin_susp_type<sp/><ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="seqread_8c_1a7f083f7b76ea4d09b2820211a2b0d04e" kindref="member">pitch</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*harmonicity)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="test__rw__echo_8c_1a39c8d1039645bc924aecc49d76f472a0" kindref="member">samples</ref><sp/>=<sp/>susp-&gt;<ref refid="structyin__susp__struct_1a8c97a26cf5ab9530883a11d0d4c2e381" kindref="member">block</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structyin__susp__struct_1a3d35ef2064fcba2280b537ad3124467b" kindref="member">middle</ref><sp/>=<sp/>susp-&gt;<ref refid="structyin__susp__struct_1a3d35ef2064fcba2280b537ad3124467b" kindref="member">middle</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>int<sp/>n<sp/>=<sp/>middle<sp/>*<sp/>2;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structyin__susp__struct_1ad4c2052aa918a157ac89a56b3f44191e" kindref="member">m</ref><sp/>=<sp/>susp-&gt;<ref refid="structyin__susp__struct_1ad4c2052aa918a157ac89a56b3f44191e" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>threshold<sp/>=<sp/>0.9F;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*results<sp/>=<sp/>susp-&gt;<ref refid="structyin__susp__struct_1aefb3a784c4e0854229044f3d45bd613e" kindref="member">temp</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>samples<sp/>is<sp/>a<sp/>buffer<sp/>of<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>n<sp/>is<sp/>the<sp/>number<sp/>of<sp/>samples,<sp/>equals<sp/>twice<sp/>longest<sp/>period,<sp/>must<sp/>be<sp/>even<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>m<sp/>is<sp/>the<sp/>shortest<sp/>period<sp/>in<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>results<sp/>is<sp/>an<sp/>array<sp/>of<sp/>size<sp/>n/2<sp/>-<sp/>m<sp/>+<sp/>1,<sp/>the<sp/>number<sp/>of<sp/>different<sp/>lags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>work<sp/>from<sp/>the<sp/>middle<sp/>of<sp/>the<sp/>buffer:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j;<sp/></highlight><highlight class="comment">/*<sp/>loop<sp/>counters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>how<sp/>many<sp/>different<sp/>lags<sp/>do<sp/>we<sp/>compute?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>int<sp/>iterations<sp/>=<sp/>middle<sp/>+<sp/>1<sp/>-<sp/>m;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>left_energy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>right_energy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>each<sp/>window,<sp/>we<sp/>keep<sp/>the<sp/>energy<sp/>so<sp/>we<sp/>can<sp/>compute<sp/>the<sp/>next<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>incrementally.<sp/>First,<sp/>we<sp/>need<sp/>to<sp/>compute<sp/>the<sp/>energies<sp/>for<sp/>lag<sp/>m-1:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>*pitch<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m<sp/>-<sp/>1;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>samples[middle<sp/>-<sp/>1<sp/>-<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>right<sp/>=<sp/>samples[middle<sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_energy<sp/>+=<sp/>left<sp/>*<sp/>left;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_energy<sp/>+=<sp/>right<sp/>*<sp/>right;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>m;<sp/>i<sp/>&lt;=<sp/><ref refid="structyin__susp__struct_1a3d35ef2064fcba2280b537ad3124467b" kindref="member">middle</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i<sp/>is<sp/>the<sp/>lag<sp/>and<sp/>the<sp/>length<sp/>of<sp/>the<sp/>window<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>the<sp/>energy<sp/>for<sp/>left<sp/>and<sp/>right<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>left,<sp/>right,<sp/>energy,<sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>harmonic;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/>samples[middle<sp/>-<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_energy<sp/>+=<sp/>left<sp/>*<sp/>left;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right<sp/>=<sp/>samples[middle<sp/>-<sp/>1<sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_energy<sp/>+=<sp/>right<sp/>*<sp/>right;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>compute<sp/>the<sp/>autocorrelation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>+=<sp/>samples[middle<sp/>-<sp/>i<sp/>+<sp/>j]<sp/>*<sp/>samples[middle<sp/>+<sp/>j];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energy<sp/>=<sp/>left_energy<sp/>+<sp/>right_energy;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>harmonic<sp/>=<sp/>(2<sp/>*<sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>)<sp/>/<sp/>energy;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results[i<sp/>-<sp/><ref refid="structyin__susp__struct_1ad4c2052aa918a157ac89a56b3f44191e" kindref="member">m</ref>]<sp/>=<sp/>harmonic;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>m;<sp/>i<sp/>&lt;=<sp/><ref refid="structyin__susp__struct_1a3d35ef2064fcba2280b537ad3124467b" kindref="member">middle</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(results[i<sp/>-<sp/>m]<sp/>&gt;<sp/>threshold)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f_i<sp/>=<sp/>(i<sp/>-<sp/>1)<sp/>+<sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="oldyin_8c_1a5a780d5f00a46f37eac3a3f8493625b4" kindref="member">CubicMaximize</ref>(results[i<sp/>-<sp/>m<sp/>-<sp/>1],<sp/>results[i<sp/>-<sp/>m],</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results[i<sp/>-<sp/>m<sp/>+<sp/>1],<sp/>results[i<sp/>-<sp/>m<sp/>+<sp/>2]);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f_i<sp/>&lt;<sp/>i<sp/>-<sp/>m<sp/>-<sp/>1<sp/>||<sp/>f_i<sp/>&gt;<sp/>i<sp/>-<sp/>m<sp/>+<sp/>2)<sp/>f_i<sp/>=<sp/>(float)<sp/>i;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pitch<sp/>=<sp/>(float)<sp/><ref refid="sound_8c_1adca6dd4416ad7e867320eca799f922b5" kindref="member">hz_to_step</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>susp-&gt;<ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a89e4d9a7c1f50a9a0b4bca5ec1c253be" kindref="member">sr</ref><sp/>/<sp/>f_i);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*harmonicity<sp/>=<sp/>results[i<sp/>-<sp/><ref refid="structyin__susp__struct_1ad4c2052aa918a157ac89a56b3f44191e" kindref="member">m</ref>];</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>yin_fetch<sp/>-<sp/>compute<sp/>F0<sp/>and<sp/>harmonicity<sp/>using<sp/>YIN<sp/>approach.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/>The<sp/>pitch<sp/>(F0)<sp/>is<sp/>determined<sp/>by<sp/>finding<sp/>two<sp/>periods<sp/>whose</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*<sp/>inner<sp/>product<sp/>accounts<sp/>for<sp/>almost<sp/>all<sp/>of<sp/>the<sp/>energy.<sp/>Let<sp/>X<sp/>and<sp/>Y</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*<sp/>be<sp/>adjacent<sp/>vectors<sp/>of<sp/>length<sp/>N<sp/>in<sp/>the<sp/>sample<sp/>stream.<sp/>Then,<sp/></highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>if<sp/>2X*Y<sp/>&gt;<sp/>threshold<sp/>*<sp/>(X*X<sp/>+<sp/>Y*Y)</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>then<sp/>the<sp/>period<sp/>is<sp/>given<sp/>by<sp/>N</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/>In<sp/>the<sp/>algorithm,<sp/>we<sp/>compute<sp/>different<sp/>sizes<sp/>until<sp/>we<sp/>find<sp/>a</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/>peak<sp/>above<sp/>threshold.<sp/>Then,<sp/>we<sp/>use<sp/>cubic<sp/>interpolation<sp/>to<sp/>get</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/>a<sp/>precise<sp/>value.<sp/>If<sp/>no<sp/>peak<sp/>above<sp/>threshold<sp/>is<sp/>found,<sp/>we<sp/>return</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/>the<sp/>first<sp/>peak.<sp/>The<sp/>second<sp/>channel<sp/>returns<sp/>the<sp/>value<sp/>2X*Y/(X*X+Y*Y)</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/>which<sp/>is<sp/>refered<sp/>to<sp/>as<sp/>the<sp/>&quot;harmonicity&quot;<sp/>--<sp/>the<sp/>amount<sp/>of<sp/>energy</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/>accounted<sp/>for<sp/>by<sp/>periodicity.</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/>Low<sp/>sample<sp/>rates<sp/>are<sp/>advised<sp/>because<sp/>of<sp/>the<sp/>high<sp/>cost<sp/>of<sp/>computing</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/>inner<sp/>products<sp/>(fast<sp/>autocorrelation<sp/>is<sp/>not<sp/>used).</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/>The<sp/>result<sp/>is<sp/>a<sp/>2-channel<sp/>signal<sp/>running<sp/>at<sp/>the<sp/>requested<sp/>rate.</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*<sp/>The<sp/>first<sp/>channel<sp/>is<sp/>the<sp/>estimated<sp/>pitch,<sp/>and<sp/>the<sp/>second<sp/>channel</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/>is<sp/>the<sp/>harmonicity.</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/>This<sp/>code<sp/>is<sp/>adopted<sp/>from<sp/>multiread,<sp/>currently<sp/>the<sp/>only<sp/>other</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*<sp/>multichannel<sp/>suspension<sp/>in<sp/>Nyquist.<sp/>Comments<sp/>from<sp/>multiread<sp/>include:</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/>The<sp/>susp<sp/>is<sp/>shared<sp/>by<sp/>all<sp/>channels.<sp/><sp/>The<sp/>susp<sp/>has<sp/>backpointers</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*<sp/>to<sp/>the<sp/>tail-most<sp/>snd_list<sp/>node<sp/>of<sp/>each<sp/>channel,<sp/>and<sp/>it<sp/>is<sp/>by</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*<sp/>extending<sp/>the<sp/>list<sp/>at<sp/>these<sp/>nodes<sp/>that<sp/>sounds<sp/>are<sp/>read<sp/>in.</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/>To<sp/>avoid<sp/>a<sp/>circularity,<sp/>the<sp/>reference<sp/>counts<sp/>on<sp/>snd_list<sp/>nodes</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/>do<sp/>not<sp/>include<sp/>the<sp/>backpointers<sp/>from<sp/>this<sp/>susp.<sp/><sp/>When<sp/>a<sp/>snd_list</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>node<sp/>refcount<sp/>goes<sp/>to<sp/>zero,<sp/>the<sp/>yin<sp/>susp&apos;s<sp/>free<sp/>routine</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>is<sp/>called.<sp/><sp/>This<sp/>must<sp/>scan<sp/>the<sp/>backpointers<sp/>to<sp/>find<sp/>the<sp/>node<sp/>that</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/>has<sp/>a<sp/>zero<sp/>refcount<sp/>(the<sp/>free<sp/>routine<sp/>is<sp/>called<sp/>before<sp/>the<sp/>node</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/>is<sp/>deallocated,<sp/>so<sp/>this<sp/>is<sp/>safe).<sp/><sp/>The<sp/>backpointer<sp/>is<sp/>then<sp/>set</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/>to<sp/>NULL.<sp/><sp/>When<sp/>all<sp/>backpointers<sp/>are<sp/>NULL,<sp/>the<sp/>susp<sp/>itself<sp/>is</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*<sp/>deallocated,<sp/>because<sp/>it<sp/>can<sp/>only<sp/>be<sp/>referenced<sp/>through<sp/>the</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/>snd_list<sp/>nodes<sp/>to<sp/>which<sp/>there<sp/>are<sp/>backpointers.</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="oldyin_8c_1a6e6a85317b38e1425160059f43b557ed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="oldyin_8c_1a6e6a85317b38e1425160059f43b557ed" kindref="member">yin_fetch</ref>(yin_susp_type<sp/><ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>,<sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structyin__susp__struct_1a4899b99a1ecf0fdd5a5c8b1aa8d25836" kindref="member">cnt</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>how<sp/>many<sp/>samples<sp/>computed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>togo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/>f0;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>f0_ptr<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/>harmonicity;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>harmonicity_ptr<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>s_ptr_reg;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*fillptr_reg;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*endptr_reg<sp/>=<sp/>susp-&gt;<ref refid="structyin__susp__struct_1a1f3f6f61101e12c8f81bcf7381c68e0d" kindref="member">endptr</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structyin__susp__struct_1a8ed5abf4c9ced2a2de05db880e6c2bcb" kindref="member">chan</ref>[0])<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1aed8e636a68eb95ea3c7dc90189e78b43" kindref="member">falloc_sample_block</ref>(f0,<sp/></highlight><highlight class="stringliteral">&quot;yin_fetch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f0_ptr<sp/>=<sp/>f0-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Since<sp/>susp-&gt;chan[i]<sp/>exists,<sp/>we<sp/>want<sp/>to<sp/>append<sp/>a<sp/>block<sp/>of<sp/>samples.</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>block,<sp/>out,<sp/>has<sp/>been<sp/>allocated.<sp/><sp/>Before<sp/>we<sp/>insert<sp/>the<sp/>block,</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>must<sp/>figure<sp/>out<sp/>whether<sp/>to<sp/>insert<sp/>a<sp/>new<sp/>snd_list_type<sp/>node<sp/>for</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>block.<sp/><sp/>Recall<sp/>that<sp/>before<sp/>SND_get_next<sp/>is<sp/>called,<sp/>the<sp/>last</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>snd_list_type<sp/>in<sp/>the<sp/>list<sp/>will<sp/>have<sp/>a<sp/>null<sp/>block<sp/>pointer,<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>snd_list_type&apos;s<sp/>susp<sp/>field<sp/>points<sp/>to<sp/>the<sp/>suspension<sp/>(in<sp/>this<sp/>case,</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>susp).<sp/><sp/>When<sp/>SND_get_next<sp/>(in<sp/>sound.c)<sp/>is<sp/>called,<sp/>it<sp/>appends<sp/>a<sp/>new</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>snd_list_type<sp/>and<sp/>points<sp/>the<sp/>previous<sp/>one<sp/>to<sp/>internal_zero_block<sp/></highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>before<sp/>calling<sp/>this<sp/>fetch<sp/>routine.<sp/><sp/>On<sp/>the<sp/>other<sp/>hand,<sp/>since<sp/></highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>SND_get_next<sp/>is<sp/>only<sp/>going<sp/>to<sp/>be<sp/>called<sp/>on<sp/>one<sp/>of<sp/>the<sp/>channels,<sp/>the</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>other<sp/>channels<sp/>will<sp/>not<sp/>have<sp/>had<sp/>a<sp/>snd_list_type<sp/>appended.</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>SND_get_next<sp/>does<sp/>not<sp/>tell<sp/>us<sp/>directly<sp/>which<sp/>channel<sp/>it<sp/>wants<sp/>(it</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>doesn&apos;t<sp/>know),<sp/>but<sp/>we<sp/>can<sp/>test<sp/>by<sp/>looking<sp/>for<sp/>a<sp/>non-null<sp/>block<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>snd_list_type<sp/>pointed<sp/>to<sp/>by<sp/>our<sp/>back-pointers<sp/>in<sp/>susp-&gt;chan[].<sp/><sp/>If</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>block<sp/>is<sp/>null,<sp/>the<sp/>channel<sp/>was<sp/>untouched<sp/>by<sp/>SND_get_next,<sp/>and</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>should<sp/>append<sp/>a<sp/>snd_list_type.<sp/><sp/>If<sp/>it<sp/>is<sp/>non-null,<sp/>then<sp/>it</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>points<sp/>to<sp/>internal_zero_block<sp/>(the<sp/>block<sp/>inserted<sp/>by<sp/>SND_get_next)</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>a<sp/>new<sp/>snd_list_type<sp/>has<sp/>already<sp/>been<sp/>appended.</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Before<sp/>proceeding,<sp/>it<sp/>may<sp/>be<sp/>that<sp/>garbage<sp/>collection<sp/>ran<sp/>when<sp/>we</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>allocated<sp/>out,<sp/>so<sp/>check<sp/>again<sp/>to<sp/>see<sp/>if<sp/>susp-&gt;chan[j]<sp/>is<sp/>Null:</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!susp-&gt;<ref refid="structyin__susp__struct_1a8ed5abf4c9ced2a2de05db880e6c2bcb" kindref="member">chan</ref>[0])<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a4d9aacbd9b154378f51f57e3459a04b1" kindref="member">ffree_sample_block</ref>(f0,<sp/></highlight><highlight class="stringliteral">&quot;yin_fetch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f0<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>we<sp/>don&apos;t<sp/>free<sp/>it<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f0_ptr<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>we<sp/>don&apos;t<sp/>output<sp/>f0<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!susp-&gt;<ref refid="structyin__susp__struct_1a8ed5abf4c9ced2a2de05db880e6c2bcb" kindref="member">chan</ref>[0]-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref>)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list<sp/>=<sp/><ref refid="sound_8c_1a58f82dfd9acaae997e982fd56e81e11d" kindref="member">snd_list_create</ref>((<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref>)<sp/>susp);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>we<sp/>have<sp/>a<sp/>snd_list<sp/>to<sp/>append<sp/>to<sp/>the<sp/>channel,<sp/>but<sp/>a<sp/>very</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>interesting<sp/>thing<sp/>can<sp/>happen<sp/>here.<sp/><sp/>snd_list_create,<sp/>which</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>just<sp/>called,<sp/>MAY<sp/>have<sp/>invoked<sp/>the<sp/>garbage<sp/>collector,<sp/>and</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>GC<sp/>MAY<sp/>have<sp/>freed<sp/>all<sp/>references<sp/>to<sp/>this<sp/>channel,<sp/>in<sp/>which</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>case<sp/>yin_free(susp)<sp/>will<sp/>have<sp/>been<sp/>called,<sp/>and<sp/>susp-&gt;chan[0]</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>will<sp/>now<sp/>be<sp/>NULL!</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!susp-&gt;chan[0])<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a794da1cd6568e8738bc0d988adf38b6e" kindref="member">ffree_snd_list</ref>(snd_list,<sp/></highlight><highlight class="stringliteral">&quot;yin_fetch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;chan[0]-&gt;u.next<sp/>=<sp/>snd_list;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>see<sp/>the<sp/>note<sp/>above:<sp/>we<sp/>don&apos;t<sp/>know<sp/>if<sp/>susp-&gt;chan<sp/>still<sp/>exists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note:<sp/>We<sp/>DO<sp/>know<sp/>that<sp/>susp<sp/>still<sp/>exists<sp/>because<sp/>even<sp/>if<sp/>we<sp/>lost</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>some<sp/>channels<sp/>in<sp/>a<sp/>GC,<sp/>someone<sp/>is<sp/>still<sp/>calling<sp/>SND_get_next<sp/>on</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>some<sp/>channel.<sp/><sp/>I<sp/>suppose<sp/>that<sp/>there<sp/>might<sp/>be<sp/>some<sp/>very<sp/>pathological</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>code<sp/>that<sp/>could<sp/>free<sp/>a<sp/>global<sp/>reference<sp/>to<sp/>a<sp/>sound<sp/>that<sp/>is<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>midst<sp/>of<sp/>being<sp/>computed,<sp/>perhaps<sp/>by<sp/>doing<sp/>something<sp/>bizarre<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>closure<sp/>that<sp/>snd_seq<sp/>activates<sp/>at<sp/>the<sp/>logical<sp/>stop<sp/>time<sp/>of<sp/>its<sp/>first</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>sound,<sp/>but<sp/>I<sp/>haven&apos;t<sp/>thought<sp/>that<sp/>one<sp/>through.</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structyin__susp__struct_1a8ed5abf4c9ced2a2de05db880e6c2bcb" kindref="member">chan</ref>[0])<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1a8ed5abf4c9ced2a2de05db880e6c2bcb" kindref="member">chan</ref>[0]-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref><sp/>=<sp/>f0;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>some<sp/>assertions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structyin__susp__struct_1a8ed5abf4c9ced2a2de05db880e6c2bcb" kindref="member">chan</ref>[0]-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a3a9e571a923a7496eabe0d721e497fbf" kindref="member">next</ref>-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a57f7d6b31a871ee6d94757b409f636ee" kindref="member">susp</ref><sp/>!=<sp/>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref>)<sp/>susp)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;didn&apos;t<sp/>find<sp/>susp<sp/>at<sp/>end<sp/>of<sp/>list<sp/>for<sp/>chan<sp/>0\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f0)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>we<sp/>allocated<sp/>f0,<sp/>but<sp/>don&apos;t<sp/>need<sp/>it<sp/>anymore<sp/>due<sp/>to<sp/>GC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a4d9aacbd9b154378f51f57e3459a04b1" kindref="member">ffree_sample_block</ref>(f0,<sp/></highlight><highlight class="stringliteral">&quot;yin_fetch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f0_ptr<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now,<sp/>repeat<sp/>for<sp/>channel<sp/>1<sp/>(comments<sp/>omitted)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structyin__susp__struct_1a8ed5abf4c9ced2a2de05db880e6c2bcb" kindref="member">chan</ref>[1])<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1aed8e636a68eb95ea3c7dc90189e78b43" kindref="member">falloc_sample_block</ref>(harmonicity,<sp/></highlight><highlight class="stringliteral">&quot;yin_fetch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>harmonicity_ptr<sp/>=<sp/>harmonicity-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!susp-&gt;<ref refid="structyin__susp__struct_1a8ed5abf4c9ced2a2de05db880e6c2bcb" kindref="member">chan</ref>[1])<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a4d9aacbd9b154378f51f57e3459a04b1" kindref="member">ffree_sample_block</ref>(harmonicity,<sp/></highlight><highlight class="stringliteral">&quot;yin_fetch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>harmonicity<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>we<sp/>don&apos;t<sp/>free<sp/>it<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>harmonicity_ptr<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!susp-&gt;<ref refid="structyin__susp__struct_1a8ed5abf4c9ced2a2de05db880e6c2bcb" kindref="member">chan</ref>[1]-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref>)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list<sp/>=<sp/><ref refid="sound_8c_1a58f82dfd9acaae997e982fd56e81e11d" kindref="member">snd_list_create</ref>((<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref>)<sp/>susp);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!susp-&gt;chan[1])<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a794da1cd6568e8738bc0d988adf38b6e" kindref="member">ffree_snd_list</ref>(snd_list,<sp/></highlight><highlight class="stringliteral">&quot;yin_fetch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;chan[1]-&gt;u.next<sp/>=<sp/>snd_list;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structyin__susp__struct_1a8ed5abf4c9ced2a2de05db880e6c2bcb" kindref="member">chan</ref>[1])<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1a8ed5abf4c9ced2a2de05db880e6c2bcb" kindref="member">chan</ref>[1]-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref><sp/>=<sp/>harmonicity;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structyin__susp__struct_1a8ed5abf4c9ced2a2de05db880e6c2bcb" kindref="member">chan</ref>[1]-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a3a9e571a923a7496eabe0d721e497fbf" kindref="member">next</ref>-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a57f7d6b31a871ee6d94757b409f636ee" kindref="member">susp</ref><sp/>!=<sp/>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref>)<sp/>susp)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;didn&apos;t<sp/>find<sp/>susp<sp/>at<sp/>end<sp/>of<sp/>list<sp/>for<sp/>chan<sp/>1\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(harmonicity)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>we<sp/>allocated<sp/>harmonicity,<sp/>but<sp/>don&apos;t<sp/>need<sp/>it<sp/>anymore<sp/>due<sp/>to<sp/>GC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a4d9aacbd9b154378f51f57e3459a04b1" kindref="member">ffree_sample_block</ref>(harmonicity,<sp/></highlight><highlight class="stringliteral">&quot;yin_fetch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>harmonicity_ptr<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cnt<sp/>&lt;<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>outer<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first,<sp/>compute<sp/>how<sp/>many<sp/>samples<sp/>to<sp/>generate<sp/>in<sp/>inner<sp/>loop:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>overflow<sp/>the<sp/>output<sp/>sample<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/>(<ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref><sp/>-<sp/><ref refid="structyin__susp__struct_1a4899b99a1ecf0fdd5a5c8b1aa8d25836" kindref="member">cnt</ref>)<sp/>*<sp/>susp-&gt;<ref refid="structyin__susp__struct_1aca4a51a1b0e6e15fef714eb6ddc3e287" kindref="member">stepsize</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>run<sp/>past<sp/>the<sp/>s<sp/>input<sp/>sample<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a8df760974fbb6307881acf6e19dd49cc" kindref="member">susp_check_term_log_samples</ref>(<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/><ref refid="structyin__susp__struct_1ab60761876663def5eeccb88c03ae4f50" kindref="member">s_ptr</ref>,<sp/><ref refid="structyin__susp__struct_1a0747b5cf407ffb737710d97e9b6b4711" kindref="member">s_cnt</ref>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(togo,<sp/>susp-&gt;<ref refid="structyin__susp__struct_1a0747b5cf407ffb737710d97e9b6b4711" kindref="member">s_cnt</ref>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>run<sp/>past<sp/>terminate<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structyin__susp__struct_1ae0dc53f4b8e251a1e1e2ba540151f221" kindref="member">terminate_cnt</ref><sp/>!=<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1ae0dc53f4b8e251a1e1e2ba540151f221" kindref="member">terminate_cnt</ref><sp/>&lt;=<sp/>susp-&gt;<ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+<sp/>cnt<sp/>+<sp/>togo/susp-&gt;<ref refid="structyin__susp__struct_1aca4a51a1b0e6e15fef714eb6ddc3e287" kindref="member">stepsize</ref>)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/>(susp-&gt;<ref refid="structyin__susp__struct_1ae0dc53f4b8e251a1e1e2ba540151f221" kindref="member">terminate_cnt</ref><sp/>-<sp/>(susp-&gt;<ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+<sp/><ref refid="structyin__susp__struct_1a4899b99a1ecf0fdd5a5c8b1aa8d25836" kindref="member">cnt</ref>))<sp/>*<sp/>susp-&gt;<ref refid="structyin__susp__struct_1aca4a51a1b0e6e15fef714eb6ddc3e287" kindref="member">stepsize</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(togo<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>run<sp/>past<sp/>logical<sp/>stop<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!susp-&gt;<ref refid="structyin__susp__struct_1abeef0ed483d9b85ddf4c02d2cff8bcec" kindref="member">logically_stopped</ref><sp/>&amp;&amp;<sp/>susp-&gt;<ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>!=<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>to_stop<sp/>=<sp/>susp-&gt;<ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>-<sp/>(susp-&gt;<ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+<sp/><ref refid="structyin__susp__struct_1a4899b99a1ecf0fdd5a5c8b1aa8d25836" kindref="member">cnt</ref>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>break<sp/>if<sp/>to_stop<sp/>=<sp/>0<sp/>(we&apos;re<sp/>at<sp/>the<sp/>logical<sp/>stop)</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>AND<sp/>cnt<sp/>&gt;<sp/>0<sp/>(we&apos;re<sp/>not<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>output<sp/>block)</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_stop<sp/>&lt;<sp/>togo/susp-&gt;<ref refid="structyin__susp__struct_1aca4a51a1b0e6e15fef714eb6ddc3e287" kindref="member">stepsize</ref>)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_stop<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cnt)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>keep<sp/>togo<sp/>as<sp/>is:<sp/>since<sp/>cnt<sp/>==<sp/>0,<sp/>we<sp/>can<sp/>set</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>logical<sp/>stop<sp/>flag<sp/>on<sp/>this<sp/>output<sp/>block</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1abeef0ed483d9b85ddf4c02d2cff8bcec" kindref="member">logically_stopped</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>limit<sp/>togo<sp/>so<sp/>we<sp/>can<sp/>start<sp/>a<sp/>new<sp/>block<sp/>a<sp/>the<sp/>LST<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/>to_stop<sp/>*<sp/>susp-&gt;<ref refid="structyin__susp__struct_1aca4a51a1b0e6e15fef714eb6ddc3e287" kindref="member">stepsize</ref>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>togo;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_ptr_reg<sp/>=<sp/>susp-&gt;<ref refid="structyin__susp__struct_1ab60761876663def5eeccb88c03ae4f50" kindref="member">s_ptr</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fillptr_reg<sp/>=<sp/>susp-&gt;<ref refid="structyin__susp__struct_1ad56f64c1188c8aa9843a54fde58af580" kindref="member">fillptr</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>inner<sp/>sample<sp/>computation<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fillptr_reg++<sp/>=<sp/>*s_ptr_reg++;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fillptr_reg<sp/>&gt;=<sp/>endptr_reg)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f0;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>harmonicity;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="oldyin_8c_1a67127ad9ab79d5268180ab3c629aeea4" kindref="member">yin_compute</ref>(susp,<sp/>&amp;f0,<sp/>&amp;harmonicity);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f0_ptr)<sp/>*f0_ptr++<sp/>=<sp/>f0;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(harmonicity_ptr)<sp/>*harmonicity_ptr++<sp/>=<sp/>harmonicity;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cnt++;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fillptr_reg<sp/>-=<sp/>susp-&gt;<ref refid="structyin__susp__struct_1aca4a51a1b0e6e15fef714eb6ddc3e287" kindref="member">stepsize</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--n);<sp/></highlight><highlight class="comment">/*<sp/>inner<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>using<sp/>s_ptr_reg<sp/>is<sp/>a<sp/>bad<sp/>idea<sp/>on<sp/>RS/6000:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1ab60761876663def5eeccb88c03ae4f50" kindref="member">s_ptr</ref><sp/>+=<sp/>togo;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1ad56f64c1188c8aa9843a54fde58af580" kindref="member">fillptr</ref><sp/>=<sp/>fillptr_reg;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a68ee99d63015ca2a41d7c82d8717cfeb" kindref="member">susp_took</ref>(<ref refid="structyin__susp__struct_1a0747b5cf407ffb737710d97e9b6b4711" kindref="member">s_cnt</ref>,<sp/>togo);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>outer<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>for<sp/>termination<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(togo<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>cnt<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a64f075d27a7672293c0c8d657aa51647" kindref="member">snd_list_terminate</ref>(snd_list);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a809aedecf6147df4ec4b45404cfab414" kindref="member">block_len</ref><sp/>=<sp/><ref refid="structyin__susp__struct_1a4899b99a1ecf0fdd5a5c8b1aa8d25836" kindref="member">cnt</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+=<sp/><ref refid="structyin__susp__struct_1a4899b99a1ecf0fdd5a5c8b1aa8d25836" kindref="member">cnt</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>for<sp/>logical<sp/>stop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structyin__susp__struct_1abeef0ed483d9b85ddf4c02d2cff8bcec" kindref="member">logically_stopped</ref>)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a09cdf89fd12d89166b27e4c3963420b3" kindref="member">logically_stopped</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>==<sp/>susp-&gt;<ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref>)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1abeef0ed483d9b85ddf4c02d2cff8bcec" kindref="member">logically_stopped</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>yin_fetch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="369" refid="oldyin_8c_1a3802dc4edc1b43e273d0f60318baaadb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="oldyin_8c_1a3802dc4edc1b43e273d0f60318baaadb" kindref="member">yin_mark</ref>(yin_susp_type<sp/><ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>)</highlight></codeline>
<codeline lineno="370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1aacbcd25bfdd21a0dfd009fe0bfbe4ff5" kindref="member">sound_xlmark</ref>(susp-&gt;<ref refid="structyin__susp__struct_1a8877982a4c335caab398bee5f8c71e33" kindref="member">s</ref>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="oldyin_8c_1a546aca5c0151cf91b49ab61518015f4d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="oldyin_8c_1a1de5618cee236d7f4defce69918b8994" kindref="member">yin_free</ref>(yin_susp_type<sp/><ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>)</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="midiclock_8c_1a3acee43f445ecc4630f3ed3419730515" kindref="member">active</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>stdputstr(&quot;yin_free:<sp/>&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>2;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structyin__susp__struct_1a8ed5abf4c9ced2a2de05db880e6c2bcb" kindref="member">chan</ref>[j])<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structyin__susp__struct_1a8ed5abf4c9ced2a2de05db880e6c2bcb" kindref="member">chan</ref>[j]-&gt;<ref refid="structsnd__list__struct_1a27044dc0ac840d508156da70b7b8eec5" kindref="member">refcnt</ref>)<sp/>active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1a8ed5abf4c9ced2a2de05db880e6c2bcb" kindref="member">chan</ref>[j]<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nyquist_printf(&quot;deactivating<sp/>channel<sp/>%d\n&quot;,<sp/>j);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!active)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>stdputstr(&quot;all<sp/>channels<sp/>freed,<sp/>freeing<sp/>susp<sp/>now\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a90be646acd537771c5401524877e0844" kindref="member">ffree_generic</ref>(susp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structyin__susp__struct" kindref="compound">yin_susp_node</ref>),<sp/></highlight><highlight class="stringliteral">&quot;yin_free&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a6160c7ed8621e6ca60d9c0875cd25f9f" kindref="member">sound_unref</ref>(susp-&gt;<ref refid="structyin__susp__struct_1a8877982a4c335caab398bee5f8c71e33" kindref="member">s</ref>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(susp-&gt;<ref refid="structyin__susp__struct_1a8c97a26cf5ab9530883a11d0d4c2e381" kindref="member">block</ref>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(susp-&gt;<ref refid="structyin__susp__struct_1aefb3a784c4e0854229044f3d45bd613e" kindref="member">temp</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="oldyin_8c_1abb63e618f274154ba11d42d0c0115577" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="oldyin_8c_1abb63e618f274154ba11d42d0c0115577" kindref="member">yin_print_tree</ref>(yin_susp_type<sp/><ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1ad9f5e076a5a83912c647d0164fd9cf98" kindref="member">indent</ref>(n);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;s:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a1b2ca7c132e90e3ded840d25f8baa088" kindref="member">sound_print_tree_1</ref>(susp-&gt;<ref refid="structyin__susp__struct_1a8877982a4c335caab398bee5f8c71e33" kindref="member">s</ref>,<sp/>n);</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="oldyin_8c_1a616aad3e1035ad5e1833ca360758c314" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="oldyin_8c_1a616aad3e1035ad5e1833ca360758c314" kindref="member">snd_make_yin</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>low_step,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>high_step,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structyin__susp__struct_1aca4a51a1b0e6e15fef714eb6ddc3e287" kindref="member">stepsize</ref>)</highlight></codeline>
<codeline lineno="409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>result;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>yin_susp_type<sp/><ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref><sp/>sr<sp/>=<sp/>s-&gt;<ref refid="structsound__struct_1aafecd01e13520f7fb83fe8e2ac2cd026" kindref="member">sr</ref>;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>t0<sp/>=<sp/>s-&gt;<ref refid="structsound__struct_1a397d52ba2da4602200e85f49f62f28ea" kindref="member">t0</ref>;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a187500f957dfc9510ad0c87c0c92e39e" kindref="member">falloc_generic</ref>(susp,<sp/><ref refid="structyin__susp__struct" kindref="compound">yin_susp_node</ref>,<sp/></highlight><highlight class="stringliteral">&quot;snd_make_yin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1addb182d5c03b9b8f864e4fd9871f7722" kindref="member">fetch</ref><sp/>=<sp/><ref refid="oldyin_8c_1a6e6a85317b38e1425160059f43b557ed" kindref="member">yin_fetch</ref>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1ae0dc53f4b8e251a1e1e2ba540151f221" kindref="member">terminate_cnt</ref><sp/>=<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>susp<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a39cc18ad890efb4f088c9d7636e3b5c0" kindref="member">free</ref><sp/>=<sp/><ref refid="oldyin_8c_1a1de5618cee236d7f4defce69918b8994" kindref="member">yin_free</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a89e4d9a7c1f50a9a0b4bca5ec1c253be" kindref="member">sr</ref><sp/>=<sp/>sr<sp/>/<sp/><ref refid="structyin__susp__struct_1aca4a51a1b0e6e15fef714eb6ddc3e287" kindref="member">stepsize</ref>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a5e783b62d30b458070fb80dc0e112594" kindref="member">t0</ref><sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a077478e200df3bc42489892597f15d47" kindref="member">mark</ref><sp/>=<sp/><ref refid="oldyin_8c_1a3802dc4edc1b43e273d0f60318baaadb" kindref="member">yin_mark</ref>;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a4403d10e525f61c551eaa74440ee6b7d" kindref="member">print_tree</ref><sp/>=<sp/><ref refid="oldyin_8c_1abb63e618f274154ba11d42d0c0115577" kindref="member">yin_print_tree</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a4d5fa6ba6ea209e5159d06ea00320041" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;yin&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1abeef0ed483d9b85ddf4c02d2cff8bcec" kindref="member">logically_stopped</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>=<sp/><ref refid="sound_8h_1a070c64f8728992592cead01fad20a130" kindref="member">logical_stop_cnt_cvt</ref>(s);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1a8eea450d2a654417e8e07eb4f5f9ae4c" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1a8877982a4c335caab398bee5f8c71e33" kindref="member">s</ref><sp/>=<sp/><ref refid="structyin__susp__struct_1a8877982a4c335caab398bee5f8c71e33" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1a0747b5cf407ffb737710d97e9b6b4711" kindref="member">s_cnt</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1ad4c2052aa918a157ac89a56b3f44191e" kindref="member">m</ref><sp/>=<sp/>(long)<sp/>(sr<sp/>/<sp/><ref refid="sound_8c_1aa21f4301ed3b3447d7c7e90a132ac8c1" kindref="member">step_to_hz</ref>(high_step));</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structyin__susp__struct_1ad4c2052aa918a157ac89a56b3f44191e" kindref="member">m</ref><sp/>&lt;<sp/>2)<sp/>susp-&gt;<ref refid="structyin__susp__struct_1ad4c2052aa918a157ac89a56b3f44191e" kindref="member">m</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>1<sp/>to<sp/>make<sp/>sure<sp/>we<sp/>round<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1a3d35ef2064fcba2280b537ad3124467b" kindref="member">middle</ref><sp/>=<sp/>(long)<sp/>(sr<sp/>/<sp/><ref refid="sound_8c_1aa21f4301ed3b3447d7c7e90a132ac8c1" kindref="member">step_to_hz</ref>(low_step))<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1a1e8feb96618ed3cab2833b3babfadfc4" kindref="member">blocksize</ref><sp/>=<sp/>susp-&gt;<ref refid="structyin__susp__struct_1a3d35ef2064fcba2280b537ad3124467b" kindref="member">middle</ref><sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1aca4a51a1b0e6e15fef714eb6ddc3e287" kindref="member">stepsize</ref><sp/>=<sp/><ref refid="structyin__susp__struct_1aca4a51a1b0e6e15fef714eb6ddc3e287" kindref="member">stepsize</ref>;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>blocksize<sp/>must<sp/>be<sp/>at<sp/>least<sp/>step<sp/>size<sp/>to<sp/>implement<sp/>stepping<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structyin__susp__struct_1aca4a51a1b0e6e15fef714eb6ddc3e287" kindref="member">stepsize</ref><sp/>&gt;<sp/>susp-&gt;<ref refid="structyin__susp__struct_1a1e8feb96618ed3cab2833b3babfadfc4" kindref="member">blocksize</ref>)<sp/>susp-&gt;<ref refid="structyin__susp__struct_1a1e8feb96618ed3cab2833b3babfadfc4" kindref="member">blocksize</ref><sp/>=<sp/>susp-&gt;<ref refid="structyin__susp__struct_1aca4a51a1b0e6e15fef714eb6ddc3e287" kindref="member">stepsize</ref>;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1a8c97a26cf5ab9530883a11d0d4c2e381" kindref="member">block</ref><sp/>=<sp/>(<ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*)<sp/>malloc(susp-&gt;<ref refid="structyin__susp__struct_1a1e8feb96618ed3cab2833b3babfadfc4" kindref="member">blocksize</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref>));</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1aefb3a784c4e0854229044f3d45bd613e" kindref="member">temp</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)<sp/>malloc((susp-&gt;<ref refid="structyin__susp__struct_1a3d35ef2064fcba2280b537ad3124467b" kindref="member">middle</ref><sp/>-<sp/>susp-&gt;<ref refid="structyin__susp__struct_1ad4c2052aa918a157ac89a56b3f44191e" kindref="member">m</ref><sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float));</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1ad56f64c1188c8aa9843a54fde58af580" kindref="member">fillptr</ref><sp/>=<sp/>susp-&gt;<ref refid="structyin__susp__struct_1a8c97a26cf5ab9530883a11d0d4c2e381" kindref="member">block</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structyin__susp__struct_1a1f3f6f61101e12c8f81bcf7381c68e0d" kindref="member">endptr</ref><sp/>=<sp/>susp-&gt;<ref refid="structyin__susp__struct_1a8c97a26cf5ab9530883a11d0d4c2e381" kindref="member">block</ref><sp/>+<sp/>susp-&gt;<ref refid="structyin__susp__struct_1a1e8feb96618ed3cab2833b3babfadfc4" kindref="member">blocksize</ref>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a1479676ad1c6de6f93ba2044c0685617" kindref="member">xlsave1</ref>(result);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="xldmem_8c_1aff7eb5a000567061935089b85eaa3c1a" kindref="member">newvector</ref>(2);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>array<sp/>for<sp/>F0<sp/>and<sp/>harmonicity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>sounds<sp/>to<sp/>return<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>2;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>snd<sp/>=<sp/><ref refid="sound_8c_1a11255fe781080fb7915f6ab9a5afc4ae" kindref="member">sound_create</ref>((<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref>)susp,<sp/></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;susp.<ref refid="structsnd__susp__struct_1a5e783b62d30b458070fb80dc0e112594" kindref="member">t0</ref>,<sp/>susp-&gt;susp.<ref refid="structsnd__susp__struct_1a89e4d9a7c1f50a9a0b4bca5ec1c253be" kindref="member">sr</ref>,<sp/>1.0);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>snd_lval<sp/>=<sp/><ref refid="sound_8c_1a6ff362fbe32a9dfef6c14f1adc52f3b7" kindref="member">cvsound</ref>(snd);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>nyquist_printf(&quot;yin_create:<sp/>sound<sp/>%d<sp/>is<sp/>%x,<sp/>LVAL<sp/>%x\n&quot;,<sp/>j,<sp/>snd,<sp/>snd_lval);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a14c2a197abaade2dfe3bd8ec204530ef" kindref="member">setelement</ref>(result,<sp/>j,<sp/>snd_lval);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;chan[j]<sp/>=<sp/>snd-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref>;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a8069423ebe9363c35a5801edda92de02" kindref="member">xlpop</ref>();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462" refid="yin_8h_1a5dc6efc2480c3b3cceb5a5398fab34ae" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="oldyin_8c_1a5dc6efc2480c3b3cceb5a5398fab34ae" kindref="member">snd_yin</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>low_step,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>high_step,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structyin__susp__struct_1aca4a51a1b0e6e15fef714eb6ddc3e287" kindref="member">stepsize</ref>)</highlight></codeline>
<codeline lineno="463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>s_copy<sp/>=<sp/><ref refid="sound_8c_1ad56b2f689f0d4897c4d2c79356d6102d" kindref="member">sound_copy</ref>(s);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="oldyin_8c_1a616aad3e1035ad5e1833ca360758c314" kindref="member">snd_make_yin</ref>(s_copy,<sp/>low_step,<sp/>high_step,<sp/>stepsize);</highlight></codeline>
<codeline lineno="466"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/oldyin.c"/>
  </compounddef>
</doxygen>
