<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="pa__dynload_8c" kind="file" language="C++">
    <compoundname>pa_dynload.c</compoundname>
    <includes local="no">dlfcn.h</includes>
    <includes refid="pa__debugprint_8h" local="yes">pa_debugprint.h</includes>
    <includes refid="pa__dynload_8h" local="yes">pa_dynload.h</includes>
    <incdepgraph>
      <node id="29465">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.c</label>
        <link refid="pa_dynload.c"/>
        <childnode refid="29466" relation="include">
        </childnode>
        <childnode refid="29467" relation="include">
        </childnode>
        <childnode refid="29468" relation="include">
        </childnode>
      </node>
      <node id="29468">
        <label>pa_dynload.h</label>
        <link refid="pa__dynload_8h"/>
        <childnode refid="29467" relation="include">
        </childnode>
      </node>
      <node id="29467">
        <label>pa_debugprint.h</label>
        <link refid="pa__debugprint_8h"/>
      </node>
      <node id="29466">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="pa__dynload_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" prot="public" static="no">
        <name>NULL</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.c" line="56" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pa__dynload_8c_1a7336f46456e5345518ab51dddff0b735" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pa__dynload_8h_1ac3bdb536f4ea049085d8078f12b74627" kindref="member">paDynamicLib</ref></type>
        <definition>paDynamicLib PaDL_Load</definition>
        <argsstring>(char *name)</argsstring>
        <name>PaDL_Load</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.c" line="59" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.c" bodystart="59" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="pa__dynload_8c_1aa08f7ea9d90773ce056c44939789f499" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaDL_Unload</definition>
        <argsstring>(paDynamicLib lib)</argsstring>
        <name>PaDL_Unload</name>
        <param>
          <type><ref refid="pa__dynload_8h_1ac3bdb536f4ea049085d8078f12b74627" kindref="member">paDynamicLib</ref></type>
          <declname>lib</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.c" line="80" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.c" bodystart="80" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="pa__dynload_8c_1a742613ad79253b35ec54fc65c6b875b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>void* PaDL_FindSymbol</definition>
        <argsstring>(paDynamicLib lib, char *name)</argsstring>
        <name>PaDL_FindSymbol</name>
        <param>
          <type><ref refid="pa__dynload_8h_1ac3bdb536f4ea049085d8078f12b74627" kindref="member">paDynamicLib</ref></type>
          <declname>lib</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.c" line="89" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.c" bodystart="89" bodyend="108"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>dynamic library helper functions. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>pa_dynlink.c<sp/>1339<sp/>2008-02-15<sp/>07:50:33Z<sp/>rossb<sp/>$</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Portable<sp/>Audio<sp/>I/O<sp/>Library</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>dynamic<sp/>library<sp/>helper</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Based<sp/>on<sp/>the<sp/>Open<sp/>Source<sp/>API<sp/>proposed<sp/>by<sp/>Ross<sp/>Bencina</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2008<sp/>Ross<sp/>Bencina</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>The<sp/>text<sp/>above<sp/>constitutes<sp/>the<sp/>entire<sp/>PortAudio<sp/>license;<sp/>however,<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>the<sp/>PortAudio<sp/>community<sp/>also<sp/>makes<sp/>the<sp/>following<sp/>non-binding<sp/>requests:</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>Any<sp/>person<sp/>wishing<sp/>to<sp/>distribute<sp/>modifications<sp/>to<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>requested<sp/>to<sp/>send<sp/>the<sp/>modifications<sp/>to<sp/>the<sp/>original<sp/>developer<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>they<sp/>can<sp/>be<sp/>incorporated<sp/>into<sp/>the<sp/>canonical<sp/>version.<sp/>It<sp/>is<sp/>also<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>requested<sp/>that<sp/>these<sp/>non-binding<sp/>requests<sp/>be<sp/>included<sp/>along<sp/>with<sp/>the<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>license<sp/>above.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor">#if<sp/>defined(WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dlfcn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__debugprint_8h" kindref="compound">pa_debugprint.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__dynload_8h" kindref="compound">pa_dynload.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="pa__dynload_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NULL<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="pa__dynload_8h_1a7336f46456e5345518ab51dddff0b735" refkind="member"><highlight class="normal"><ref refid="pa__dynload_8h_1ac3bdb536f4ea049085d8078f12b74627" kindref="member">paDynamicLib</ref><sp/><ref refid="pa__dynload_8c_1a7336f46456e5345518ab51dddff0b735" kindref="member">PaDL_Load</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref><sp/>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__dynload_8h_1ac3bdb536f4ea049085d8078f12b74627" kindref="member">paDynamicLib</ref><sp/>lib;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>lib<sp/>=<sp/>LoadLibrary(name);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>lib<sp/>=<sp/>dlopen(name,<sp/>RTLD_LAZY);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lib)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>load<sp/>%s,<sp/>error<sp/>code:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>name,<sp/>GetLastError()));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>load<sp/>%s,<sp/>error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>name,<sp/>dlerror()));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lib;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="pa__dynload_8h_1aa08f7ea9d90773ce056c44939789f499" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__dynload_8c_1aa08f7ea9d90773ce056c44939789f499" kindref="member">PaDL_Unload</ref>(<sp/><ref refid="pa__dynload_8h_1ac3bdb536f4ea049085d8078f12b74627" kindref="member">paDynamicLib</ref><sp/>lib<sp/>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>FreeLibrary(lib);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>dlclose(lib);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="pa__dynload_8h_1a742613ad79253b35ec54fc65c6b875b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="pa__dynload_8c_1a742613ad79253b35ec54fc65c6b875b8" kindref="member">PaDL_FindSymbol</ref>(<sp/><ref refid="pa__dynload_8h_1ac3bdb536f4ea049085d8078f12b74627" kindref="member">paDynamicLib</ref><sp/>lib,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref><sp/>)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*addr;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>GetProcAddress(lib,<sp/>name);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>dlsym(lib,<sp/>name);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addr<sp/>==<sp/><ref refid="pa__dynload_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>find<sp/>%s<sp/>function,<sp/>error<sp/>code:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>name,<sp/>GetLastError()));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>find<sp/>%s<sp/>function,<sp/>error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>name,<sp/>dlerror()));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>addr;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.c"/>
  </compounddef>
</doxygen>
