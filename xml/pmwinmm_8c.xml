<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="pmwinmm_8c" kind="file" language="C++">
    <compoundname>pmwinmm.c</compoundname>
    <includes local="yes">windows.h</includes>
    <includes local="yes">mmsystem.h</includes>
    <includes refid="portmidi_8h" local="yes">portmidi.h</includes>
    <includes refid="pmutil_8h" local="yes">pmutil.h</includes>
    <includes refid="pminternal_8h" local="yes">pminternal.h</includes>
    <includes refid="pmwinmm_8h" local="yes">pmwinmm.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="porttime_8h" local="yes">porttime.h</includes>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <incdepgraph>
      <node id="31101">
        <label>windows.h</label>
      </node>
      <node id="31105">
        <label>pmutil.h</label>
        <link refid="pmutil_8h"/>
      </node>
      <node id="31104">
        <label>stdint.h</label>
      </node>
      <node id="31109">
        <label>porttime.h</label>
        <link refid="porttime_8h"/>
        <childnode refid="31104" relation="include">
        </childnode>
      </node>
      <node id="31110">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="31106">
        <label>pminternal.h</label>
        <link refid="pminternal_8h"/>
      </node>
      <node id="31108">
        <label>string.h</label>
      </node>
      <node id="31100">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c</label>
        <link refid="pmwinmm.c"/>
        <childnode refid="31101" relation="include">
        </childnode>
        <childnode refid="31102" relation="include">
        </childnode>
        <childnode refid="31103" relation="include">
        </childnode>
        <childnode refid="31105" relation="include">
        </childnode>
        <childnode refid="31106" relation="include">
        </childnode>
        <childnode refid="31107" relation="include">
        </childnode>
        <childnode refid="31108" relation="include">
        </childnode>
        <childnode refid="31109" relation="include">
        </childnode>
        <childnode refid="31110" relation="include">
        </childnode>
      </node>
      <node id="31107">
        <label>pmwinmm.h</label>
        <link refid="pmwinmm_8h"/>
      </node>
      <node id="31103">
        <label>portmidi.h</label>
        <link refid="portmidi_8h"/>
        <childnode refid="31104" relation="include">
        </childnode>
      </node>
      <node id="31102">
        <label>mmsystem.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structmidiwinmm__struct" prot="public">midiwinmm_struct</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="pmwinmm_8c_1ac50762666aa00bd3a4308158510f1748" prot="public" static="no">
        <name>_WIN32_WINNT</name>
        <initializer>0x0500</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="11" column="13" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmwinmm_8c_1a3d9d471ccb3b9b4b61bcbc359ab65b2a" prot="public" static="no">
        <name>streql</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>(strcmp(x, y) == 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="34" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmwinmm_8c_1aa2197f6ca200566c0986e737edd211e4" prot="public" static="no">
        <name>MIDI_SYSEX</name>
        <initializer>0xf0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="36" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmwinmm_8c_1a140c8cfa4bbf1a03494abdbd639d49f2" prot="public" static="no">
        <name>MIDI_EOX</name>
        <initializer>0xf7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="37" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmwinmm_8c_1aeae8e048fee020b6a24f20007a3a48d0" prot="public" static="no">
        <name>NUM_SIMPLE_SYSEX_BUFFERS</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="81" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmwinmm_8c_1a408412abbb0f2222aef584c08007b3e4" prot="public" static="no">
        <name>MIN_SIMPLE_SYSEX_LEN</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="82" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmwinmm_8c_1adf056ca1f5470fb9d2b3644a3b916729" prot="public" static="no">
        <name>MIN_STREAM_BUFFERS</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="84" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmwinmm_8c_1a30ed3188169b95726d10bcb4e862bfb0" prot="public" static="no">
        <name>STREAM_BUFFER_LEN</name>
        <initializer>24</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="85" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmwinmm_8c_1a4bc32e1209ae9b421738a12756802d28" prot="public" static="no">
        <name>INPUT_SYSEX_LEN</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="87" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmwinmm_8c_1a58f375481e55800a20f0c5ebcbbb8cca" prot="public" static="no">
        <name>MIN_INPUT_BUFFERS</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="88" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmwinmm_8c_1a52205e796892fa98328990df0bb3d4f6" prot="public" static="no">
        <name>NUM_EXPANSION_BUFFERS</name>
        <initializer>128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="93" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmwinmm_8c_1af84dccb9759d130019a69b865fb87601" prot="public" static="no">
        <name>EXPANSION_BUFFER_LEN</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="94" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmwinmm_8c_1abff1952153bc536259ad6aed96c6c3af" prot="public" static="no">
        <name>MIDIHDR_SYSEX_BUFFER_LENGTH</name>
        <param><defname>x</defname></param>
        <initializer>((x) + sizeof(long)*3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="97" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmwinmm_8c_1a4d10fea3a370c9fc049d486610e26c0e" prot="public" static="no">
        <name>MIDIHDR_SYSEX_SIZE</name>
        <param><defname>x</defname></param>
        <initializer>(<ref refid="pmwinmm_8c_1abff1952153bc536259ad6aed96c6c3af" kindref="member">MIDIHDR_SYSEX_BUFFER_LENGTH</ref>(x) + sizeof(MIDIHDR))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="99" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmwinmm_8c_1aee16c4e278880ae62e80e24875a05d64" prot="public" static="no">
        <name>winmm_begin_sysex</name>
        <initializer>winmm_write_flush</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="1140" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="1140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmwinmm_8c_1a535115b4a2e19deead82ff097abc9a17" prot="public" static="no">
        <name>winmm_in_abort</name>
        <initializer><ref refid="portmidi_8c_1aeeae549047bfcfbbe3eff9f3857ff77a" kindref="member">pm_fail_fn</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="1360" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="1360" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="pmwinmm_8c_1a6e0f0a98c5693acd77408061a8ee728d" prot="public" static="no">
        <type>struct <ref refid="structmidiwinmm__struct" kindref="compound">midiwinmm_struct</ref></type>
        <definition>typedef struct midiwinmm_struct  midiwinmm_node</definition>
        <argsstring></argsstring>
        <name>midiwinmm_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="154" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" prot="public" static="no">
        <type>struct <ref refid="structmidiwinmm__struct" kindref="compound">midiwinmm_struct</ref> *</type>
        <definition>typedef struct midiwinmm_struct * midiwinmm_type</definition>
        <argsstring></argsstring>
        <name>midiwinmm_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="154" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pmwinmm_8c_1a50237725f4cf3e9972ad0c8f147b73ff" prot="public" static="no" mutable="no">
        <type><ref refid="structpm__fns__node" kindref="compound">pm_fns_node</ref></type>
        <definition>pm_fns_node pm_winmm_in_dictionary</definition>
        <argsstring></argsstring>
        <name>pm_winmm_in_dictionary</name>
        <initializer>= {
                                         <ref refid="portmidi_8c_1a841d04eb4d4efa3eebfc4e718cf9faa3" kindref="member">none_write_short</ref>,
                                         <ref refid="pminternal_8h_1ac44b30c88f5076903c62f9e8fc8c51ec" kindref="member">none_sysex</ref>,
                                         <ref refid="pminternal_8h_1ac44b30c88f5076903c62f9e8fc8c51ec" kindref="member">none_sysex</ref>,
                                         <ref refid="portmidi_8c_1a2181992bfdc1d719bdd96353763965d7" kindref="member">none_write_byte</ref>,
                                         <ref refid="portmidi_8c_1a841d04eb4d4efa3eebfc4e718cf9faa3" kindref="member">none_write_short</ref>,
                                         <ref refid="pminternal_8h_1a1381cf29da7767a1db6c268b7941a6f8" kindref="member">none_write_flush</ref>,
                                         winmm_synchronize,
                                         winmm_in_open,
                                         <ref refid="pmwinmm_8c_1a535115b4a2e19deead82ff097abc9a17" kindref="member">winmm_in_abort</ref>,
                                         winmm_in_close,
                                         winmm_in_poll,
                                         winmm_has_host_error,
                                         winmm_get_host_error
                                     }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="52" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="1361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pmwinmm_8c_1a14223904cd337b8ae5b9af26c1641b4a" prot="public" static="no" mutable="no">
        <type><ref refid="structpm__fns__node" kindref="compound">pm_fns_node</ref></type>
        <definition>pm_fns_node pm_winmm_out_dictionary</definition>
        <argsstring></argsstring>
        <name>pm_winmm_out_dictionary</name>
        <initializer>= {
                                          winmm_write_short,
                                          <ref refid="pmwinmm_8c_1aee16c4e278880ae62e80e24875a05d64" kindref="member">winmm_begin_sysex</ref>,
                                          winmm_end_sysex,
                                          winmm_write_byte,
                                          winmm_write_short,  
                                          winmm_write_flush,
                                          winmm_synchronize,
                                          winmm_out_open,
                                          winmm_out_abort,
                                          winmm_out_close,
                                          <ref refid="pminternal_8h_1a7b782f381e349f7b220b925bcdf9c9c1" kindref="member">none_poll</ref>,
                                          winmm_has_host_error,
                                          winmm_get_host_error
                                      }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="53" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="1377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pmwinmm_8c_1ab84a0b370e7dd74cca0e8627f5b2f96b" prot="public" static="no" mutable="no">
        <type>MIDIINCAPS *</type>
        <definition>MIDIINCAPS* midi_in_caps</definition>
        <argsstring></argsstring>
        <name>midi_in_caps</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="112" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pmwinmm_8c_1ad887e6eab533bec22ebcb2c1d2d10bfd" prot="public" static="no" mutable="no">
        <type>MIDIINCAPS</type>
        <definition>MIDIINCAPS midi_in_mapper_caps</definition>
        <argsstring></argsstring>
        <name>midi_in_mapper_caps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="113" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pmwinmm_8c_1a1c2017def59fae2eb3d78813c2d67226" prot="public" static="no" mutable="no">
        <type><ref refid="mapinls_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref></type>
        <definition>UINT midi_num_inputs</definition>
        <argsstring></argsstring>
        <name>midi_num_inputs</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="114" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pmwinmm_8c_1ab6cf6e432b3dbb187bc76c78fc035bb8" prot="public" static="no" mutable="no">
        <type>MIDIOUTCAPS *</type>
        <definition>MIDIOUTCAPS* midi_out_caps</definition>
        <argsstring></argsstring>
        <name>midi_out_caps</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="115" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pmwinmm_8c_1a79da5f9031e33e1c5b6b1f2cb43f9162" prot="public" static="no" mutable="no">
        <type>MIDIOUTCAPS</type>
        <definition>MIDIOUTCAPS midi_out_mapper_caps</definition>
        <argsstring></argsstring>
        <name>midi_out_mapper_caps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="116" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pmwinmm_8c_1a1dbcc28647b5d6e1c4a66049f71bee79" prot="public" static="no" mutable="no">
        <type><ref refid="mapinls_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref></type>
        <definition>UINT midi_num_outputs</definition>
        <argsstring></argsstring>
        <name>midi_num_outputs</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="117" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pmwinmm_8c_1a7d9d86e97003d2771660b7b2928855fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> CALLBACK</type>
        <definition>static void FAR PASCAL winmm_in_callback</definition>
        <argsstring>(HMIDIIN hMidiIn, WORD wMsg, DWORD dwInstance, DWORD dwParam1, DWORD dwParam2)</argsstring>
        <name>winmm_in_callback</name>
        <param>
          <type>HMIDIIN</type>
          <declname>hMidiIn</declname>
        </param>
        <param>
          <type><ref refid="nfilterkit_8h_1a7e62930c4614f6a59b33d693f01ce08e" kindref="member">WORD</ref></type>
          <declname>wMsg</declname>
        </param>
        <param>
          <type><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref></type>
          <declname>dwInstance</declname>
        </param>
        <param>
          <type><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref></type>
          <declname>dwParam1</declname>
        </param>
        <param>
          <type><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref></type>
          <declname>dwParam2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="40" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="667" bodyend="779"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1ab8dd26e18d72fcb44048d9528443a59e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> CALLBACK</type>
        <definition>static void CALLBACK winmm_streamout_callback</definition>
        <argsstring>(HMIDIOUT hmo, UINT wMsg, DWORD dwInstance, DWORD dwParam1, DWORD dwParam2)</argsstring>
        <name>winmm_streamout_callback</name>
        <param>
          <type>HMIDIOUT</type>
          <declname>hmo</declname>
        </param>
        <param>
          <type><ref refid="mapinls_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref></type>
          <declname>wMsg</declname>
        </param>
        <param>
          <type><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref></type>
          <declname>dwInstance</declname>
        </param>
        <param>
          <type><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref></type>
          <declname>dwParam1</declname>
        </param>
        <param>
          <type><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref></type>
          <declname>dwParam2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="43" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="1330" bodyend="1351"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1a9ece4abd219cef906675a457944f87db" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void winmm_out_delete</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>winmm_out_delete</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="55" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="944" bodyend="970"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1a26282cccdb9fe0fc00e775751f90b6db" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void pm_winmm_general_inputs</definition>
        <argsstring>()</argsstring>
        <name>pm_winmm_general_inputs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="162" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="162" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1ac67da90ccb2ee3a6746b23cebb2b0777" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void pm_winmm_mapper_input</definition>
        <argsstring>()</argsstring>
        <name>pm_winmm_mapper_input</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="190" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="190" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1a54797b7ac458abba1d9770383d280ea7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void pm_winmm_general_outputs</definition>
        <argsstring>()</argsstring>
        <name>pm_winmm_general_outputs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="207" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="207" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1afa786bc807d2c2df6870dc6e0249595f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void pm_winmm_mapper_output</definition>
        <argsstring>()</argsstring>
        <name>pm_winmm_mapper_output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="230" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="230" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1a38ec4e3bb2457a77a6cea0ae58c7a1d3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static unsigned int winmm_has_host_error</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>winmm_has_host_error</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="250" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="250" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1acf15436f536f5b4fbbae39a8eeb82eb2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int str_copy_len</definition>
        <argsstring>(char *dst, char *src, int len)</argsstring>
        <name>str_copy_len</name>
        <param>
          <type>char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="261" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="261" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1ae4fd6cce536e3250fcef159fde6f97b0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void winmm_get_host_error</definition>
        <argsstring>(PmInternal *midi, char *msg, UINT len)</argsstring>
        <name>winmm_get_host_error</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="mapinls_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="270" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="270" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1a42b216c695f520f7f46be1f9f39ce7d1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MIDIHDR *</type>
        <definition>static MIDIHDR* allocate_buffer</definition>
        <argsstring>(long data_size)</argsstring>
        <name>allocate_buffer</name>
        <param>
          <type>long</type>
          <declname>data_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="308" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="308" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1a7abe7b7eb03dba08bdedce0f379e1901" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError allocate_buffers</definition>
        <argsstring>(midiwinmm_type m, long data_size, long count)</argsstring>
        <name>allocate_buffers</name>
        <param>
          <type><ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type>long</type>
          <declname>data_size</declname>
        </param>
        <param>
          <type>long</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="339" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="339" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1a4cee031d1addc4b546166819cc73be4a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LPMIDIHDR</type>
        <definition>static LPMIDIHDR get_free_output_buffer</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>get_free_output_buffer</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="412" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="412" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1a5a3115ce6ccfeb6bc34782606a97f920" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError allocate_input_buffer</definition>
        <argsstring>(HMIDIIN h, long buffer_len)</argsstring>
        <name>allocate_input_buffer</name>
        <param>
          <type>HMIDIIN</type>
          <declname>h</declname>
        </param>
        <param>
          <type>long</type>
          <declname>buffer_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="529" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="529" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1a53b568dd3c0460883063c6299c49388a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError winmm_in_open</definition>
        <argsstring>(PmInternal *midi, void *driverInfo)</argsstring>
        <name>winmm_in_open</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>driverInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="543" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="543" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1af84c27239aeab20119105789afe9db47" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError winmm_in_poll</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>winmm_in_poll</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="629" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="629" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1ac5f221a4b1a5839a7de5a4d8c88788f4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError winmm_in_close</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>winmm_in_close</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="640" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="640" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1af22a000e0b9b3dc60a72bf723532d323" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int add_to_buffer</definition>
        <argsstring>(midiwinmm_type m, LPMIDIHDR hdr, unsigned long delta, unsigned long msg)</argsstring>
        <name>add_to_buffer</name>
        <param>
          <type><ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type>LPMIDIHDR</type>
          <declname>hdr</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="790" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="790" bodyend="803"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1a3080ee227be3ecec70440dc6e5568c40" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref></type>
        <definition>static PmTimestamp pm_time_get</definition>
        <argsstring>(midiwinmm_type m)</argsstring>
        <name>pm_time_get</name>
        <param>
          <type><ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="806" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="806" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1ab0723497286ba752f7b4e43901261459" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError winmm_out_open</definition>
        <argsstring>(PmInternal *midi, void *driverInfo)</argsstring>
        <name>winmm_out_open</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>driverInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="821" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="821" bodyend="939"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1af33a5859312d43da34c47a2e75bda63a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError winmm_out_close</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>winmm_out_close</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="974" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="974" bodyend="995"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1a22cc6287c08ee35a65d036122d3135d9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError winmm_out_abort</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>winmm_out_abort</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="998" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="998" bodyend="1008"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1af3504c74e48b6aaa741f6157bb559cd7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError winmm_write_flush</definition>
        <argsstring>(PmInternal *midi, PmTimestamp timestamp)</argsstring>
        <name>winmm_write_flush</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref></type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="1011" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="1011" bodyend="1040"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1a82a56c8965e777c2d4652f64aac3a6e3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError winmm_write_short</definition>
        <argsstring>(PmInternal *midi, PmEvent *event)</argsstring>
        <name>winmm_write_short</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type><ref refid="struct_pm_event" kindref="compound">PmEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="1109" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="1109" bodyend="1138"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1a0a930d2094633affc9b5d8cd22f08afe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError winmm_end_sysex</definition>
        <argsstring>(PmInternal *midi, PmTimestamp timestamp)</argsstring>
        <name>winmm_end_sysex</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref></type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="1157" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="1157" bodyend="1195"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1ae90e5fb5ac56553d0d3b72c90179475b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError winmm_write_byte</definition>
        <argsstring>(PmInternal *midi, unsigned char byte, PmTimestamp timestamp)</argsstring>
        <name>winmm_write_byte</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>byte</declname>
        </param>
        <param>
          <type><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref></type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="1198" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="1198" bodyend="1248"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1ac19d653a89013657c8a12d388327f278" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref></type>
        <definition>static PmTimestamp winmm_synchronize</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>winmm_synchronize</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="1272" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="1272" bodyend="1296"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1a814dc61aecbbd16add0d5dc7b6f10ce6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void pm_winmm_init</definition>
        <argsstring>(void)</argsstring>
        <name>pm_winmm_init</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="1403" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="1403" bodyend="1409"/>
      </memberdef>
      <memberdef kind="function" id="pmwinmm_8c_1a855566afe42cc36711aedabe2a1527f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void pm_winmm_term</definition>
        <argsstring>(void)</argsstring>
        <name>pm_winmm_term</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" line="1416" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c" bodystart="1416" bodyend="1464"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>pmwinmm.c<sp/>--<sp/>system<sp/>specific<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#pragma<sp/>warning(disable:<sp/>4133)<sp/>//<sp/>stop<sp/>warnings<sp/>about<sp/>implicit<sp/>typecasts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_WIN32_WINNT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>without<sp/>this<sp/>define,<sp/>InitializeCriticalSectionAndSpinCount<sp/>is<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>undefined.<sp/>This<sp/>version<sp/>level<sp/>means<sp/>&quot;Windows<sp/>2000<sp/>and<sp/>higher&quot;<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="pmwinmm_8c_1ac50762666aa00bd3a4308158510f1748" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>_WIN32_WINNT<sp/>0x0500</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;windows.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mmsystem.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="portmidi_8h" kindref="compound">portmidi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pmutil_8h" kindref="compound">pmutil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pminternal_8h" kindref="compound">pminternal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pmwinmm_8h" kindref="compound">pmwinmm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="porttime_8h" kindref="compound">porttime.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>asserts<sp/>used<sp/>to<sp/>verify<sp/>portMidi<sp/>code<sp/>logic<sp/>is<sp/>sound;<sp/>later<sp/>may<sp/>want</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/>something<sp/>more<sp/>graceful<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>printf<sp/>stuff<sp/>really<sp/>important<sp/>for<sp/>debugging<sp/>client<sp/>app<sp/>w/host<sp/>errors.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/>probably<sp/>want<sp/>to<sp/>do<sp/>something<sp/>else<sp/>besides<sp/>read/write<sp/>from/to<sp/>console</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>portability,<sp/>however<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STRING_MAX<sp/>80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="pmwinmm_8c_1a3d9d471ccb3b9b4b61bcbc359ab65b2a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>streql(x,<sp/>y)<sp/>(strcmp(x,<sp/>y)<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="pmwinmm_8c_1aa2197f6ca200566c0986e737edd211e4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_SYSEX<sp/><sp/><sp/><sp/><sp/><sp/>0xf0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="pmwinmm_8c_1a140c8cfa4bbf1a03494abdbd639d49f2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_EOX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xf7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>callback<sp/>routines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CALLBACK<sp/>winmm_in_callback(HMIDIIN<sp/>hMidiIn,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfilterkit_8h_1a7e62930c4614f6a59b33d693f01ce08e" kindref="member">WORD</ref><sp/>wMsg,<sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>dwInstance,<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>dwParam1,<sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>dwParam2);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CALLBACK<sp/>winmm_streamout_callback(HMIDIOUT<sp/>hmo,<sp/><ref refid="mapinls_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref><sp/>wMsg,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>dwInstance,<sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>dwParam1,<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>dwParam2);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SYSEX_BUFFERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CALLBACK<sp/>winmm_out_callback(HMIDIOUT<sp/>hmo,<sp/><ref refid="mapinls_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref><sp/>wMsg,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>dwInstance,<sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>dwParam1,<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>dwParam2);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structpm__fns__node" kindref="compound">pm_fns_node</ref><sp/><ref refid="pmwinmm_8c_1a50237725f4cf3e9972ad0c8f147b73ff" kindref="member">pm_winmm_in_dictionary</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structpm__fns__node" kindref="compound">pm_fns_node</ref><sp/><ref refid="pmwinmm_8c_1a14223904cd337b8ae5b9af26c1641b4a" kindref="member">pm_winmm_out_dictionary</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>winmm_out_delete(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>);<sp/></highlight><highlight class="comment">/*<sp/>forward<sp/>reference<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="58"><highlight class="comment">A<sp/>note<sp/>about<sp/>buffers:<sp/>WinMM<sp/>seems<sp/>to<sp/>hold<sp/>onto<sp/>buffers<sp/>longer<sp/>than</highlight></codeline>
<codeline lineno="59"><highlight class="comment">one<sp/>would<sp/>expect,<sp/>e.g.<sp/>when<sp/>I<sp/>tried<sp/>using<sp/>2<sp/>small<sp/>buffers<sp/>to<sp/>send</highlight></codeline>
<codeline lineno="60"><highlight class="comment">long<sp/>sysex<sp/>messages,<sp/>at<sp/>some<sp/>point<sp/>WinMM<sp/>held<sp/>both<sp/>buffers.<sp/>This<sp/>problem</highlight></codeline>
<codeline lineno="61"><highlight class="comment">was<sp/>fixed<sp/>by<sp/>making<sp/>buffers<sp/>bigger.<sp/>Therefore,<sp/>it<sp/>seems<sp/>that<sp/>there<sp/>should<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="comment">be<sp/>enough<sp/>buffer<sp/>space<sp/>to<sp/>hold<sp/>a<sp/>whole<sp/>sysex<sp/>message.<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="comment"></highlight></codeline>
<codeline lineno="64"><highlight class="comment">The<sp/>bufferSize<sp/>passed<sp/>into<sp/>Pm_OpenInput<sp/>(passed<sp/>into<sp/>here<sp/>as<sp/>buffer_len)</highlight></codeline>
<codeline lineno="65"><highlight class="comment">will<sp/>be<sp/>used<sp/>to<sp/>estimate<sp/>the<sp/>largest<sp/>sysex<sp/>message<sp/>(=<sp/>buffer_len<sp/>*<sp/>4<sp/>bytes).</highlight></codeline>
<codeline lineno="66"><highlight class="comment">Call<sp/>that<sp/>the<sp/>max_sysex_len<sp/>=<sp/>buffer_len<sp/>*<sp/>4.</highlight></codeline>
<codeline lineno="67"><highlight class="comment"></highlight></codeline>
<codeline lineno="68"><highlight class="comment">For<sp/>simple<sp/>midi<sp/>output<sp/>(latency<sp/>==<sp/>0),<sp/>allocate<sp/>3<sp/>buffers,<sp/>each<sp/>with<sp/>half</highlight></codeline>
<codeline lineno="69"><highlight class="comment">the<sp/>size<sp/>of<sp/>max_sysex_len,<sp/>but<sp/>each<sp/>at<sp/>least<sp/>256<sp/>bytes.</highlight></codeline>
<codeline lineno="70"><highlight class="comment"></highlight></codeline>
<codeline lineno="71"><highlight class="comment">For<sp/>stream<sp/>output,<sp/>there<sp/>will<sp/>already<sp/>be<sp/>enough<sp/>space<sp/>in<sp/>very<sp/>short</highlight></codeline>
<codeline lineno="72"><highlight class="comment">buffers,<sp/>so<sp/>use<sp/>them,<sp/>but<sp/>make<sp/>sure<sp/>there<sp/>are<sp/>at<sp/>least<sp/>16.</highlight></codeline>
<codeline lineno="73"><highlight class="comment"></highlight></codeline>
<codeline lineno="74"><highlight class="comment">For<sp/>input,<sp/>use<sp/>many<sp/>small<sp/>buffers<sp/>rather<sp/>than<sp/>2<sp/>large<sp/>ones<sp/>so<sp/>that<sp/>when<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="comment">there<sp/>are<sp/>short<sp/>sysex<sp/>messages<sp/>arriving<sp/>frequently<sp/>(as<sp/>in<sp/>control<sp/>surfaces)</highlight></codeline>
<codeline lineno="76"><highlight class="comment">there<sp/>will<sp/>be<sp/>more<sp/>free<sp/>buffers<sp/>to<sp/>fill.<sp/>Use<sp/>max_sysex_len<sp/>/<sp/>64<sp/>buffers,</highlight></codeline>
<codeline lineno="77"><highlight class="comment">but<sp/>at<sp/>least<sp/>16,<sp/>of<sp/>size<sp/>64<sp/>bytes<sp/>each.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"></highlight></codeline>
<codeline lineno="79"><highlight class="comment">The<sp/>following<sp/>constants<sp/>help<sp/>to<sp/>represent<sp/>these<sp/>design<sp/>parameters:</highlight></codeline>
<codeline lineno="80"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="pmwinmm_8c_1aeae8e048fee020b6a24f20007a3a48d0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_SIMPLE_SYSEX_BUFFERS<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="pmwinmm_8c_1a408412abbb0f2222aef584c08007b3e4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN_SIMPLE_SYSEX_LEN<sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="pmwinmm_8c_1adf056ca1f5470fb9d2b3644a3b916729" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN_STREAM_BUFFERS<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="pmwinmm_8c_1a30ed3188169b95726d10bcb4e862bfb0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STREAM_BUFFER_LEN<sp/>24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="pmwinmm_8c_1a4bc32e1209ae9b421738a12756802d28" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INPUT_SYSEX_LEN<sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="pmwinmm_8c_1a58f375481e55800a20f0c5ebcbbb8cca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN_INPUT_BUFFERS<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>if<sp/>we<sp/>run<sp/>out<sp/>of<sp/>space<sp/>for<sp/>output<sp/>(assume<sp/>this<sp/>is<sp/>due<sp/>to<sp/>a<sp/>sysex<sp/>msg,</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/>expand<sp/>by<sp/>up<sp/>to<sp/>NUM_EXPANSION_BUFFERS<sp/>in<sp/>increments<sp/>of<sp/>EXPANSION_BUFFER_LEN</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="pmwinmm_8c_1a52205e796892fa98328990df0bb3d4f6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_EXPANSION_BUFFERS<sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="pmwinmm_8c_1af84dccb9759d130019a69b865fb87601" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPANSION_BUFFER_LEN<sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>A<sp/>sysex<sp/>buffer<sp/>has<sp/>3<sp/>DWORDS<sp/>as<sp/>a<sp/>header<sp/>plus<sp/>the<sp/>actual<sp/>message<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="pmwinmm_8c_1abff1952153bc536259ad6aed96c6c3af" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDIHDR_SYSEX_BUFFER_LENGTH(x)<sp/>((x)<sp/>+<sp/>sizeof(long)*3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>A<sp/>MIDIHDR<sp/>with<sp/>a<sp/>sysex<sp/>message<sp/>is<sp/>the<sp/>buffer<sp/>length<sp/>plus<sp/>the<sp/>header<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="pmwinmm_8c_1a4d10fea3a370c9fc049d486610e26c0e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDIHDR_SYSEX_SIZE(x)<sp/>(MIDIHDR_SYSEX_BUFFER_LENGTH(x)<sp/>+<sp/>sizeof(MIDIHDR))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SYSEX_BUFFERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Size<sp/>of<sp/>a<sp/>MIDIHDR<sp/>with<sp/>a<sp/>buffer<sp/>contaning<sp/>multiple<sp/>MIDIEVENT<sp/>structures<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDIHDR_SIZE(x)<sp/>((x)<sp/>+<sp/>sizeof(MIDIHDR))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="106"><highlight class="comment">==============================================================================</highlight></codeline>
<codeline lineno="107"><highlight class="comment">win32<sp/>mmedia<sp/>system<sp/>specific<sp/>structure<sp/>passed<sp/>to<sp/>midi<sp/>callbacks</highlight></codeline>
<codeline lineno="108"><highlight class="comment">==============================================================================</highlight></codeline>
<codeline lineno="109"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>global<sp/>winmm<sp/>device<sp/>info<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="pmwinmm_8c_1ab84a0b370e7dd74cca0e8627f5b2f96b" refkind="member"><highlight class="normal">MIDIINCAPS<sp/>*<ref refid="pmwinmm_8c_1ab84a0b370e7dd74cca0e8627f5b2f96b" kindref="member">midi_in_caps</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="113" refid="pmwinmm_8c_1ad887e6eab533bec22ebcb2c1d2d10bfd" refkind="member"><highlight class="normal">MIDIINCAPS<sp/><ref refid="pmwinmm_8c_1ad887e6eab533bec22ebcb2c1d2d10bfd" kindref="member">midi_in_mapper_caps</ref>;</highlight></codeline>
<codeline lineno="114" refid="pmwinmm_8c_1a1c2017def59fae2eb3d78813c2d67226" refkind="member"><highlight class="normal"><ref refid="mapinls_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref><sp/><ref refid="pmwinmm_8c_1a1c2017def59fae2eb3d78813c2d67226" kindref="member">midi_num_inputs</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="115" refid="pmwinmm_8c_1ab6cf6e432b3dbb187bc76c78fc035bb8" refkind="member"><highlight class="normal">MIDIOUTCAPS<sp/>*<ref refid="pmwinmm_8c_1ab6cf6e432b3dbb187bc76c78fc035bb8" kindref="member">midi_out_caps</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="116" refid="pmwinmm_8c_1a79da5f9031e33e1c5b6b1f2cb43f9162" refkind="member"><highlight class="normal">MIDIOUTCAPS<sp/><ref refid="pmwinmm_8c_1a79da5f9031e33e1c5b6b1f2cb43f9162" kindref="member">midi_out_mapper_caps</ref>;</highlight></codeline>
<codeline lineno="117" refid="pmwinmm_8c_1a1dbcc28647b5d6e1c4a66049f71bee79" refkind="member"><highlight class="normal"><ref refid="mapinls_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref><sp/><ref refid="pmwinmm_8c_1a1dbcc28647b5d6e1c4a66049f71bee79" kindref="member">midi_num_outputs</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>per<sp/>device<sp/>info<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="structmidiwinmm__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmidiwinmm__struct" kindref="compound">midiwinmm_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="122" refid="structmidiwinmm__struct_1a117032659ec71d42b33f1be4c0a7889c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HMIDISTRM<sp/><ref refid="structmidiwinmm__struct_1a117032659ec71d42b33f1be4c0a7889c" kindref="member">stream</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>windows<sp/>handle<sp/>for<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="structmidiwinmm__struct_1af3f572e57c53d6b97775e0f26cd9d0d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HMIDIOUT<sp/><ref refid="structmidiwinmm__struct_1af3f572e57c53d6b97775e0f26cd9d0d5" kindref="member">out</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>windows<sp/>handle<sp/>for<sp/>out<sp/>calls<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="structmidiwinmm__struct_1afa31d3af271254689eb9243a3aa24ff9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HMIDIIN<sp/><ref refid="structmidiwinmm__struct_1afa31d3af271254689eb9243a3aa24ff9" kindref="member">in</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>windows<sp/>handle<sp/>for<sp/>in<sp/>calls<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>midi<sp/>output<sp/>messages<sp/>are<sp/>sent<sp/>in<sp/>these<sp/>buffers,<sp/>which<sp/>are<sp/>allocated</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>in<sp/>a<sp/>round-robin<sp/>fashion,<sp/>using<sp/>next_buffer<sp/>as<sp/>an<sp/>index</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="structmidiwinmm__struct_1aa2ca652de8e6c25d2f28d6edd2f8e10e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>LPMIDIHDR<sp/>*<ref refid="structmidiwinmm__struct_1aa2ca652de8e6c25d2f28d6edd2f8e10e" kindref="member">buffers</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pool<sp/>of<sp/>buffers<sp/>for<sp/>midi<sp/>in<sp/>or<sp/>out<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="structmidiwinmm__struct_1a75935764565996299a4b6c3f6b93e9fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmidiwinmm__struct_1a75935764565996299a4b6c3f6b93e9fd" kindref="member">max_buffers</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>length<sp/>of<sp/>buffers<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="structmidiwinmm__struct_1abab750c48849e1e4919b9ae5663ed7e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmidiwinmm__struct_1abab750c48849e1e4919b9ae5663ed7e7" kindref="member">buffers_expanded</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>buffers<sp/>array<sp/>expanded<sp/>for<sp/>extra<sp/>msgs?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="structmidiwinmm__struct_1ada80cf474e7330d17abfd1aefbdb7bf3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmidiwinmm__struct_1ada80cf474e7330d17abfd1aefbdb7bf3" kindref="member">num_buffers</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>how<sp/>many<sp/>buffers<sp/>allocated<sp/>in<sp/>buffers<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="structmidiwinmm__struct_1a88bc98c540b46439ee781d902e6c20a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmidiwinmm__struct_1a88bc98c540b46439ee781d902e6c20a2" kindref="member">next_buffer</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>index<sp/>of<sp/>next<sp/>buffer<sp/>to<sp/>send<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="structmidiwinmm__struct_1a13aff28a564452dca38b6c2066074d12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_sound_touch_d_l_l_8h_1aa8c0374618b33785ccb02f74bcfebc46" kindref="member">HANDLE</ref><sp/><ref refid="structmidiwinmm__struct_1a13aff28a564452dca38b6c2066074d12" kindref="member">buffer_signal</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>used<sp/>to<sp/>wait<sp/>for<sp/>buffer<sp/>to<sp/>become<sp/>free<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SYSEX_BUFFERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sysex<sp/>buffers<sp/>will<sp/>be<sp/>allocated<sp/>only<sp/>when</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>sysex<sp/>message<sp/>is<sp/>sent.<sp/>The<sp/>size<sp/>of<sp/>the<sp/>buffer<sp/>is<sp/>fixed.</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>LPMIDIHDR<sp/>sysex_buffers[NUM_SYSEX_BUFFERS];<sp/></highlight><highlight class="comment">/*<sp/>pool<sp/>of<sp/>buffers<sp/>for<sp/>sysex<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_sysex_buffer;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>index<sp/>of<sp/>next<sp/>sysexbuffer<sp/>to<sp/>send<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="structmidiwinmm__struct_1a5f6adbb79abbc327b77d414b2c62b7a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structmidiwinmm__struct_1a5f6adbb79abbc327b77d414b2c62b7a7" kindref="member">last_time</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>last<sp/>output<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="structmidiwinmm__struct_1ac9a589032892c74beeab0b6a998c13eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmidiwinmm__struct_1ac9a589032892c74beeab0b6a998c13eb" kindref="member">first_message</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>flag:<sp/>treat<sp/>first<sp/>message<sp/>differently<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="structmidiwinmm__struct_1a8b4b27e9b67b6002716c35ba507efbc4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmidiwinmm__struct_1a8b4b27e9b67b6002716c35ba507efbc4" kindref="member">sysex_mode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>middle<sp/>of<sp/>sending<sp/>sysex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="structmidiwinmm__struct_1abafd2354939bfc342b3e627b26f974df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structmidiwinmm__struct_1abafd2354939bfc342b3e627b26f974df" kindref="member">sysex_word</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>accumulate<sp/>data<sp/>when<sp/>receiving<sp/>sysex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="structmidiwinmm__struct_1a27999ff2b46ab6855ca33f936af1020e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmidiwinmm__struct_1a27999ff2b46ab6855ca33f936af1020e" kindref="member">sysex_byte_count</ref>;<sp/></highlight><highlight class="comment">/*<sp/>count<sp/>how<sp/>many<sp/>received<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>LPMIDIHDR<sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>message<sp/>accumulating<sp/>sysex<sp/>to<sp/>send<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="structmidiwinmm__struct_1aacee5aeff23bb17834bf177a2e1e6f56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structmidiwinmm__struct_1aacee5aeff23bb17834bf177a2e1e6f56" kindref="member">sync_time</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>when<sp/>did<sp/>we<sp/>last<sp/>determine<sp/>delta?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="structmidiwinmm__struct_1a60acc42e195cf76af089519c6e573d72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structmidiwinmm__struct_1a60acc42e195cf76af089519c6e573d72" kindref="member">delta</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>difference<sp/>between<sp/>stream<sp/>time<sp/>and</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>real<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>host<sp/>error<sp/>from<sp/>doing<sp/>port<sp/>midi<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="structmidiwinmm__struct_1af5deb1b5de786de9aa215ed4bec4d6e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CRITICAL_SECTION<sp/><ref refid="structmidiwinmm__struct_1af5deb1b5de786de9aa215ed4bec4d6e6" kindref="member">lock</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>prevents<sp/>reentrant<sp/>callbacks<sp/>(input<sp/>only)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">}<sp/><ref refid="pmwinmm_8c_1a6e0f0a98c5693acd77408061a8ee728d" kindref="member">midiwinmm_node</ref>,<sp/>*<ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="158"><highlight class="comment">=============================================================================</highlight></codeline>
<codeline lineno="159"><highlight class="comment">general<sp/>MIDI<sp/>device<sp/>queries</highlight></codeline>
<codeline lineno="160"><highlight class="comment">=============================================================================</highlight></codeline>
<codeline lineno="161"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pm_winmm_general_inputs()</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nfilterkit_8h_1a7e62930c4614f6a59b33d693f01ce08e" kindref="member">WORD</ref><sp/>wRtn;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmwinmm_8c_1a1c2017def59fae2eb3d78813c2d67226" kindref="member">midi_num_inputs</ref><sp/>=<sp/>midiInGetNumDevs();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmwinmm_8c_1ab84a0b370e7dd74cca0e8627f5b2f96b" kindref="member">midi_in_caps</ref><sp/>=<sp/>(MIDIINCAPS<sp/>*)<sp/><ref refid="pminternal_8h_1a5e0011f472e9c71efa58816f628eed08" kindref="member">pm_alloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MIDIINCAPS)<sp/>*<sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pmwinmm_8c_1a1c2017def59fae2eb3d78813c2d67226" kindref="member">midi_num_inputs</ref>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pmwinmm_8c_1ab84a0b370e7dd74cca0e8627f5b2f96b" kindref="member">midi_in_caps</ref><sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>you<sp/>can&apos;t<sp/>open<sp/>a<sp/>particular<sp/>system-level<sp/>midi<sp/>interface</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(such<sp/>as<sp/>winmm),<sp/>we<sp/>just<sp/>consider<sp/>that<sp/>system<sp/>or<sp/>API<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>unavailable<sp/>and<sp/>move<sp/>on<sp/>without<sp/>reporting<sp/>an<sp/>error.</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="pmwinmm_8c_1a1c2017def59fae2eb3d78813c2d67226" kindref="member">midi_num_inputs</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wRtn<sp/>=<sp/>midiInGetDevCaps(i,<sp/>(LPMIDIINCAPS)<sp/>&amp;<sp/><ref refid="pmwinmm_8c_1ab84a0b370e7dd74cca0e8627f5b2f96b" kindref="member">midi_in_caps</ref>[i],</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MIDIINCAPS));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wRtn<sp/>==<sp/>MMSYSERR_NOERROR)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ignore<sp/>errors<sp/>here<sp/>--<sp/>if<sp/>pm_descriptor_max<sp/>is<sp/>exceeded,<sp/>some</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>devices<sp/>will<sp/>not<sp/>be<sp/>accessible.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a8c66dfe796fb47b3f2a4a195a0529249" kindref="member">pm_add_device</ref>(</highlight><highlight class="stringliteral">&quot;MMSystem&quot;</highlight><highlight class="normal">,<sp/><ref refid="pmwinmm_8c_1ab84a0b370e7dd74cca0e8627f5b2f96b" kindref="member">midi_in_caps</ref>[i].szPname,<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>i,<sp/>&amp;pm_winmm_in_dictionary);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pm_winmm_mapper_input()</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nfilterkit_8h_1a7e62930c4614f6a59b33d693f01ce08e" kindref="member">WORD</ref><sp/>wRtn;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note:<sp/>if<sp/>MIDIMAPPER<sp/>opened<sp/>as<sp/>input<sp/>(documentation<sp/>implies<sp/>you</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can,<sp/>but<sp/>current<sp/>system<sp/>fails<sp/>to<sp/>retrieve<sp/>input<sp/>mapper</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>capabilities)<sp/>then<sp/>you<sp/>still<sp/>should<sp/>retrieve<sp/>some<sp/>formof</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup<sp/>info.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>wRtn<sp/>=<sp/>midiInGetDevCaps((<ref refid="mapinls_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref>)<sp/>MIDIMAPPER,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LPMIDIINCAPS)<sp/>&amp;<sp/><ref refid="pmwinmm_8c_1ad887e6eab533bec22ebcb2c1d2d10bfd" kindref="member">midi_in_mapper_caps</ref>,<sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MIDIINCAPS));</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wRtn<sp/>==<sp/>MMSYSERR_NOERROR)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a8c66dfe796fb47b3f2a4a195a0529249" kindref="member">pm_add_device</ref>(</highlight><highlight class="stringliteral">&quot;MMSystem&quot;</highlight><highlight class="normal">,<sp/>midi_in_mapper_caps.szPname,<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>MIDIMAPPER,<sp/>&amp;pm_winmm_in_dictionary);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pm_winmm_general_outputs()</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>wRtn;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmwinmm_8c_1a1dbcc28647b5d6e1c4a66049f71bee79" kindref="member">midi_num_outputs</ref><sp/>=<sp/>midiOutGetNumDevs();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmwinmm_8c_1ab6cf6e432b3dbb187bc76c78fc035bb8" kindref="member">midi_out_caps</ref><sp/>=<sp/><ref refid="pminternal_8h_1a5e0011f472e9c71efa58816f628eed08" kindref="member">pm_alloc</ref>(<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MIDIOUTCAPS)<sp/>*<sp/><ref refid="pmwinmm_8c_1a1dbcc28647b5d6e1c4a66049f71bee79" kindref="member">midi_num_outputs</ref><sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pmwinmm_8c_1ab6cf6e432b3dbb187bc76c78fc035bb8" kindref="member">midi_out_caps</ref><sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>error<sp/>is<sp/>reported<sp/>--<sp/>see<sp/>pm_winmm_general_inputs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="pmwinmm_8c_1a1dbcc28647b5d6e1c4a66049f71bee79" kindref="member">midi_num_outputs</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wRtn<sp/>=<sp/>midiOutGetDevCaps(i,<sp/>(LPMIDIOUTCAPS)<sp/>&amp;<sp/><ref refid="pmwinmm_8c_1ab6cf6e432b3dbb187bc76c78fc035bb8" kindref="member">midi_out_caps</ref>[i],</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MIDIOUTCAPS));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wRtn<sp/>==<sp/>MMSYSERR_NOERROR)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a8c66dfe796fb47b3f2a4a195a0529249" kindref="member">pm_add_device</ref>(</highlight><highlight class="stringliteral">&quot;MMSystem&quot;</highlight><highlight class="normal">,<sp/><ref refid="pmwinmm_8c_1ab6cf6e432b3dbb187bc76c78fc035bb8" kindref="member">midi_out_caps</ref>[i].szPname,<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>i,<sp/>&amp;pm_winmm_out_dictionary);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pm_winmm_mapper_output()</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nfilterkit_8h_1a7e62930c4614f6a59b33d693f01ce08e" kindref="member">WORD</ref><sp/>wRtn;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note:<sp/>if<sp/>MIDIMAPPER<sp/>opened<sp/>as<sp/>output<sp/>(pseudo<sp/>MIDI<sp/>device</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maps<sp/>device<sp/>independent<sp/>messages<sp/>into<sp/>device<sp/>dependant<sp/>ones,</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>via<sp/>NT<sp/>midimapper<sp/>program)<sp/>you<sp/>still<sp/>should<sp/>get<sp/>some<sp/>setup<sp/>info<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>wRtn<sp/>=<sp/>midiOutGetDevCaps((<ref refid="mapinls_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref>)<sp/>MIDIMAPPER,<sp/>(LPMIDIOUTCAPS)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/><ref refid="pmwinmm_8c_1a79da5f9031e33e1c5b6b1f2cb43f9162" kindref="member">midi_out_mapper_caps</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MIDIOUTCAPS));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wRtn<sp/>==<sp/>MMSYSERR_NOERROR)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a8c66dfe796fb47b3f2a4a195a0529249" kindref="member">pm_add_device</ref>(</highlight><highlight class="stringliteral">&quot;MMSystem&quot;</highlight><highlight class="normal">,<sp/>midi_out_mapper_caps.szPname,<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>MIDIMAPPER,<sp/>&amp;pm_winmm_out_dictionary);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="246"><highlight class="comment">=========================================================================================</highlight></codeline>
<codeline lineno="247"><highlight class="comment">host<sp/>error<sp/>handling</highlight></codeline>
<codeline lineno="248"><highlight class="comment">=========================================================================================</highlight></codeline>
<codeline lineno="249"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>winmm_has_host_error(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*<sp/><ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>)</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>midiwinmm_type<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref><sp/>=<sp/>(<ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref>)midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>str_copy_len<sp/>--<sp/>like<sp/>strcat,<sp/>but<sp/>won&apos;t<sp/>overrun<sp/>the<sp/>destination<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*<sp/>returns<sp/>length<sp/>of<sp/>resulting<sp/>string</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>str_copy_len(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dst,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy(dst,<sp/>src,<sp/>len);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>suffex<sp/>is<sp/>greater<sp/>then<sp/>len,<sp/>terminate<sp/>with<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[len<sp/>-<sp/>1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strlen(dst);</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>winmm_get_host_error(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*<sp/>midi,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>msg,<sp/><ref refid="mapinls_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>precondition:<sp/>midi<sp/>!=<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmidiwinmm__struct" kindref="compound">midiwinmm_node</ref><sp/>*<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref><sp/>=<sp/>(<ref refid="structmidiwinmm__struct" kindref="compound">midiwinmm_node</ref><sp/>*)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hdr1<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Host<sp/>error:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hdr2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Host<sp/>callback<sp/>error:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>msg[0]<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>result<sp/>string<sp/>to<sp/>empty<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(<ref refid="pminternal_8h_1a8a86f0e79d5794e79c94c3f380a7088c" kindref="member">descriptors</ref>[midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref>].<ref refid="structdescriptor__node_1a63b20f87d756eab969d3352103322516" kindref="member">pub</ref>.<ref refid="struct_pm_device_info_1a9447230099afd8efc3f57906a02f6eba" kindref="member">input</ref>)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>input<sp/>and<sp/>output<sp/>use<sp/>different<sp/>winmm<sp/>API<sp/>calls<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>there<sp/>is<sp/>an<sp/>open<sp/>device<sp/>to<sp/>examine<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref><sp/>!=<sp/>MMSYSERR_NOERROR)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>str_copy_len(msg,<sp/>hdr1,<sp/>len);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>and<sp/>record<sp/>host<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>midiInGetErrorText(m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref>,<sp/>msg<sp/>+<sp/>n,<sp/>len<sp/>-<sp/>n);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(err<sp/>==<sp/>MMSYSERR_NOERROR);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref><sp/>=<sp/>MMSYSERR_NOERROR;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>output<sp/>port<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref><sp/>!=<sp/>MMSYSERR_NOERROR)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>str_copy_len(msg,<sp/>hdr1,<sp/>len);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>midiOutGetErrorText(m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref>,<sp/>msg<sp/>+<sp/>n,<sp/>len<sp/>-<sp/>n);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(err<sp/>==<sp/>MMSYSERR_NOERROR);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref><sp/>=<sp/>MMSYSERR_NOERROR;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="304"><highlight class="comment">=============================================================================</highlight></codeline>
<codeline lineno="305"><highlight class="comment">buffer<sp/>handling</highlight></codeline>
<codeline lineno="306"><highlight class="comment">=============================================================================</highlight></codeline>
<codeline lineno="307"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MIDIHDR<sp/>*allocate_buffer(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>data_size)</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>LPMIDIHDR<sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref><sp/>=<sp/>(LPMIDIHDR)<sp/><ref refid="pminternal_8h_1a5e0011f472e9c71efa58816f628eed08" kindref="member">pm_alloc</ref>(<ref refid="pmwinmm_8c_1a4d10fea3a370c9fc049d486610e26c0e" kindref="member">MIDIHDR_SYSEX_SIZE</ref>(data_size));</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>MIDIEVENT<sp/>*evt;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hdr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>evt<sp/>=<sp/>(MIDIEVENT<sp/>*)<sp/>(hdr<sp/>+<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>place<sp/>MIDIEVENT<sp/>after<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr-&gt;lpData<sp/>=<sp/>(<ref refid="mapinls_8h_1ab271c4ab9443cd8ff51ce5225df98d8e" kindref="member">LPSTR</ref>)<sp/>evt;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr-&gt;dwBufferLength<sp/>=<sp/><ref refid="pmwinmm_8c_1abff1952153bc536259ad6aed96c6c3af" kindref="member">MIDIHDR_SYSEX_BUFFER_LENGTH</ref>(data_size);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr-&gt;dwBytesRecorded<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr-&gt;dwFlags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr-&gt;dwUser<sp/>=<sp/>hdr-&gt;dwBufferLength;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SYSEX_BUFFERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MIDIHDR<sp/>*allocate_sysex_buffer(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>data_size)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we&apos;re<sp/>actually<sp/>allocating<sp/>more<sp/>than<sp/>data_size<sp/>because<sp/>the<sp/>buffer<sp/></highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>will<sp/>include<sp/>the<sp/>MIDIEVENT<sp/>header<sp/>in<sp/>addition<sp/>to<sp/>the<sp/>data<sp/></highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>LPMIDIHDR<sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref><sp/>=<sp/>(LPMIDIHDR)<sp/><ref refid="pminternal_8h_1a5e0011f472e9c71efa58816f628eed08" kindref="member">pm_alloc</ref>(<ref refid="pmwinmm_8c_1a4d10fea3a370c9fc049d486610e26c0e" kindref="member">MIDIHDR_SYSEX_SIZE</ref>(data_size));</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>MIDIEVENT<sp/>*evt;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hdr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>evt<sp/>=<sp/>(MIDIEVENT<sp/>*)<sp/>(hdr<sp/>+<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>place<sp/>MIDIEVENT<sp/>after<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr-&gt;lpData<sp/>=<sp/>(<ref refid="mapinls_8h_1ab271c4ab9443cd8ff51ce5225df98d8e" kindref="member">LPSTR</ref>)<sp/>evt;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr-&gt;dwFlags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr-&gt;dwUser<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>allocate_buffers(midiwinmm_type<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>data_size,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>)</highlight></codeline>
<codeline lineno="340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>buffers<sp/>is<sp/>an<sp/>array<sp/>of<sp/>count<sp/>pointers<sp/>to<sp/>MIDIHDR/MIDIEVENT<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1ada80cf474e7330d17abfd1aefbdb7bf3" kindref="member">num_buffers</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>in<sp/>case<sp/>no<sp/>memory<sp/>can<sp/>be<sp/>allocated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1aa2ca652de8e6c25d2f28d6edd2f8e10e" kindref="member">buffers</ref><sp/>=<sp/>(LPMIDIHDR<sp/>*)<sp/><ref refid="pminternal_8h_1a5e0011f472e9c71efa58816f628eed08" kindref="member">pm_alloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(LPMIDIHDR)<sp/>*<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m-&gt;<ref refid="structmidiwinmm__struct_1aa2ca652de8e6c25d2f28d6edd2f8e10e" kindref="member">buffers</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a2cd8d4985678f6c92748dcc1177a2512" kindref="member">pmInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a75935764565996299a4b6c3f6b93e9fd" kindref="member">max_buffers</ref><sp/>=<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPMIDIHDR<sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref><sp/>=<sp/>allocate_buffer(data_size);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hdr)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>free<sp/>everything<sp/>allocated<sp/>so<sp/>far<sp/>and<sp/>return<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>i<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(m-&gt;<ref refid="structmidiwinmm__struct_1aa2ca652de8e6c25d2f28d6edd2f8e10e" kindref="member">buffers</ref>[i]);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(m-&gt;<ref refid="structmidiwinmm__struct_1aa2ca652de8e6c25d2f28d6edd2f8e10e" kindref="member">buffers</ref>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a75935764565996299a4b6c3f6b93e9fd" kindref="member">max_buffers</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a2cd8d4985678f6c92748dcc1177a2512" kindref="member">pmInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1aa2ca652de8e6c25d2f28d6edd2f8e10e" kindref="member">buffers</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>;<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>may<sp/>be<sp/>NULL<sp/>if<sp/>allocation<sp/>fails<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1ada80cf474e7330d17abfd1aefbdb7bf3" kindref="member">num_buffers</ref><sp/>=<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SYSEX_BUFFERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>allocate_sysex_buffers(midiwinmm_type<sp/>m,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>data_size)</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>rslt<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sysex_buffers<sp/>is<sp/>an<sp/>array<sp/>of<sp/>count<sp/>pointers<sp/>to<sp/>MIDIHDR/MIDIEVENT<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NUM_SYSEX_BUFFERS;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPMIDIHDR<sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref><sp/>=<sp/>allocate_sysex_buffer(data_size);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hdr)<sp/>rslt<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a2cd8d4985678f6c92748dcc1177a2512" kindref="member">pmInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;sysex_buffers[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>;<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>may<sp/>be<sp/>NULL<sp/>if<sp/>allocation<sp/>fails<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr-&gt;dwFlags<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>mark<sp/>as<sp/>free<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SYSEX_BUFFERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>LPMIDIHDR<sp/>get_free_sysex_buffer(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi)</highlight></codeline>
<codeline lineno="380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>LPMIDIHDR<sp/>r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>midiwinmm_type<sp/>m<sp/>=<sp/>(<ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(!m-&gt;sysex_buffers[0])<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allocate_sysex_buffers(m,<sp/>SYSEX_BYTES_PER_BUFFER))<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>busy<sp/>wait<sp/>until<sp/>we<sp/>find<sp/>a<sp/>free<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NUM_SYSEX_BUFFERS;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cycle<sp/>through<sp/>buffers,<sp/>modulo<sp/>NUM_SYSEX_BUFFERS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;next_sysex_buffer++;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;next_sysex_buffer<sp/>&gt;=<sp/>NUM_SYSEX_BUFFERS)<sp/>m-&gt;next_sysex_buffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>m-&gt;sysex_buffers[m-&gt;next_sysex_buffer];</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((r-&gt;dwFlags<sp/>&amp;<sp/>MHDR_PREPARED)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>found_sysex_buffer;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>after<sp/>scanning<sp/>every<sp/>buffer<sp/>and<sp/>not<sp/>finding<sp/>anything,<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WaitForSingleObject(m-&gt;<ref refid="structmidiwinmm__struct_1a13aff28a564452dca38b6c2066074d12" kindref="member">buffer_signal</ref>,<sp/>1000)<sp/>==<sp/>WAIT_TIMEOUT)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;PortMidi<sp/>warning:<sp/>get_free_sysex_buffer()<sp/>wait<sp/>timed<sp/>out<sp/>after<sp/>1000ms\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal">found_sysex_buffer:</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;dwBytesRecorded<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;dwBufferLength<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>changed<sp/>to<sp/>correct<sp/>value<sp/>later<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>LPMIDIHDR<sp/>get_free_output_buffer(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi)</highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>LPMIDIHDR<sp/>r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>midiwinmm_type<sp/>m<sp/>=<sp/>(<ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>while<sp/>(<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1ada80cf474e7330d17abfd1aefbdb7bf3" kindref="member">num_buffers</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cycle<sp/>through<sp/>buffers,<sp/>modulo<sp/>m-&gt;num_buffers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a88bc98c540b46439ee781d902e6c20a2" kindref="member">next_buffer</ref>++;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structmidiwinmm__struct_1a88bc98c540b46439ee781d902e6c20a2" kindref="member">next_buffer</ref><sp/>&gt;=<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1ada80cf474e7330d17abfd1aefbdb7bf3" kindref="member">num_buffers</ref>)<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a88bc98c540b46439ee781d902e6c20a2" kindref="member">next_buffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1aa2ca652de8e6c25d2f28d6edd2f8e10e" kindref="member">buffers</ref>[m-&gt;<ref refid="structmidiwinmm__struct_1a88bc98c540b46439ee781d902e6c20a2" kindref="member">next_buffer</ref>];</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((r-&gt;dwFlags<sp/>&amp;<sp/>MHDR_PREPARED)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>found_buffer;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>after<sp/>scanning<sp/>every<sp/>buffer<sp/>and<sp/>not<sp/>finding<sp/>anything,<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WaitForSingleObject(m-&gt;<ref refid="structmidiwinmm__struct_1a13aff28a564452dca38b6c2066074d12" kindref="member">buffer_signal</ref>,<sp/>1000)<sp/>==<sp/>WAIT_TIMEOUT)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;PortMidi<sp/>warning:<sp/>get_free_output_buffer()<sp/>wait<sp/>timed<sp/>out<sp/>after<sp/>1000ms\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>we&apos;re<sp/>trying<sp/>to<sp/>send<sp/>a<sp/>sysex<sp/>message,<sp/>maybe<sp/>the<sp/></highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>message<sp/>is<sp/>too<sp/>big<sp/>and<sp/>we<sp/>need<sp/>more<sp/>message<sp/>buffers.</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Expand<sp/>the<sp/>buffer<sp/>pool<sp/>by<sp/>128KB<sp/>using<sp/>1024-byte<sp/>buffers.</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first,<sp/>expand<sp/>the<sp/>buffers<sp/>array<sp/>if<sp/>necessary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m-&gt;<ref refid="structmidiwinmm__struct_1abab750c48849e1e4919b9ae5663ed7e7" kindref="member">buffers_expanded</ref>)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPMIDIHDR<sp/>*new_buffers<sp/>=<sp/>(LPMIDIHDR<sp/>*)<sp/><ref refid="pminternal_8h_1a5e0011f472e9c71efa58816f628eed08" kindref="member">pm_alloc</ref>(</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(m-&gt;<ref refid="structmidiwinmm__struct_1ada80cf474e7330d17abfd1aefbdb7bf3" kindref="member">num_buffers</ref><sp/>+<sp/><ref refid="pmwinmm_8c_1a52205e796892fa98328990df0bb3d4f6" kindref="member">NUM_EXPANSION_BUFFERS</ref>)<sp/>*<sp/></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(LPMIDIHDR));</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>no<sp/>memory,<sp/>we<sp/>could<sp/>return<sp/>a<sp/>no-memory<sp/>error,<sp/>but<sp/>user</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>probably<sp/>will<sp/>be<sp/>unprepared<sp/>to<sp/>deal<sp/>with<sp/>it.<sp/>Maybe<sp/>the</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>MIDI<sp/>driver<sp/>is<sp/>temporarily<sp/>hung<sp/>so<sp/>we<sp/>should<sp/>just<sp/>wait.</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>I<sp/>don&apos;t<sp/>know<sp/>the<sp/>right<sp/>answer,<sp/>but<sp/>waiting<sp/>is<sp/>easier.</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!new_buffers)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>buffers<sp/>to<sp/>new_buffers<sp/>and<sp/>replace<sp/>buffers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(new_buffers,<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1aa2ca652de8e6c25d2f28d6edd2f8e10e" kindref="member">buffers</ref>,<sp/></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1ada80cf474e7330d17abfd1aefbdb7bf3" kindref="member">num_buffers</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(LPMIDIHDR));</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(m-&gt;<ref refid="structmidiwinmm__struct_1aa2ca652de8e6c25d2f28d6edd2f8e10e" kindref="member">buffers</ref>);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1aa2ca652de8e6c25d2f28d6edd2f8e10e" kindref="member">buffers</ref><sp/>=<sp/>new_buffers;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a75935764565996299a4b6c3f6b93e9fd" kindref="member">max_buffers</ref><sp/>=<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1ada80cf474e7330d17abfd1aefbdb7bf3" kindref="member">num_buffers</ref><sp/>+<sp/><ref refid="pmwinmm_8c_1a52205e796892fa98328990df0bb3d4f6" kindref="member">NUM_EXPANSION_BUFFERS</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1abab750c48849e1e4919b9ae5663ed7e7" kindref="member">buffers_expanded</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>next,<sp/>add<sp/>one<sp/>buffer<sp/>and<sp/>return<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structmidiwinmm__struct_1ada80cf474e7330d17abfd1aefbdb7bf3" kindref="member">num_buffers</ref><sp/>&lt;<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a75935764565996299a4b6c3f6b93e9fd" kindref="member">max_buffers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>allocate_buffer(<ref refid="pmwinmm_8c_1af84dccb9759d130019a69b865fb87601" kindref="member">EXPANSION_BUFFER_LEN</ref>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>again,<sp/>if<sp/>there&apos;s<sp/>no<sp/>memory,<sp/>we<sp/>may<sp/>not<sp/>really<sp/>be<sp/></highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>dead<sp/>--<sp/>maybe<sp/>the<sp/>system<sp/>is<sp/>temporarily<sp/>hung<sp/>and</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>can<sp/>just<sp/>wait<sp/>longer<sp/>for<sp/>a<sp/>message<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!r)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1aa2ca652de8e6c25d2f28d6edd2f8e10e" kindref="member">buffers</ref>[m-&gt;<ref refid="structmidiwinmm__struct_1ada80cf474e7330d17abfd1aefbdb7bf3" kindref="member">num_buffers</ref>++]<sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>found_buffer;<sp/></highlight><highlight class="comment">/*<sp/>break<sp/>out<sp/>of<sp/>2<sp/>loops<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>else,<sp/>we&apos;ve<sp/>allocated<sp/>all<sp/>NUM_EXPANSION_BUFFERS<sp/>buffers,</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>we<sp/>have<sp/>no<sp/>free<sp/>buffers<sp/>to<sp/>send.<sp/>We&apos;ll<sp/>just<sp/>keep</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>polling<sp/>to<sp/>see<sp/>if<sp/>any<sp/>buffers<sp/>show<sp/>up.</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal">found_buffer:</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;dwBytesRecorded<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>actual<sp/>buffer<sp/>length<sp/>is<sp/>saved<sp/>in<sp/>dwUser<sp/>field<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;dwBufferLength<sp/>=<sp/>(<ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref>)<sp/>r-&gt;dwUser;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPANDING_SYSEX_BUFFERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><ref refid="handlers_8c_1a82c195c0687005edfeb733c7b5887c33" kindref="member">note</ref>:<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>is<sp/>not<sp/>working<sp/>code,<sp/>but<sp/>might<sp/>be<sp/>useful<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>you<sp/>want</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>grow<sp/><ref refid="moxc_8h_1a96b7e0ab94d54a56e504fb87024c0005" kindref="member">sysex</ref><sp/><ref refid="structmidiwinmm__struct_1aa2ca652de8e6c25d2f28d6edd2f8e10e" kindref="member">buffers</ref>.</highlight></codeline>
<codeline lineno="479"><highlight class="normal">static<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>resize_sysex_buffer(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>old_size,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_size)</highlight></codeline>
<codeline lineno="480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>LPMIDIHDR<sp/>big;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>midiwinmm_type<sp/>m<sp/>=<sp/>(<ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>buffer<sp/>must<sp/>be<sp/>smaller<sp/>than<sp/>64k,<sp/>but<sp/>be<sp/>also<sp/>a<sp/>multiple<sp/>of<sp/>4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(new_size<sp/>&gt;<sp/>65520)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_size<sp/>&gt;=<sp/>65520)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9abb1810fb6d5f45ea7c3a6098d5a4853d" kindref="member">pmBufferMaxSize</ref>;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_size<sp/>=<sp/>65520;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allocate<sp/>a<sp/>bigger<sp/>message<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>big<sp/>=<sp/>allocate_sysex_buffer(new_size);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printf(&quot;expand<sp/>to<sp/>%d<sp/>bytes\n&quot;,<sp/>new_size);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!big)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a2cd8d4985678f6c92748dcc1177a2512" kindref="member">pmInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref><sp/>=<sp/>midiOutPrepareHeader(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1af3f572e57c53d6b97775e0f26cd9d0d5" kindref="member">out</ref>,<sp/>big,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MIDIHDR));</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref>)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(big);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>we&apos;re<sp/>not<sp/>going<sp/>to<sp/>overwrite<sp/>any<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(old_size<sp/>&lt;=<sp/>new_size);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(big-&gt;lpData,<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;lpData,<sp/>old_size);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>keep<sp/>track<sp/>of<sp/>how<sp/>many<sp/>sysex<sp/>bytes<sp/>are<sp/>in<sp/>message<sp/>so<sp/>far<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>big-&gt;dwBytesRecorded<sp/>=<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwBytesRecorded;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>big-&gt;dwBufferLength<sp/>=<sp/>new_size;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>find<sp/>which<sp/>buffer<sp/>this<sp/>was,<sp/>and<sp/>replace<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NUM_SYSEX_BUFFERS;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;sysex_buffers[i]<sp/>==<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;sysex_buffers[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>big;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;sysex_buffer_size[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>new_size;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref><sp/>=<sp/>big;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(i<sp/>!=<sp/>NUM_SYSEX_BUFFERS);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="523"><highlight class="comment">=========================================================================================</highlight></codeline>
<codeline lineno="524"><highlight class="comment">begin<sp/>midi<sp/>input<sp/>implementation</highlight></codeline>
<codeline lineno="525"><highlight class="comment">=========================================================================================</highlight></codeline>
<codeline lineno="526"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>allocate_input_buffer(HMIDIIN<sp/>h,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>buffer_len)</highlight></codeline>
<codeline lineno="530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>LPMIDIHDR<sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref><sp/>=<sp/>allocate_buffer(buffer_len);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hdr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a2cd8d4985678f6c92748dcc1177a2512" kindref="member">pmInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/>midiInPrepareHeader(h,<sp/>hdr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MIDIHDR));</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref>)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(hdr);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref>;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/>midiInAddBuffer(h,<sp/>hdr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MIDIHDR));</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>winmm_in_open(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*driverInfo)</highlight></codeline>
<codeline lineno="544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>dwDevice;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref>;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_sysex_len<sp/>=<sp/>midi-&gt;<ref refid="structpm__internal__struct_1a253ecc9475134223732c0b450e25c99e" kindref="member">buffer_len</ref><sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_input_buffers<sp/>=<sp/>max_sysex_len<sp/>/<sp/><ref refid="pmwinmm_8c_1a4bc32e1209ae9b421738a12756802d28" kindref="member">INPUT_SYSEX_LEN</ref>;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>midiwinmm_type<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>dwDevice<sp/>=<sp/>(<ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref>)<sp/><ref refid="pminternal_8h_1a8a86f0e79d5794e79c94c3f380a7088c" kindref="member">descriptors</ref>[i].descriptor;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>system<sp/>dependent<sp/>device<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>(<ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref>)<sp/><ref refid="pminternal_8h_1a5e0011f472e9c71efa58816f628eed08" kindref="member">pm_alloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmidiwinmm__struct" kindref="compound">midiwinmm_node</ref>));<sp/></highlight><highlight class="comment">/*<sp/>create<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref><sp/>=<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>no_memory;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1afa31d3af271254689eb9243a3aa24ff9" kindref="member">in</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1aa2ca652de8e6c25d2f28d6edd2f8e10e" kindref="member">buffers</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>used<sp/>for<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1ada80cf474e7330d17abfd1aefbdb7bf3" kindref="member">num_buffers</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>used<sp/>for<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a75935764565996299a4b6c3f6b93e9fd" kindref="member">max_buffers</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>used<sp/>for<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1abab750c48849e1e4919b9ae5663ed7e7" kindref="member">buffers_expanded</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>used<sp/>for<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a88bc98c540b46439ee781d902e6c20a2" kindref="member">next_buffer</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>used<sp/>for<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a13aff28a564452dca38b6c2066074d12" kindref="member">buffer_signal</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>used<sp/>for<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SYSEX_BUFFERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NUM_SYSEX_BUFFERS;<sp/>i++)<sp/></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;sysex_buffers[i]<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>used<sp/>for<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;next_sysex_buffer<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>used<sp/>for<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal">#<ref refid="sndfile__play_8m_1a74c64864f5283ae06d4a981642a59af9" kindref="member">endif</ref></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a5f6adbb79abbc327b77d414b2c62b7a7" kindref="member">last_time</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1ac9a589032892c74beeab0b6a998c13eb" kindref="member">first_message</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>used<sp/>for<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a8b4b27e9b67b6002716c35ba507efbc4" kindref="member">sysex_mode</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1abafd2354939bfc342b3e627b26f974df" kindref="member">sysex_word</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a27999ff2b46ab6855ca33f936af1020e" kindref="member">sysex_byte_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>used<sp/>for<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1aacee5aeff23bb17834bf177a2e1e6f56" kindref="member">sync_time</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a60acc42e195cf76af089519c6e573d72" kindref="member">delta</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref><sp/>=<sp/>MMSYSERR_NOERROR;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>4000<sp/>is<sp/>based<sp/>on<sp/>Windows<sp/>documentation<sp/>--<sp/>that&apos;s<sp/>the<sp/>value<sp/>used<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory<sp/>manager.<sp/>It&apos;s<sp/>small<sp/>enough<sp/>that<sp/>it<sp/>should<sp/>not<sp/>hurt<sp/>performance<sp/>even</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>it&apos;s<sp/>not<sp/>optimal.</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>InitializeCriticalSectionAndSpinCount(&amp;m-&gt;<ref refid="structmidiwinmm__struct_1af5deb1b5de786de9aa215ed4bec4d6e6" kindref="member">lock</ref>,<sp/>4000);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>open<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/>midiInOpen(</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1afa31d3af271254689eb9243a3aa24ff9" kindref="member">in</ref>),<sp/><sp/></highlight><highlight class="comment">/*<sp/>input<sp/>device<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwDevice,<sp/><sp/></highlight><highlight class="comment">/*<sp/>device<sp/>ID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pa__win__ds_8c_1ac42e964219ea4889a963d264ccb84ac6" kindref="member">DWORD_PTR</ref>)<sp/>winmm_in_callback,<sp/><sp/></highlight><highlight class="comment">/*<sp/>callback<sp/>address<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pa__win__ds_8c_1ac42e964219ea4889a963d264ccb84ac6" kindref="member">DWORD_PTR</ref>)<sp/>midi,<sp/><sp/></highlight><highlight class="comment">/*<sp/>callback<sp/>instance<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CALLBACK_FUNCTION);<sp/></highlight><highlight class="comment">/*<sp/>callback<sp/>is<sp/>a<sp/>procedure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>free_descriptor;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_input_buffers<sp/>&lt;<sp/><ref refid="pmwinmm_8c_1a58f375481e55800a20f0c5ebcbbb8cca" kindref="member">MIN_INPUT_BUFFERS</ref>)</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_input_buffers<sp/>=<sp/><ref refid="pmwinmm_8c_1a58f375481e55800a20f0c5ebcbbb8cca" kindref="member">MIN_INPUT_BUFFERS</ref>;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_input_buffers;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allocate_input_buffer(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1afa31d3af271254689eb9243a3aa24ff9" kindref="member">in</ref>,<sp/><ref refid="pmwinmm_8c_1a4bc32e1209ae9b421738a12756802d28" kindref="member">INPUT_SYSEX_LEN</ref>))<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>either<sp/>pm_hosterror<sp/>was<sp/>set,<sp/>or<sp/>the<sp/>proper<sp/>return<sp/>code</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>pmInsufficientMemory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>close_device;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/>midiInStart(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1afa31d3af271254689eb9243a3aa24ff9" kindref="member">in</ref>);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>reset_device;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>undo<sp/>steps<sp/>leading<sp/>up<sp/>to<sp/>the<sp/>detected<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal">reset_device:</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ignore<sp/>return<sp/>code<sp/>(we<sp/>already<sp/>have<sp/>an<sp/>error<sp/>to<sp/>report)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>midiInReset(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1afa31d3af271254689eb9243a3aa24ff9" kindref="member">in</ref>);</highlight></codeline>
<codeline lineno="610"><highlight class="normal">close_device:</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>midiInClose(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1afa31d3af271254689eb9243a3aa24ff9" kindref="member">in</ref>);<sp/></highlight><highlight class="comment">/*<sp/>ignore<sp/>return<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal">free_descriptor:</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;descriptor<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(m);</highlight></codeline>
<codeline lineno="615"><highlight class="normal">no_memory:</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref>)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>midiInGetErrorText(<ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref>,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="pminternal_8h_1ac24a8881f0ef8c3a944349bee479cf05" kindref="member">pm_hosterror_text</ref>,</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a40b1b3ff3147b3e0dff5843911345c8e" kindref="member">PM_HOST_ERROR_MSG_LEN</ref>);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(err<sp/>==<sp/>MMSYSERR_NOERROR);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>!pm_hosterror,<sp/>then<sp/>the<sp/>error<sp/>must<sp/>be<sp/>pmInsufficientMemory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a2cd8d4985678f6c92748dcc1177a2512" kindref="member">pmInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>note:<sp/>if<sp/>we<sp/>return<sp/>an<sp/>error<sp/>code,<sp/>the<sp/>device<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="625"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closed<sp/>and<sp/>memory<sp/>will<sp/>be<sp/>freed.<sp/>It&apos;s<sp/>up<sp/>to<sp/>the<sp/>caller</highlight></codeline>
<codeline lineno="626"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>free<sp/>the<sp/>parameter<sp/>midi<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>winmm_in_poll(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi)<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>midiwinmm_type<sp/>m<sp/>=<sp/>(<ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>winmm_in_close<sp/>--<sp/>close<sp/>an<sp/>open<sp/>midi<sp/>input<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/>*<sp/>assume<sp/>midi<sp/>is<sp/>non-null<sp/>(checked<sp/>by<sp/>caller)</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>winmm_in_close(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi)</highlight></codeline>
<codeline lineno="641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>midiwinmm_type<sp/>m<sp/>=<sp/>(<ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(!m)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>device<sp/>to<sp/>close<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/>midiInStop(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1afa31d3af271254689eb9243a3aa24ff9" kindref="member">in</ref>))<sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midiInReset(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1afa31d3af271254689eb9243a3aa24ff9" kindref="member">in</ref>);<sp/></highlight><highlight class="comment">/*<sp/>try<sp/>to<sp/>reset<sp/>and<sp/>close<sp/>port<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midiInClose(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1afa31d3af271254689eb9243a3aa24ff9" kindref="member">in</ref>);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/>midiInReset(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1afa31d3af271254689eb9243a3aa24ff9" kindref="member">in</ref>))<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midiInClose(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1afa31d3af271254689eb9243a3aa24ff9" kindref="member">in</ref>);<sp/></highlight><highlight class="comment">/*<sp/>best<sp/>effort<sp/>to<sp/>close<sp/>midi<sp/>port<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/>midiInClose(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1afa31d3af271254689eb9243a3aa24ff9" kindref="member">in</ref>);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>DeleteCriticalSection(&amp;m-&gt;<ref refid="structmidiwinmm__struct_1af5deb1b5de786de9aa215ed4bec4d6e6" kindref="member">lock</ref>);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(m);<sp/></highlight><highlight class="comment">/*<sp/>delete<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref>)<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>midiInGetErrorText(<ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref>,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="pminternal_8h_1ac24a8881f0ef8c3a944349bee479cf05" kindref="member">pm_hosterror_text</ref>,</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a40b1b3ff3147b3e0dff5843911345c8e" kindref="member">PM_HOST_ERROR_MSG_LEN</ref>);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(err<sp/>==<sp/>MMSYSERR_NOERROR);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Callback<sp/>function<sp/>executed<sp/>via<sp/>midiInput<sp/>SW<sp/>interrupt<sp/>(via<sp/>midiInOpen).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mapinls_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>PASCAL<sp/>winmm_in_callback(</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>HMIDIIN<sp/>hMidiIn,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>midiInput<sp/>device<sp/>Handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nfilterkit_8h_1a7e62930c4614f6a59b33d693f01ce08e" kindref="member">WORD</ref><sp/>wMsg,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>midi<sp/>msg<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>dwInstance,<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>application<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>dwParam1,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>MIDI<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>dwParam2)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>device<sp/>timestamp<sp/>(wrt<sp/>most<sp/>recent<sp/>midiInStart)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entry<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi<sp/>=<sp/>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*)<sp/>dwInstance;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>midiwinmm_type<sp/>m<sp/>=<sp/>(<ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>we<sp/>do<sp/>not<sp/>just<sp/>EnterCriticalSection()<sp/>here<sp/>because<sp/>an</highlight></codeline>
<codeline lineno="679"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>MIM_CLOSE<sp/>message<sp/>arrives<sp/>when<sp/>the<sp/>port<sp/>is<sp/>closed,<sp/>but<sp/>then</highlight></codeline>
<codeline lineno="680"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>m-&gt;lock<sp/>has<sp/>been<sp/>destroyed.</highlight></codeline>
<codeline lineno="681"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(wMsg)<sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MIM_DATA:<sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>this<sp/>callback<sp/>is<sp/>reentered<sp/>with<sp/>data,<sp/>we&apos;re<sp/>in<sp/>trouble.<sp/></highlight></codeline>
<codeline lineno="686"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>It&apos;s<sp/>hard<sp/>to<sp/>imagine<sp/>that<sp/>Microsoft<sp/>would<sp/>allow<sp/>callbacks<sp/></highlight></codeline>
<codeline lineno="687"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>be<sp/>reentrant<sp/>--<sp/>isn&apos;t<sp/>the<sp/>model<sp/>that<sp/>this<sp/>is<sp/>like<sp/>a<sp/></highlight></codeline>
<codeline lineno="688"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>hardware<sp/>interrupt?<sp/>--<sp/>but<sp/>I&apos;ve<sp/>seen<sp/>reentrant<sp/>behavior<sp/></highlight></codeline>
<codeline lineno="689"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>using<sp/>a<sp/>debugger,<sp/>so<sp/>it<sp/>happens.</highlight></codeline>
<codeline lineno="690"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_driver_time;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EnterCriticalSection(&amp;m-&gt;<ref refid="structmidiwinmm__struct_1af5deb1b5de786de9aa215ed4bec4d6e6" kindref="member">lock</ref>);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>dwParam1<sp/>is<sp/>MIDI<sp/>data<sp/>received,<sp/>packed<sp/>into<sp/>DWORD<sp/>w/<sp/>1st<sp/>byte<sp/>of</highlight></codeline>
<codeline lineno="695"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>LOB;</highlight></codeline>
<codeline lineno="696"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwParam2<sp/>is<sp/>time<sp/>message<sp/>received<sp/>by<sp/>input<sp/>device<sp/>driver,<sp/>specified</highlight></codeline>
<codeline lineno="697"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>[ms]<sp/>from<sp/>when<sp/>midiInStart<sp/>called.</highlight></codeline>
<codeline lineno="698"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>each<sp/>message<sp/>is<sp/>expanded<sp/>to<sp/>include<sp/>the<sp/>status<sp/>byte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_driver_time<sp/>=<sp/>dwParam2;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dwParam1<sp/>&amp;<sp/>0x80)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>a<sp/>status<sp/>byte<sp/>--<sp/>ignore<sp/>it.<sp/>This<sp/>happened<sp/>running<sp/>the</highlight></codeline>
<codeline lineno="704"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sysex.c<sp/>test<sp/>under<sp/>Win2K<sp/>with<sp/>MidiMan<sp/>USB<sp/>1x1<sp/>interface,</highlight></codeline>
<codeline lineno="705"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>I<sp/>can&apos;t<sp/>reproduce<sp/>it.<sp/>-RBD</highlight></codeline>
<codeline lineno="706"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printf(&quot;non-status<sp/>byte<sp/>found\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>data<sp/>to<sp/>process<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pm_event" kindref="compound">PmEvent</ref><sp/>event;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1aa2268f6b4916d4ae3de765d880bc8641" kindref="member">time_proc</ref>)</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwParam2<sp/>=<sp/>(*midi-&gt;<ref refid="structpm__internal__struct_1aa2268f6b4916d4ae3de765d880bc8641" kindref="member">time_proc</ref>)(midi-&gt;<ref refid="structpm__internal__struct_1ac3ee4fe374d89f3040708206648acb07" kindref="member">time_info</ref>);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.<ref refid="struct_pm_event_1a3854d39e3b89e1e2a4e1fda8d85c2f16" kindref="member">timestamp</ref><sp/>=<sp/>dwParam2;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.message<sp/>=<sp/>dwParam1;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a11a153e33a42b3f20df33394ce241005" kindref="member">pm_read_short</ref>(midi,<sp/>&amp;event);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeaveCriticalSection(&amp;m-&gt;<ref refid="structmidiwinmm__struct_1af5deb1b5de786de9aa215ed4bec4d6e6" kindref="member">lock</ref>);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MIM_LONGDATA:<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MIDIHDR<sp/>*lpMidiHdr<sp/>=<sp/>(MIDIHDR<sp/>*)<sp/>dwParam1;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>lpMidiHdr-&gt;lpData;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>processed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remaining<sp/>=<sp/>lpMidiHdr-&gt;dwBytesRecorded;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EnterCriticalSection(&amp;m-&gt;<ref refid="structmidiwinmm__struct_1af5deb1b5de786de9aa215ed4bec4d6e6" kindref="member">lock</ref>);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printf(&quot;midi_in_callback<sp/>--<sp/>lpMidiHdr<sp/>%x,<sp/>%d<sp/>bytes,<sp/>%2x...\n&quot;,<sp/></highlight></codeline>
<codeline lineno="727"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpMidiHdr,<sp/>lpMidiHdr-&gt;dwBytesRecorded,<sp/>*data);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1aa2268f6b4916d4ae3de765d880bc8641" kindref="member">time_proc</ref>)</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwParam2<sp/>=<sp/>(*midi-&gt;<ref refid="structpm__internal__struct_1aa2268f6b4916d4ae3de765d880bc8641" kindref="member">time_proc</ref>)(midi-&gt;<ref refid="structpm__internal__struct_1ac3ee4fe374d89f3040708206648acb07" kindref="member">time_info</ref>);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>can<sp/>there<sp/>be<sp/>more<sp/>than<sp/>one<sp/>message<sp/>in<sp/>one<sp/>buffer?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>assume<sp/>yes<sp/>and<sp/>iterate<sp/>through<sp/>them<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(remaining<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amt<sp/>=<sp/><ref refid="pminternal_8h_1a10a244c0e5b19f6b14c83b78109aa9a9" kindref="member">pm_read_bytes</ref>(midi,<sp/>data<sp/>+<sp/>processed,<sp/></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining,<sp/>dwParam2);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining<sp/>-=<sp/>amt;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processed<sp/>+=<sp/>amt;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>when<sp/>a<sp/>device<sp/>is<sp/>closed,<sp/>the<sp/>pending<sp/>MIM_LONGDATA<sp/>buffers<sp/>are</highlight></codeline>
<codeline lineno="740"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returned<sp/>to<sp/>this<sp/>callback<sp/>with<sp/>dwBytesRecorded<sp/>==<sp/>0.<sp/>In<sp/>this</highlight></codeline>
<codeline lineno="741"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case,<sp/>we<sp/>do<sp/>not<sp/>want<sp/>to<sp/>send<sp/>them<sp/>back<sp/>to<sp/>the<sp/>interface<sp/>(if</highlight></codeline>
<codeline lineno="742"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>we<sp/>do,<sp/>the<sp/>interface<sp/>will<sp/>not<sp/>close,<sp/>and<sp/>Windows<sp/>OS<sp/>may<sp/>hang).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lpMidiHdr-&gt;dwBytesRecorded<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MMRESULT<sp/>rslt;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpMidiHdr-&gt;dwBytesRecorded<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpMidiHdr-&gt;dwFlags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>note:<sp/>no<sp/>error<sp/>checking<sp/>--<sp/>can<sp/>this<sp/>actually<sp/>fail?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>midiInPrepareHeader(hMidiIn,<sp/>lpMidiHdr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MIDIHDR));</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(rslt<sp/>==<sp/>MMSYSERR_NOERROR);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>note:<sp/>I<sp/>don&apos;t<sp/>think<sp/>this<sp/>can<sp/>fail<sp/>except<sp/>possibly<sp/>for</highlight></codeline>
<codeline lineno="752"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>MMSYSERR_NOMEM,<sp/>but<sp/>the<sp/>pain<sp/>of<sp/>reporting<sp/>this</highlight></codeline>
<codeline lineno="753"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>unlikely<sp/>but<sp/>probably<sp/>catastrophic<sp/>error<sp/>does<sp/>not<sp/>seem</highlight></codeline>
<codeline lineno="754"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>worth<sp/>it.</highlight></codeline>
<codeline lineno="755"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>midiInAddBuffer(hMidiIn,<sp/>lpMidiHdr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MIDIHDR));</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(rslt<sp/>==<sp/>MMSYSERR_NOERROR);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeaveCriticalSection(&amp;m-&gt;<ref refid="structmidiwinmm__struct_1af5deb1b5de786de9aa215ed4bec4d6e6" kindref="member">lock</ref>);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midiInUnprepareHeader(hMidiIn,lpMidiHdr,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MIDIHDR));</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeaveCriticalSection(&amp;m-&gt;<ref refid="structmidiwinmm__struct_1af5deb1b5de786de9aa215ed4bec4d6e6" kindref="member">lock</ref>);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(lpMidiHdr);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MIM_OPEN:</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MIM_CLOSE:</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MIM_ERROR:</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printf(&quot;MIM_ERROR\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MIM_LONGERROR:</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printf(&quot;MIM_LONGERROR\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="782"><highlight class="comment">=========================================================================================</highlight></codeline>
<codeline lineno="783"><highlight class="comment">begin<sp/>midi<sp/>output<sp/>implementation</highlight></codeline>
<codeline lineno="784"><highlight class="comment">=========================================================================================</highlight></codeline>
<codeline lineno="785"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>begin<sp/>helper<sp/>routines<sp/>used<sp/>by<sp/>midiOutStream<sp/>interface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>add_to_buffer<sp/>--<sp/>adds<sp/>timestamped<sp/>short<sp/>msg<sp/>to<sp/>buffer,<sp/>returns<sp/>fullp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>add_to_buffer(midiwinmm_type<sp/>m,<sp/>LPMIDIHDR<sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>,</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structmidiwinmm__struct_1a60acc42e195cf76af089519c6e573d72" kindref="member">delta</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>msg)</highlight></codeline>
<codeline lineno="792"><highlight class="normal">{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*)</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;lpData<sp/>+<sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwBytesRecorded);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr++<sp/>=<sp/><ref refid="structmidiwinmm__struct_1a60acc42e195cf76af089519c6e573d72" kindref="member">delta</ref>;<sp/></highlight><highlight class="comment">/*<sp/>dwDeltaTime<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr++<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>dwStream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr++<sp/>=<sp/>msg;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>dwEvent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwBytesRecorded<sp/>+=<sp/>3<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>the<sp/>addition<sp/>of<sp/>three<sp/>more<sp/>words<sp/>(a<sp/>message)<sp/>would<sp/>extend<sp/>beyond</highlight></codeline>
<codeline lineno="800"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>buffer<sp/>length,<sp/>then<sp/>return<sp/>TRUE<sp/>(full)</highlight></codeline>
<codeline lineno="801"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwBytesRecorded<sp/>+<sp/>3<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long)<sp/>&gt;<sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwBufferLength;</highlight></codeline>
<codeline lineno="803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>pm_time_get(midiwinmm_type<sp/>m)</highlight></codeline>
<codeline lineno="807"><highlight class="normal">{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>MMTIME<sp/>mmtime;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>MMRESULT<sp/>wRtn;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>mmtime.wType<sp/>=<sp/>TIME_TICKS;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>mmtime.u.ticks<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>wRtn<sp/>=<sp/>midiStreamPosition(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1a117032659ec71d42b33f1be4c0a7889c" kindref="member">stream</ref>,<sp/>&amp;mmtime,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(mmtime));</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(wRtn<sp/>==<sp/>MMSYSERR_NOERROR);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mmtime.u.ticks;</highlight></codeline>
<codeline lineno="815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>end<sp/>helper<sp/>routines<sp/>used<sp/>by<sp/>midiOutStream<sp/>interface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>winmm_out_open(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*driverInfo)</highlight></codeline>
<codeline lineno="822"><highlight class="normal">{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>dwDevice;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref>;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>midiwinmm_type<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>MIDIPROPTEMPO<sp/>propdata;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>MIDIPROPTIMEDIV<sp/>divdata;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_sysex_len<sp/>=<sp/>midi-&gt;<ref refid="structpm__internal__struct_1a253ecc9475134223732c0b450e25c99e" kindref="member">buffer_len</ref><sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>output_buffer_len;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmidiwinmm__struct_1ada80cf474e7330d17abfd1aefbdb7bf3" kindref="member">num_buffers</ref>;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>dwDevice<sp/>=<sp/>(<ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref>)<sp/><ref refid="pminternal_8h_1a8a86f0e79d5794e79c94c3f380a7088c" kindref="member">descriptors</ref>[i].descriptor;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>system<sp/>dependent<sp/>device<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>(<ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref>)<sp/><ref refid="pminternal_8h_1a5e0011f472e9c71efa58816f628eed08" kindref="member">pm_alloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmidiwinmm__struct" kindref="compound">midiwinmm_node</ref>));<sp/></highlight><highlight class="comment">/*<sp/>create<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref><sp/>=<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>no_memory;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1af3f572e57c53d6b97775e0f26cd9d0d5" kindref="member">out</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1aa2ca652de8e6c25d2f28d6edd2f8e10e" kindref="member">buffers</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1ada80cf474e7330d17abfd1aefbdb7bf3" kindref="member">num_buffers</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a75935764565996299a4b6c3f6b93e9fd" kindref="member">max_buffers</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1abab750c48849e1e4919b9ae5663ed7e7" kindref="member">buffers_expanded</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a88bc98c540b46439ee781d902e6c20a2" kindref="member">next_buffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SYSEX_BUFFERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;sysex_buffers[0]<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;sysex_buffers[1]<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;next_sysex_buffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a5f6adbb79abbc327b77d414b2c62b7a7" kindref="member">last_time</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1ac9a589032892c74beeab0b6a998c13eb" kindref="member">first_message</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;<sp/></highlight><highlight class="comment">/*<sp/>we<sp/>treat<sp/>first<sp/>message<sp/>as<sp/>special<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a8b4b27e9b67b6002716c35ba507efbc4" kindref="member">sysex_mode</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1abafd2354939bfc342b3e627b26f974df" kindref="member">sysex_word</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a27999ff2b46ab6855ca33f936af1020e" kindref="member">sysex_byte_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1aacee5aeff23bb17834bf177a2e1e6f56" kindref="member">sync_time</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a60acc42e195cf76af089519c6e573d72" kindref="member">delta</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref><sp/>=<sp/>MMSYSERR_NOERROR;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>a<sp/>signal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a13aff28a564452dca38b6c2066074d12" kindref="member">buffer_signal</ref><sp/>=<sp/>CreateEvent(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>should<sp/>only<sp/>fail<sp/>when<sp/>there<sp/>are<sp/>very<sp/>serious<sp/>problems<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(m-&gt;<ref refid="structmidiwinmm__struct_1a13aff28a564452dca38b6c2066074d12" kindref="member">buffer_signal</ref>);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>open<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1ad1458cf67c24a176a66dd8350c50ac0a" kindref="member">latency</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>simple<sp/>midi<sp/>out<sp/>calls<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/>midiOutOpen(</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LPHMIDIOUT)<sp/>&amp;<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1af3f572e57c53d6b97775e0f26cd9d0d5" kindref="member">out</ref>,<sp/><sp/></highlight><highlight class="comment">/*<sp/>device<sp/>Handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwDevice,<sp/><sp/></highlight><highlight class="comment">/*<sp/>device<sp/>ID<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>note:<sp/>same<sp/>callback<sp/>fn<sp/>as<sp/>for<sp/>StreamOpen:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pa__win__ds_8c_1ac42e964219ea4889a963d264ccb84ac6" kindref="member">DWORD_PTR</ref>)<sp/>winmm_streamout_callback,<sp/></highlight><highlight class="comment">/*<sp/>callback<sp/>fn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pa__win__ds_8c_1ac42e964219ea4889a963d264ccb84ac6" kindref="member">DWORD_PTR</ref>)<sp/>midi,<sp/><sp/></highlight><highlight class="comment">/*<sp/>callback<sp/>instance<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CALLBACK_FUNCTION);<sp/></highlight><highlight class="comment">/*<sp/>callback<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>stream-based<sp/>midi<sp/>output<sp/>(schedulable<sp/>in<sp/>future)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/>midiStreamOpen(</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1a117032659ec71d42b33f1be4c0a7889c" kindref="member">stream</ref>,<sp/><sp/></highlight><highlight class="comment">/*<sp/>device<sp/>Handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LPUINT)<sp/>&amp;<sp/>dwDevice,<sp/><sp/></highlight><highlight class="comment">/*<sp/>device<sp/>ID<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/></highlight><highlight class="comment">/*<sp/>reserved,<sp/>must<sp/>be<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pa__win__ds_8c_1ac42e964219ea4889a963d264ccb84ac6" kindref="member">DWORD_PTR</ref>)<sp/>winmm_streamout_callback,</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pa__win__ds_8c_1ac42e964219ea4889a963d264ccb84ac6" kindref="member">DWORD_PTR</ref>)<sp/>midi,<sp/><sp/></highlight><highlight class="comment">/*<sp/>callback<sp/>instance<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CALLBACK_FUNCTION);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>!=<sp/>MMSYSERR_NOERROR)<sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>free_descriptor;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1ad1458cf67c24a176a66dd8350c50ac0a" kindref="member">latency</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_buffers<sp/>=<sp/><ref refid="pmwinmm_8c_1aeae8e048fee020b6a24f20007a3a48d0" kindref="member">NUM_SIMPLE_SYSEX_BUFFERS</ref>;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_buffer_len<sp/>=<sp/>max_sysex_len<sp/>/<sp/><ref refid="structmidiwinmm__struct_1ada80cf474e7330d17abfd1aefbdb7bf3" kindref="member">num_buffers</ref>;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output_buffer_len<sp/>&lt;<sp/><ref refid="pmwinmm_8c_1a408412abbb0f2222aef584c08007b3e4" kindref="member">MIN_SIMPLE_SYSEX_LEN</ref>)</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_buffer_len<sp/>=<sp/><ref refid="pmwinmm_8c_1a408412abbb0f2222aef584c08007b3e4" kindref="member">MIN_SIMPLE_SYSEX_LEN</ref>;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1a3c79b5a9ee81c3835b8de9b0d900d2de" kindref="member">dur</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_buffers<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(midi-&gt;<ref refid="structpm__internal__struct_1a253ecc9475134223732c0b450e25c99e" kindref="member">buffer_len</ref>,<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ad1458cf67c24a176a66dd8350c50ac0a" kindref="member">latency</ref><sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_buffers<sp/>&lt;<sp/><ref refid="pmwinmm_8c_1adf056ca1f5470fb9d2b3644a3b916729" kindref="member">MIN_STREAM_BUFFERS</ref>)</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_buffers<sp/>=<sp/><ref refid="pmwinmm_8c_1adf056ca1f5470fb9d2b3644a3b916729" kindref="member">MIN_STREAM_BUFFERS</ref>;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_buffer_len<sp/>=<sp/><ref refid="pmwinmm_8c_1a30ed3188169b95726d10bcb4e862bfb0" kindref="member">STREAM_BUFFER_LEN</ref>;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propdata.cbStruct<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MIDIPROPTEMPO);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propdata.dwTempo<sp/>=<sp/>480000;<sp/></highlight><highlight class="comment">/*<sp/>microseconds<sp/>per<sp/>quarter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/>midiStreamProperty(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1a117032659ec71d42b33f1be4c0a7889c" kindref="member">stream</ref>,</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LPBYTE)<sp/>&amp;<sp/>propdata,</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MIDIPROP_SET<sp/>|<sp/>MIDIPROP_TEMPO);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>close_device;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divdata.cbStruct<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MIDIPROPTEMPO);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divdata.dwTimeDiv<sp/>=<sp/>480;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>divisions<sp/>per<sp/>quarter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/>midiStreamProperty(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1a117032659ec71d42b33f1be4c0a7889c" kindref="member">stream</ref>,</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LPBYTE)<sp/>&amp;<sp/>divdata,</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MIDIPROP_SET<sp/>|<sp/>MIDIPROP_TIMEDIV);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>close_device;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allocate<sp/>buffers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allocate_buffers(m,<sp/>output_buffer_len,<sp/>num_buffers))<sp/></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>free_buffers;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1ad1458cf67c24a176a66dd8350c50ac0a" kindref="member">latency</ref><sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/>midiStreamRestart(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1a117032659ec71d42b33f1be4c0a7889c" kindref="member">stream</ref>);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>!=<sp/>MMSYSERR_NOERROR)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>free_buffers;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal">free_buffers:</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>buffers<sp/>are<sp/>freed<sp/>below<sp/>by<sp/>winmm_out_delete<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal">close_device:</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>midiOutClose(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1af3f572e57c53d6b97775e0f26cd9d0d5" kindref="member">out</ref>);</highlight></codeline>
<codeline lineno="928"><highlight class="normal">free_descriptor:</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>winmm_out_delete(midi);<sp/></highlight><highlight class="comment">/*<sp/>frees<sp/>buffers<sp/>and<sp/>m<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal">no_memory:</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref>)<sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>midiOutGetErrorText(<ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref>,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="pminternal_8h_1ac24a8881f0ef8c3a944349bee479cf05" kindref="member">pm_hosterror_text</ref>,</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a40b1b3ff3147b3e0dff5843911345c8e" kindref="member">PM_HOST_ERROR_MSG_LEN</ref>);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(err<sp/>==<sp/>MMSYSERR_NOERROR);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a2cd8d4985678f6c92748dcc1177a2512" kindref="member">pmInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="939"><highlight class="normal">}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>winmm_out_delete<sp/>--<sp/>carefully<sp/>free<sp/>data<sp/>associated<sp/>with<sp/>midi<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>winmm_out_delete(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi)</highlight></codeline>
<codeline lineno="945"><highlight class="normal">{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delete<sp/>system<sp/>dependent<sp/>device<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>midiwinmm_type<sp/>m<sp/>=<sp/>(<ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(m)<sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structmidiwinmm__struct_1a13aff28a564452dca38b6c2066074d12" kindref="member">buffer_signal</ref>)<sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>report<sp/>errors<sp/>--<sp/>better<sp/>not<sp/>to<sp/>stop<sp/>cleanup<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle(m-&gt;<ref refid="structmidiwinmm__struct_1a13aff28a564452dca38b6c2066074d12" kindref="member">buffer_signal</ref>);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>using<sp/>stream<sp/>output,<sp/>free<sp/>buffers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1ada80cf474e7330d17abfd1aefbdb7bf3" kindref="member">num_buffers</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structmidiwinmm__struct_1aa2ca652de8e6c25d2f28d6edd2f8e10e" kindref="member">buffers</ref>[i])<sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(m-&gt;<ref refid="structmidiwinmm__struct_1aa2ca652de8e6c25d2f28d6edd2f8e10e" kindref="member">buffers</ref>[i]);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1ada80cf474e7330d17abfd1aefbdb7bf3" kindref="member">num_buffers</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(m-&gt;<ref refid="structmidiwinmm__struct_1aa2ca652de8e6c25d2f28d6edd2f8e10e" kindref="member">buffers</ref>);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a75935764565996299a4b6c3f6b93e9fd" kindref="member">max_buffers</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SYSEX_BUFFERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>sysex<sp/>buffers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NUM_SYSEX_BUFFERS;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;sysex_buffers[i])<sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(m-&gt;sysex_buffers[i]);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(m);<sp/></highlight><highlight class="comment">/*<sp/>delete<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal">}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>see<sp/>comments<sp/>for<sp/>winmm_in_close<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>winmm_out_close(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi)</highlight></codeline>
<codeline lineno="975"><highlight class="normal">{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>midiwinmm_type<sp/>m<sp/>=<sp/>(<ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1af3f572e57c53d6b97775e0f26cd9d0d5" kindref="member">out</ref>)<sp/>{</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>device<sp/>to<sp/>close<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1ad1458cf67c24a176a66dd8350c50ac0a" kindref="member">latency</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/>midiOutClose(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1af3f572e57c53d6b97775e0f26cd9d0d5" kindref="member">out</ref>);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/>midiStreamClose(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1a117032659ec71d42b33f1be4c0a7889c" kindref="member">stream</ref>);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>regardless<sp/>of<sp/>outcome,<sp/>free<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winmm_out_delete(midi);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref>)<sp/>{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>midiOutGetErrorText(<ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref>,</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="pminternal_8h_1ac24a8881f0ef8c3a944349bee479cf05" kindref="member">pm_hosterror_text</ref>,</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a40b1b3ff3147b3e0dff5843911345c8e" kindref="member">PM_HOST_ERROR_MSG_LEN</ref>);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(err<sp/>==<sp/>MMSYSERR_NOERROR);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="995"><highlight class="normal">}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>winmm_out_abort(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi)</highlight></codeline>
<codeline lineno="999"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>midiwinmm_type<sp/>m<sp/>=<sp/>(<ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref><sp/>=<sp/>MMSYSERR_NOERROR;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>only<sp/>stop<sp/>output<sp/>streams<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1ad1458cf67c24a176a66dd8350c50ac0a" kindref="member">latency</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref><sp/>=<sp/>midiStreamStop(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1a117032659ec71d42b33f1be4c0a7889c" kindref="member">stream</ref>);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref><sp/>?<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref><sp/>:<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>winmm_write_flush(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>timestamp)</highlight></codeline>
<codeline lineno="1012"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>midiwinmm_type<sp/>m<sp/>=<sp/>(<ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(m);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref><sp/>=<sp/>midiOutPrepareHeader(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1af3f572e57c53d6b97775e0f26cd9d0d5" kindref="member">out</ref>,<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>,<sp/></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MIDIHDR));</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>not<sp/>send<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1ad1458cf67c24a176a66dd8350c50ac0a" kindref="member">latency</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>As<sp/>pointed<sp/>out<sp/>by<sp/>Nigel<sp/>Brown,<sp/>20Sep06,<sp/>dwBytesRecorded</highlight></codeline>
<codeline lineno="1022"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>should<sp/>be<sp/>zero.<sp/>This<sp/>is<sp/>set<sp/>in<sp/>get_free_sysex_buffer().<sp/></highlight></codeline>
<codeline lineno="1023"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>msg<sp/>length<sp/>goes<sp/>in<sp/>dwBufferLength<sp/>in<sp/>spite<sp/>of<sp/>what</highlight></codeline>
<codeline lineno="1024"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Microsoft<sp/>documentation<sp/>says<sp/>(or<sp/>doesn&apos;t<sp/>say).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwBufferLength<sp/>=<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwBytesRecorded;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwBytesRecorded<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref><sp/>=<sp/>midiOutLongMsg(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1af3f572e57c53d6b97775e0f26cd9d0d5" kindref="member">out</ref>,<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MIDIHDR));</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref><sp/>=<sp/>midiStreamOut(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1a117032659ec71d42b33f1be4c0a7889c" kindref="member">stream</ref>,<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>,<sp/></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MIDIHDR));</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ad789ea60604e466b9de67da9e6cbe1e9" kindref="member">fill_base</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwFlags<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>release<sp/>the<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GARBAGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>winmm_write_sysex_byte(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byte)</highlight></codeline>
<codeline lineno="1046"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>midiwinmm_type<sp/>m<sp/>=<sp/>(<ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg_buffer;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>sysex,<sp/>m-&gt;hdr<sp/>is<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(!m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>allocate<sp/>a<sp/>buffer<sp/>if<sp/>none<sp/>allocated<sp/>yet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref><sp/>=<sp/>get_free_output_buffer(midi);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a2cd8d4985678f6c92748dcc1177a2512" kindref="member">pmInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a27999ff2b46ab6855ca33f936af1020e" kindref="member">sysex_byte_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>figure<sp/>out<sp/>where<sp/>to<sp/>write<sp/>byte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>msg_buffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>(m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;lpData);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;lpData<sp/>==<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>(m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref><sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>overflow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structmidiwinmm__struct_1a27999ff2b46ab6855ca33f936af1020e" kindref="member">sysex_byte_count</ref><sp/>&gt;=<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwBufferLength)<sp/>{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allocate<sp/>a<sp/>bigger<sp/>message<sp/>--<sp/>double<sp/>it<sp/>every<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPMIDIHDR<sp/>big<sp/>=<sp/>allocate_buffer(m-&gt;<ref refid="structmidiwinmm__struct_1a27999ff2b46ab6855ca33f936af1020e" kindref="member">sysex_byte_count</ref><sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printf(&quot;expand<sp/>to<sp/>%d<sp/>bytes\n&quot;,<sp/>m-&gt;sysex_byte_count<sp/>*<sp/>2);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!big)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a2cd8d4985678f6c92748dcc1177a2512" kindref="member">pmInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref><sp/>=<sp/>midiOutPrepareHeader(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1af3f572e57c53d6b97775e0f26cd9d0d5" kindref="member">out</ref>,<sp/>big,</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MIDIHDR));</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(big-&gt;lpData,<sp/>msg_buffer,<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a27999ff2b46ab6855ca33f936af1020e" kindref="member">sysex_byte_count</ref>);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_buffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>(big-&gt;lpData);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structmidiwinmm__struct_1aa2ca652de8e6c25d2f28d6edd2f8e10e" kindref="member">buffers</ref>[0]<sp/>==<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1aa2ca652de8e6c25d2f28d6edd2f8e10e" kindref="member">buffers</ref>[0]<sp/>=<sp/>big;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printf(&quot;freed<sp/>m-&gt;hdr\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structmidiwinmm__struct_1aa2ca652de8e6c25d2f28d6edd2f8e10e" kindref="member">buffers</ref>[1]<sp/>==<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1aa2ca652de8e6c25d2f28d6edd2f8e10e" kindref="member">buffers</ref>[1]<sp/>=<sp/>big;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printf(&quot;freed<sp/>m-&gt;hdr\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref><sp/>=<sp/>big;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>append<sp/>byte<sp/>to<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>msg_buffer[m-&gt;<ref refid="structmidiwinmm__struct_1a27999ff2b46ab6855ca33f936af1020e" kindref="member">sysex_byte_count</ref>++]<sp/>=<sp/>byte;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>see<sp/>if<sp/>we<sp/>have<sp/>a<sp/>complete<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(byte<sp/>==<sp/><ref refid="pmwinmm_8c_1a140c8cfa4bbf1a03494abdbd639d49f2" kindref="member">MIDI_EOX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwBytesRecorded<sp/>=<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a27999ff2b46ab6855ca33f936af1020e" kindref="member">sysex_byte_count</ref>;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1093"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>int<sp/>i;<sp/>int<sp/>len<sp/>=<sp/>m-&gt;hdr-&gt;dwBytesRecorded;</highlight></codeline>
<codeline lineno="1094"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;OutLongMsg<sp/>%d<sp/>&quot;,<sp/>len);</highlight></codeline>
<codeline lineno="1095"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1096"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;%2x<sp/>&quot;,<sp/>msg_buffer[i]);</highlight></codeline>
<codeline lineno="1097"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1098"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1099"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref><sp/>=<sp/>midiOutLongMsg(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1af3f572e57c53d6b97775e0f26cd9d0d5" kindref="member">out</ref>,<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MIDIHDR));</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>stop<sp/>using<sp/>this<sp/>message<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>winmm_write_short(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/><ref refid="struct_pm_event" kindref="compound">PmEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="1110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>midiwinmm_type<sp/>m<sp/>=<sp/>(<ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>rslt<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(m);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1ad1458cf67c24a176a66dd8350c50ac0a" kindref="member">latency</ref><sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>use<sp/>midiOut<sp/>interface,<sp/>ignore<sp/>timestamps<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref><sp/>=<sp/>midiOutShortMsg(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1af3f572e57c53d6b97775e0f26cd9d0d5" kindref="member">out</ref>,<sp/>event-&gt;<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structmidiwinmm__struct_1a3eed174837c7451870164d583b642d01" kindref="member">error</ref>)<sp/>rslt<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>midiStream<sp/>interface<sp/>--<sp/>pass<sp/>data<sp/>through<sp/>buffers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>when<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;timestamp;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structmidiwinmm__struct_1a60acc42e195cf76af089519c6e573d72" kindref="member">delta</ref>;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>full;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(when<sp/>==<sp/>0)<sp/>when<sp/>=<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ab7152c01f41a2c1c416b6720bc81c220" kindref="member">now</ref>;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>when<sp/>is<sp/>in<sp/>real_time;<sp/>translate<sp/>to<sp/>intended<sp/>stream<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>=<sp/>when<sp/>+<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a60acc42e195cf76af089519c6e573d72" kindref="member">delta</ref><sp/>+<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ad1458cf67c24a176a66dd8350c50ac0a" kindref="member">latency</ref>;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>we<sp/>don&apos;t<sp/>go<sp/>backward<sp/>in<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(when<sp/>&lt;<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a5f6adbb79abbc327b77d414b2c62b7a7" kindref="member">last_time</ref>)<sp/>when<sp/>=<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a5f6adbb79abbc327b77d414b2c62b7a7" kindref="member">last_time</ref>;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>when<sp/>-<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a5f6adbb79abbc327b77d414b2c62b7a7" kindref="member">last_time</ref>;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a5f6adbb79abbc327b77d414b2c62b7a7" kindref="member">last_time</ref><sp/>=<sp/>when;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>before<sp/>we<sp/>insert<sp/>any<sp/>data,<sp/>we<sp/>must<sp/>have<sp/>a<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref><sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>stream<sp/>interface:<sp/>buffers<sp/>allocated<sp/>when<sp/>stream<sp/>is<sp/>opened<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref><sp/>=<sp/>get_free_output_buffer(midi);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full<sp/>=<sp/>add_to_buffer(m,<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>,<sp/>delta,<sp/>event-&gt;<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(full)<sp/>rslt<sp/>=<sp/>winmm_write_flush(midi,<sp/>when);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140" refid="pmwinmm_8c_1aee16c4e278880ae62e80e24875a05d64" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>winmm_begin_sysex<sp/>winmm_write_flush</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>winmm_begin_sysex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="pmwinmm_8c_1aee16c4e278880ae62e80e24875a05d64" kindref="member">winmm_begin_sysex</ref>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>timestamp)</highlight></codeline>
<codeline lineno="1143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>midiwinmm_type<sp/>m<sp/>=<sp/>(<ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>rslt<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1ad1458cf67c24a176a66dd8350c50ac0a" kindref="member">latency</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>nothing<sp/>--<sp/>it&apos;s<sp/>handled<sp/>in<sp/>winmm_write_byte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sysex<sp/>expects<sp/>an<sp/>empty<sp/>sysex<sp/>buffer,<sp/>so<sp/>send<sp/>whatever<sp/>is<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>winmm_write_flush(midi);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>winmm_end_sysex(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>timestamp)</highlight></codeline>
<codeline lineno="1158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>could<sp/>check<sp/>for<sp/>callback_error<sp/>here,<sp/>but<sp/>I<sp/>haven&apos;t<sp/>checked</highlight></codeline>
<codeline lineno="1160"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>what<sp/>happens<sp/>if<sp/>we<sp/>exit<sp/>early<sp/>and<sp/>don&apos;t<sp/>finish<sp/>the<sp/>sysex<sp/>msg</highlight></codeline>
<codeline lineno="1161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>clean<sp/>up</highlight></codeline>
<codeline lineno="1162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>midiwinmm_type<sp/>m<sp/>=<sp/>(<ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>rslt<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>LPMIDIHDR<sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref><sp/>=<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(!<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;<sp/></highlight><highlight class="comment">/*<sp/>something<sp/>bad<sp/>happened<sp/>earlier,</highlight></codeline>
<codeline lineno="1167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do<sp/>not<sp/>report<sp/>an<sp/>error<sp/>because<sp/>it<sp/>would<sp/>have<sp/>been<sp/></highlight></codeline>
<codeline lineno="1168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reported<sp/>(at<sp/>least)<sp/>once<sp/>already<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>a(n<sp/>old)<sp/>version<sp/>of<sp/>MIDI<sp/>YOKE<sp/>requires<sp/>a<sp/>zero<sp/>byte<sp/>after</highlight></codeline>
<codeline lineno="1170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>sysex<sp/>message,<sp/>but<sp/>do<sp/>not<sp/>increment<sp/>dwBytesRecorded:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;lpData[<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwBytesRecorded]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1ad1458cf67c24a176a66dd8350c50ac0a" kindref="member">latency</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PRINT_BEFORE_SENDING_SYSEX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DEBUG<sp/>CODE:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwBufferLength;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;OutLongMsg<sp/>%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>len);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;%2x<sp/>&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;lpData[i]));</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Using<sp/>stream<sp/>interface.<sp/>There<sp/>are<sp/>accumulated<sp/>bytes<sp/>in<sp/>m-&gt;hdr</highlight></codeline>
<codeline lineno="1184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>send<sp/>using<sp/>midiStreamOut</highlight></codeline>
<codeline lineno="1185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>bytes<sp/>recorded<sp/>to<sp/>MIDIEVENT<sp/>length,<sp/>but<sp/>don&apos;t</highlight></codeline>
<codeline lineno="1187"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>the<sp/>MIDIEVENT<sp/>data<sp/>(3<sp/>longs)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MIDIEVENT<sp/>*evt<sp/>=<sp/>(MIDIEVENT<sp/>*)<sp/>(<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;lpData);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evt-&gt;dwEvent<sp/>+=<sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwBytesRecorded<sp/>-<sp/>3<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>round<sp/>up<sp/>BytesRecorded<sp/>to<sp/>multiple<sp/>of<sp/>4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwBytesRecorded<sp/>=<sp/>(<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwBytesRecorded<sp/>+<sp/>3)<sp/>&amp;<sp/>~3;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>winmm_write_flush(midi,<sp/>timestamp);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>winmm_write_byte(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byte,</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>timestamp)</highlight></codeline>
<codeline lineno="1200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>a<sp/>sysex<sp/>byte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>rslt<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>midiwinmm_type<sp/>m<sp/>=<sp/>(<ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>LPMIDIHDR<sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref><sp/>=<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg_buffer;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(m);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref><sp/>=<sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref><sp/>=<sp/>get_free_output_buffer(midi);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ad789ea60604e466b9de67da9e6cbe1e9" kindref="member">fill_base</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;lpData;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1aed1fd15de450d744b52a7a38e15408da" kindref="member">fill_offset_ptr</ref><sp/>=<sp/>&amp;(<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwBytesRecorded);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>when<sp/>buffer<sp/>fills,<sp/>Pm_WriteSysEx<sp/>will<sp/>revert<sp/>to<sp/>calling</highlight></codeline>
<codeline lineno="1213"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>pmwin_write_byte,<sp/>which<sp/>expect<sp/>to<sp/>have<sp/>space,<sp/>so<sp/>leave</highlight></codeline>
<codeline lineno="1214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>one<sp/>byte<sp/>free<sp/>for<sp/>pmwin_write_byte.<sp/>Leave<sp/>another<sp/>byte</highlight></codeline>
<codeline lineno="1215"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>of<sp/>space<sp/>for<sp/>zero<sp/>after<sp/>message<sp/>to<sp/>make<sp/>early<sp/>version<sp/>of<sp/></highlight></codeline>
<codeline lineno="1216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>MIDI<sp/>YOKE<sp/>driver<sp/>happy<sp/>--<sp/>therefore<sp/>dwBufferLength<sp/>-<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a6a16a79f905138e1a5a3fe3b9529627f" kindref="member">fill_length</ref><sp/>=<sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwBufferLength<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1ad1458cf67c24a176a66dd8350c50ac0a" kindref="member">latency</ref><sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>when<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)<sp/>timestamp;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structmidiwinmm__struct_1a60acc42e195cf76af089519c6e573d72" kindref="member">delta</ref>;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(when<sp/>==<sp/>0)<sp/>when<sp/>=<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ab7152c01f41a2c1c416b6720bc81c220" kindref="member">now</ref>;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>when<sp/>is<sp/>in<sp/>real_time;<sp/>translate<sp/>to<sp/>intended<sp/>stream<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>=<sp/>when<sp/>+<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a60acc42e195cf76af089519c6e573d72" kindref="member">delta</ref><sp/>+<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ad1458cf67c24a176a66dd8350c50ac0a" kindref="member">latency</ref>;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>we<sp/>don&apos;t<sp/>go<sp/>backward<sp/>in<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(when<sp/>&lt;<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a5f6adbb79abbc327b77d414b2c62b7a7" kindref="member">last_time</ref>)<sp/>when<sp/>=<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a5f6adbb79abbc327b77d414b2c62b7a7" kindref="member">last_time</ref>;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>when<sp/>-<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a5f6adbb79abbc327b77d414b2c62b7a7" kindref="member">last_time</ref>;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a5f6adbb79abbc327b77d414b2c62b7a7" kindref="member">last_time</ref><sp/>=<sp/>when;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;lpData;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr++<sp/>=<sp/>delta;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr++<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr<sp/>=<sp/>MEVT_F_LONG;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwBytesRecorded<sp/>=<sp/>3<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>data<sp/>will<sp/>be<sp/>added<sp/>at<sp/>an<sp/>offset<sp/>of<sp/>dwBytesRecorded<sp/>...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>the<sp/>data<sp/>byte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>msg_buffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>(<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;lpData);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>msg_buffer[<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwBytesRecorded++]<sp/>=<sp/>byte;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>see<sp/>if<sp/>buffer<sp/>is<sp/>full,<sp/>leave<sp/>one<sp/>byte<sp/>extra<sp/>for<sp/>pad<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwBytesRecorded<sp/>&gt;=<sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwBufferLength<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>what<sp/>we&apos;ve<sp/>got<sp/>and<sp/>continue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>winmm_end_sysex(midi,<sp/>timestamp);<sp/></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPANDING_SYSEX_BUFFERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><ref refid="handlers_8c_1a82c195c0687005edfeb733c7b5887c33" kindref="member">note</ref>:<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>code<sp/>is<sp/>here<sp/>as<sp/>an<sp/>aid<sp/><ref refid="structmidiwinmm__struct_1afa31d3af271254689eb9243a3aa24ff9" kindref="member">in</ref><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>you<sp/>want<sp/><ref refid="moxc_8h_1a96b7e0ab94d54a56e504fb87024c0005" kindref="member">sysex</ref><sp/><ref refid="structmidiwinmm__struct_1aa2ca652de8e6c25d2f28d6edd2f8e10e" kindref="member">buffers</ref></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>expand<sp/>to<sp/>hold<sp/>large<sp/>messages<sp/>completely.<sp/>If<sp/>so,<sp/>you</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>want<sp/>to<sp/>change<sp/>SYSEX_BYTES_PER_BUFFER<sp/>above<sp/>to<sp/>some</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>variable<sp/>that<sp/>remembers<sp/><ref refid="nasm_8h_1aaf57ffcfef0bee04f46c6ada2a905a8c" kindref="member">the</ref><sp/><ref refid="structbuffer" kindref="compound">buffer</ref><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>.<sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2add_8c_1a955f504eccf76b4eb2489c0adab03121" kindref="member">A</ref><sp/><ref refid="charmaps_8h_1a422f205059a9d17797eb370ded3c21c6" kindref="member">good</ref><sp/>place<sp/>to<sp/></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>put<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>would<sp/>be<sp/><ref refid="structmidiwinmm__struct_1afa31d3af271254689eb9243a3aa24ff9" kindref="member">in</ref><sp/><ref refid="nasm_8h_1aaf57ffcfef0bee04f46c6ada2a905a8c" kindref="member">the</ref><sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwUser<sp/>field.</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>resize_sysex_buffer(midi,<sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a27999ff2b46ab6855ca33f936af1020e" kindref="member">sysex_byte_count</ref>,<sp/></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a27999ff2b46ab6855ca33f936af1020e" kindref="member">sysex_byte_count</ref><sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9abb1810fb6d5f45ea7c3a6098d5a4853d" kindref="member">pmBufferMaxSize</ref>)<sp/></highlight><highlight class="comment">/*<sp/>if<sp/>the<sp/>buffer<sp/>can&apos;t<sp/>be<sp/>resized<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPANDING_SYSEX_BUFFERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytesRecorded<sp/>=<sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwBytesRecorded;<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>field<sp/>gets<sp/>wiped<sp/>out,<sp/>so<sp/>we&apos;ll<sp/>save<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>resize_sysex_buffer(midi,<sp/>bytesRecorded,<sp/>2<sp/>*<sp/>bytesRecorded);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>-&gt;dwBytesRecorded<sp/>=<sp/>bytesRecorded;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9abb1810fb6d5f45ea7c3a6098d5a4853d" kindref="member">pmBufferMaxSize</ref>)<sp/></highlight><highlight class="comment">/*<sp/>if<sp/>buffer<sp/>can&apos;t<sp/>be<sp/>resized<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>winmm_synchronize(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi)</highlight></codeline>
<codeline lineno="1273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>midiwinmm_type<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>pm_stream_time_2;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>real_time;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>pm_stream_time;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>only<sp/>synchronize<sp/>if<sp/>we<sp/>are<sp/>using<sp/>stream<sp/>interface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1ad1458cf67c24a176a66dd8350c50ac0a" kindref="member">latency</ref><sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>figure<sp/>out<sp/>the<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>(<ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>pm_stream_time_2<sp/>=<sp/>pm_time_get(m);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>real_time<sp/>between<sp/>two<sp/>reads<sp/>of<sp/>stream<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_stream_time<sp/>=<sp/>pm_stream_time_2;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>real_time<sp/>=<sp/>(*midi-&gt;<ref refid="structpm__internal__struct_1aa2268f6b4916d4ae3de765d880bc8641" kindref="member">time_proc</ref>)(midi-&gt;<ref refid="structpm__internal__struct_1ac3ee4fe374d89f3040708206648acb07" kindref="member">time_info</ref>);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_stream_time_2<sp/>=<sp/>pm_time_get(m);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>repeat<sp/>if<sp/>more<sp/>than<sp/>1ms<sp/>elapsed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pm_stream_time_2<sp/>&gt;<sp/>pm_stream_time<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1a60acc42e195cf76af089519c6e573d72" kindref="member">delta</ref><sp/>=<sp/>pm_stream_time<sp/>-<sp/>real_time;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="structmidiwinmm__struct_1aacee5aeff23bb17834bf177a2e1e6f56" kindref="member">sync_time</ref><sp/>=<sp/>real_time;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>real_time;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SYSEX_BUFFERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>winmm_out_callback<sp/>--<sp/>recycle<sp/>sysex<sp/>buffers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CALLBACK<sp/>winmm_out_callback(HMIDIOUT<sp/>hmo,<sp/><ref refid="mapinls_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref><sp/>wMsg,</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>dwInstance,<sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>dwParam1,<sp/></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>dwParam2)</highlight></codeline>
<codeline lineno="1303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi<sp/>=<sp/>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*)<sp/>dwInstance;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/>midiwinmm_type<sp/>m<sp/>=<sp/>(<ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>LPMIDIHDR<sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref><sp/>=<sp/>(LPMIDIHDR)<sp/>dwParam1;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>to<sp/>0<sp/>so<sp/>that<sp/>no<sp/>buffer<sp/>match<sp/>will<sp/>also<sp/>be<sp/>an<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Future<sp/>optimization:<sp/>eliminate<sp/>UnprepareHeader<sp/>calls<sp/>--<sp/>they<sp/>aren&apos;t</highlight></codeline>
<codeline lineno="1310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>necessary;<sp/>however,<sp/>this<sp/>code<sp/>uses<sp/>the<sp/>prepared-flag<sp/>to<sp/>indicate<sp/>which</highlight></codeline>
<codeline lineno="1311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffers<sp/>are<sp/>free,<sp/>so<sp/>we<sp/>need<sp/>to<sp/>do<sp/>something<sp/>to<sp/>flag<sp/>empty<sp/>buffers<sp/>if</highlight></codeline>
<codeline lineno="1312"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>we<sp/>leave<sp/>them<sp/>prepared</highlight></codeline>
<codeline lineno="1313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1315"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(&quot;out_callback:<sp/>hdr<sp/>%x,<sp/>wMsg<sp/>%x,<sp/>MOM_DONE<sp/>%x\n&quot;,<sp/></highlight></codeline>
<codeline lineno="1316"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr,<sp/>wMsg,<sp/>MOM_DONE);</highlight></codeline>
<codeline lineno="1317"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wMsg<sp/>==<sp/>MOM_DONE)<sp/>{</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MMRESULT<sp/>ret<sp/>=<sp/>midiOutUnprepareHeader(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1af3f572e57c53d6b97775e0f26cd9d0d5" kindref="member">out</ref>,<sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>,<sp/></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MIDIHDR));</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(ret<sp/>==<sp/>MMSYSERR_NOERROR);</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>notify<sp/>waiting<sp/>sender<sp/>that<sp/>a<sp/>buffer<sp/>is<sp/>available<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>SetEvent(m-&gt;<ref refid="structmidiwinmm__struct_1a13aff28a564452dca38b6c2066074d12" kindref="member">buffer_signal</ref>);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(err);<sp/></highlight><highlight class="comment">/*<sp/>false<sp/>-&gt;<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>winmm_streamout_callback<sp/>--<sp/>unprepare<sp/>(free)<sp/>buffer<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CALLBACK<sp/>winmm_streamout_callback(HMIDIOUT<sp/>hmo,<sp/><ref refid="mapinls_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref><sp/>wMsg,</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>dwInstance,<sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>dwParam1,<sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>dwParam2)</highlight></codeline>
<codeline lineno="1332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi<sp/>=<sp/>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*)<sp/>dwInstance;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>midiwinmm_type<sp/>m<sp/>=<sp/>(<ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>LPMIDIHDR<sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref><sp/>=<sp/>(LPMIDIHDR)<sp/>dwParam1;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Even<sp/>if<sp/>an<sp/>error<sp/>is<sp/>pending,<sp/>I<sp/>think<sp/>we<sp/>should<sp/>unprepare<sp/>msgs<sp/>and</highlight></codeline>
<codeline lineno="1339"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal<sp/>their<sp/>arrival</highlight></codeline>
<codeline lineno="1340"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printf(&quot;streamout_callback:<sp/>hdr<sp/>%x,<sp/>wMsg<sp/>%x,<sp/>MOM_DONE<sp/>%x\n&quot;,<sp/></highlight></codeline>
<codeline lineno="1342"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr,<sp/>wMsg,<sp/>MOM_DONE);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wMsg<sp/>==<sp/>MOM_DONE)<sp/>{</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MMRESULT<sp/>ret<sp/>=<sp/>midiOutUnprepareHeader(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1af3f572e57c53d6b97775e0f26cd9d0d5" kindref="member">out</ref>,<sp/><ref refid="structmidiwinmm__struct_1a11e6f5498974be95186123e13507d798" kindref="member">hdr</ref>,<sp/></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MIDIHDR));</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(ret<sp/>==<sp/>MMSYSERR_NOERROR);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>signal<sp/>client<sp/>in<sp/>case<sp/>it<sp/>is<sp/>blocked<sp/>waiting<sp/>for<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>SetEvent(m-&gt;<ref refid="structmidiwinmm__struct_1a13aff28a564452dca38b6c2066074d12" kindref="member">buffer_signal</ref>);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(err);<sp/></highlight><highlight class="comment">/*<sp/>false<sp/>-&gt;<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1355"><highlight class="comment">=========================================================================================</highlight></codeline>
<codeline lineno="1356"><highlight class="comment">begin<sp/>exported<sp/>functions</highlight></codeline>
<codeline lineno="1357"><highlight class="comment">=========================================================================================</highlight></codeline>
<codeline lineno="1358"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360" refid="pmwinmm_8c_1a535115b4a2e19deead82ff097abc9a17" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>winmm_in_abort<sp/>pm_fail_fn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361" refid="pmwinmm_8c_1a50237725f4cf3e9972ad0c8f147b73ff" refkind="member"><highlight class="normal"><ref refid="structpm__fns__node" kindref="compound">pm_fns_node</ref><sp/>pm_winmm_in_dictionary<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a841d04eb4d4efa3eebfc4e718cf9faa3" kindref="member">none_write_short</ref>,</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1ac44b30c88f5076903c62f9e8fc8c51ec" kindref="member">none_sysex</ref>,</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1ac44b30c88f5076903c62f9e8fc8c51ec" kindref="member">none_sysex</ref>,</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a2181992bfdc1d719bdd96353763965d7" kindref="member">none_write_byte</ref>,</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a841d04eb4d4efa3eebfc4e718cf9faa3" kindref="member">none_write_short</ref>,</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a1381cf29da7767a1db6c268b7941a6f8" kindref="member">none_write_flush</ref>,</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winmm_synchronize,</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winmm_in_open,</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pmwinmm_8c_1a535115b4a2e19deead82ff097abc9a17" kindref="member">winmm_in_abort</ref>,</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winmm_in_close,</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winmm_in_poll,</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winmm_has_host_error,</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winmm_get_host_error</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377" refid="pmwinmm_8c_1a14223904cd337b8ae5b9af26c1641b4a" refkind="member"><highlight class="normal"><ref refid="structpm__fns__node" kindref="compound">pm_fns_node</ref><sp/>pm_winmm_out_dictionary<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winmm_write_short,</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pmwinmm_8c_1aee16c4e278880ae62e80e24875a05d64" kindref="member">winmm_begin_sysex</ref>,</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winmm_end_sysex,</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winmm_write_byte,</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winmm_write_short,<sp/><sp/></highlight><highlight class="comment">/*<sp/>short<sp/>realtime<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winmm_write_flush,</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winmm_synchronize,</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winmm_out_open,</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winmm_out_abort,</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winmm_out_close,</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a7b782f381e349f7b220b925bcdf9c9c1" kindref="member">none_poll</ref>,</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winmm_has_host_error,</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winmm_get_host_error</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>initialize<sp/>winmm<sp/>interface.<sp/>Note<sp/>that<sp/>if<sp/>there<sp/>is<sp/>something<sp/>wrong</highlight></codeline>
<codeline lineno="1395"><highlight class="comment"><sp/><sp/><sp/>with<sp/>winmm<sp/>(e.g.<sp/>it<sp/>is<sp/>not<sp/>supported<sp/>or<sp/>installed),<sp/>it<sp/>is<sp/>not<sp/>an</highlight></codeline>
<codeline lineno="1396"><highlight class="comment"><sp/><sp/><sp/>error.<sp/>We<sp/>should<sp/>simply<sp/>return<sp/>without<sp/>having<sp/>added<sp/>any<sp/>devices<sp/>to</highlight></codeline>
<codeline lineno="1397"><highlight class="comment"><sp/><sp/><sp/>the<sp/>table.<sp/>Hence,<sp/>no<sp/>error<sp/>code<sp/>is<sp/>returned.<sp/>Furthermore,<sp/>this<sp/>init</highlight></codeline>
<codeline lineno="1398"><highlight class="comment"><sp/><sp/><sp/>code<sp/>is<sp/>called<sp/>along<sp/>with<sp/>every<sp/>other<sp/>supported<sp/>interface,<sp/>so<sp/>the</highlight></codeline>
<codeline lineno="1399"><highlight class="comment"><sp/><sp/><sp/>user<sp/>would<sp/>have<sp/>a<sp/>very<sp/>hard<sp/>time<sp/>figuring<sp/>out<sp/>what<sp/>hardware<sp/>and<sp/>API</highlight></codeline>
<codeline lineno="1400"><highlight class="comment"><sp/><sp/><sp/>generated<sp/>the<sp/>error.<sp/>Finally,<sp/>it<sp/>would<sp/>add<sp/>complexity<sp/>to<sp/>pmwin.c<sp/>to</highlight></codeline>
<codeline lineno="1401"><highlight class="comment"><sp/><sp/><sp/>remember<sp/>where<sp/>the<sp/>error<sp/>code<sp/>came<sp/>from<sp/>in<sp/>order<sp/>to<sp/>convert<sp/>to<sp/>text.</highlight></codeline>
<codeline lineno="1402"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403" refid="pmwinmm_8h_1a814dc61aecbbd16add0d5dc7b6f10ce6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pmwinmm_8c_1a814dc61aecbbd16add0d5dc7b6f10ce6" kindref="member">pm_winmm_init</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1404"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/>pm_winmm_mapper_input();</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/>pm_winmm_mapper_output();</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/>pm_winmm_general_inputs();</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/>pm_winmm_general_outputs();</highlight></codeline>
<codeline lineno="1409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>no<sp/>error<sp/>codes<sp/>are<sp/>returned,<sp/>even<sp/>if<sp/>errors<sp/>are<sp/>encountered,<sp/>because</highlight></codeline>
<codeline lineno="1413"><highlight class="comment"><sp/><sp/><sp/>there<sp/>is<sp/>probably<sp/>nothing<sp/>the<sp/>user<sp/>could<sp/>do<sp/>(e.g.<sp/>it<sp/>would<sp/>be<sp/>an<sp/>error</highlight></codeline>
<codeline lineno="1414"><highlight class="comment"><sp/><sp/><sp/>to<sp/>retry.</highlight></codeline>
<codeline lineno="1415"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416" refid="pmwinmm_8h_1a855566afe42cc36711aedabe2a1527f9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pmwinmm_8c_1a855566afe42cc36711aedabe2a1527f9" kindref="member">pm_winmm_term</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>msg[<ref refid="portmidi_8h_1a40b1b3ff3147b3e0dff5843911345c8e" kindref="member">PM_HOST_ERROR_MSG_LEN</ref>];</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>doneAny<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;pm_winmm_term<sp/>called\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="pminternal_8h_1abf37b57cc544c04b6d27cf33a02b473f" kindref="member">pm_descriptor_index</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*<sp/>midi<sp/>=<sp/><ref refid="pminternal_8h_1a8a86f0e79d5794e79c94c3f380a7088c" kindref="member">descriptors</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structdescriptor__node_1a5e90cf08a561afbc02fa8ac72264bb9a" kindref="member">internalDescriptor</ref>;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi)<sp/>{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midiwinmm_type<sp/>m<sp/>=<sp/>(<ref refid="pmwinmm_8c_1acffe1edf2c2208240d3f50e0be1d456a" kindref="member">midiwinmm_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(m-&gt;<ref refid="structmidiwinmm__struct_1ac29e7bd52dc024589554d4af99a7d08e" kindref="member">handle</ref>.<ref refid="structmidiwinmm__struct_1af3f572e57c53d6b97775e0f26cd9d0d5" kindref="member">out</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>close<sp/>next<sp/>open<sp/>device*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doneAny<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;begin<sp/>closing<sp/>open<sp/>devices...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doneAny<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>report<sp/>any<sp/>host<sp/>errors;<sp/>this<sp/>EXTEREMELY<sp/>useful<sp/>when</highlight></codeline>
<codeline lineno="1438"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trying<sp/>to<sp/>debug<sp/>client<sp/>app<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(winmm_has_host_error(midi))<sp/>{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winmm_get_host_error(midi,<sp/>msg,<sp/><ref refid="portmidi_8h_1a40b1b3ff3147b3e0dff5843911345c8e" kindref="member">PM_HOST_ERROR_MSG_LEN</ref>);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>msg);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>close<sp/>all<sp/>open<sp/>ports<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref>-&gt;<ref refid="structpm__fns__node_1a57b587fb7c65dfa19368b48f6a1a1c2a" kindref="member">close</ref>)(midi);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pmwinmm_8c_1ab84a0b370e7dd74cca0e8627f5b2f96b" kindref="member">midi_in_caps</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(<ref refid="pmwinmm_8c_1ab84a0b370e7dd74cca0e8627f5b2f96b" kindref="member">midi_in_caps</ref>);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pmwinmm_8c_1ab84a0b370e7dd74cca0e8627f5b2f96b" kindref="member">midi_in_caps</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pmwinmm_8c_1ab6cf6e432b3dbb187bc76c78fc035bb8" kindref="member">midi_out_caps</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(<ref refid="pmwinmm_8c_1ab6cf6e432b3dbb187bc76c78fc035bb8" kindref="member">midi_out_caps</ref>);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pmwinmm_8c_1ab6cf6e432b3dbb187bc76c78fc035bb8" kindref="member">midi_out_caps</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doneAny)<sp/>{</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;warning:<sp/>devices<sp/>were<sp/>left<sp/>open.<sp/>They<sp/>have<sp/>been<sp/>closed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;pm_winmm_term<sp/>exiting\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>pm_descriptor_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_win/pmwinmm.c"/>
  </compounddef>
</doxygen>
