<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="vorbiscomment_8c" kind="file" language="C++">
    <compoundname>vorbiscomment.c</compoundname>
    <includes refid="vorbiscomment_8h" local="yes">vorbiscomment.h</includes>
    <includes refid="assert_8h" local="yes">FLAC/assert.h</includes>
    <includes local="yes">FLAC/metadata.h</includes>
    <includes refid="grabbag_8h" local="yes">share/grabbag.h</includes>
    <includes refid="libflac_2include_2share_2utf8_8h" local="yes">share/utf8.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="libflac_2include_2share_2compat_8h" local="yes">share/compat.h</includes>
    <incdepgraph>
      <node id="7782">
        <label>sys/types.h</label>
        <link refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h"/>
        <childnode refid="7783" relation="include">
        </childnode>
        <childnode refid="7784" relation="include">
        </childnode>
        <childnode refid="7785" relation="include">
        </childnode>
      </node>
      <node id="7791">
        <label>stdarg.h</label>
      </node>
      <node id="7796">
        <label>share/utf8.h</label>
        <link refid="libflac_2include_2share_2utf8_8h"/>
      </node>
      <node id="7786">
        <label>FLAC/ordinals.h</label>
        <link refid="ordinals_8h"/>
        <childnode refid="7787" relation="include">
        </childnode>
      </node>
      <node id="7795">
        <label>FLAC/format.h</label>
      </node>
      <node id="7787">
        <label>stdint.h</label>
      </node>
      <node id="7798">
        <label>stdlib.h</label>
      </node>
      <node id="7777">
        <label>FLAC/assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="7784">
        <label>alloca.h</label>
      </node>
      <node id="7776">
        <label>FLAC/metadata.h</label>
      </node>
      <node id="7793">
        <label>grabbag/replaygain.h</label>
        <link refid="include_2share_2grabbag_2replaygain_8h"/>
        <childnode refid="7776" relation="include">
        </childnode>
      </node>
      <node id="7792">
        <label>grabbag/picture.h</label>
        <link refid="picture_8h"/>
        <childnode refid="7776" relation="include">
        </childnode>
      </node>
      <node id="7783">
        <label>MacTypes.h</label>
      </node>
      <node id="7785">
        <label>string.h</label>
      </node>
      <node id="7790">
        <label>utime.h</label>
      </node>
      <node id="7781">
        <label>grabbag/file.h</label>
        <link refid="libflac_2include_2share_2grabbag_2file_8h"/>
        <childnode refid="7782" relation="include">
        </childnode>
        <childnode refid="7780" relation="include">
        </childnode>
        <childnode refid="7786" relation="include">
        </childnode>
        <childnode refid="7788" relation="include">
        </childnode>
      </node>
      <node id="7789">
        <label>unistd.h</label>
      </node>
      <node id="7774">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/flac/vorbiscomment.c</label>
        <link refid="vorbiscomment.c"/>
        <childnode refid="7775" relation="include">
        </childnode>
        <childnode refid="7777" relation="include">
        </childnode>
        <childnode refid="7776" relation="include">
        </childnode>
        <childnode refid="7778" relation="include">
        </childnode>
        <childnode refid="7796" relation="include">
        </childnode>
        <childnode refid="7797" relation="include">
        </childnode>
        <childnode refid="7780" relation="include">
        </childnode>
        <childnode refid="7798" relation="include">
        </childnode>
        <childnode refid="7785" relation="include">
        </childnode>
        <childnode refid="7788" relation="include">
        </childnode>
      </node>
      <node id="7794">
        <label>grabbag/seektable.h</label>
        <link refid="seektable_8h"/>
        <childnode refid="7795" relation="include">
        </childnode>
      </node>
      <node id="7775">
        <label>vorbiscomment.h</label>
        <link refid="vorbiscomment_8h"/>
        <childnode refid="7776" relation="include">
        </childnode>
      </node>
      <node id="7788">
        <label>share/compat.h</label>
        <link refid="libflac_2include_2share_2compat_8h"/>
        <childnode refid="7789" relation="include">
        </childnode>
        <childnode refid="7782" relation="include">
        </childnode>
        <childnode refid="7790" relation="include">
        </childnode>
        <childnode refid="7791" relation="include">
        </childnode>
      </node>
      <node id="7797">
        <label>ctype.h</label>
      </node>
      <node id="7779">
        <label>grabbag/cuesheet.h</label>
        <link refid="cuesheet_8h"/>
        <childnode refid="7780" relation="include">
        </childnode>
        <childnode refid="7776" relation="include">
        </childnode>
      </node>
      <node id="7778">
        <label>share/grabbag.h</label>
        <link refid="grabbag_8h"/>
        <childnode refid="7779" relation="include">
        </childnode>
        <childnode refid="7781" relation="include">
        </childnode>
        <childnode refid="7792" relation="include">
        </childnode>
        <childnode refid="7793" relation="include">
        </childnode>
        <childnode refid="7794" relation="include">
        </childnode>
      </node>
      <node id="7780">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_argument___vc_field" prot="public">Argument_VcField</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="vorbiscomment_8c_1a4b39012bfa706ba04be9812750cd9f18" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void die</definition>
        <argsstring>(const char *message)</argsstring>
        <name>die</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/flac/vorbiscomment.c" line="50" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/flac/vorbiscomment.c" bodystart="50" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="vorbiscomment_8c_1a08cae7e12a6d1b60ca45a8ec03043a1b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* local_strdup</definition>
        <argsstring>(const char *source)</argsstring>
        <name>local_strdup</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/flac/vorbiscomment.c" line="57" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/flac/vorbiscomment.c" bodystart="57" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="vorbiscomment_8c_1ab32e08cd8232dda3ca837ec485088e9a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>static FLAC__bool parse_vorbis_comment_field</definition>
        <argsstring>(const char *field_ref, char **field, char **name, char **value, unsigned *length, const char **violation)</argsstring>
        <name>parse_vorbis_comment_field</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>field_ref</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>field</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>name</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned *</type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char **</type>
          <declname>violation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/flac/vorbiscomment.c" line="66" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/flac/vorbiscomment.c" bodystart="66" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="vorbiscomment_8c_1aaabc780cdce7ea1da3e5c0a253e79dcb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>static FLAC__bool set_vc_field</definition>
        <argsstring>(FLAC__StreamMetadata *block, const Argument_VcField *field, FLAC__bool *needs_write, FLAC__bool raw, const char **violation)</argsstring>
        <name>set_vc_field</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>block</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_argument___vc_field" kindref="compound">Argument_VcField</ref> *</type>
          <declname>field</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref> *</type>
          <declname>needs_write</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
          <declname>raw</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char **</type>
          <declname>violation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/flac/vorbiscomment.c" line="104" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/flac/vorbiscomment.c" bodystart="104" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="vorbiscomment_8c_1a5ff9bc6e7dd14f4387b3394ac422a589" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void free_field</definition>
        <argsstring>(Argument_VcField *obj)</argsstring>
        <name>free_field</name>
        <param>
          <type><ref refid="struct_argument___vc_field" kindref="compound">Argument_VcField</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/flac/vorbiscomment.c" line="219" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/flac/vorbiscomment.c" bodystart="219" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="vorbiscomment_8c_1a4f9102739c9ba4daaa75c2310d7921c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool flac__vorbiscomment_add</definition>
        <argsstring>(FLAC__StreamMetadata *block, const char *comment, FLAC__bool value_from_file, FLAC__bool raw, const char **violation)</argsstring>
        <name>flac__vorbiscomment_add</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>block</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>comment</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
          <declname>value_from_file</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
          <declname>raw</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char **</type>
          <declname>violation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/flac/vorbiscomment.c" line="229" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/flac/vorbiscomment.c" bodystart="229" bodyend="254"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>flac<sp/>-<sp/>Command-line<sp/>FLAC<sp/>encoder/decoder</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2002-2009<sp/><sp/>Josh<sp/>Coalson</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2011-2014<sp/><sp/>Xiph.Org<sp/>Foundation</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>along</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110-1301<sp/>USA.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vorbiscomment_8h" kindref="compound">vorbiscomment.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="assert_8h" kindref="compound">FLAC/assert.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;FLAC/metadata.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="grabbag_8h" kindref="compound">share/grabbag.h</ref>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>grabbag__file_get_filesize()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libflac_2include_2share_2utf8_8h" kindref="compound">share/utf8.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libflac_2include_2share_2compat_8h" kindref="compound">share/compat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>This<sp/>struct<sp/>and<sp/>the<sp/>following<sp/>4<sp/>static<sp/>functions<sp/>are<sp/>copied<sp/>from</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>../metaflac/.<sp/><sp/>Maybe<sp/>someday<sp/>there<sp/>will<sp/>be<sp/>a<sp/>convenience</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>library<sp/>for<sp/>Vorbis<sp/>comment<sp/>parsing.</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="struct_argument___vc_field" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="42" refid="struct_argument___vc_field_1a8bc4ee95a1193044d5caa23ffba77cb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_argument___vc_field_1a8bc4ee95a1193044d5caa23ffba77cb2" kindref="member">field</ref>;<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>whole<sp/>field<sp/>as<sp/>passed<sp/>on<sp/>the<sp/>command<sp/>line,<sp/>i.e.<sp/>&quot;NAME=VALUE&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="struct_argument___vc_field_1a7675074874926164d81fde4b17932172" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_argument___vc_field_1a7675074874926164d81fde4b17932172" kindref="member">field_name</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>according<sp/>to<sp/>the<sp/>vorbis<sp/>spec,<sp/>field<sp/>values<sp/>can<sp/>contain<sp/>\0<sp/>so<sp/>simple<sp/>C<sp/>strings<sp/>are<sp/>not<sp/>enough<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="struct_argument___vc_field_1ad062c64c6b87e6dabe6994184d11e69c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_argument___vc_field_1ad062c64c6b87e6dabe6994184d11e69c" kindref="member">field_value_length</ref>;</highlight></codeline>
<codeline lineno="46" refid="struct_argument___vc_field_1ace3aa786762da18fc086b6a877273d23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_argument___vc_field_1ace3aa786762da18fc086b6a877273d23" kindref="member">field_value</ref>;</highlight></codeline>
<codeline lineno="47" refid="struct_argument___vc_field_1a7dc1db175ddf4ebd8ef6560b00285842" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="struct_argument___vc_field_1a7dc1db175ddf4ebd8ef6560b00285842" kindref="member">field_value_from_file</ref>;<sp/></highlight><highlight class="comment">/*<sp/>true<sp/>if<sp/>field_value<sp/>holds<sp/>a<sp/>filename<sp/>for<sp/>the<sp/>value,<sp/>false<sp/>for<sp/>plain<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">}<sp/><ref refid="struct_argument___vc_field" kindref="compound">Argument_VcField</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>die(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>message);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>message);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*local_strdup(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacewaflib_1_1_task_gen_1a34bb2baa863bf0c5ab4742e22e6bc556" kindref="member">source</ref>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ret;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>source);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>(ret<sp/>=<sp/><ref refid="strdup_8c_1a8c67487a889774f479e3dc226b4f27df" kindref="member">strdup</ref>(source)))</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>die(</highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>memory<sp/>during<sp/>strdup()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_vorbis_comment_field(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*field_ref,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**field,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>*<ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**violation)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>violations[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;field<sp/>name<sp/>contains<sp/>invalid<sp/>character&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;field<sp/>contains<sp/>no<sp/>&apos;=&apos;<sp/>character&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/>*<ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>,<sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>field)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*field<sp/>=<sp/>local_strdup(field_ref);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>local_strdup(field_ref);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>(p<sp/>=<sp/>strchr(s,<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(s);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*violation<sp/>=<sp/>violations[1];</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(q<sp/>=<sp/>s;<sp/>*<ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>;<sp/>q++)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*q<sp/>&lt;<sp/>0x20<sp/>||<sp/>*q<sp/>&gt;<sp/>0x7d<sp/>||<sp/>*q<sp/>==<sp/>0x3d)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(s);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*violation<sp/>=<sp/>violations[0];</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref><sp/>=<sp/>local_strdup(s);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>local_strdup(p);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref><sp/>=<sp/>strlen(p);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>free(s);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>slight<sp/>modification:<sp/>no<sp/>&apos;filename&apos;<sp/>arg,<sp/>and<sp/>errors<sp/>are<sp/>passed<sp/>back<sp/>in<sp/>&apos;violation&apos;<sp/>instead<sp/>of<sp/>printed<sp/>to<sp/>stderr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>set_vc_field(<ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref><sp/>*<ref refid="structblock" kindref="compound">block</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_argument___vc_field" kindref="compound">Argument_VcField</ref><sp/>*field,<sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>*needs_write,<sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>raw,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**violation)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_l_a_c_____stream_metadata___vorbis_comment___entry" kindref="compound">FLAC__StreamMetadata_VorbisComment_Entry</ref><sp/>entry;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*converted;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>block);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(block-&gt;<ref refid="struct_f_l_a_c_____stream_metadata_1a39fd0655464f2cc7c9c37ae715088aec" kindref="member">type</ref><sp/>==<sp/><ref refid="group__flac__format_1ggac71714ba8ddbbd66d26bb78a427fac01ad013576bc5196b907547739518605520" kindref="member">FLAC__METADATA_TYPE_VORBIS_COMMENT</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>field);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>needs_write);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(field-&gt;<ref refid="struct_argument___vc_field_1a7dc1db175ddf4ebd8ef6560b00285842" kindref="member">field_value_from_file</ref>)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>file<sp/>into<sp/>&apos;data&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="libflac_2include_2share_2compat_8h_1a125fb0105eee035da35c6a4999d140eb" kindref="member">FLAC__off_t</ref><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>=<sp/><ref refid="libflac_2include_2share_2grabbag_2file_8h_1ad24fe88956c8bcbc805c23ab27d74f46" kindref="member">grabbag__file_get_filesize</ref>(field-&gt;<ref refid="struct_argument___vc_field_1ace3aa786762da18fc086b6a877273d23" kindref="member">field_value</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*violation<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>open<sp/>file<sp/>for<sp/>tag<sp/>value&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>&gt;=<sp/>0x100000)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>magic<sp/>arbitrary<sp/>limit,<sp/>actual<sp/>format<sp/>limit<sp/>is<sp/>near<sp/>16MB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*violation<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;file<sp/>for<sp/>tag<sp/>value<sp/>is<sp/>too<sp/>large&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>(data<sp/>=<sp/>malloc(size+1)))</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>die(</highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>memory<sp/>allocating<sp/>tag<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[<ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>(f<sp/>=<sp/><ref refid="libflac_2include_2share_2compat_8h_1ae07c699856df63caabff61611d79f34d" kindref="member">flac_fopen</ref>(field-&gt;<ref refid="struct_argument___vc_field_1ace3aa786762da18fc086b6a877273d23" kindref="member">field_value</ref>,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">))<sp/>||<sp/>fread(data,<sp/>1,<sp/>size,<sp/>f)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)size)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(data);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(f)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(f);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*violation<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>while<sp/>reading<sp/>file<sp/>for<sp/>tag<sp/>value&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(f);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strlen(data)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)size)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(data);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*violation<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;file<sp/>for<sp/>tag<sp/>value<sp/>has<sp/>embedded<sp/>NULs&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>&apos;data&apos;<sp/>into<sp/>&apos;converted&apos;,<sp/>converting<sp/>to<sp/>UTF-8<sp/>if<sp/>necessary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(raw)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>converted<sp/>=<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="libflac_2include_2share_2utf8_8h_1ab2464e36f2ffafccaec3cd28370c299a" kindref="member">utf8_encode</ref>(data,<sp/>&amp;converted)<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(data);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(data);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*violation<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>converting<sp/>file<sp/>contents<sp/>to<sp/>UTF-8<sp/>for<sp/>tag<sp/>value&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>and<sp/>entry<sp/>and<sp/>append<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="group__flac__metadata__object_1ga0ec0c7ddd3a8832ee7a75bf47956b1c7" kindref="member">FLAC__metadata_object_vorbiscomment_entry_from_name_value_pair</ref>(&amp;entry,<sp/>field-&gt;<ref refid="struct_argument___vc_field_1a7675074874926164d81fde4b17932172" kindref="member">field_name</ref>,<sp/>converted))<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(converted);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*violation<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;file<sp/>for<sp/>tag<sp/>value<sp/>is<sp/>not<sp/>valid<sp/>UTF-8&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(converted);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="group__flac__metadata__object_1gad04ef80ae5f852db8f3729a6ef8c1631" kindref="member">FLAC__metadata_object_vorbiscomment_append_comment</ref>(block,<sp/>entry,<sp/></highlight><highlight class="comment">/*copy=*/</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*violation<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;memory<sp/>allocation<sp/>failure&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*needs_write<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>needs_free<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32<sp/></highlight><highlight class="comment">/*<sp/>everything<sp/>in<sp/>UTF-8<sp/>already.<sp/>Must<sp/>not<sp/>alter<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry.<ref refid="struct_f_l_a_c_____stream_metadata___vorbis_comment___entry_1a78944f78822b92e7a4e5f15f118f6132" kindref="member">entry</ref><sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref><sp/>*)field-&gt;<ref refid="struct_argument___vc_field_1a8bc4ee95a1193044d5caa23ffba77cb2" kindref="member">field</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(raw)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry.<ref refid="struct_f_l_a_c_____stream_metadata___vorbis_comment___entry_1a78944f78822b92e7a4e5f15f118f6132" kindref="member">entry</ref><sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref><sp/>*)field-&gt;<ref refid="struct_argument___vc_field_1a8bc4ee95a1193044d5caa23ffba77cb2" kindref="member">field</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="libflac_2include_2share_2utf8_8h_1ab2464e36f2ffafccaec3cd28370c299a" kindref="member">utf8_encode</ref>(field-&gt;<ref refid="struct_argument___vc_field_1a8bc4ee95a1193044d5caa23ffba77cb2" kindref="member">field</ref>,<sp/>&amp;converted)<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry.<ref refid="struct_f_l_a_c_____stream_metadata___vorbis_comment___entry_1a78944f78822b92e7a4e5f15f118f6132" kindref="member">entry</ref><sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref><sp/>*)converted;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>needs_free<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*violation<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>converting<sp/>comment<sp/>to<sp/>UTF-8&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry.<ref refid="struct_f_l_a_c_____stream_metadata___vorbis_comment___entry_1aa375f16819aaa4f7e08d8009167cb19e" kindref="member">length</ref><sp/>=<sp/>strlen((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)entry.<ref refid="struct_f_l_a_c_____stream_metadata___vorbis_comment___entry_1a78944f78822b92e7a4e5f15f118f6132" kindref="member">entry</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="group__flac__format_1ga6878e238052fc0f7109b55129d64b4e5" kindref="member">FLAC__format_vorbiscomment_entry_is_legal</ref>(entry.<ref refid="struct_f_l_a_c_____stream_metadata___vorbis_comment___entry_1a78944f78822b92e7a4e5f15f118f6132" kindref="member">entry</ref>,<sp/>entry.<ref refid="struct_f_l_a_c_____stream_metadata___vorbis_comment___entry_1aa375f16819aaa4f7e08d8009167cb19e" kindref="member">length</ref>))<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(needs_free)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(converted);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>our<sp/>previous<sp/>parsing<sp/>has<sp/>already<sp/>established<sp/>that<sp/>the<sp/>field</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>name<sp/>is<sp/>OK,<sp/>so<sp/>it<sp/>must<sp/>be<sp/>the<sp/>field<sp/>value</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*violation<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;tag<sp/>value<sp/>for<sp/>is<sp/>not<sp/>valid<sp/>UTF-8&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="group__flac__metadata__object_1gad04ef80ae5f852db8f3729a6ef8c1631" kindref="member">FLAC__metadata_object_vorbiscomment_append_comment</ref>(block,<sp/>entry,<sp/></highlight><highlight class="comment">/*copy=*/</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(needs_free)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(converted);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*violation<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;memory<sp/>allocation<sp/>failure&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*needs_write<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(needs_free)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(converted);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*<sp/>The<sp/>rest<sp/>of<sp/>the<sp/>code<sp/>is<sp/>novel</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_field(<ref refid="struct_argument___vc_field" kindref="compound">Argument_VcField</ref><sp/>*obj)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>obj-&gt;<ref refid="struct_argument___vc_field_1a8bc4ee95a1193044d5caa23ffba77cb2" kindref="member">field</ref>)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(obj-&gt;<ref refid="struct_argument___vc_field_1a8bc4ee95a1193044d5caa23ffba77cb2" kindref="member">field</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>obj-&gt;<ref refid="struct_argument___vc_field_1a7675074874926164d81fde4b17932172" kindref="member">field_name</ref>)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(obj-&gt;<ref refid="struct_argument___vc_field_1a7675074874926164d81fde4b17932172" kindref="member">field_name</ref>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>obj-&gt;<ref refid="struct_argument___vc_field_1ace3aa786762da18fc086b6a877273d23" kindref="member">field_value</ref>)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(obj-&gt;<ref refid="struct_argument___vc_field_1ace3aa786762da18fc086b6a877273d23" kindref="member">field_value</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="vorbiscomment_8h_1a4f9102739c9ba4daaa75c2310d7921c9" refkind="member"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="vorbiscomment_8c_1a4f9102739c9ba4daaa75c2310d7921c9" kindref="member">flac__vorbiscomment_add</ref>(<ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref><sp/>*block,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*comment,<sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>value_from_file,<sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>raw,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**violation)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_argument___vc_field" kindref="compound">Argument_VcField</ref><sp/>parsed;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="database_8c_1a4497856461b72aa327a367542f73bff3" kindref="member">dummy</ref>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>block);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(block-&gt;<ref refid="struct_f_l_a_c_____stream_metadata_1a39fd0655464f2cc7c9c37ae715088aec" kindref="member">type</ref><sp/>==<sp/><ref refid="group__flac__format_1ggac71714ba8ddbbd66d26bb78a427fac01ad013576bc5196b907547739518605520" kindref="member">FLAC__METADATA_TYPE_VORBIS_COMMENT</ref>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>comment);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;parsed,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(parsed));</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>parsed.<ref refid="struct_argument___vc_field_1a7dc1db175ddf4ebd8ef6560b00285842" kindref="member">field_value_from_file</ref><sp/>=<sp/>value_from_file;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_vorbis_comment_field(comment,<sp/>&amp;(parsed.<ref refid="struct_argument___vc_field_1a8bc4ee95a1193044d5caa23ffba77cb2" kindref="member">field</ref>),<sp/>&amp;(parsed.<ref refid="struct_argument___vc_field_1a7675074874926164d81fde4b17932172" kindref="member">field_name</ref>),<sp/>&amp;(parsed.<ref refid="struct_argument___vc_field_1ace3aa786762da18fc086b6a877273d23" kindref="member">field_value</ref>),<sp/>&amp;(parsed.<ref refid="struct_argument___vc_field_1ad062c64c6b87e6dabe6994184d11e69c" kindref="member">field_value_length</ref>),<sp/>violation))<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_field(&amp;parsed);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(parsed.<ref refid="struct_argument___vc_field_1ad062c64c6b87e6dabe6994184d11e69c" kindref="member">field_value_length</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>!set_vc_field(block,<sp/>&amp;parsed,<sp/>&amp;dummy,<sp/>raw,<sp/>violation))<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_field(&amp;parsed);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_field(&amp;parsed);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/flac/vorbiscomment.c"/>
  </compounddef>
</doxygen>
