<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="stkinit_8cpp" kind="file" language="C++">
    <compoundname>stkinit.cpp</compoundname>
    <includes local="yes">stdlib.h</includes>
    <includes local="yes">string.h</includes>
    <includes refid="_stk_8h" local="yes">Stk.h</includes>
    <includes refid="stkinit_8h" local="yes">stkinit.h</includes>
    <includes refid="xlisp_8h" local="yes">xlisp.h</includes>
    <incdepgraph>
      <node id="15518">
        <label>stdlib.h</label>
      </node>
      <node id="15528">
        <label>setjmp.h</label>
      </node>
      <node id="15521">
        <label>string</label>
      </node>
      <node id="15525">
        <label>xlisp.h</label>
        <link refid="xlisp_8h"/>
        <childnode refid="15518" relation="include">
        </childnode>
        <childnode refid="15526" relation="include">
        </childnode>
        <childnode refid="15527" relation="include">
        </childnode>
        <childnode refid="15528" relation="include">
        </childnode>
        <childnode refid="15529" relation="include">
        </childnode>
      </node>
      <node id="15519">
        <label>string.h</label>
      </node>
      <node id="15524">
        <label>stkinit.h</label>
        <link refid="stkinit_8h"/>
      </node>
      <node id="15523">
        <label>sstream</label>
      </node>
      <node id="15517">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/stkinit.cpp</label>
        <link refid="stkinit.cpp"/>
        <childnode refid="15518" relation="include">
        </childnode>
        <childnode refid="15519" relation="include">
        </childnode>
        <childnode refid="15520" relation="include">
        </childnode>
        <childnode refid="15524" relation="include">
        </childnode>
        <childnode refid="15525" relation="include">
        </childnode>
      </node>
      <node id="15520">
        <label>Stk.h</label>
        <link refid="_stk_8h"/>
        <childnode refid="15521" relation="include">
        </childnode>
        <childnode refid="15522" relation="include">
        </childnode>
        <childnode refid="15523" relation="include">
        </childnode>
      </node>
      <node id="15522">
        <label>iostream</label>
      </node>
      <node id="15529">
        <label>xldmem.h</label>
        <link refid="xldmem_8h"/>
      </node>
      <node id="15527">
        <label>ctype.h</label>
      </node>
      <node id="15526">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="stkinit_8cpp_1a3242cfe25ed24c494d96097b48a85c2b" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* rawwave_path</definition>
        <argsstring></argsstring>
        <name>rawwave_path</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/stkinit.cpp" line="21" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/stkinit.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="stkinit_8cpp_1aaa55f4a3996fcebcd6fe703041b66592" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void stk_init</definition>
        <argsstring>()</argsstring>
        <name>stk_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/stkinit.cpp" line="23" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/stkinit.cpp" bodystart="23" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>stk<sp/>path<sp/>initialization<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;string.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;instr.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_stk_8h" kindref="compound">Stk.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stkinit_8h" kindref="compound">stkinit.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xlisp_8h" kindref="compound">xlisp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_nyq" kindref="compound">Nyq</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="stkinit_8cpp_1a3242cfe25ed24c494d96097b48a85c2b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="stkinit_8cpp_1a3242cfe25ed24c494d96097b48a85c2b" kindref="member">rawwave_path</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="stkinit_8h_1aaa55f4a3996fcebcd6fe703041b66592" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stkinit_8cpp_1aaa55f4a3996fcebcd6fe703041b66592" kindref="member">stk_init</ref>()</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wherever<sp/>the<sp/>sinewave.raw<sp/>file<sp/>is,<sp/>that<sp/>will<sp/>become<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>rawwave_path<sp/>for<sp/>STK<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>[32];</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a11280e8971e1a91d58ccd7a36db51a8a" kindref="member">strcpy</ref>(filename,<sp/></highlight><highlight class="stringliteral">&quot;rawwaves&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>filename[8]<sp/>=<sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1abccff5e5af8e3d238e3ef906ecfe547e" kindref="member">os_pathchar</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>filename[9]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>strcat(filename,<sp/></highlight><highlight class="stringliteral">&quot;sinewave.raw&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>find_in_xlisp_path<sp/>returns<sp/>const<sp/>char<sp/>*,<sp/>but<sp/>we&apos;re<sp/>going<sp/>to</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>alter<sp/>it<sp/>to<sp/>get<sp/>just<sp/>the<sp/>path,<sp/>so<sp/>we<sp/>have<sp/>to<sp/>coerce<sp/>out<sp/>the</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>const<sp/>attribute</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="path_8c_1a930222fc55ff66fdf8b69f65ec762e44" kindref="member">find_in_xlisp_path</ref>(filename);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!path)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a6b1f25f19d584cce958a129b65cac4e2" kindref="member">errputstr</ref>(</highlight><highlight class="stringliteral">&quot;\nERROR:<sp/>Could<sp/>not<sp/>find<sp/>sinewave.raw<sp/>in<sp/>rawwaves.<sp/>Something<sp/>is<sp/>wrong<sp/>with<sp/>the<sp/>installation<sp/>or<sp/>configuration.\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stkinit_8cpp_1a3242cfe25ed24c494d96097b48a85c2b" kindref="member">rawwave_path</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>sinewave.raw<sp/>to<sp/>get<sp/>just<sp/>the<sp/>path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>path[strlen(path)<sp/>-<sp/>12]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stkinit_8cpp_1a3242cfe25ed24c494d96097b48a85c2b" kindref="member">rawwave_path</ref><sp/>=<sp/><ref refid="hashrout_8h_1a11280e8971e1a91d58ccd7a36db51a8a" kindref="member">strcpy</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>malloc(strlen(path)<sp/>+<sp/>1),<sp/>path);<sp/></highlight><highlight class="comment">/*<sp/>keep<sp/>a<sp/>copy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>note:<sp/>rawwave_path<sp/>is<sp/>allocated<sp/>but<sp/>never<sp/>freed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1aedb8a47be994bff926bd6caea4ff23ca" kindref="member">Stk::setRawwavePath</ref>(path);<sp/></highlight><highlight class="comment">//<sp/>PJM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/stkinit.cpp"/>
  </compounddef>
</doxygen>
