<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="src_2common_8c" kind="file" language="C++">
    <compoundname>common.c</compoundname>
    <includes local="no">config.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">time.h</includes>
    <includes local="yes">sndfile.h</includes>
    <includes refid="sfendian_8h" local="yes">sfendian.h</includes>
    <includes refid="libsndfile_2src_2common_8h" local="yes">common.h</includes>
    <incdepgraph>
      <node id="19303">
        <label>stdarg.h</label>
      </node>
      <node id="19309">
        <label>sfendian.h</label>
        <link refid="sfendian_8h"/>
        <childnode refid="19310" relation="include">
        </childnode>
      </node>
      <node id="19312">
        <label>stdlib.h</label>
      </node>
      <node id="19308">
        <label>sndfile.h</label>
      </node>
      <node id="19304">
        <label>string.h</label>
      </node>
      <node id="19310">
        <label>sfconfig.h</label>
        <link refid="sfconfig_8h"/>
        <childnode refid="19302" relation="include">
        </childnode>
      </node>
      <node id="19301">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c</label>
        <link refid="src/common.c"/>
        <childnode refid="19302" relation="include">
        </childnode>
        <childnode refid="19303" relation="include">
        </childnode>
        <childnode refid="19304" relation="include">
        </childnode>
        <childnode refid="19305" relation="include">
        </childnode>
        <childnode refid="19306" relation="include">
        </childnode>
        <childnode refid="19307" relation="include">
        </childnode>
        <childnode refid="19308" relation="include">
        </childnode>
        <childnode refid="19309" relation="include">
        </childnode>
        <childnode refid="19311" relation="include">
        </childnode>
      </node>
      <node id="19311">
        <label>common.h</label>
        <link refid="libsndfile_2src_2common_8h"/>
        <childnode refid="19310" relation="include">
        </childnode>
        <childnode refid="19312" relation="include">
        </childnode>
        <childnode refid="19304" relation="include">
        </childnode>
        <childnode refid="19308" relation="include">
        </childnode>
      </node>
      <node id="19307">
        <label>time.h</label>
      </node>
      <node id="19306">
        <label>math.h</label>
      </node>
      <node id="19305">
        <label>ctype.h</label>
      </node>
      <node id="19302">
        <label>config.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="src_2common_8c_1ac3f4810466aa0691ac67077cbe861c41" prot="public" static="no">
        <name>GET_LE_SHORT</name>
        <param><defname>ptr</defname></param>
        <initializer>( ((ptr) [1] &lt;&lt; 8) | ((ptr) [0]) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="771" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="771" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="src_2common_8c_1a79a64a448cf27e69143497546d135800" prot="public" static="no">
        <name>GET_BE_SHORT</name>
        <param><defname>ptr</defname></param>
        <initializer>( ((ptr) [0] &lt;&lt; 8) | ((ptr) [1]) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="772" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="772" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="src_2common_8c_1ad33a6c046a8b8012a8e11369be97e3ec" prot="public" static="no">
        <name>GET_LE_3BYTE</name>
        <param><defname>ptr</defname></param>
        <initializer>( 	((ptr) [2] &lt;&lt; 16) | ((ptr) [1] &lt;&lt; 8) | ((ptr) [0]) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="774" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="774" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="src_2common_8c_1a0cb0e762b9db8660a24adfeec11095cb" prot="public" static="no">
        <name>GET_BE_3BYTE</name>
        <param><defname>ptr</defname></param>
        <initializer>( 	((ptr) [0] &lt;&lt; 16) | ((ptr) [1] &lt;&lt; 8) | ((ptr) [2]) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="775" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="775" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="src_2common_8c_1a3d41e24ff6a336b8a7303f82c2747b3e" prot="public" static="no">
        <name>GET_LE_INT</name>
        <param><defname>ptr</defname></param>
        <initializer>( 	((ptr) [3] &lt;&lt; 24)	| ((ptr) [2] &lt;&lt; 16) |	\
								((ptr) [1] &lt;&lt; 8)	| ((ptr) [0]) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="777" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="777" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="src_2common_8c_1a0f5eba339cfe248a450e570145dafdd5" prot="public" static="no">
        <name>GET_BE_INT</name>
        <param><defname>ptr</defname></param>
        <initializer>( 	((ptr) [0] &lt;&lt; 24)	| ((ptr) [1] &lt;&lt; 16) |	\
							 	((ptr) [2] &lt;&lt; 8)	| ((ptr) [3]) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="780" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="780" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="src_2common_8c_1af0c7b40c1dfac003acf14a52006e878d" prot="public" static="no">
        <name>GET_LE_8BYTE</name>
        <param><defname>ptr</defname></param>
        <initializer>( 	(((<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref>) (ptr) [7]) &lt;&lt; 56) | (((<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref>) (ptr) [6]) &lt;&lt; 48) |	\
							 	(((<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref>) (ptr) [5]) &lt;&lt; 40) | (((<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref>) (ptr) [4]) &lt;&lt; 32) |	\
							 	(((<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref>) (ptr) [3]) &lt;&lt; 24) | (((<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref>) (ptr) [2]) &lt;&lt; 16) |	\
							 	(((<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref>) (ptr) [1]) &lt;&lt; 8 ) | ((ptr) [0]))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="783" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="783" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="src_2common_8c_1ae4779179b187e99ecfc750fb05575fec" prot="public" static="no">
        <name>GET_BE_8BYTE</name>
        <param><defname>ptr</defname></param>
        <initializer>( 	(((<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref>) (ptr) [0]) &lt;&lt; 56) | (((<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref>) (ptr) [1]) &lt;&lt; 48) |	\
							 	(((<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref>) (ptr) [2]) &lt;&lt; 40) | (((<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref>) (ptr) [3]) &lt;&lt; 32) |	\
							 	(((<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref>) (ptr) [4]) &lt;&lt; 24) | (((<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref>) (ptr) [5]) &lt;&lt; 16) |	\
							 	(((<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref>) (ptr) [6]) &lt;&lt; 8 ) | ((ptr) [7]))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="788" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="788" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" prot="public" static="no">
        <name>CASE_NAME</name>
        <param><defname>x</defname></param>
        <initializer>case x : <ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref> #x ; break ;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="1373" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="1373" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="src_2common_8c_1a4dcef00a66e1e0895e573f06047f4984" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void log_putchar</definition>
        <argsstring>(SF_PRIVATE *psf, char ch)</argsstring>
        <name>log_putchar</name>
        <param>
          <type><ref refid="libsndfile_2src_2common_8h_1ab5debd339ecaf40f50a223e218900c24" kindref="member">SF_PRIVATE</ref> *</type>
          <declname>psf</declname>
        </param>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="44" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="44" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1a79339bae8c0e3af5468b507d261922a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void psf_log_printf</definition>
        <argsstring>(SF_PRIVATE *psf, const char *format,...)</argsstring>
        <name>psf_log_printf</name>
        <param>
          <type><ref refid="libsndfile_2src_2common_8h_1ab5debd339ecaf40f50a223e218900c24" kindref="member">SF_PRIVATE</ref> *</type>
          <declname>psf</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="53" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="53" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1a9dfb518cc7e979847df3c6efd9cab626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void psf_asciiheader_printf</definition>
        <argsstring>(SF_PRIVATE *psf, const char *format,...)</argsstring>
        <name>psf_asciiheader_printf</name>
        <param>
          <type><ref refid="libsndfile_2src_2common_8h_1ab5debd339ecaf40f50a223e218900c24" kindref="member">SF_PRIVATE</ref> *</type>
          <declname>psf</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="331" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="331" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1a0aceff6a4982beae3165fdfbe7188e2f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void header_put_byte</definition>
        <argsstring>(SF_PRIVATE *psf, char x)</argsstring>
        <name>header_put_byte</name>
        <param>
          <type><ref refid="libsndfile_2src_2common_8h_1ab5debd339ecaf40f50a223e218900c24" kindref="member">SF_PRIVATE</ref> *</type>
          <declname>psf</declname>
        </param>
        <param>
          <type>char</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="397" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="397" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1a7ff02c44388c66d1ddd0ea284b2cdade" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void header_put_be_short</definition>
        <argsstring>(SF_PRIVATE *psf, int x)</argsstring>
        <name>header_put_be_short</name>
        <param>
          <type><ref refid="libsndfile_2src_2common_8h_1ab5debd339ecaf40f50a223e218900c24" kindref="member">SF_PRIVATE</ref> *</type>
          <declname>psf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="430" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="430" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1aa5ec16089283e6d2ec62da7fddf7b34d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void header_put_le_short</definition>
        <argsstring>(SF_PRIVATE *psf, int x)</argsstring>
        <name>header_put_le_short</name>
        <param>
          <type><ref refid="libsndfile_2src_2common_8h_1ab5debd339ecaf40f50a223e218900c24" kindref="member">SF_PRIVATE</ref> *</type>
          <declname>psf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="438" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="438" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1a558b2507fc38e49146020758636129de" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void header_put_be_3byte</definition>
        <argsstring>(SF_PRIVATE *psf, int x)</argsstring>
        <name>header_put_be_3byte</name>
        <param>
          <type><ref refid="libsndfile_2src_2common_8h_1ab5debd339ecaf40f50a223e218900c24" kindref="member">SF_PRIVATE</ref> *</type>
          <declname>psf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="446" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="446" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1a043fa5f3834ad2af1dfa6eb87170207f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void header_put_le_3byte</definition>
        <argsstring>(SF_PRIVATE *psf, int x)</argsstring>
        <name>header_put_le_3byte</name>
        <param>
          <type><ref refid="libsndfile_2src_2common_8h_1ab5debd339ecaf40f50a223e218900c24" kindref="member">SF_PRIVATE</ref> *</type>
          <declname>psf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="455" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="455" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1a04163e03e3c424472e11b6dfbfd1a48c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void header_put_be_int</definition>
        <argsstring>(SF_PRIVATE *psf, int x)</argsstring>
        <name>header_put_be_int</name>
        <param>
          <type><ref refid="libsndfile_2src_2common_8h_1ab5debd339ecaf40f50a223e218900c24" kindref="member">SF_PRIVATE</ref> *</type>
          <declname>psf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="464" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="464" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1a51485d6004e56efc0abf2f80b5d04460" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void header_put_le_int</definition>
        <argsstring>(SF_PRIVATE *psf, int x)</argsstring>
        <name>header_put_le_int</name>
        <param>
          <type><ref refid="libsndfile_2src_2common_8h_1ab5debd339ecaf40f50a223e218900c24" kindref="member">SF_PRIVATE</ref> *</type>
          <declname>psf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="474" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="474" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1af85d67adae7853e7b1fb48921e23acbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int psf_binheader_writef</definition>
        <argsstring>(SF_PRIVATE *psf, const char *format,...)</argsstring>
        <name>psf_binheader_writef</name>
        <param>
          <type><ref refid="libsndfile_2src_2common_8h_1ab5debd339ecaf40f50a223e218900c24" kindref="member">SF_PRIVATE</ref> *</type>
          <declname>psf</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="548" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="548" bodyend="746"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1ae97a601582ef3c0ac4ba7b36fb02a318" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int header_read</definition>
        <argsstring>(SF_PRIVATE *psf, void *ptr, int bytes)</argsstring>
        <name>header_read</name>
        <param>
          <type><ref refid="libsndfile_2src_2common_8h_1ab5debd339ecaf40f50a223e218900c24" kindref="member">SF_PRIVATE</ref> *</type>
          <declname>psf</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="796" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="796" bodyend="831"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1aa9bf61e3809503068d462d454540ca29" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void header_seek</definition>
        <argsstring>(SF_PRIVATE *psf, sf_count_t position, int whence)</argsstring>
        <name>header_seek</name>
        <param>
          <type><ref refid="libsndfile_2src_2common_8h_1ab5debd339ecaf40f50a223e218900c24" kindref="member">SF_PRIVATE</ref> *</type>
          <declname>psf</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>whence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="834" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="834" bodyend="881"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1a5b17257f993b0bc2b74e7c007583b329" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int header_gets</definition>
        <argsstring>(SF_PRIVATE *psf, char *ptr, int bufsize)</argsstring>
        <name>header_gets</name>
        <param>
          <type><ref refid="libsndfile_2src_2common_8h_1ab5debd339ecaf40f50a223e218900c24" kindref="member">SF_PRIVATE</ref> *</type>
          <declname>psf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bufsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="884" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="884" bodyend="906"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1a11addd311cf26a4d8a0e775520e1ab8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int psf_binheader_readf</definition>
        <argsstring>(SF_PRIVATE *psf, char const *format,...)</argsstring>
        <name>psf_binheader_readf</name>
        <param>
          <type><ref refid="libsndfile_2src_2common_8h_1ab5debd339ecaf40f50a223e218900c24" kindref="member">SF_PRIVATE</ref> *</type>
          <declname>psf</declname>
        </param>
        <param>
          <type>char <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="909" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="909" bodyend="1087"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1a751d3b15364d9836202f4675d1e3d3c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref></type>
        <definition>sf_count_t psf_default_seek</definition>
        <argsstring>(SF_PRIVATE *psf, int UNUSED(mode), sf_count_t samples_from_start)</argsstring>
        <name>psf_default_seek</name>
        <param>
          <type><ref refid="libsndfile_2src_2common_8h_1ab5debd339ecaf40f50a223e218900c24" kindref="member">SF_PRIVATE</ref> *</type>
          <declname>psf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> </type>
          <declname>UNUSED</declname>
          <array>mode</array>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref></type>
          <declname>samples_from_start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="1093" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="1093" bodyend="1114"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1a58ce198b2164ba0bc29019acbc6c7077" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void psf_hexdump</definition>
        <argsstring>(const void *ptr, int len)</argsstring>
        <name>psf_hexdump</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="1120" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="1120" bodyend="1148"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1a30966da96b1bd709203b9039d0442804" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void psf_log_SF_INFO</definition>
        <argsstring>(SF_PRIVATE *psf)</argsstring>
        <name>psf_log_SF_INFO</name>
        <param>
          <type><ref refid="libsndfile_2src_2common_8h_1ab5debd339ecaf40f50a223e218900c24" kindref="member">SF_PRIVATE</ref> *</type>
          <declname>psf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="1151" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="1151" bodyend="1163"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1aaa0d30794cfac07a1d2119a18946ac83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>void* psf_memset</definition>
        <argsstring>(void *s, int c, sf_count_t len)</argsstring>
        <name>psf_memset</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="1169" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="1169" bodyend="1185"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1a9ebb76e1e30f279ed75a7578d6c43373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_s_f___i_n_s_t_r_u_m_e_n_t" kindref="compound">SF_INSTRUMENT</ref> *</type>
        <definition>SF_INSTRUMENT* psf_instrument_alloc</definition>
        <argsstring>(void)</argsstring>
        <name>psf_instrument_alloc</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="1188" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="1188" bodyend="1204"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1a650529d3a68935b3c87fcd13d2e72482" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void psf_sanitize_string</definition>
        <argsstring>(char *cptr, int len)</argsstring>
        <name>psf_sanitize_string</name>
        <param>
          <type>char *</type>
          <declname>cptr</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="1207" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="1207" bodyend="1215"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1ad85c721fd5313fb7476603ff9067ff83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void psf_get_date_str</definition>
        <argsstring>(char *str, int maxlen)</argsstring>
        <name>psf_get_date_str</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>maxlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="1218" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="1218" bodyend="1243"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1a16f116a16797cd3bd6f3a36c6f9a10f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int subformat_to_bytewidth</definition>
        <argsstring>(int format)</argsstring>
        <name>subformat_to_bytewidth</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="1246" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="1246" bodyend="1264"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1ab22998bfb175ddb734b1886c86bae9a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int s_bitwidth_to_subformat</definition>
        <argsstring>(int bits)</argsstring>
        <name>s_bitwidth_to_subformat</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="1267" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="1267" bodyend="1276"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1ad9cf4e02a7d70404c052a624334b9641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int u_bitwidth_to_subformat</definition>
        <argsstring>(int bits)</argsstring>
        <name>u_bitwidth_to_subformat</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="1279" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="1279" bodyend="1288"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1abd8efa2c77686423ad6247ecec07ced2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref></type>
        <definition>int32_t psf_rand_int32</definition>
        <argsstring>(void)</argsstring>
        <name>psf_rand_int32</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="1297" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="1297" bodyend="1317"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1aba9566072b652d0ebbb2049b9f5bdce9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void append_snprintf</definition>
        <argsstring>(char *dest, size_t maxlen, const char *fmt,...)</argsstring>
        <name>append_snprintf</name>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxlen</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="1320" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="1320" bodyend="1332"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1aaad7ead665f4f2134afd1bcec721b0af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void psf_strlcpy_crlf</definition>
        <argsstring>(char *dest, const char *src, size_t destmax, size_t srcmax)</argsstring>
        <name>psf_strlcpy_crlf</name>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>destmax</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>srcmax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="1336" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="1336" bodyend="1368"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1abbab3767e8b9e7aacf6dd5bd104b05c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* str_of_major_format</definition>
        <argsstring>(int format)</argsstring>
        <name>str_of_major_format</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="1376" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="1376" bodyend="1406"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1a77f1913d5f203becc03d64b47059fb3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* str_of_minor_format</definition>
        <argsstring>(int format)</argsstring>
        <name>str_of_minor_format</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="1409" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="1409" bodyend="1439"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1ae115c97ccc00a177c0dffc84ac817de7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* str_of_open_mode</definition>
        <argsstring>(int mode)</argsstring>
        <name>str_of_open_mode</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="1442" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="1442" bodyend="1453"/>
      </memberdef>
      <memberdef kind="function" id="src_2common_8c_1a2974f1111c9b38438327185ebd27b06d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* str_of_endianness</definition>
        <argsstring>(int end)</argsstring>
        <name>str_of_endianness</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" line="1456" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c" bodystart="1456" bodyend="1467"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>Copyright<sp/>(C)<sp/>1999-2011<sp/>Erik<sp/>de<sp/>Castro<sp/>Lopo<sp/>&lt;erikd@mega-nerd.com&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment">**<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SYS_TIME_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&lt;<ref refid="win_2_projects_2libsndfile_2sys_2time_8h" kindref="compound">sys/time.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&quot;sndfile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&quot;<ref refid="sfendian_8h" kindref="compound">sfendian.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&quot;<ref refid="libsndfile_2src_2common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="35"><highlight class="comment">**<sp/>psf_log_printf<sp/>allows<sp/>libsndfile<sp/>internal<sp/>functions<sp/>to<sp/>print<sp/>to<sp/>an<sp/>internal<sp/>logbuffer<sp/>which</highlight></codeline>
<codeline lineno="36"><highlight class="comment">**<sp/>can<sp/>later<sp/>be<sp/>displayed.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">**<sp/>The<sp/>format<sp/>specifiers<sp/>are<sp/>as<sp/>for<sp/>printf<sp/>but<sp/>without<sp/>the<sp/>field<sp/>width<sp/>and<sp/>other<sp/>modifiers.</highlight></codeline>
<codeline lineno="38"><highlight class="comment">**<sp/>Printing<sp/>is<sp/>performed<sp/>to<sp/>the<sp/>logbuffer<sp/>char<sp/>array<sp/>of<sp/>the<sp/>SF_PRIVATE<sp/>struct.</highlight></codeline>
<codeline lineno="39"><highlight class="comment">**<sp/>Printing<sp/>is<sp/>done<sp/>in<sp/>such<sp/>a<sp/>way<sp/>as<sp/>to<sp/>guarantee<sp/>that<sp/>the<sp/>log<sp/>never<sp/>overflows<sp/>the<sp/>end<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="40"><highlight class="comment">**<sp/>logbuffer<sp/>array.</highlight></codeline>
<codeline lineno="41"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">log_putchar<sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1aef39a84eab705961573a8fcf2b3e4f18" kindref="member">logindex</ref><sp/>&lt;<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a737949e51b02b0cf9fecd65b57071cf6" kindref="member">logbuffer</ref>)<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a737949e51b02b0cf9fecd65b57071cf6" kindref="member">logbuffer</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1aef39a84eab705961573a8fcf2b3e4f18" kindref="member">logindex</ref>++]<sp/>=<sp/>ch<sp/>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a737949e51b02b0cf9fecd65b57071cf6" kindref="member">logbuffer</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1aef39a84eab705961573a8fcf2b3e4f18" kindref="member">logindex</ref>]<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>log_putchar<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="libsndfile_2src_2common_8h_1a79339bae8c0e3af5468b507d261922a5" refkind="member"><highlight class="normal"><ref refid="src_2common_8c_1a79339bae8c0e3af5468b507d261922a5" kindref="member">psf_log_printf</ref><sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,<sp/>...)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{<sp/><sp/><sp/>va_list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ap<sp/>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>u<sp/>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>,<sp/>tens,<sp/>shift,<sp/>width,<sp/>width_specifier,<sp/>left_align<sp/>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/>*strptr,<sp/>istr<sp/>[5],<sp/>lead_char,<sp/>sign_char<sp/>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start<sp/>(ap,<sp/>format)<sp/>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>*format++))</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/>c)<sp/>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue<sp/>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>%%<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>++<sp/>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue<sp/>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_char<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_align<sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a54acafcb68cb53a2476a673e6dad1bcb" kindref="member">SF_FALSE</ref><sp/>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(format<sp/>[0])</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_char<sp/>=<sp/>format<sp/>[0]<sp/>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>++<sp/>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue<sp/>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_align<sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a74a076892285b06bce678d01893ac6f7" kindref="member">SF_TRUE</ref><sp/>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>++<sp/>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue<sp/>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal"><sp/>:<sp/>break<sp/>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>[0]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lead_char<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lead_char<sp/>=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_specifier<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>*format++)<sp/>&amp;&amp;<sp/>isdigit<sp/>(c))</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_specifier<sp/>=<sp/>width_specifier<sp/>*<sp/>10<sp/>+<sp/>(c<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0<sp/>:<sp/></highlight><highlight class="comment">/*<sp/>NULL<sp/>character.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end<sp/>(ap)<sp/>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strptr<sp/>=<sp/>va_arg<sp/>(ap,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strptr<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_specifier<sp/>-=<sp/>strlen<sp/>(strptr)<sp/>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_align<sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a54acafcb68cb53a2476a673e6dad1bcb" kindref="member">SF_FALSE</ref>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(width_specifier<sp/>--<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*strptr)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/>*strptr++)<sp/>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(width_specifier<sp/>--<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>int<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>va_arg<sp/>(ap,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>d<sp/>=<sp/>-<ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref><sp/>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_char<sp/>=<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lead_char<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>left_align<sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a54acafcb68cb53a2476a673e6dad1bcb" kindref="member">SF_FALSE</ref>)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_specifier<sp/>--<sp/>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tens<sp/>=<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(d<sp/>/<sp/>tens<sp/>&gt;=<sp/>10)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>tens<sp/>*=<sp/>10<sp/>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>++<sp/>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_specifier<sp/>-=<sp/>width<sp/>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sign_char<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_specifier<sp/>--<sp/>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_align<sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a54acafcb68cb53a2476a673e6dad1bcb" kindref="member">SF_FALSE</ref><sp/>&amp;&amp;<sp/>lead_char<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sign_char<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_specifier<sp/>--<sp/>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(width_specifier<sp/>--<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/>lead_char)<sp/>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sign_char<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal"><sp/>||<sp/>sign_char<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/>sign_char)<sp/>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_specifier<sp/>--<sp/>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_align<sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a54acafcb68cb53a2476a673e6dad1bcb" kindref="member">SF_FALSE</ref>)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(width_specifier<sp/>--<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/>lead_char)<sp/>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tens<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>d<sp/>/<sp/>tens)<sp/>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>%=<sp/>tens<sp/>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tens<sp/>/=<sp/>10<sp/>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(width_specifier<sp/>--<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/>lead_char)<sp/>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>sf_count_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2add_8c_1af316c33cc298530f245e8b55330e86b5" kindref="member">D</ref>,<sp/>Tens<sp/>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D<sp/>=<sp/>va_arg<sp/>(ap,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref>)<sp/>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(D<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--<sp/>width_specifier<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/>lead_char)<sp/>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(D<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D<sp/>=<sp/>-<ref refid="libnyquist_2nyquist_2nyqsrc_2add_8c_1af316c33cc298530f245e8b55330e86b5" kindref="member">D</ref><sp/>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tens<sp/>=<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(D<sp/>/<sp/>Tens<sp/>&gt;=<sp/>10)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>Tens<sp/>*=<sp/>10<sp/>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>++<sp/>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(width_specifier<sp/>&gt;<sp/>width)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/>lead_char)<sp/>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_specifier--<sp/>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(Tens<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>D<sp/>/<sp/>Tens)<sp/>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D<sp/>%=<sp/>Tens<sp/>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tens<sp/>/=<sp/>10<sp/>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>unsigned<sp/>int<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>=<sp/>va_arg<sp/>(ap,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tens<sp/>=<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(u<sp/>/<sp/>tens<sp/>&gt;=<sp/>10)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>tens<sp/>*=<sp/>10<sp/>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>++<sp/>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_specifier<sp/>-=<sp/>width<sp/>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sign_char<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_specifier<sp/>--<sp/>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_align<sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a54acafcb68cb53a2476a673e6dad1bcb" kindref="member">SF_FALSE</ref><sp/>&amp;&amp;<sp/>lead_char<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sign_char<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_specifier<sp/>--<sp/>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(width_specifier<sp/>--<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/>lead_char)<sp/>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sign_char<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal"><sp/>||<sp/>sign_char<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/>sign_char)<sp/>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_specifier<sp/>--<sp/>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_align<sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a54acafcb68cb53a2476a673e6dad1bcb" kindref="member">SF_FALSE</ref>)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(width_specifier<sp/>--<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/>lead_char)<sp/>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tens<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>u<sp/>/<sp/>tens)<sp/>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>%=<sp/>tens<sp/>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tens<sp/>/=<sp/>10<sp/>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(width_specifier<sp/>--<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/>lead_char)<sp/>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>char<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>va_arg<sp/>(ap,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&amp;<sp/>0xFF<sp/>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/>c)<sp/>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>hex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>hex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>va_arg<sp/>(ap,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--width_specifier<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/>lead_char)<sp/>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift<sp/>=<sp/>28<sp/>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>(width_specifier<sp/>&lt;<sp/>8)<sp/>?<sp/>8<sp/>:<sp/>width_specifier<sp/>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<sp/>((0xF<sp/>&lt;&lt;<sp/>shift)<sp/>&amp;<sp/>d))</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>shift<sp/>-=<sp/>4<sp/>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>--<sp/>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(width<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>width_specifier<sp/>&gt;<sp/>width)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/>lead_char)<sp/>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_specifier--<sp/>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(shift<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>c<sp/>=<sp/>(d<sp/>&gt;&gt;<sp/>shift)<sp/>&amp;<sp/>0xF<sp/>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/>(c<sp/>&gt;<sp/>9)<sp/>?<sp/>c<sp/>+<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>-<sp/>10<sp/>:<sp/>c<sp/>+<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift<sp/>-=<sp/>4<sp/>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;M&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>int2str<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>va_arg<sp/>(ap,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unix_2switches_8h_1aab66c42b3a2cd5691035648eebd7e092" kindref="member">CPU_IS_LITTLE_ENDIAN</ref>)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>istr<sp/>[0]<sp/>=<sp/>d<sp/>&amp;<sp/>0xFF<sp/>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>istr<sp/>[1]<sp/>=<sp/>(d<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF<sp/>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>istr<sp/>[2]<sp/>=<sp/>(d<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xFF<sp/>;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>istr<sp/>[3]<sp/>=<sp/>(d<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0xFF<sp/>;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>istr<sp/>[3]<sp/>=<sp/>d<sp/>&amp;<sp/>0xFF<sp/>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>istr<sp/>[2]<sp/>=<sp/>(d<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF<sp/>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>istr<sp/>[1]<sp/>=<sp/>(d<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xFF<sp/>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>istr<sp/>[0]<sp/>=<sp/>(d<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0xFF<sp/>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>istr<sp/>[4]<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strptr<sp/>=<sp/>istr<sp/>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*strptr)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>c<sp/>=<sp/>*strptr++<sp/>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/>c)<sp/>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/>c)<sp/>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_putchar<sp/>(psf,<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>switch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>while<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end<sp/>(ap)<sp/>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>psf_log_printf<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="323"><highlight class="comment">**<sp/><sp/>ASCII<sp/>header<sp/>printf<sp/>functions.</highlight></codeline>
<codeline lineno="324"><highlight class="comment">**<sp/><sp/>Some<sp/>formats<sp/>(ie<sp/>NIST)<sp/>use<sp/>ascii<sp/>text<sp/>in<sp/>their<sp/>headers.</highlight></codeline>
<codeline lineno="325"><highlight class="comment">**<sp/><sp/>Format<sp/>specifiers<sp/>are<sp/>the<sp/>same<sp/>as<sp/>the<sp/>standard<sp/>printf<sp/>specifiers<sp/>(uses<sp/>vsnprintf).</highlight></codeline>
<codeline lineno="326"><highlight class="comment">**<sp/><sp/>If<sp/>this<sp/>generates<sp/>a<sp/>compile<sp/>error<sp/>on<sp/>any<sp/>system,<sp/>the<sp/>author<sp/>should<sp/>be<sp/>notified</highlight></codeline>
<codeline lineno="327"><highlight class="comment">**<sp/><sp/>so<sp/>an<sp/>alternative<sp/>vsnprintf<sp/>can<sp/>be<sp/>provided.</highlight></codeline>
<codeline lineno="328"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="libsndfile_2src_2common_8h_1a9dfb518cc7e979847df3c6efd9cab626" refkind="member"><highlight class="normal"><ref refid="src_2common_8c_1a9dfb518cc7e979847df3c6efd9cab626" kindref="member">psf_asciiheader_printf</ref><sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,<sp/>...)</highlight></codeline>
<codeline lineno="332"><highlight class="normal">{<sp/><sp/><sp/>va_list<sp/>argptr<sp/>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>maxlen<sp/>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref><sp/>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>maxlen<sp/>=<sp/>strlen<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>)<sp/>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/><sp/><sp/>=<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>)<sp/>+<sp/>maxlen<sp/>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>maxlen<sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>)<sp/>-<sp/>maxlen<sp/>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start<sp/>(argptr,<sp/>format)<sp/>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>vsnprintf<sp/>(start,<sp/>maxlen,<sp/>format,<sp/>argptr)<sp/>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end<sp/>(argptr)<sp/>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>the<sp/>string<sp/>is<sp/>properly<sp/>terminated.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>[maxlen<sp/>-<sp/>1]<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>=<sp/>strlen<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>)<sp/>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>psf_asciiheader_printf<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="353"><highlight class="comment">**<sp/><sp/>Binary<sp/>header<sp/>writing<sp/>functions.<sp/>Returns<sp/>number<sp/>of<sp/>bytes<sp/>written.</highlight></codeline>
<codeline lineno="354"><highlight class="comment">**</highlight></codeline>
<codeline lineno="355"><highlight class="comment">**<sp/><sp/>Format<sp/>specifiers<sp/>for<sp/>psf_binheader_writef<sp/>are<sp/>as<sp/>follows</highlight></codeline>
<codeline lineno="356"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>m<sp/><sp/><sp/>-<sp/>marker<sp/>-<sp/>four<sp/>bytes<sp/>-<sp/>no<sp/>endian<sp/>manipulation</highlight></codeline>
<codeline lineno="357"><highlight class="comment">**</highlight></codeline>
<codeline lineno="358"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>e<sp/><sp/><sp/>-<sp/>all<sp/>following<sp/>numerical<sp/>values<sp/>will<sp/>be<sp/>little<sp/>endian</highlight></codeline>
<codeline lineno="359"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>E<sp/><sp/><sp/>-<sp/>all<sp/>following<sp/>numerical<sp/>values<sp/>will<sp/>be<sp/>big<sp/>endian</highlight></codeline>
<codeline lineno="360"><highlight class="comment">**</highlight></codeline>
<codeline lineno="361"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>t<sp/><sp/><sp/>-<sp/>all<sp/>following<sp/>O<sp/>types<sp/>will<sp/>be<sp/>truncated<sp/>to<sp/>4<sp/>bytes</highlight></codeline>
<codeline lineno="362"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><sp/><sp/>-<sp/>switch<sp/>off<sp/>truncation<sp/>of<sp/>all<sp/>following<sp/>O<sp/>types</highlight></codeline>
<codeline lineno="363"><highlight class="comment">**</highlight></codeline>
<codeline lineno="364"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/>-<sp/>single<sp/>byte<sp/>value</highlight></codeline>
<codeline lineno="365"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/>-<sp/>two<sp/>byte<sp/>value</highlight></codeline>
<codeline lineno="366"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/>-<sp/>three<sp/>byte<sp/>value</highlight></codeline>
<codeline lineno="367"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>4<sp/><sp/><sp/>-<sp/>four<sp/>byte<sp/>value</highlight></codeline>
<codeline lineno="368"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/>-<sp/>eight<sp/>byte<sp/>value<sp/>(sometimes<sp/>written<sp/>as<sp/>4<sp/>bytes)</highlight></codeline>
<codeline lineno="369"><highlight class="comment">**</highlight></codeline>
<codeline lineno="370"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>s<sp/><sp/><sp/>-<sp/>string<sp/>preceded<sp/>by<sp/>a<sp/>four<sp/>byte<sp/>length</highlight></codeline>
<codeline lineno="371"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>S<sp/><sp/><sp/>-<sp/>string<sp/>including<sp/>null<sp/>terminator</highlight></codeline>
<codeline lineno="372"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>f<sp/><sp/><sp/>-<sp/>floating<sp/>point<sp/>data</highlight></codeline>
<codeline lineno="373"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>d<sp/><sp/><sp/>-<sp/>double<sp/>precision<sp/>floating<sp/>point<sp/>data</highlight></codeline>
<codeline lineno="374"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>h<sp/><sp/><sp/>-<sp/>16<sp/>binary<sp/>bytes<sp/>value</highlight></codeline>
<codeline lineno="375"><highlight class="comment">**</highlight></codeline>
<codeline lineno="376"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>b<sp/><sp/><sp/>-<sp/>binary<sp/>data<sp/>(see<sp/>below)</highlight></codeline>
<codeline lineno="377"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>z<sp/><sp/><sp/>-<sp/>zero<sp/>bytes<sp/>(ses<sp/>below)</highlight></codeline>
<codeline lineno="378"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>j<sp/><sp/><sp/>-<sp/>jump<sp/>forwards<sp/>or<sp/>backwards</highlight></codeline>
<codeline lineno="379"><highlight class="comment">**</highlight></codeline>
<codeline lineno="380"><highlight class="comment">**<sp/><sp/>To<sp/>write<sp/>a<sp/>word<sp/>followed<sp/>by<sp/>an<sp/>int<sp/>(both<sp/>little<sp/>endian)<sp/>use:</highlight></codeline>
<codeline lineno="381"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>psf_binheader_writef<sp/>(&quot;e24&quot;,<sp/>wordval,<sp/>longval)<sp/>;</highlight></codeline>
<codeline lineno="382"><highlight class="comment">**</highlight></codeline>
<codeline lineno="383"><highlight class="comment">**<sp/><sp/>To<sp/>write<sp/>binary<sp/>data<sp/>use:</highlight></codeline>
<codeline lineno="384"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>psf_binheader_writef<sp/>(&quot;b&quot;,<sp/>&amp;bindata,<sp/>sizeof<sp/>(bindata))<sp/>;</highlight></codeline>
<codeline lineno="385"><highlight class="comment">**</highlight></codeline>
<codeline lineno="386"><highlight class="comment">**<sp/><sp/>To<sp/>write<sp/>N<sp/>zero<sp/>bytes<sp/>use:</highlight></codeline>
<codeline lineno="387"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NOTE:<sp/>due<sp/>to<sp/>platform<sp/>issues<sp/>(ie<sp/>x86-64)<sp/>you<sp/>should<sp/>cast<sp/>the</highlight></codeline>
<codeline lineno="388"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argument<sp/>to<sp/>size_t<sp/>or<sp/>ensure<sp/>the<sp/>variable<sp/>type<sp/>is<sp/>size_t.</highlight></codeline>
<codeline lineno="389"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>psf_binheader_writef<sp/>(&quot;z&quot;,<sp/>N)<sp/>;</highlight></codeline>
<codeline lineno="390"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>macros<sp/>may<sp/>seem<sp/>a<sp/>bit<sp/>messy<sp/>but<sp/>do<sp/>prevent<sp/>problems<sp/>with<sp/>processors<sp/>which</highlight></codeline>
<codeline lineno="393"><highlight class="comment">**<sp/>seg.<sp/>fault<sp/>when<sp/>asked<sp/>to<sp/>write<sp/>an<sp/>int<sp/>or<sp/>short<sp/>to<sp/>a<sp/>non-int/short<sp/>aligned<sp/>address.</highlight></codeline>
<codeline lineno="394"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal">header_put_byte<sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="398"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>&lt;<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>)<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>header_put_byte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(CPU_IS_BIG_ENDIAN<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal">header_put_marker<sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="405"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>&lt;<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>)<sp/>-<sp/>4)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>24)<sp/>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>16)<sp/>;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>8)<sp/>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>header_put_marker<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(CPU_IS_LITTLE_ENDIAN<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal">header_put_marker<sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="416"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>&lt;<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>)<sp/>-<sp/>4)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>8)<sp/>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>16)<sp/>;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>24)<sp/>;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>header_put_marker<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>error<sp/>&quot;Cannot<sp/>determine<sp/>endian-ness<sp/>of<sp/>processor.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal">header_put_be_short<sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="431"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>&lt;<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>)<sp/>-<sp/>2)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>8)<sp/>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>header_put_be_short<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal">header_put_le_short<sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>&lt;<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>)<sp/>-<sp/>2)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>8)<sp/>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>header_put_le_short<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal">header_put_be_3byte<sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="447"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>&lt;<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>)<sp/>-<sp/>3)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>16)<sp/>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>8)<sp/>;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>header_put_be_3byte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal">header_put_le_3byte<sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>&lt;<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>)<sp/>-<sp/>3)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>8)<sp/>;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>16)<sp/>;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>header_put_le_3byte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal">header_put_be_int<sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="465"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>&lt;<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>)<sp/>-<sp/>4)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>24)<sp/>;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>16)<sp/>;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>8)<sp/>;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>header_put_be_int<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal">header_put_le_int<sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="475"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>&lt;<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>)<sp/>-<sp/>4)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>8)<sp/>;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>16)<sp/>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>24)<sp/>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>header_put_le_int<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(SIZEOF_SF_COUNT_T<sp/>==<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal">header_put_be_8byte<sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/>x)</highlight></codeline>
<codeline lineno="487"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>&lt;<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>)<sp/>-<sp/>8)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>24)<sp/>;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>16)<sp/>;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>8)<sp/>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>header_put_be_8byte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal">header_put_le_8byte<sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/>x)</highlight></codeline>
<codeline lineno="501"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>&lt;<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>)<sp/>-<sp/>8)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>8)<sp/>;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>16)<sp/>;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>24)<sp/>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>header_put_le_8byte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(SIZEOF_SF_COUNT_T<sp/>==<sp/>8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal">header_put_be_8byte<sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/>x)</highlight></codeline>
<codeline lineno="517"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>&lt;<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>)<sp/>-<sp/>8)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>56)<sp/>;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>48)<sp/>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>40)<sp/>;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>32)<sp/>;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>24)<sp/>;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>16)<sp/>;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>8)<sp/>;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>header_put_be_8byte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal">header_put_le_8byte<sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/>x)</highlight></codeline>
<codeline lineno="531"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>&lt;<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>)<sp/>-<sp/>8)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>8)<sp/>;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>16)<sp/>;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>24)<sp/>;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>32)<sp/>;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>40)<sp/>;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>48)<sp/>;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>++]<sp/>=<sp/>(x<sp/>&gt;&gt;<sp/>56)<sp/>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>header_put_le_8byte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;SIZEOF_SF_COUNT_T<sp/>is<sp/>not<sp/>defined.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548" refid="libsndfile_2src_2common_8h_1af85d67adae7853e7b1fb48921e23acbe" refkind="member"><highlight class="normal"><ref refid="src_2common_8c_1af85d67adae7853e7b1fb48921e23acbe" kindref="member">psf_binheader_writef</ref><sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,<sp/>...)</highlight></codeline>
<codeline lineno="549"><highlight class="normal">{<sp/><sp/><sp/>va_list<sp/>argptr<sp/>;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>countdata<sp/>;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/>longdata<sp/>;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>floatdata<sp/>;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doubledata<sp/>;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bindata<sp/>;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/>*strptr<sp/>;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>=<sp/>0,<sp/>trunc_8to4<sp/>;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>trunc_8to4<sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a54acafcb68cb53a2476a673e6dad1bcb" kindref="member">SF_FALSE</ref><sp/>;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start<sp/>(argptr,<sp/>format)<sp/>;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>*format++))</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>nothing.<sp/>Just<sp/>used<sp/>to<sp/>space<sp/>out<sp/>format<sp/>string.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="comment">/*<sp/>All<sp/>conversions<sp/>are<sp/>now<sp/>from<sp/>LE<sp/>to<sp/>host.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1ab48d569db130b1bad1afb8e9288aa0e8" kindref="member">rwf_endian</ref><sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea5e4eee211f84815fdc7932cf26e2cda2" kindref="member">SF_ENDIAN_LITTLE</ref><sp/>;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="comment">/*<sp/>All<sp/>conversions<sp/>are<sp/>now<sp/>from<sp/>BE<sp/>to<sp/>host.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1ab48d569db130b1bad1afb8e9288aa0e8" kindref="member">rwf_endian</ref><sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea0c342389e92c7a1cbbf5267cd25db357" kindref="member">SF_ENDIAN_BIG</ref><sp/>;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="comment">/*<sp/>All<sp/>8<sp/>byte<sp/>values<sp/>now<sp/>get<sp/>written<sp/>as<sp/>4<sp/>bytes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trunc_8to4<sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a74a076892285b06bce678d01893ac6f7" kindref="member">SF_TRUE</ref><sp/>;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;T&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="comment">/*<sp/>All<sp/>8<sp/>byte<sp/>values<sp/>now<sp/>get<sp/>written<sp/>as<sp/>8<sp/>bytes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trunc_8to4<sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a54acafcb68cb53a2476a673e6dad1bcb" kindref="member">SF_FALSE</ref><sp/>;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;m&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header_put_marker<sp/>(psf,<sp/>data)<sp/>;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>4<sp/>;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header_put_byte<sp/>(psf,<sp/>data)<sp/>;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;2&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1ab48d569db130b1bad1afb8e9288aa0e8" kindref="member">rwf_endian</ref><sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea0c342389e92c7a1cbbf5267cd25db357" kindref="member">SF_ENDIAN_BIG</ref>)</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>header_put_be_short<sp/>(psf,<sp/>data)<sp/>;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>header_put_le_short<sp/>(psf,<sp/>data)<sp/>;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>2<sp/>;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;3&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="comment">/*<sp/>tribyte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1ab48d569db130b1bad1afb8e9288aa0e8" kindref="member">rwf_endian</ref><sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea0c342389e92c7a1cbbf5267cd25db357" kindref="member">SF_ENDIAN_BIG</ref>)</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>header_put_be_3byte<sp/>(psf,<sp/>data)<sp/>;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>header_put_le_3byte<sp/>(psf,<sp/>data)<sp/>;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>3<sp/>;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;4&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1ab48d569db130b1bad1afb8e9288aa0e8" kindref="member">rwf_endian</ref><sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea0c342389e92c7a1cbbf5267cd25db357" kindref="member">SF_ENDIAN_BIG</ref>)</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>header_put_be_int<sp/>(psf,<sp/>data)<sp/>;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>header_put_le_int<sp/>(psf,<sp/>data)<sp/>;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>4<sp/>;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;8&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>countdata<sp/>=<sp/>va_arg<sp/>(argptr,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref>)<sp/>;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1ab48d569db130b1bad1afb8e9288aa0e8" kindref="member">rwf_endian</ref><sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea0c342389e92c7a1cbbf5267cd25db357" kindref="member">SF_ENDIAN_BIG</ref><sp/>&amp;&amp;<sp/>trunc_8to4<sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a54acafcb68cb53a2476a673e6dad1bcb" kindref="member">SF_FALSE</ref>)</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>header_put_be_8byte<sp/>(psf,<sp/>countdata)<sp/>;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>8<sp/>;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1ab48d569db130b1bad1afb8e9288aa0e8" kindref="member">rwf_endian</ref><sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea5e4eee211f84815fdc7932cf26e2cda2" kindref="member">SF_ENDIAN_LITTLE</ref><sp/>&amp;&amp;<sp/>trunc_8to4<sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a54acafcb68cb53a2476a673e6dad1bcb" kindref="member">SF_FALSE</ref>)</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>header_put_le_8byte<sp/>(psf,<sp/>countdata)<sp/>;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>8<sp/>;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1ab48d569db130b1bad1afb8e9288aa0e8" kindref="member">rwf_endian</ref><sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea0c342389e92c7a1cbbf5267cd25db357" kindref="member">SF_ENDIAN_BIG</ref><sp/>&amp;&amp;<sp/>trunc_8to4<sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a74a076892285b06bce678d01893ac6f7" kindref="member">SF_TRUE</ref>)</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>longdata<sp/>=<sp/>countdata<sp/>&amp;<sp/>0xFFFFFFFF<sp/>;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header_put_be_int<sp/>(psf,<sp/>longdata)<sp/>;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>4<sp/>;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1ab48d569db130b1bad1afb8e9288aa0e8" kindref="member">rwf_endian</ref><sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea5e4eee211f84815fdc7932cf26e2cda2" kindref="member">SF_ENDIAN_LITTLE</ref><sp/>&amp;&amp;<sp/>trunc_8to4<sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a74a076892285b06bce678d01893ac6f7" kindref="member">SF_TRUE</ref>)</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>longdata<sp/>=<sp/>countdata<sp/>&amp;<sp/>0xFFFFFFFF<sp/>;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header_put_le_int<sp/>(psf,<sp/>longdata)<sp/>;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>4<sp/>;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Floats<sp/>are<sp/>passed<sp/>as<sp/>doubles.<sp/>Is<sp/>this<sp/>always<sp/>true?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>floatdata<sp/>=<sp/>(float)<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1ab48d569db130b1bad1afb8e9288aa0e8" kindref="member">rwf_endian</ref><sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea0c342389e92c7a1cbbf5267cd25db357" kindref="member">SF_ENDIAN_BIG</ref>)</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2common_8h_1a27c497fe7bd508d0e4735d62a9d42449" kindref="member">float32_be_write</ref><sp/>(floatdata,<sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>+<sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>)<sp/>;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2common_8h_1a599080fc29c65f0496002a0cd12a6577" kindref="member">float32_le_write</ref><sp/>(floatdata,<sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>+<sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>)<sp/>;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>+=<sp/>4<sp/>;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>4<sp/>;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doubledata<sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1ab48d569db130b1bad1afb8e9288aa0e8" kindref="member">rwf_endian</ref><sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea0c342389e92c7a1cbbf5267cd25db357" kindref="member">SF_ENDIAN_BIG</ref>)</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2common_8h_1a7e711c91424e4737b658dd8c989a3027" kindref="member">double64_be_write</ref><sp/>(doubledata,<sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>+<sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>)<sp/>;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2common_8h_1aab711e8a8e2fdfebe01eeed45d6db3dd" kindref="member">double64_le_write</ref><sp/>(doubledata,<sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>+<sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>)<sp/>;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>+=<sp/>8<sp/>;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>8<sp/>;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>a<sp/>C<sp/>string<sp/>(guaranteed<sp/>to<sp/>have<sp/>a<sp/>zero<sp/>terminator).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strptr<sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>strlen<sp/>(strptr)<sp/>+<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>+=<sp/>(size<sp/>&amp;<sp/>1)<sp/>;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1ab48d569db130b1bad1afb8e9288aa0e8" kindref="member">rwf_endian</ref><sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea0c342389e92c7a1cbbf5267cd25db357" kindref="member">SF_ENDIAN_BIG</ref>)</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header_put_be_int<sp/>(psf,<sp/>size)<sp/>;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header_put_le_int<sp/>(psf,<sp/>size)<sp/>;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy<sp/>(&amp;(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>]),<sp/>strptr,<sp/>size)<sp/>;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>+=<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>-<sp/>1]<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>4<sp/>+<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;S&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="690"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/><sp/>Write<sp/>an<sp/>AIFF<sp/>style<sp/>string<sp/>(no<sp/>zero<sp/>terminator<sp/>but<sp/>possibly</highlight></codeline>
<codeline lineno="691"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/><sp/>an<sp/>extra<sp/>pad<sp/>byte<sp/>if<sp/>the<sp/>string<sp/>length<sp/>is<sp/>odd).</highlight></codeline>
<codeline lineno="692"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strptr<sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>strlen<sp/>(strptr)<sp/>;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1ab48d569db130b1bad1afb8e9288aa0e8" kindref="member">rwf_endian</ref><sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea0c342389e92c7a1cbbf5267cd25db357" kindref="member">SF_ENDIAN_BIG</ref>)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header_put_be_int<sp/>(psf,<sp/>size)<sp/>;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header_put_le_int<sp/>(psf,<sp/>size)<sp/>;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy<sp/>(&amp;(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>]),<sp/>strptr,<sp/>size<sp/>+<sp/>1)<sp/>;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>+=<sp/>(size<sp/>&amp;<sp/>1)<sp/>;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>+=<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>]<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>4<sp/>+<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bindata<sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/><sp/><sp/><sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy<sp/>(&amp;(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>]),<sp/>bindata,<sp/>size)<sp/>;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>+=<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(size)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>]<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>++<sp/>;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>--<sp/>;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;h&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bindata<sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy<sp/>(&amp;(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>]),<sp/>bindata,<sp/>16)<sp/>;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>+=<sp/>16<sp/>;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>16<sp/>;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;j&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>+=<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1a79339bae8c0e3af5468b507d261922a5" kindref="member">psf_log_printf</ref><sp/>(psf,<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>Invalid<sp/>format<sp/>specifier<sp/>`%c&apos;\n&quot;</highlight><highlight class="normal">,<sp/>c)<sp/>;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a4213ea059db3a7b9453342f6e9714649" kindref="member">error</ref><sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1a34df7cc7f69a8ec535eec8a524dcbaf9a97febf8de2d0aee94b5e514c38c59515" kindref="member">SFE_INTERNAL</ref><sp/>;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end<sp/>(argptr)<sp/>;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>;</highlight></codeline>
<codeline lineno="746"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>psf_binheader_writef<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="749"><highlight class="comment">**<sp/><sp/>Binary<sp/>header<sp/>reading<sp/>functions.<sp/>Returns<sp/>number<sp/>of<sp/>bytes<sp/>read.</highlight></codeline>
<codeline lineno="750"><highlight class="comment">**</highlight></codeline>
<codeline lineno="751"><highlight class="comment">**<sp/><sp/>Format<sp/>specifiers<sp/>are<sp/>the<sp/>same<sp/>as<sp/>for<sp/>header<sp/>write<sp/>function<sp/>above<sp/>with<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="752"><highlight class="comment">**<sp/><sp/>additions:</highlight></codeline>
<codeline lineno="753"><highlight class="comment">**</highlight></codeline>
<codeline lineno="754"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>p<sp/><sp/><sp/>-<sp/>jump<sp/>a<sp/>given<sp/>number<sp/>of<sp/>position<sp/>from<sp/>start<sp/>of<sp/>file.</highlight></codeline>
<codeline lineno="755"><highlight class="comment">**</highlight></codeline>
<codeline lineno="756"><highlight class="comment">**<sp/><sp/>If<sp/>format<sp/>is<sp/>NULL,<sp/>psf_binheader_readf<sp/>returns<sp/>the<sp/>current<sp/>offset.</highlight></codeline>
<codeline lineno="757"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(CPU_IS_BIG_ENDIAN<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_MARKER(ptr)<sp/>(<sp/><sp/><sp/>((ptr)<sp/>[0]<sp/>&lt;&lt;<sp/>24)<sp/><sp/><sp/>|<sp/>((ptr)<sp/>[1]<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="761"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ptr)<sp/>[2]<sp/>&lt;&lt;<sp/>8)<sp/><sp/><sp/><sp/>|<sp/>((ptr)<sp/>[3])<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(CPU_IS_LITTLE_ENDIAN<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_MARKER(ptr)<sp/>(<sp/><sp/><sp/>((ptr)<sp/>[0])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>((ptr)<sp/>[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="765"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ptr)<sp/>[2]<sp/>&lt;&lt;<sp/>16)<sp/><sp/><sp/>|<sp/>((ptr)<sp/>[3]<sp/>&lt;&lt;<sp/>24)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>error<sp/>&quot;Cannot<sp/>determine<sp/>endian-ness<sp/>of<sp/>processor.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771" refid="src_2common_8c_1ac3f4810466aa0691ac67077cbe861c41" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_LE_SHORT(ptr)<sp/><sp/><sp/>(<sp/>((ptr)<sp/>[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>((ptr)<sp/>[0])<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772" refid="src_2common_8c_1a79a64a448cf27e69143497546d135800" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_BE_SHORT(ptr)<sp/><sp/><sp/>(<sp/>((ptr)<sp/>[0]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>((ptr)<sp/>[1])<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774" refid="src_2common_8c_1ad33a6c046a8b8012a8e11369be97e3ec" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_LE_3BYTE(ptr)<sp/><sp/><sp/>(<sp/><sp/><sp/>((ptr)<sp/>[2]<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>((ptr)<sp/>[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>((ptr)<sp/>[0])<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775" refid="src_2common_8c_1a0cb0e762b9db8660a24adfeec11095cb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_BE_3BYTE(ptr)<sp/><sp/><sp/>(<sp/><sp/><sp/>((ptr)<sp/>[0]<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>((ptr)<sp/>[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>((ptr)<sp/>[2])<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777" refid="src_2common_8c_1a3d41e24ff6a336b8a7303f82c2747b3e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_LE_INT(ptr)<sp/><sp/><sp/><sp/><sp/>(<sp/><sp/><sp/>((ptr)<sp/>[3]<sp/>&lt;&lt;<sp/>24)<sp/><sp/><sp/>|<sp/>((ptr)<sp/>[2]<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="778"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ptr)<sp/>[1]<sp/>&lt;&lt;<sp/>8)<sp/><sp/><sp/><sp/>|<sp/>((ptr)<sp/>[0])<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780" refid="src_2common_8c_1a0f5eba339cfe248a450e570145dafdd5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_BE_INT(ptr)<sp/><sp/><sp/><sp/><sp/>(<sp/><sp/><sp/>((ptr)<sp/>[0]<sp/>&lt;&lt;<sp/>24)<sp/><sp/><sp/>|<sp/>((ptr)<sp/>[1]<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="781"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ptr)<sp/>[2]<sp/>&lt;&lt;<sp/>8)<sp/><sp/><sp/><sp/>|<sp/>((ptr)<sp/>[3])<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783" refid="src_2common_8c_1af0c7b40c1dfac003acf14a52006e878d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_LE_8BYTE(ptr)<sp/><sp/><sp/>(<sp/><sp/><sp/>(((sf_count_t)<sp/>(ptr)<sp/>[7])<sp/>&lt;&lt;<sp/>56)<sp/>|<sp/>(((sf_count_t)<sp/>(ptr)<sp/>[6])<sp/>&lt;&lt;<sp/>48)<sp/>|<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="784"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((sf_count_t)<sp/>(ptr)<sp/>[5])<sp/>&lt;&lt;<sp/>40)<sp/>|<sp/>(((sf_count_t)<sp/>(ptr)<sp/>[4])<sp/>&lt;&lt;<sp/>32)<sp/>|<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="785"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((sf_count_t)<sp/>(ptr)<sp/>[3])<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>(((sf_count_t)<sp/>(ptr)<sp/>[2])<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="786"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((sf_count_t)<sp/>(ptr)<sp/>[1])<sp/>&lt;&lt;<sp/>8<sp/>)<sp/>|<sp/>((ptr)<sp/>[0]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788" refid="src_2common_8c_1ae4779179b187e99ecfc750fb05575fec" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_BE_8BYTE(ptr)<sp/><sp/><sp/>(<sp/><sp/><sp/>(((sf_count_t)<sp/>(ptr)<sp/>[0])<sp/>&lt;&lt;<sp/>56)<sp/>|<sp/>(((sf_count_t)<sp/>(ptr)<sp/>[1])<sp/>&lt;&lt;<sp/>48)<sp/>|<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="789"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((sf_count_t)<sp/>(ptr)<sp/>[2])<sp/>&lt;&lt;<sp/>40)<sp/>|<sp/>(((sf_count_t)<sp/>(ptr)<sp/>[3])<sp/>&lt;&lt;<sp/>32)<sp/>|<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="790"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((sf_count_t)<sp/>(ptr)<sp/>[4])<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>(((sf_count_t)<sp/>(ptr)<sp/>[5])<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="791"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((sf_count_t)<sp/>(ptr)<sp/>[6])<sp/>&lt;&lt;<sp/>8<sp/>)<sp/>|<sp/>((ptr)<sp/>[7]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal">header_read<sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes)</highlight></codeline>
<codeline lineno="797"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>&gt;=<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>))</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>memset<sp/>(ptr,<sp/>0,<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>)<sp/>-<sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>)<sp/>;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>best<sp/>that<sp/>we<sp/>can<sp/>do.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2common_8h_1af9e75e7591ba5f797ad58c0a8aaaffb1" kindref="member">psf_fseek</ref><sp/>(psf,<sp/>bytes,<sp/>SEEK_CUR)<sp/>;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes<sp/>;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>+<sp/>bytes<sp/>&gt;<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>))</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>most<sp/>;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>most<sp/>=<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>)<sp/>-<sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2common_8h_1a16c707d5a2175650aacd6b9cbdfe0f85" kindref="member">psf_fread</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>+<sp/>psf-&gt;<ref refid="structsf__private__tag_1a5e926176f94be21571cd6aef3eff7ac0" kindref="member">headend</ref>,<sp/>1,<sp/>most,<sp/>psf)<sp/>;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>ptr<sp/>+<sp/>most,<sp/>0,<sp/>bytes<sp/>-<sp/>most)<sp/>;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2common_8h_1af9e75e7591ba5f797ad58c0a8aaaffb1" kindref="member">psf_fseek</ref><sp/>(psf,<sp/>bytes<sp/>-<sp/>most,<sp/>SEEK_CUR)<sp/>;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes<sp/>;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>+<sp/>bytes<sp/>&gt;<sp/>psf-&gt;<ref refid="structsf__private__tag_1a5e926176f94be21571cd6aef3eff7ac0" kindref="member">headend</ref>)</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>count<sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1a16c707d5a2175650aacd6b9cbdfe0f85" kindref="member">psf_fread</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>+<sp/>psf-&gt;<ref refid="structsf__private__tag_1a5e926176f94be21571cd6aef3eff7ac0" kindref="member">headend</ref>,<sp/>1,<sp/>bytes<sp/>-<sp/>(psf-&gt;<ref refid="structsf__private__tag_1a5e926176f94be21571cd6aef3eff7ac0" kindref="member">headend</ref><sp/>-<sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>),<sp/>psf)<sp/>;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>!=<sp/>bytes<sp/>-<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(psf-&gt;<ref refid="structsf__private__tag_1a5e926176f94be21571cd6aef3eff7ac0" kindref="member">headend</ref><sp/>-<sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>))</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="src_2common_8c_1a79339bae8c0e3af5468b507d261922a5" kindref="member">psf_log_printf</ref><sp/>(psf,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>psf_fread<sp/>returned<sp/>short<sp/>count.\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0<sp/>;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a5e926176f94be21571cd6aef3eff7ac0" kindref="member">headend</ref><sp/>+=<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy<sp/>(ptr,<sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>+<sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>,<sp/>bytes)<sp/>;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>+=<sp/>bytes<sp/>;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes<sp/>;</highlight></codeline>
<codeline lineno="831"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>header_read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal">header_seek<sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/><ref refid="structposition" kindref="compound">position</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whence)</highlight></codeline>
<codeline lineno="835"><highlight class="normal">{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(whence)</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SEEK_SET<sp/>:</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(position<sp/>&gt;<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>))</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Too<sp/>much<sp/>header<sp/>to<sp/>cache<sp/>so<sp/>just<sp/>seek<sp/>instead.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2common_8h_1af9e75e7591ba5f797ad58c0a8aaaffb1" kindref="member">psf_fseek</ref><sp/>(psf,<sp/>position,<sp/>whence)<sp/>;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(position<sp/>&gt;<sp/>psf-&gt;<ref refid="structsf__private__tag_1a5e926176f94be21571cd6aef3eff7ac0" kindref="member">headend</ref>)</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a5e926176f94be21571cd6aef3eff7ac0" kindref="member">headend</ref><sp/>+=<sp/><ref refid="libsndfile_2src_2common_8h_1a16c707d5a2175650aacd6b9cbdfe0f85" kindref="member">psf_fread</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>+<sp/>psf-&gt;<ref refid="structsf__private__tag_1a5e926176f94be21571cd6aef3eff7ac0" kindref="member">headend</ref>,<sp/>1,<sp/>position<sp/>-<sp/>psf-&gt;<ref refid="structsf__private__tag_1a5e926176f94be21571cd6aef3eff7ac0" kindref="member">headend</ref>,<sp/>psf)<sp/>;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>=<sp/><ref refid="xmlparse_8c_1a38975acbb6db0fe600f77477050279a4" kindref="member">position</ref><sp/>;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SEEK_CUR<sp/>:</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>+<sp/>position<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>&gt;=<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>))</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="libsndfile_2src_2common_8h_1af9e75e7591ba5f797ad58c0a8aaaffb1" kindref="member">psf_fseek</ref><sp/>(psf,<sp/>position,<sp/>whence)<sp/>;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>+<sp/><ref refid="structposition" kindref="compound">position &lt;= psf-&gt;</ref>headend)</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>+=<sp/><ref refid="xmlparse_8c_1a38975acbb6db0fe600f77477050279a4" kindref="member">position</ref><sp/>;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>+<sp/>position<sp/>&gt;<sp/><ref refid="sndfile-play_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref>))</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Need<sp/>to<sp/>jump<sp/>this<sp/>without<sp/>caching<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>=<sp/>psf-&gt;<ref refid="structsf__private__tag_1a5e926176f94be21571cd6aef3eff7ac0" kindref="member">headend</ref><sp/>;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2common_8h_1af9e75e7591ba5f797ad58c0a8aaaffb1" kindref="member">psf_fseek</ref><sp/>(psf,<sp/>position,<sp/>SEEK_CUR)<sp/>;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a5e926176f94be21571cd6aef3eff7ac0" kindref="member">headend</ref><sp/>+=<sp/><ref refid="libsndfile_2src_2common_8h_1a16c707d5a2175650aacd6b9cbdfe0f85" kindref="member">psf_fread</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>+<sp/>psf-&gt;<ref refid="structsf__private__tag_1a5e926176f94be21571cd6aef3eff7ac0" kindref="member">headend</ref>,<sp/>1,<sp/>position<sp/>-<sp/>(psf-&gt;<ref refid="structsf__private__tag_1a5e926176f94be21571cd6aef3eff7ac0" kindref="member">headend</ref><sp/>-<sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>),<sp/>psf)<sp/>;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>=<sp/>psf-&gt;<ref refid="structsf__private__tag_1a5e926176f94be21571cd6aef3eff7ac0" kindref="member">headend</ref><sp/>;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SEEK_END<sp/>:</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1a79339bae8c0e3af5468b507d261922a5" kindref="member">psf_log_printf</ref><sp/>(psf,<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>whence<sp/>param<sp/>in<sp/>header_seek().\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="881"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>header_seek<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal">header_gets<sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufsize)</highlight></codeline>
<codeline lineno="885"><highlight class="normal">{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/>bufsize<sp/>-<sp/>1<sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>&lt;<sp/>psf-&gt;<ref refid="structsf__private__tag_1a5e926176f94be21571cd6aef3eff7ac0" kindref="member">headend</ref>)</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>ptr<sp/>[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>=<sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>]<sp/>;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>++<sp/>;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a5e926176f94be21571cd6aef3eff7ac0" kindref="member">headend</ref><sp/>+=<sp/><ref refid="libsndfile_2src_2common_8h_1a16c707d5a2175650aacd6b9cbdfe0f85" kindref="member">psf_fread</ref><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>+<sp/>psf-&gt;<ref refid="structsf__private__tag_1a5e926176f94be21571cd6aef3eff7ac0" kindref="member">headend</ref>,<sp/>1,<sp/>1,<sp/>psf)<sp/>;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>=<sp/>psf-&gt;<ref refid="structsf__private__tag_1a0cf96c0a7464d4333f992bdb5b0034c4" kindref="member">header</ref><sp/>[psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref>]<sp/>;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a45506b1c2fefbd78e955364b7664a820" kindref="member">headindex</ref><sp/>=<sp/>psf-&gt;<ref refid="structsf__private__tag_1a5e926176f94be21571cd6aef3eff7ac0" kindref="member">headend</ref><sp/>;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr<sp/>[k]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>;</highlight></codeline>
<codeline lineno="906"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>header_gets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909" refid="libsndfile_2src_2common_8h_1a11addd311cf26a4d8a0e775520e1ab8b" refkind="member"><highlight class="normal"><ref refid="src_2common_8c_1a11addd311cf26a4d8a0e775520e1ab8b" kindref="member">psf_binheader_readf</ref><sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,<sp/>...)</highlight></codeline>
<codeline lineno="910"><highlight class="normal">{<sp/><sp/><sp/>va_list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argptr<sp/>;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>*countptr,<sp/>countdata<sp/>;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>*ucptr,<sp/>sixteen_bytes<sp/>[16]<sp/>;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*intptr,<sp/>intdata<sp/>;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/>*shortptr<sp/>;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*charptr<sp/>;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*floatptr<sp/>;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*doubleptr<sp/>;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_count<sp/>=<sp/>0,<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>format)</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libsndfile_2src_2common_8h_1a33b35cd4b911ad7c4e28de37bacc948d" kindref="member">psf_ftell</ref><sp/>(psf)<sp/>;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start<sp/>(argptr,<sp/>format)<sp/>;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>*format++))</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="comment">/*<sp/>All<sp/>conversions<sp/>are<sp/>now<sp/>from<sp/>LE<sp/>to<sp/>host.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1ab48d569db130b1bad1afb8e9288aa0e8" kindref="member">rwf_endian</ref><sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea5e4eee211f84815fdc7932cf26e2cda2" kindref="member">SF_ENDIAN_LITTLE</ref><sp/>;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="comment">/*<sp/>All<sp/>conversions<sp/>are<sp/>now<sp/>from<sp/>BE<sp/>to<sp/>host.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1ab48d569db130b1bad1afb8e9288aa0e8" kindref="member">rwf_endian</ref><sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea0c342389e92c7a1cbbf5267cd25db357" kindref="member">SF_ENDIAN_BIG</ref><sp/>;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;m&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intptr<sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)<sp/>;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>intptr<sp/>;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_count<sp/>+=<sp/>header_read<sp/>(psf,<sp/>ucptr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">))<sp/>;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*intptr<sp/>=<sp/>GET_MARKER<sp/>(ucptr)<sp/>;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;h&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intptr<sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)<sp/>;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>intptr<sp/>;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_count<sp/>+=<sp/>header_read<sp/>(psf,<sp/>sixteen_bytes,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(sixteen_bytes))<sp/>;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intdata<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/>16<sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intdata<sp/>^=<sp/>sixteen_bytes<sp/>[k]<sp/>&lt;&lt;<sp/>k<sp/>;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*intptr<sp/>=<sp/>intdata<sp/>;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charptr<sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*charptr<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_count<sp/>+=<sp/>header_read<sp/>(psf,<sp/>charptr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">))<sp/>;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;2&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shortptr<sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*)<sp/>;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*shortptr<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>shortptr<sp/>;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_count<sp/>+=<sp/>header_read<sp/>(psf,<sp/>ucptr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">))<sp/>;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1ab48d569db130b1bad1afb8e9288aa0e8" kindref="member">rwf_endian</ref><sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea0c342389e92c7a1cbbf5267cd25db357" kindref="member">SF_ENDIAN_BIG</ref>)</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*shortptr<sp/>=<sp/><ref refid="src_2common_8c_1a79a64a448cf27e69143497546d135800" kindref="member">GET_BE_SHORT</ref><sp/>(ucptr)<sp/>;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*shortptr<sp/>=<sp/><ref refid="src_2common_8c_1ac3f4810466aa0691ac67077cbe861c41" kindref="member">GET_LE_SHORT</ref><sp/>(ucptr)<sp/>;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;3&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intptr<sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)<sp/>;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*intptr<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_count<sp/>+=<sp/>header_read<sp/>(psf,<sp/>sixteen_bytes,<sp/>3)<sp/>;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1ab48d569db130b1bad1afb8e9288aa0e8" kindref="member">rwf_endian</ref><sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea0c342389e92c7a1cbbf5267cd25db357" kindref="member">SF_ENDIAN_BIG</ref>)</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*intptr<sp/>=<sp/><ref refid="src_2common_8c_1a0cb0e762b9db8660a24adfeec11095cb" kindref="member">GET_BE_3BYTE</ref><sp/>(sixteen_bytes)<sp/>;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*intptr<sp/>=<sp/><ref refid="src_2common_8c_1ad33a6c046a8b8012a8e11369be97e3ec" kindref="member">GET_LE_3BYTE</ref><sp/>(sixteen_bytes)<sp/>;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;4&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intptr<sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)<sp/>;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*intptr<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>intptr<sp/>;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_count<sp/>+=<sp/>header_read<sp/>(psf,<sp/>ucptr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">))<sp/>;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1ab48d569db130b1bad1afb8e9288aa0e8" kindref="member">rwf_endian</ref><sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea0c342389e92c7a1cbbf5267cd25db357" kindref="member">SF_ENDIAN_BIG</ref>)</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*intptr<sp/>=<sp/><ref refid="src_2common_8c_1a0f5eba339cfe248a450e570145dafdd5" kindref="member">GET_BE_INT</ref><sp/>(ucptr)<sp/>;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*intptr<sp/>=<sp/><ref refid="src_2common_8c_1a3d41e24ff6a336b8a7303f82c2747b3e" kindref="member">GET_LE_INT</ref><sp/>(ucptr)<sp/>;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;8&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>countptr<sp/>=<sp/>va_arg<sp/>(argptr,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/>*)<sp/>;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*countptr<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_count<sp/>+=<sp/>header_read<sp/>(psf,<sp/>sixteen_bytes,<sp/>8)<sp/>;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1ab48d569db130b1bad1afb8e9288aa0e8" kindref="member">rwf_endian</ref><sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea0c342389e92c7a1cbbf5267cd25db357" kindref="member">SF_ENDIAN_BIG</ref>)</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>countdata<sp/>=<sp/><ref refid="src_2common_8c_1ae4779179b187e99ecfc750fb05575fec" kindref="member">GET_BE_8BYTE</ref><sp/>(sixteen_bytes)<sp/>;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>countdata<sp/>=<sp/><ref refid="src_2common_8c_1af0c7b40c1dfac003acf14a52006e878d" kindref="member">GET_LE_8BYTE</ref><sp/>(sixteen_bytes)<sp/>;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*countptr<sp/>=<sp/>countdata<sp/>;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="comment">/*<sp/>Float<sp/>conversion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>floatptr<sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)<sp/>;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*floatptr<sp/>=<sp/>0.0<sp/>;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_count<sp/>+=<sp/>header_read<sp/>(psf,<sp/>floatptr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">))<sp/>;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1ab48d569db130b1bad1afb8e9288aa0e8" kindref="member">rwf_endian</ref><sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea0c342389e92c7a1cbbf5267cd25db357" kindref="member">SF_ENDIAN_BIG</ref>)</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*floatptr<sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1aea3d4d156bf67213d450c76e5bf96ddd" kindref="member">float32_be_read</ref><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>floatptr)<sp/>;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*floatptr<sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1a6ffbd6a8962d2f389467348ec50b2899" kindref="member">float32_le_read</ref><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>floatptr)<sp/>;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="comment">/*<sp/>double<sp/>conversion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doubleptr<sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)<sp/>;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*doubleptr<sp/>=<sp/>0.0<sp/>;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_count<sp/>+=<sp/>header_read<sp/>(psf,<sp/>doubleptr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">))<sp/>;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1ab48d569db130b1bad1afb8e9288aa0e8" kindref="member">rwf_endian</ref><sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea0c342389e92c7a1cbbf5267cd25db357" kindref="member">SF_ENDIAN_BIG</ref>)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*doubleptr<sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1ad631dc28e4d14525ab931f390aca75da" kindref="member">double64_be_read</ref><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>doubleptr)<sp/>;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*doubleptr<sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1a6c407dfe68c26e3f073109812255a7f4" kindref="member">double64_le_read</ref><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>doubleptr)<sp/>;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1a79339bae8c0e3af5468b507d261922a5" kindref="member">psf_log_printf</ref><sp/>(psf,<sp/></highlight><highlight class="stringliteral">&quot;Format<sp/>conversion<sp/>&apos;s&apos;<sp/>not<sp/>implemented<sp/>yet.\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1027"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strptr<sp/>=<sp/>va_arg<sp/>(argptr,<sp/>char<sp/>*)<sp/>;</highlight></codeline>
<codeline lineno="1028"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/><sp/><sp/>=<sp/>strlen<sp/>(strptr)<sp/>+<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="1029"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/><sp/>+=<sp/>(size<sp/>&amp;<sp/>1)<sp/>;</highlight></codeline>
<codeline lineno="1030"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longdata<sp/>=<sp/>H2LE_INT<sp/>(size)<sp/>;</highlight></codeline>
<codeline lineno="1031"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_int<sp/>(psf,<sp/>longdata)<sp/>;</highlight></codeline>
<codeline lineno="1032"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy<sp/>(&amp;(psf-&gt;header<sp/>[psf-&gt;headindex]),<sp/>strptr,<sp/>size)<sp/>;</highlight></codeline>
<codeline lineno="1033"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;headindex<sp/>+=<sp/>size<sp/>;</highlight></codeline>
<codeline lineno="1034"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charptr<sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_count<sp/>+=<sp/>header_read<sp/>(psf,<sp/>charptr,<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;G&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charptr<sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_count<sp/>+=<sp/>header_gets<sp/>(psf,<sp/>charptr,<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1a79339bae8c0e3af5468b507d261922a5" kindref="member">psf_log_printf</ref><sp/>(psf,<sp/></highlight><highlight class="stringliteral">&quot;Format<sp/>conversion<sp/>&apos;z&apos;<sp/>not<sp/>implemented<sp/>yet.\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1054"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/><sp/><sp/><sp/>=<sp/>va_arg<sp/>(argptr,<sp/>size_t)<sp/>;</highlight></codeline>
<codeline lineno="1055"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(size)</highlight></codeline>
<codeline lineno="1056"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;header<sp/>[psf-&gt;headindex]<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1057"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;headindex<sp/>++<sp/>;</highlight></codeline>
<codeline lineno="1058"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>--<sp/>;</highlight></codeline>
<codeline lineno="1059"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="1060"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>seek<sp/>position<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header_seek<sp/>(psf,<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>,<sp/>SEEK_SET)<sp/>;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_count<sp/>=<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;j&apos;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>seek<sp/>position<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>=<sp/>va_arg<sp/>(argptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header_seek<sp/>(psf,<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>,<sp/>SEEK_CUR)<sp/>;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_count<sp/>+=<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1a79339bae8c0e3af5468b507d261922a5" kindref="member">psf_log_printf</ref><sp/>(psf,<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>Invalid<sp/>format<sp/>specifier<sp/>`%c&apos;\n&quot;</highlight><highlight class="normal">,<sp/>c)<sp/>;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a4213ea059db3a7b9453342f6e9714649" kindref="member">error</ref><sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1a34df7cc7f69a8ec535eec8a524dcbaf9a97febf8de2d0aee94b5e514c38c59515" kindref="member">SFE_INTERNAL</ref><sp/>;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end<sp/>(argptr)<sp/>;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>byte_count<sp/>;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>psf_binheader_readf<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1090"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref></highlight></codeline>
<codeline lineno="1093" refid="src_2common_8c_1a751d3b15364d9836202f4675d1e3d3c1" refkind="member"><highlight class="normal"><ref refid="src_2common_8c_1a751d3b15364d9836202f4675d1e3d3c1" kindref="member">psf_default_seek</ref><sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libsndfile_2src_2common_8h_1a86d500a34c624c2cae56bc25a31b12f3" kindref="member">UNUSED</ref><sp/>(mode),<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/>samples_from_start)</highlight></codeline>
<codeline lineno="1094"><highlight class="normal">{<sp/><sp/><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/><ref refid="xmlparse_8c_1a38975acbb6db0fe600f77477050279a4" kindref="member">position</ref>,<sp/>retval<sp/>;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>(psf-&gt;<ref refid="structsf__private__tag_1a4216875ecce622f520ef19f87aee3400" kindref="member">blockwidth</ref><sp/>&amp;&amp;<sp/>psf-&gt;<ref refid="structsf__private__tag_1a62eab65784107dfa9ec026a4e0d5c80e" kindref="member">dataoffset</ref><sp/>&gt;=<sp/>0))</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a4213ea059db3a7b9453342f6e9714649" kindref="member">error</ref><sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1a34df7cc7f69a8ec535eec8a524dcbaf9a7fa3bac66305cf7c7ff3b7b161c12fbc" kindref="member">SFE_BAD_SEEK</ref><sp/>;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="libsndfile_2src_2common_8h_1ad80e825b857e40c436ac3c0b0b31a07c" kindref="member">PSF_SEEK_ERROR</ref><sp/>;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>psf-&gt;<ref refid="structsf__private__tag_1aaa8084e49c5f62998a50e5d6d57e11bd" kindref="member">sf</ref>.<ref refid="struct_s_f___i_n_f_o_1ad8978123d4122e137e9500f65d28ac31" kindref="member">seekable</ref>)</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a4213ea059db3a7b9453342f6e9714649" kindref="member">error</ref><sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1a34df7cc7f69a8ec535eec8a524dcbaf9aa24285e7507a7aeed0d5ec22d7be102c" kindref="member">SFE_NOT_SEEKABLE</ref><sp/>;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="libsndfile_2src_2common_8h_1ad80e825b857e40c436ac3c0b0b31a07c" kindref="member">PSF_SEEK_ERROR</ref><sp/>;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>position<sp/>=<sp/>psf-&gt;<ref refid="structsf__private__tag_1a62eab65784107dfa9ec026a4e0d5c80e" kindref="member">dataoffset</ref><sp/>+<sp/>psf-&gt;<ref refid="structsf__private__tag_1a4216875ecce622f520ef19f87aee3400" kindref="member">blockwidth</ref><sp/>*<sp/>samples_from_start<sp/>;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1af9e75e7591ba5f797ad58c0a8aaaffb1" kindref="member">psf_fseek</ref><sp/>(psf,<sp/>position,<sp/>SEEK_SET))<sp/>!=<sp/>position)</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;<ref refid="structsf__private__tag_1a4213ea059db3a7b9453342f6e9714649" kindref="member">error</ref><sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1a34df7cc7f69a8ec535eec8a524dcbaf9ae36e0f240c3b947f44adfa4047ee508c" kindref="member">SFE_SEEK_FAILED</ref><sp/>;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libsndfile_2src_2common_8h_1ad80e825b857e40c436ac3c0b0b31a07c" kindref="member">PSF_SEEK_ERROR</ref><sp/>;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>samples_from_start<sp/>;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>psf_default_seek<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1117"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120" refid="libsndfile_2src_2common_8h_1a58ce198b2164ba0bc29019acbc6c7077" refkind="member"><highlight class="normal"><ref refid="src_2common_8c_1a58ce198b2164ba0bc29019acbc6c7077" kindref="member">psf_hexdump</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="1121"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ascii<sp/>[17]<sp/>;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref><sp/>;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((data<sp/>=<sp/>ptr)<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>;<sp/>k<sp/>+=<sp/>16)</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>memset<sp/>(ascii,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(ascii))<sp/>;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;%08X:<sp/>&quot;</highlight><highlight class="normal">,<sp/>k)<sp/>;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(m<sp/>=<sp/>0<sp/>;<sp/>m<sp/>&lt;<sp/>16<sp/>&amp;&amp;<sp/>k<sp/>+<sp/>m<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>;<sp/>m++)</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(m<sp/>==<sp/>8<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%02X<sp/>&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;%02X<sp/>&quot;</highlight><highlight class="normal">,<sp/>data<sp/>[k<sp/>+<sp/>m]<sp/>&amp;<sp/>0xFF)<sp/>;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ascii<sp/>[<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>]<sp/>=<sp/>psf_isprint<sp/>(data<sp/>[k<sp/>+<sp/>m])<sp/>?<sp/>data<sp/>[k<sp/>+<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>]<sp/>:<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&lt;=<sp/>8)<sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>m<sp/>&lt;<sp/>16<sp/>;<sp/>m++)<sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ascii<sp/>[16]<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ascii)<sp/>;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>psf_hexdump<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151" refid="libsndfile_2src_2common_8h_1a30966da96b1bd709203b9039d0442804" refkind="member"><highlight class="normal"><ref refid="src_2common_8c_1a30966da96b1bd709203b9039d0442804" kindref="member">psf_log_SF_INFO</ref><sp/>(<ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/>*psf)</highlight></codeline>
<codeline lineno="1152"><highlight class="normal">{<sp/><sp/><sp/><ref refid="src_2common_8c_1a79339bae8c0e3af5468b507d261922a5" kindref="member">psf_log_printf</ref><sp/>(psf,<sp/></highlight><highlight class="stringliteral">&quot;---------------------------------\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1a79339bae8c0e3af5468b507d261922a5" kindref="member">psf_log_printf</ref><sp/>(psf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Sample<sp/>rate<sp/>:<sp/><sp/><sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>psf-&gt;<ref refid="structsf__private__tag_1aaa8084e49c5f62998a50e5d6d57e11bd" kindref="member">sf</ref>.<ref refid="struct_s_f___i_n_f_o_1acfd248e20ab1c58b57aafc7b16404a5f" kindref="member">samplerate</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1a79339bae8c0e3af5468b507d261922a5" kindref="member">psf_log_printf</ref><sp/>(psf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Frames<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>%D\n&quot;</highlight><highlight class="normal">,<sp/>psf-&gt;<ref refid="structsf__private__tag_1aaa8084e49c5f62998a50e5d6d57e11bd" kindref="member">sf</ref>.<ref refid="struct_s_f___i_n_f_o_1a80838e7063ecc3d8d7ff9f92ab1efdfb" kindref="member">frames</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1a79339bae8c0e3af5468b507d261922a5" kindref="member">psf_log_printf</ref><sp/>(psf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Channels<sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>psf-&gt;<ref refid="structsf__private__tag_1aaa8084e49c5f62998a50e5d6d57e11bd" kindref="member">sf</ref>.<ref refid="struct_s_f___i_n_f_o_1aad5220b31d2672bf83d3cf4cea0b2826" kindref="member">channels</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1a79339bae8c0e3af5468b507d261922a5" kindref="member">psf_log_printf</ref><sp/>(psf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Format<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>0x%X\n&quot;</highlight><highlight class="normal">,<sp/>psf-&gt;<ref refid="structsf__private__tag_1aaa8084e49c5f62998a50e5d6d57e11bd" kindref="member">sf</ref>.<ref refid="struct_s_f___i_n_f_o_1a36a7c3ae9a8229797f19267b4ba07361" kindref="member">format</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1a79339bae8c0e3af5468b507d261922a5" kindref="member">psf_log_printf</ref><sp/>(psf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Sections<sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>psf-&gt;<ref refid="structsf__private__tag_1aaa8084e49c5f62998a50e5d6d57e11bd" kindref="member">sf</ref>.<ref refid="struct_s_f___i_n_f_o_1a5f4c7cb564c05f6c3eeac9164a806544" kindref="member">sections</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1a79339bae8c0e3af5468b507d261922a5" kindref="member">psf_log_printf</ref><sp/>(psf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Seekable<sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>psf-&gt;<ref refid="structsf__private__tag_1aaa8084e49c5f62998a50e5d6d57e11bd" kindref="member">sf</ref>.<ref refid="struct_s_f___i_n_f_o_1ad8978123d4122e137e9500f65d28ac31" kindref="member">seekable</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;TRUE&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;FALSE&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1a79339bae8c0e3af5468b507d261922a5" kindref="member">psf_log_printf</ref><sp/>(psf,<sp/></highlight><highlight class="stringliteral">&quot;---------------------------------\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>psf_dump_SFINFO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight><highlight class="comment">/*========================================================================================</highlight></codeline>
<codeline lineno="1166"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="1169" refid="libsndfile_2src_2common_8h_1a971ccf98c296fe754dc4a48df5b590ef" refkind="member"><highlight class="normal"><ref refid="src_2common_8c_1aaa0d30794cfac07a1d2119a18946ac83" kindref="member">psf_memset</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="1170"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr<sp/>;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>setcount<sp/>;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>s<sp/>;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>setcount<sp/>=<sp/>(len<sp/>&gt;<sp/>0x10000000)<sp/>?<sp/>0x10000000<sp/>:<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset<sp/>(ptr,<sp/>c,<sp/>setcount)<sp/>;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>+=<sp/>setcount<sp/>;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>-=<sp/>setcount<sp/>;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>psf_memset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><ref refid="struct_s_f___i_n_s_t_r_u_m_e_n_t" kindref="compound">SF_INSTRUMENT</ref><sp/>*</highlight></codeline>
<codeline lineno="1188" refid="libsndfile_2src_2common_8h_1a9ebb76e1e30f279ed75a7578d6c43373" refkind="member"><highlight class="normal"><ref refid="src_2common_8c_1a9ebb76e1e30f279ed75a7578d6c43373" kindref="member">psf_instrument_alloc</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1189"><highlight class="normal">{<sp/><sp/><sp/><ref refid="struct_s_f___i_n_s_t_r_u_m_e_n_t" kindref="compound">SF_INSTRUMENT</ref><sp/>*<ref refid="structinstr" kindref="compound">instr</ref><sp/>;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>instr<sp/>=<sp/>calloc<sp/>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_s_f___i_n_s_t_r_u_m_e_n_t" kindref="compound">SF_INSTRUMENT</ref>))<sp/>;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(instr<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>non-zero<sp/>default<sp/>values.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>instr-&gt;<ref refid="struct_s_f___i_n_s_t_r_u_m_e_n_t_1ab131f2d1e1297b20b9b64596bd9fef2c" kindref="member">basenote</ref><sp/>=<sp/>-1<sp/>;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>instr-&gt;<ref refid="struct_s_f___i_n_s_t_r_u_m_e_n_t_1a3637643126becba84608741033f91f47" kindref="member">velocity_lo</ref><sp/>=<sp/>-1<sp/>;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>instr-&gt;<ref refid="struct_s_f___i_n_s_t_r_u_m_e_n_t_1a4e1435a98a085a8df95f10ff1bed536f" kindref="member">velocity_hi</ref><sp/>=<sp/>-1<sp/>;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>instr-&gt;<ref refid="struct_s_f___i_n_s_t_r_u_m_e_n_t_1a9c59a466ad6937c6d6a5134a642aae6c" kindref="member">key_lo</ref><sp/>=<sp/>-1<sp/>;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>instr-&gt;<ref refid="struct_s_f___i_n_s_t_r_u_m_e_n_t_1ac5d3d85d2218849b73620cb1a70ea609" kindref="member">key_hi</ref><sp/>=<sp/>-1<sp/>;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instr<sp/>;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>psf_instrument_alloc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207" refid="libsndfile_2src_2common_8h_1a650529d3a68935b3c87fcd13d2e72482" refkind="member"><highlight class="normal"><ref refid="src_2common_8c_1a650529d3a68935b3c87fcd13d2e72482" kindref="member">psf_sanitize_string</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>cptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="1208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>--<sp/>;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cptr<sp/>[<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>]<sp/>=<sp/>psf_isprint<sp/>(cptr<sp/>[len])<sp/>?<sp/>cptr<sp/>[<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>]<sp/>:<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>0)<sp/>;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>psf_sanitize_string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218" refid="libsndfile_2src_2common_8h_1ad85c721fd5313fb7476603ff9067ff83" refkind="member"><highlight class="normal"><ref refid="src_2common_8c_1ad85c721fd5313fb7476603ff9067ff83" kindref="member">psf_get_date_str</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxlen)</highlight></codeline>
<codeline lineno="1219"><highlight class="normal">{<sp/><sp/><sp/>time_t<sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/><sp/><sp/>timedata,<sp/>*tmptr<sp/>;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref><sp/>(&amp;current)<sp/>;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(HAVE_GMTIME_R)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>re-entrant<sp/>version<sp/>is<sp/>available,<sp/>use<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>tmptr<sp/>=<sp/>gmtime_r<sp/>(&amp;current,<sp/>&amp;timedata)<sp/>;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>(HAVE_GMTIME)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Otherwise<sp/>use<sp/>the<sp/>standard<sp/>one<sp/>and<sp/>copy<sp/>the<sp/>data<sp/>to<sp/>local<sp/>storage.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>tmptr<sp/>=<sp/>gmtime<sp/>(&amp;current)<sp/>;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy<sp/>(&amp;timedata,<sp/>tmptr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(timedata))<sp/>;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/>tmptr<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmptr)</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref><sp/>(str,<sp/>maxlen,<sp/></highlight><highlight class="stringliteral">&quot;%4d-%02d-%02d<sp/>%02d:%02d:%02d<sp/>UTC&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1900<sp/>+<sp/>timedata.tm_year,<sp/>timedata.tm_mon,<sp/>timedata.tm_mday,</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timedata.tm_hour,<sp/>timedata.tm_min,<sp/>timedata.tm_sec)<sp/>;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref><sp/>(str,<sp/>maxlen,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>date&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>psf_get_date_str<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246" refid="libsndfile_2src_2common_8h_1a16f116a16797cd3bd6f3a36c6f9a10f5" refkind="member"><highlight class="normal"><ref refid="src_2common_8c_1a16f116a16797cd3bd6f3a36c6f9a10f5" kindref="member">subformat_to_bytewidth</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="1247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(format)</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea3828255dad74fc3ebb02b59afb28caae" kindref="member">SF_FORMAT_PCM_U8</ref><sp/>:</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea8c9b17bb36d115f80ef61dcae7631b26" kindref="member">SF_FORMAT_PCM_S8</ref><sp/>:</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea63515ce839545c11d35dc8c8c4c5c261" kindref="member">SF_FORMAT_PCM_16</ref><sp/>:</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2<sp/>;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea160bd57540f1d3d6acbf2e29ea4769f4" kindref="member">SF_FORMAT_PCM_24</ref><sp/>:</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3<sp/>;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea741fa21e06429d59eb548d6f388d16b4" kindref="member">SF_FORMAT_PCM_32</ref><sp/>:</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea8b19f7e84eb0556faff33623830b489b" kindref="member">SF_FORMAT_FLOAT</ref><sp/>:</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4<sp/>;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea7f5de05a45409d1ce72c9a2ecbff1bd3" kindref="member">SF_FORMAT_DOUBLE</ref><sp/>:</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>8<sp/>;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>subformat_to_bytewidth<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267" refid="libsndfile_2src_2common_8h_1ab22998bfb175ddb734b1886c86bae9a4" refkind="member"><highlight class="normal"><ref refid="src_2common_8c_1ab22998bfb175ddb734b1886c86bae9a4" kindref="member">s_bitwidth_to_subformat</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>)</highlight></codeline>
<codeline lineno="1268"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>array<sp/>[]<sp/>=</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea8c9b17bb36d115f80ef61dcae7631b26" kindref="member">SF_FORMAT_PCM_S8</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea63515ce839545c11d35dc8c8c4c5c261" kindref="member">SF_FORMAT_PCM_16</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea160bd57540f1d3d6acbf2e29ea4769f4" kindref="member">SF_FORMAT_PCM_24</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea741fa21e06429d59eb548d6f388d16b4" kindref="member">SF_FORMAT_PCM_32</ref></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bits<sp/>&lt;<sp/>8<sp/>||<sp/>bits<sp/>&gt;<sp/>32)</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>array<sp/>[((bits<sp/>+<sp/>7)<sp/>/<sp/>8)<sp/>-<sp/>1]<sp/>;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>bitwidth_to_subformat<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279" refid="libsndfile_2src_2common_8h_1ad9cf4e02a7d70404c052a624334b9641" refkind="member"><highlight class="normal"><ref refid="src_2common_8c_1ad9cf4e02a7d70404c052a624334b9641" kindref="member">u_bitwidth_to_subformat</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>)</highlight></codeline>
<codeline lineno="1280"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>array<sp/>[]<sp/>=</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea3828255dad74fc3ebb02b59afb28caae" kindref="member">SF_FORMAT_PCM_U8</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea63515ce839545c11d35dc8c8c4c5c261" kindref="member">SF_FORMAT_PCM_16</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea160bd57540f1d3d6acbf2e29ea4769f4" kindref="member">SF_FORMAT_PCM_24</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea741fa21e06429d59eb548d6f388d16b4" kindref="member">SF_FORMAT_PCM_32</ref></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bits<sp/>&lt;<sp/>8<sp/>||<sp/>bits<sp/>&gt;<sp/>32)</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>array<sp/>[((bits<sp/>+<sp/>7)<sp/>/<sp/>8)<sp/>-<sp/>1]<sp/>;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>bitwidth_to_subformat<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1291"><highlight class="comment">**<sp/><sp/>psf_rand_int32<sp/>:<sp/>Not<sp/>crypto<sp/>quality,<sp/>but<sp/>more<sp/>than<sp/>adequate<sp/>for<sp/>things</highlight></codeline>
<codeline lineno="1292"><highlight class="comment">**<sp/><sp/>like<sp/>stream<sp/>serial<sp/>numbers<sp/>in<sp/>Ogg<sp/>files<sp/>or<sp/>the<sp/>unique_id<sp/>field<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1293"><highlight class="comment">**<sp/><sp/>SF_PRIVATE<sp/>struct.</highlight></codeline>
<codeline lineno="1294"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref></highlight></codeline>
<codeline lineno="1297" refid="libsndfile_2src_2common_8h_1abd8efa2c77686423ad6247ecec07ced2" refkind="member"><highlight class="normal"><ref refid="src_2common_8c_1abd8efa2c77686423ad6247ecec07ced2" kindref="member">psf_rand_int32</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1298"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>-1<sp/>;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_GETTIMEOFDAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tv<sp/>;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gettimeofday<sp/>(&amp;tv,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>tv.tv_sec<sp/>+<sp/>tv.tv_usec<sp/>;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/><ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref><sp/>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/>4<sp/>+<sp/>(value<sp/>&amp;<sp/>7)<sp/>;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>11117<sp/>*<sp/>value<sp/>+<sp/>211231<sp/>;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>psf_rand_int32<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320" refid="libsndfile_2src_2common_8h_1aba9566072b652d0ebbb2049b9f5bdce9" refkind="member"><highlight class="normal"><ref refid="src_2common_8c_1aba9566072b652d0ebbb2049b9f5bdce9" kindref="member">append_snprintf</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxlen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="1321"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>strlen<sp/>(dest)<sp/>;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>maxlen)</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>va_list<sp/>ap<sp/>;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_start<sp/>(ap,<sp/>fmt)<sp/>;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vsnprintf<sp/>(dest<sp/>+<sp/>len,<sp/>maxlen<sp/>-<sp/>len,<sp/>fmt,<sp/>ap)<sp/>;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end<sp/>(ap)<sp/>;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>append_snprintf<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336" refid="libsndfile_2src_2common_8h_1aaad7ead665f4f2134afd1bcec721b0af" refkind="member"><highlight class="normal"><ref refid="src_2common_8c_1aaad7ead665f4f2134afd1bcec721b0af" kindref="member">psf_strlcpy_crlf</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>destmax,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>srcmax)</highlight></codeline>
<codeline lineno="1337"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Must<sp/>be<sp/>minus<sp/>2<sp/>so<sp/>it<sp/>can<sp/>still<sp/>expand<sp/>a<sp/>single<sp/>trailing<sp/>&apos;\n&apos;<sp/>or<sp/>&apos;\r&apos;.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>destend<sp/>=<sp/>dest<sp/>+<sp/>destmax<sp/>-<sp/>2<sp/>;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>srcend<sp/>=<sp/>src<sp/>+<sp/>srcmax<sp/>;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(dest<sp/>&lt;<sp/>destend<sp/>&amp;&amp;<sp/>src<sp/>&lt;<sp/>srcend)</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((src<sp/>[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>src<sp/>[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>||<sp/>(src<sp/>[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>src<sp/>[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>*dest++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dest++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src<sp/>+=<sp/>2<sp/>;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue<sp/>;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src<sp/>[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>*dest++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dest++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src<sp/>+=<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue<sp/>;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src<sp/>[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>*dest++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dest++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src<sp/>+=<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue<sp/>;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dest++<sp/>=<sp/>*src++<sp/>;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>dest<sp/>is<sp/>terminated.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/>*dest<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>psf_strlcpy_crlf<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight><highlight class="comment">/*==============================================================================</highlight></codeline>
<codeline lineno="1371"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373" refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CASE_NAME(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>x<sp/>:<sp/>return<sp/>#x<sp/>;<sp/>break<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="1376" refid="libsndfile_2src_2common_8h_1abbab3767e8b9e7aacf6dd5bd104b05c5" refkind="member"><highlight class="normal"><ref refid="src_2common_8c_1abbab3767e8b9e7aacf6dd5bd104b05c5" kindref="member">str_of_major_format</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="1377"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="libsndfile_2src_2common_8h_1a20b6967beec1424ff5ab849712b9efb2" kindref="member">SF_CONTAINER</ref><sp/>(format))</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea6c1fc181944f58b4bcd23a05acd34499" kindref="member">SF_FORMAT_WAV</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea6b3c3276356e59c65552aa8dc81c8f8b" kindref="member">SF_FORMAT_AIFF</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feaf4bf74071da31239a8bbe3a34877d511" kindref="member">SF_FORMAT_AU</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea754f6ac6e6b293b1ffcb1d06412fa297" kindref="member">SF_FORMAT_RAW</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea67e5cf6543280ccf166a2489658ab4ea" kindref="member">SF_FORMAT_PAF</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea589143a1c82410acb51792eba617ec02" kindref="member">SF_FORMAT_SVX</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea8905ae7f3ab72cc5b667cf43a89d378b" kindref="member">SF_FORMAT_NIST</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feaac658149adf5858ad555460103a72e36" kindref="member">SF_FORMAT_VOC</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea876afc0cbbb2ef3bfce2ed0013c3a07c" kindref="member">SF_FORMAT_IRCAM</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea1550936375eaff26d88f01c5e57b679c" kindref="member">SF_FORMAT_W64</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feace8c193d02de42380758f1428b95603f" kindref="member">SF_FORMAT_MAT4</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea81a423e6776be321f518ddf39d49755d" kindref="member">SF_FORMAT_MAT5</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea339137ced07d99c95c80cea58165c2b0" kindref="member">SF_FORMAT_PVF</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea61cf59e2b4e7782f59f21370397e3b42" kindref="member">SF_FORMAT_XI</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feaf9786f5a4824ff5c5a1f8b12e2ca1b8a" kindref="member">SF_FORMAT_HTK</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feacba7b7998062f1749acf67a17ad57cf2" kindref="member">SF_FORMAT_SDS</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fead9e4eb2bce984e40515ba901c1e6fee6" kindref="member">SF_FORMAT_AVR</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feaf84597ff85285cec0ef7a253ee7ee03b" kindref="member">SF_FORMAT_WAVEX</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea09f74ea32b2c1e5f6e8860a63fee39c7" kindref="member">SF_FORMAT_SD2</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feae7dd912842b509d648d62915b996b06f" kindref="member">SF_FORMAT_FLAC</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feaebb9b420892e6347299efea9b1de731a" kindref="member">SF_FORMAT_CAF</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea9fa3f8c0e1f841adbe18fff6afd9b225" kindref="member">SF_FORMAT_WVE</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feaaaef1f7e663487eefbe4106de44ea7fd" kindref="member">SF_FORMAT_OGG</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;BAD_MAJOR_FORMAT&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>str_of_major_format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="1409" refid="libsndfile_2src_2common_8h_1a77f1913d5f203becc03d64b47059fb3b" refkind="member"><highlight class="normal"><ref refid="src_2common_8c_1a77f1913d5f203becc03d64b47059fb3b" kindref="member">str_of_minor_format</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="1410"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="libsndfile_2src_2common_8h_1af2ee9fc862c8d3e16bbc57b714e51488" kindref="member">SF_CODEC</ref><sp/>(format))</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea8c9b17bb36d115f80ef61dcae7631b26" kindref="member">SF_FORMAT_PCM_S8</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea63515ce839545c11d35dc8c8c4c5c261" kindref="member">SF_FORMAT_PCM_16</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea160bd57540f1d3d6acbf2e29ea4769f4" kindref="member">SF_FORMAT_PCM_24</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea741fa21e06429d59eb548d6f388d16b4" kindref="member">SF_FORMAT_PCM_32</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea3828255dad74fc3ebb02b59afb28caae" kindref="member">SF_FORMAT_PCM_U8</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea8b19f7e84eb0556faff33623830b489b" kindref="member">SF_FORMAT_FLOAT</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea7f5de05a45409d1ce72c9a2ecbff1bd3" kindref="member">SF_FORMAT_DOUBLE</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feae3fd36f90782efc0ee6d00cc4a6f4060" kindref="member">SF_FORMAT_ULAW</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea88cd6729a685a388edbf6b971bc57d59" kindref="member">SF_FORMAT_ALAW</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea84028970a006395da0454b107749238e" kindref="member">SF_FORMAT_IMA_ADPCM</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feae668a3aeec6b4ed1b13bf61bf826853e" kindref="member">SF_FORMAT_MS_ADPCM</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feaf83aeb49bdbb825a72f7e28a917b3ff8" kindref="member">SF_FORMAT_GSM610</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea313dc159c6ef2fbb2aa8a8527ae679d6" kindref="member">SF_FORMAT_VOX_ADPCM</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feaac83013f62a7f7b43d9cf7738b0752da" kindref="member">SF_FORMAT_G721_32</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feada2bb516d73e8f64dbde9a30e9c2fe3a" kindref="member">SF_FORMAT_G723_24</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feaa5c30385e6f2292e273fd4c2897bee6b" kindref="member">SF_FORMAT_G723_40</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea82f7b868e26a90aa9f35aca78dccd6cb" kindref="member">SF_FORMAT_DWVW_12</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feaa4e811170b266013a8e48089466b1eaa" kindref="member">SF_FORMAT_DWVW_16</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea0f25d45633813e4d4e9115a635d4e44c" kindref="member">SF_FORMAT_DWVW_24</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea90c0d2cd326ee0c8535500290ddac4c6" kindref="member">SF_FORMAT_DWVW_N</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea8fed18695608391eec4fde4ef6aca65e" kindref="member">SF_FORMAT_DPCM_8</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea1760953aad0c96ca1c85cac5b353b919" kindref="member">SF_FORMAT_DPCM_16</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea029114057a7956f3c94ae18d269faf61" kindref="member">SF_FORMAT_VORBIS</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;BAD_MINOR_FORMAT&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>str_of_minor_format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="1442" refid="libsndfile_2src_2common_8h_1ae115c97ccc00a177c0dffc84ac817de7" refkind="member"><highlight class="normal"><ref refid="src_2common_8c_1ae115c97ccc00a177c0dffc84ac817de7" kindref="member">str_of_open_mode</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode)</highlight></codeline>
<codeline lineno="1443"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mode)</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a125531fe9c895237bccd35736370e815" kindref="member">SFM_READ</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a449991ce14cb1b9715cf444ffdb9e4a0" kindref="member">SFM_WRITE</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a1860040e1c905b2fe2dd7dded86d2544" kindref="member">SFM_RDWR</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;BAD_MODE&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>str_of_open_mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="1456" refid="libsndfile_2src_2common_8h_1a2974f1111c9b38438327185ebd27b06d" refkind="member"><highlight class="normal"><ref refid="src_2common_8c_1a2974f1111c9b38438327185ebd27b06d" kindref="member">str_of_endianness</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>)</highlight></codeline>
<codeline lineno="1457"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(end)</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea0c342389e92c7a1cbbf5267cd25db357" kindref="member">SF_ENDIAN_BIG</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea5e4eee211f84815fdc7932cf26e2cda2" kindref="member">SF_ENDIAN_LITTLE</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aa183e95daaa8ef4e89e4434ba129f39d" kindref="member">CASE_NAME</ref><sp/>(<ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea8cb50cf8159f5eca028506e847b3357f" kindref="member">SF_ENDIAN_CPU</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Zero<sp/>length<sp/>string<sp/>for<sp/>SF_ENDIAN_FILE.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>str_of_endianness<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c"/>
  </compounddef>
</doxygen>
