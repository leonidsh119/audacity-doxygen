<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_vamp_1_1_plugin_base" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Vamp::PluginBase</compoundname>
    <derivedcompoundref refid="class_vamp_1_1_plugin" prot="public" virt="non-virtual">Vamp::Plugin</derivedcompoundref>
    <includes refid="vamp-sdk_2_plugin_base_8h" local="no">PluginBase.h</includes>
    <innerclass refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor" prot="public">Vamp::PluginBase::ParameterDescriptor</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_vamp_1_1_plugin_base_1a3b6bb4bbd86affe1ca9deceea1aad4f8" prot="public" static="no">
        <type>std::vector&lt; <ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor" kindref="compound">ParameterDescriptor</ref> &gt;</type>
        <definition>typedef std::vector&lt;ParameterDescriptor&gt; Vamp::PluginBase::ParameterList</definition>
        <argsstring></argsstring>
        <name>ParameterList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" line="199" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_vamp_1_1_plugin_base_1a7f66f00437b21e5f694fe02356b12f20" prot="public" static="no">
        <type>std::vector&lt; <ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref> &gt;</type>
        <definition>typedef std::vector&lt;std::string&gt; Vamp::PluginBase::ProgramList</definition>
        <argsstring></argsstring>
        <name>ProgramList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" line="221" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_vamp_1_1_plugin_base_1a3773b37c658cf22d7f135c575a28f5c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual Vamp::PluginBase::~PluginBase</definition>
        <argsstring>()</argsstring>
        <name>~PluginBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" line="63" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_vamp_1_1_plugin_base_1a8fd2c48291c64b790f0efb8948508dcf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>virtual unsigned int Vamp::PluginBase::getVampApiVersion</definition>
        <argsstring>() const </argsstring>
        <name>getVampApiVersion</name>
        <reimplementedby refid="class_vamp_1_1_host_ext_1_1_plugin_wrapper_1a74147fda6b44ff2169bd4a1eea0d46ff">getVampApiVersion</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_plugin_host_adapter_1a98aadddc8403eb46c9d8c5a9d1fdd19e">getVampApiVersion</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the <ref refid="namespace_vamp" kindref="compound">Vamp</ref> API compatibility level of the plugin. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" line="68" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_vamp_1_1_plugin_base_1a0d1947bb05097718af83eefe7a1910cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></type>
        <definition>virtual std::string Vamp::PluginBase::getIdentifier</definition>
        <argsstring>() const  =0</argsstring>
        <name>getIdentifier</name>
        <reimplementedby refid="class_my_plugin_1a65cc80b7044e4b69d4618709a9562b63">getIdentifier</reimplementedby>
        <reimplementedby refid="class_percussion_onset_detector_1a267c83a7533146c127e2c3be310e0154">getIdentifier</reimplementedby>
        <reimplementedby refid="class_fixed_tempo_estimator_1ab818edcf1555177d10260e197e3a5e7a">getIdentifier</reimplementedby>
        <reimplementedby refid="class_zero_crossing_1af2baf9e19fcdd11cfe97ace56d4f5c1a">getIdentifier</reimplementedby>
        <reimplementedby refid="class_spectral_centroid_1a1b2c4c8440c024c4c635fcef5697949f">getIdentifier</reimplementedby>
        <reimplementedby refid="class_amplitude_follower_1afe7576af95c8fcc7f5bad42eec9f9f29">getIdentifier</reimplementedby>
        <reimplementedby refid="class_power_spectrum_1a9e9d8349461cbb88d7565a5e8c51b64e">getIdentifier</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_host_ext_1_1_plugin_wrapper_1a4baa9e48f717c2b3e7f92496aa39d904">getIdentifier</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_plugin_host_adapter_1ab27423a656f878d97d2ad2eba4e76c7a">getIdentifier</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the computer-usable name of the plugin. This should be reasonably short and contain no whitespace or punctuation characters. It may only contain the characters [a-zA-Z0-9_-]. This is the authoritative way for a program to identify a plugin within a given library.</para><para>This text may be visible to the user, but it should not be the main text used to identify a plugin to the user (that will be the name, below).</para><para>Example: &quot;zero_crossings&quot; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_vamp_1_1_plugin_base_1ada907f5fa10e503005bdf445f03f7adf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></type>
        <definition>virtual std::string Vamp::PluginBase::getName</definition>
        <argsstring>() const  =0</argsstring>
        <name>getName</name>
        <reimplementedby refid="class_my_plugin_1aa29c4758d0441cea22c5f677bc0533c9">getName</reimplementedby>
        <reimplementedby refid="class_percussion_onset_detector_1aa98f1ad061a11af98c054011a8844e6f">getName</reimplementedby>
        <reimplementedby refid="class_fixed_tempo_estimator_1af9eb6fa8a98aa66b55e64e1795f9405f">getName</reimplementedby>
        <reimplementedby refid="class_zero_crossing_1afa96f7ce6e7d9f03768f48c6a9d88498">getName</reimplementedby>
        <reimplementedby refid="class_spectral_centroid_1ab7e6a620fea568af431be3cfd9dd5a41">getName</reimplementedby>
        <reimplementedby refid="class_amplitude_follower_1a7cfed00bc9d96ba6c709b69ab6a40594">getName</reimplementedby>
        <reimplementedby refid="class_power_spectrum_1ac9214f9cafeeed3fca549c90aef57623">getName</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_host_ext_1_1_plugin_wrapper_1ac70a3265bb25aeb03f6dd8f8a0442088">getName</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_plugin_host_adapter_1a45f1d0377e233eeddd1b7cefb48be62a">getName</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a human-readable name or title of the plugin. This should be brief and self-contained, as it may be used to identify the plugin to the user in isolation (i.e. without also showing the plugin&apos;s &quot;identifier&quot;).</para><para>Example: &quot;Zero Crossings&quot; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_vamp_1_1_plugin_base_1ab210db7ce8f2eaa6cfddf2c7e64555ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></type>
        <definition>virtual std::string Vamp::PluginBase::getDescription</definition>
        <argsstring>() const  =0</argsstring>
        <name>getDescription</name>
        <reimplementedby refid="class_my_plugin_1a714bfe4d7c447767a9d24a626e702d3f">getDescription</reimplementedby>
        <reimplementedby refid="class_percussion_onset_detector_1a9061d189705802a48973a7ccab6360db">getDescription</reimplementedby>
        <reimplementedby refid="class_fixed_tempo_estimator_1a06b00853f00c2e78d490697fcd7d1920">getDescription</reimplementedby>
        <reimplementedby refid="class_zero_crossing_1a710bb0b013157adaeef2a9e6867b4478">getDescription</reimplementedby>
        <reimplementedby refid="class_spectral_centroid_1a8fbb74a46283057d9a0b0e4718ee943c">getDescription</reimplementedby>
        <reimplementedby refid="class_amplitude_follower_1a6f0f2fea1fdb4b51e688edfe859d5062">getDescription</reimplementedby>
        <reimplementedby refid="class_power_spectrum_1a7b48d56dc954f3af344f7e4dcd8993e5">getDescription</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_host_ext_1_1_plugin_wrapper_1ac334f699c0996055942785410d8a065c">getDescription</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_plugin_host_adapter_1a5eaafcef030e81b90a3e77cf16cf8ae1">getDescription</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a human-readable description for the plugin, typically a line of text that may optionally be displayed in addition to the plugin&apos;s &quot;name&quot;. May be empty if the name has said it all already.</para><para>Example: &quot;Detect and count zero crossing points&quot; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_vamp_1_1_plugin_base_1a6d54bf690c421c7865dccdfd0dda23a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></type>
        <definition>virtual std::string Vamp::PluginBase::getMaker</definition>
        <argsstring>() const  =0</argsstring>
        <name>getMaker</name>
        <reimplementedby refid="class_my_plugin_1a35aabf14bf6ecd67046849ee57e703e1">getMaker</reimplementedby>
        <reimplementedby refid="class_percussion_onset_detector_1a63d63f2cb7ea8d8b09d58cc13b541375">getMaker</reimplementedby>
        <reimplementedby refid="class_fixed_tempo_estimator_1ae910d1b9250b11097fd6b51cd8285b68">getMaker</reimplementedby>
        <reimplementedby refid="class_zero_crossing_1ac68561634a3c329a029c2fd3deaeae2a">getMaker</reimplementedby>
        <reimplementedby refid="class_spectral_centroid_1ac01ff858bf67e2e93ad5d24a6ba8c8c8">getMaker</reimplementedby>
        <reimplementedby refid="class_amplitude_follower_1a44fc43838f203f58bc2ce6e3cb2b03dd">getMaker</reimplementedby>
        <reimplementedby refid="class_power_spectrum_1a9f3e3f759e2b67c771a41f1c276984b2">getMaker</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_host_ext_1_1_plugin_wrapper_1a59d5a2298951b317995675e664b1c7bb">getMaker</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_plugin_host_adapter_1af572be0b175f5661559006a380a0f3db">getMaker</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of the author or vendor of the plugin in human-readable form. This should be a short identifying text, as it may be used to label plugins from the same source in a menu or similar. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_vamp_1_1_plugin_base_1ae20b78e081f13a5d71b17e89e05d48e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></type>
        <definition>virtual std::string Vamp::PluginBase::getCopyright</definition>
        <argsstring>() const  =0</argsstring>
        <name>getCopyright</name>
        <reimplementedby refid="class_my_plugin_1aaf4e313da4a5301229130e84bdf075a5">getCopyright</reimplementedby>
        <reimplementedby refid="class_percussion_onset_detector_1a1a22ece271330c94cc08798a77416351">getCopyright</reimplementedby>
        <reimplementedby refid="class_fixed_tempo_estimator_1a50c6b64530c84c0707ba3936c5022a48">getCopyright</reimplementedby>
        <reimplementedby refid="class_zero_crossing_1af9c41b92aa8ff8bddaebf75569ff789c">getCopyright</reimplementedby>
        <reimplementedby refid="class_spectral_centroid_1a925747d513d598e0fa21ed0ed6520980">getCopyright</reimplementedby>
        <reimplementedby refid="class_amplitude_follower_1a0c197fc90f30d91cb4403115c83c9134">getCopyright</reimplementedby>
        <reimplementedby refid="class_power_spectrum_1a708b4d335c57643d5ef2b2e1caf43bd9">getCopyright</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_host_ext_1_1_plugin_wrapper_1ae14f6ecb78be909c4cd5f0cdaed3c566">getCopyright</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_plugin_host_adapter_1ac73c9d6baad04369beee695e99584815">getCopyright</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the copyright statement or licensing summary for the plugin. This can be an informative text, without the same presentation constraints as mentioned for getMaker above. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_vamp_1_1_plugin_base_1a315c884db72db5cef0891eaccb6d12cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>virtual int Vamp::PluginBase::getPluginVersion</definition>
        <argsstring>() const  =0</argsstring>
        <name>getPluginVersion</name>
        <reimplementedby refid="class_my_plugin_1ac84f4863a39b25bb04c02a5188bf35d4">getPluginVersion</reimplementedby>
        <reimplementedby refid="class_percussion_onset_detector_1ad6b818dbd81867ce7be71c99cae861be">getPluginVersion</reimplementedby>
        <reimplementedby refid="class_fixed_tempo_estimator_1ad002fddb3735c2dd7e31e6a9def9949f">getPluginVersion</reimplementedby>
        <reimplementedby refid="class_zero_crossing_1ad685f6c2f443f07a1634550c335571eb">getPluginVersion</reimplementedby>
        <reimplementedby refid="class_spectral_centroid_1af64622e66bf678ac2b0b58aa832ca2b3">getPluginVersion</reimplementedby>
        <reimplementedby refid="class_amplitude_follower_1a8a5d7a834eb996d517c51f84b2a72250">getPluginVersion</reimplementedby>
        <reimplementedby refid="class_power_spectrum_1ad23d27e4e82f10404a37b933f6a72c33">getPluginVersion</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_host_ext_1_1_plugin_wrapper_1a47e1acf1696813008324a915c9ba59c5">getPluginVersion</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_plugin_host_adapter_1a6fbd94781867ca46a20368c2a3593c77">getPluginVersion</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the version number of the plugin. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_vamp_1_1_plugin_base_1aac3e49b3b66cacfbb768dfdf07444f21" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_vamp_1_1_plugin_base_1a3b6bb4bbd86affe1ca9deceea1aad4f8" kindref="member">ParameterList</ref></type>
        <definition>virtual ParameterList Vamp::PluginBase::getParameterDescriptors</definition>
        <argsstring>() const </argsstring>
        <name>getParameterDescriptors</name>
        <reimplementedby refid="class_my_plugin_1a0a8eef408f4064eba399f1dd7df551dd">getParameterDescriptors</reimplementedby>
        <reimplementedby refid="class_percussion_onset_detector_1abceae88cc9762b0ea310d7aad71de815">getParameterDescriptors</reimplementedby>
        <reimplementedby refid="class_fixed_tempo_estimator_1ae157465a4e07d180bab05b5c3a4d8987">getParameterDescriptors</reimplementedby>
        <reimplementedby refid="class_amplitude_follower_1a9df01323a09e117bc12354ebe9244edf">getParameterDescriptors</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_host_ext_1_1_plugin_wrapper_1a3b075b8f950b344503f0d27ac0fe332e">getParameterDescriptors</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_plugin_host_adapter_1abfa93b20d9b5651a32042a9bb7c8df13">getParameterDescriptors</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the controllable parameters of this plugin. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" line="204" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" bodystart="204" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="class_vamp_1_1_plugin_base_1a97ababcd45348ceec998d0f8e0f38bf7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>float</type>
        <definition>virtual float Vamp::PluginBase::getParameter</definition>
        <argsstring>(std::string) const </argsstring>
        <name>getParameter</name>
        <reimplementedby refid="class_percussion_onset_detector_1a9b28da8315fcde46ce7644d6592ba527">getParameter</reimplementedby>
        <reimplementedby refid="class_fixed_tempo_estimator_1a2030b05fb1228b30ace16200780c9152">getParameter</reimplementedby>
        <reimplementedby refid="class_amplitude_follower_1ab278c4b6f2ca23248dc94ad775273f39">getParameter</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_host_ext_1_1_plugin_wrapper_1a034920f56c8d7609a85447c42556048c">getParameter</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_plugin_host_adapter_1af0c46d4f67ca93be7c76f3ea2e6c8efb">getParameter</reimplementedby>
        <param>
          <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the value of a named parameter. The argument is the identifier field from that parameter&apos;s descriptor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" line="212" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" bodystart="212" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="class_vamp_1_1_plugin_base_1a6c718ce822f7b73b98940d59dcaa9366" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>virtual void Vamp::PluginBase::setParameter</definition>
        <argsstring>(std::string, float)</argsstring>
        <name>setParameter</name>
        <reimplementedby refid="class_percussion_onset_detector_1aa097d72488e1211f05fc661ff5c6dc01">setParameter</reimplementedby>
        <reimplementedby refid="class_fixed_tempo_estimator_1a8a5a413025384cf451c64d2c2ce13a75">setParameter</reimplementedby>
        <reimplementedby refid="class_amplitude_follower_1ae1fc37ece4d20e40f3066a3361a99340">setParameter</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_host_ext_1_1_plugin_wrapper_1a651b15a5dc4c27942ac0c87c6092bfe5">setParameter</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_plugin_host_adapter_1a29f75395aa75b9de0228aa11edf9c6d6">setParameter</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_host_ext_1_1_plugin_buffering_adapter_1a7a979b20c169d37adbd7b7d8b8a077b3">setParameter</reimplementedby>
        <param>
          <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></type>
        </param>
        <param>
          <type>float</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a named parameter. The first argument is the identifier field from that parameter&apos;s descriptor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" line="218" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" bodystart="218" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="class_vamp_1_1_plugin_base_1abb307c60bdb981d5f5af50c3c4ae84af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_vamp_1_1_plugin_base_1a7f66f00437b21e5f694fe02356b12f20" kindref="member">ProgramList</ref></type>
        <definition>virtual ProgramList Vamp::PluginBase::getPrograms</definition>
        <argsstring>() const </argsstring>
        <name>getPrograms</name>
        <reimplementedby refid="class_my_plugin_1ab100832a8b92d3fcc46ca76ef391fefe">getPrograms</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_host_ext_1_1_plugin_wrapper_1af3abaf717dc4b00cad5770ed6dfa01e1">getPrograms</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_plugin_host_adapter_1a7ac5681dcfe08b7b8a796bffc0aff3e3">getPrograms</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the program settings available in this plugin. A program is a named shorthand for a set of parameter values; changing the program may cause the plugin to alter the values of its published parameters (and/or non-public internal processing parameters). The host should re-read the plugin&apos;s parameter values after setting a new program.</para><para>The programs must have unique names. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" line="233" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" bodystart="233" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="class_vamp_1_1_plugin_base_1a24e77eccf1bdfbbca3c79bb25e8799b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></type>
        <definition>virtual std::string Vamp::PluginBase::getCurrentProgram</definition>
        <argsstring>() const </argsstring>
        <name>getCurrentProgram</name>
        <reimplementedby refid="class_my_plugin_1a578bf0aacd96f14eb4833aa62f4e33f4">getCurrentProgram</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_host_ext_1_1_plugin_wrapper_1a7a312dd42d161064b70afd7ff24c0651">getCurrentProgram</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_plugin_host_adapter_1a34859eff8ca8d862af39be9636ec1867">getCurrentProgram</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current program. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" line="238" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" bodystart="238" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="class_vamp_1_1_plugin_base_1aadd3a547ef140bae200473a9518e3353" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>virtual void Vamp::PluginBase::selectProgram</definition>
        <argsstring>(std::string)</argsstring>
        <name>selectProgram</name>
        <reimplementedby refid="class_vamp_1_1_host_ext_1_1_plugin_wrapper_1a074978333a74fdcf336a8a1d8ea20abf">selectProgram</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_plugin_host_adapter_1a8f5515ab34cc13d9403ccc6b4b788683">selectProgram</reimplementedby>
        <reimplementedby refid="class_vamp_1_1_host_ext_1_1_plugin_buffering_adapter_1a3cc7000e0aff525950e0a286b87f8927">selectProgram</reimplementedby>
        <param>
          <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Select a program. (If the given program name is not one of the available programs, do nothing.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" line="244" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" bodystart="244" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="class_vamp_1_1_plugin_base_1aec6beb4e410ee3a69d7f87c3715cd646" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></type>
        <definition>virtual std::string Vamp::PluginBase::getType</definition>
        <argsstring>() const  =0</argsstring>
        <name>getType</name>
        <reimplementedby refid="class_vamp_1_1_plugin_1abe13b3997a69fbcc09e2213faa352f91">getType</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the type of plugin. This is to be implemented by the immediate subclass, not by actual plugins. Do not attempt to implement this in plugin code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" line="251" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A base class for plugins with optional configurable parameters, programs, etc. The <ref refid="class_vamp_1_1_plugin" kindref="compound">Vamp::Plugin</ref> is derived from this, and individual <ref refid="namespace_vamp" kindref="compound">Vamp</ref> plugins should derive from that.</para><para>This class does not provide the necessary interfaces to instantiate or run a plugin. It only specifies an interface for retrieving those controls that the host may wish to show to the user for editing. It could meaningfully be subclassed by real-time plugins or other sorts of plugin as well as <ref refid="namespace_vamp" kindref="compound">Vamp</ref> plugins. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="8879">
        <label>Vamp::Plugin</label>
        <link refid="class_vamp_1_1_plugin"/>
        <childnode refid="8878" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8894">
        <label>ZeroCrossing</label>
        <link refid="class_zero_crossing"/>
        <childnode refid="8879" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8888">
        <label>Vamp::HostExt::PluginBufferingAdapter</label>
        <link refid="class_vamp_1_1_host_ext_1_1_plugin_buffering_adapter"/>
        <childnode refid="8887" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8890">
        <label>Vamp::HostExt::PluginInputDomainAdapter</label>
        <link refid="class_vamp_1_1_host_ext_1_1_plugin_input_domain_adapter"/>
        <childnode refid="8887" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8884">
        <label>PowerSpectrum</label>
        <link refid="class_power_spectrum"/>
        <childnode refid="8879" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8882">
        <label>MyPlugin</label>
        <link refid="class_my_plugin"/>
        <childnode refid="8879" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8878">
        <label>Vamp::PluginBase</label>
        <link refid="class_vamp_1_1_plugin_base"/>
      </node>
      <node id="8883">
        <label>PercussionOnsetDetector</label>
        <link refid="class_percussion_onset_detector"/>
        <childnode refid="8879" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8885">
        <label>SpectralCentroid</label>
        <link refid="class_spectral_centroid"/>
        <childnode refid="8879" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8889">
        <label>Vamp::HostExt::PluginChannelAdapter</label>
        <link refid="class_vamp_1_1_host_ext_1_1_plugin_channel_adapter"/>
        <childnode refid="8887" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8886">
        <label>Vamp::HostExt::PluginRateExtractor</label>
        <link refid="class_vamp_1_1_host_ext_1_1_plugin_rate_extractor"/>
        <childnode refid="8879" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8893">
        <label>Vamp::PluginHostAdapter</label>
        <link refid="class_vamp_1_1_plugin_host_adapter"/>
        <childnode refid="8879" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8880">
        <label>AmplitudeFollower</label>
        <link refid="class_amplitude_follower"/>
        <childnode refid="8879" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8881">
        <label>FixedTempoEstimator</label>
        <link refid="class_fixed_tempo_estimator"/>
        <childnode refid="8879" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8892">
        <label>Vamp::HostExt::PluginSummarisingAdapter</label>
        <link refid="class_vamp_1_1_host_ext_1_1_plugin_summarising_adapter"/>
        <childnode refid="8887" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8887">
        <label>Vamp::HostExt::PluginWrapper</label>
        <link refid="class_vamp_1_1_host_ext_1_1_plugin_wrapper"/>
        <childnode refid="8879" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8891">
        <label>Vamp::HostExt::PluginLoader::Impl::PluginDeletionNotifyAdapter</label>
        <link refid="class_vamp_1_1_host_ext_1_1_plugin_loader_1_1_impl_1_1_plugin_deletion_notify_adapter"/>
        <childnode refid="8887" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" line="61" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginBase.h" bodystart="60" bodyend="252"/>
    <listofallmembers>
      <member refid="class_vamp_1_1_plugin_base_1ae20b78e081f13a5d71b17e89e05d48e2" prot="public" virt="pure-virtual"><scope>Vamp::PluginBase</scope><name>getCopyright</name></member>
      <member refid="class_vamp_1_1_plugin_base_1a24e77eccf1bdfbbca3c79bb25e8799b3" prot="public" virt="virtual"><scope>Vamp::PluginBase</scope><name>getCurrentProgram</name></member>
      <member refid="class_vamp_1_1_plugin_base_1ab210db7ce8f2eaa6cfddf2c7e64555ad" prot="public" virt="pure-virtual"><scope>Vamp::PluginBase</scope><name>getDescription</name></member>
      <member refid="class_vamp_1_1_plugin_base_1a0d1947bb05097718af83eefe7a1910cd" prot="public" virt="pure-virtual"><scope>Vamp::PluginBase</scope><name>getIdentifier</name></member>
      <member refid="class_vamp_1_1_plugin_base_1a6d54bf690c421c7865dccdfd0dda23a8" prot="public" virt="pure-virtual"><scope>Vamp::PluginBase</scope><name>getMaker</name></member>
      <member refid="class_vamp_1_1_plugin_base_1ada907f5fa10e503005bdf445f03f7adf" prot="public" virt="pure-virtual"><scope>Vamp::PluginBase</scope><name>getName</name></member>
      <member refid="class_vamp_1_1_plugin_base_1a97ababcd45348ceec998d0f8e0f38bf7" prot="public" virt="virtual"><scope>Vamp::PluginBase</scope><name>getParameter</name></member>
      <member refid="class_vamp_1_1_plugin_base_1aac3e49b3b66cacfbb768dfdf07444f21" prot="public" virt="virtual"><scope>Vamp::PluginBase</scope><name>getParameterDescriptors</name></member>
      <member refid="class_vamp_1_1_plugin_base_1a315c884db72db5cef0891eaccb6d12cc" prot="public" virt="pure-virtual"><scope>Vamp::PluginBase</scope><name>getPluginVersion</name></member>
      <member refid="class_vamp_1_1_plugin_base_1abb307c60bdb981d5f5af50c3c4ae84af" prot="public" virt="virtual"><scope>Vamp::PluginBase</scope><name>getPrograms</name></member>
      <member refid="class_vamp_1_1_plugin_base_1aec6beb4e410ee3a69d7f87c3715cd646" prot="public" virt="pure-virtual"><scope>Vamp::PluginBase</scope><name>getType</name></member>
      <member refid="class_vamp_1_1_plugin_base_1a8fd2c48291c64b790f0efb8948508dcf" prot="public" virt="virtual"><scope>Vamp::PluginBase</scope><name>getVampApiVersion</name></member>
      <member refid="class_vamp_1_1_plugin_base_1a3b6bb4bbd86affe1ca9deceea1aad4f8" prot="public" virt="non-virtual"><scope>Vamp::PluginBase</scope><name>ParameterList</name></member>
      <member refid="class_vamp_1_1_plugin_base_1a7f66f00437b21e5f694fe02356b12f20" prot="public" virt="non-virtual"><scope>Vamp::PluginBase</scope><name>ProgramList</name></member>
      <member refid="class_vamp_1_1_plugin_base_1aadd3a547ef140bae200473a9518e3353" prot="public" virt="virtual"><scope>Vamp::PluginBase</scope><name>selectProgram</name></member>
      <member refid="class_vamp_1_1_plugin_base_1a6c718ce822f7b73b98940d59dcaa9366" prot="public" virt="virtual"><scope>Vamp::PluginBase</scope><name>setParameter</name></member>
      <member refid="class_vamp_1_1_plugin_base_1a3773b37c658cf22d7f135c575a28f5c5" prot="public" virt="virtual"><scope>Vamp::PluginBase</scope><name>~PluginBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
