<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_o_d_wave_track_task_queue" kind="class" language="C++" prot="public" final="yes">
    <compoundname>ODWaveTrackTaskQueue</compoundname>
    <includes refid="_o_d_wave_track_task_queue_8h" local="no">ODWaveTrackTaskQueue.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_o_d_wave_track_task_queue_1a19654517cedf1ee7b271dc543e439ea1" prot="protected" static="no" mutable="no">
        <type>wxString</type>
        <definition>wxString ODWaveTrackTaskQueue::mTipMsg</definition>
        <argsstring></argsstring>
        <name>mTipMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="100" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_o_d_wave_track_task_queue_1ac7ae645d36f3a3769316e929d84a3dd4" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_wave_track" kindref="compound">WaveTrack</ref> * &gt;</type>
        <definition>std::vector&lt;WaveTrack*&gt; ODWaveTrackTaskQueue::mTracks</definition>
        <argsstring></argsstring>
        <name>mTracks</name>
        <briefdescription>
<para>the list of tracks associated with this queue. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="104" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" prot="protected" static="no" mutable="no">
        <type><ref refid="class_o_d_lock" kindref="compound">ODLock</ref></type>
        <definition>ODLock ODWaveTrackTaskQueue::mTracksMutex</definition>
        <argsstring></argsstring>
        <name>mTracksMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="105" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_o_d_task" kindref="compound">ODTask</ref> * &gt;</type>
        <definition>std::vector&lt;ODTask*&gt; ODWaveTrackTaskQueue::mTasks</definition>
        <argsstring></argsstring>
        <name>mTasks</name>
        <briefdescription>
<para>the list of tasks associated with the tracks. This class owns these tasks. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="108" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" prot="protected" static="no" mutable="no">
        <type><ref refid="class_o_d_lock" kindref="compound">ODLock</ref></type>
        <definition>ODLock ODWaveTrackTaskQueue::mTasksMutex</definition>
        <argsstring></argsstring>
        <name>mTasksMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="109" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_o_d_wave_track_task_queue_1a1f17dcbeccc80ea43c7f17d0e57cc719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ODWaveTrackTaskQueue::ODWaveTrackTaskQueue</definition>
        <argsstring>()</argsstring>
        <name>ODWaveTrackTaskQueue</name>
        <briefdescription>
<para>Constructs an <ref refid="class_o_d_wave_track_task_queue" kindref="compound">ODWaveTrackTaskQueue</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="38" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.cpp" bodystart="23" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_o_d_wave_track_task_queue_1a4dd991f46f246d38b8ccd29de965211b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>ODWaveTrackTaskQueue::~ODWaveTrackTaskQueue</definition>
        <argsstring>()</argsstring>
        <name>~ODWaveTrackTaskQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="40" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.cpp" bodystart="27" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_o_d_wave_track_task_queue_1abe296a4b592fda1425ebed95cd5368c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void ODWaveTrackTaskQueue::AddWaveTrack</definition>
        <argsstring>(WaveTrack *track)</argsstring>
        <name>AddWaveTrack</name>
        <param>
          <type><ref refid="class_wave_track" kindref="compound">WaveTrack</ref> *</type>
          <declname>track</declname>
        </param>
        <briefdescription>
<para>Adds a track to the associated list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="45" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.cpp" bodystart="93" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_o_d_wave_track_task_queue_1ae5a6b6f1492f226c786c8bc9c1a52f42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void ODWaveTrackTaskQueue::RemoveWaveTrack</definition>
        <argsstring>(WaveTrack *track)</argsstring>
        <name>RemoveWaveTrack</name>
        <param>
          <type><ref refid="class_wave_track" kindref="compound">WaveTrack</ref> *</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes a track from the list. Also notifies mTasks to stop using references to the instance in a thread-safe manner (may block) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="48" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.cpp" bodystart="126" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="class_o_d_wave_track_task_queue_1a50600260d6e33d0d120ab1d1178a4c20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void ODWaveTrackTaskQueue::DemandTrackUpdate</definition>
        <argsstring>(WaveTrack *track, double seconds)</argsstring>
        <name>DemandTrackUpdate</name>
        <param>
          <type><ref refid="class_wave_track" kindref="compound">WaveTrack</ref> *</type>
          <declname>track</declname>
        </param>
        <param>
          <type>double</type>
          <declname>seconds</declname>
        </param>
        <briefdescription>
<para>changes the tasks associated with this Waveform to process the task from a different point in the track </para>        </briefdescription>
        <detaileddescription>
<para>changes the tasks associated with this Waveform to process the task from a different point in the track <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>track</parametername>
</parameternamelist>
<parameterdescription>
<para>the track to update </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seconds</parametername>
</parameternamelist>
<parameterdescription>
<para>the point in the track from which the tasks associated with track should begin processing from. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="51" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.cpp" bodystart="190" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_o_d_wave_track_task_queue_1a89ffe5e2d7ed615108ae59374dc44192" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void ODWaveTrackTaskQueue::ReplaceWaveTrack</definition>
        <argsstring>(WaveTrack *oldTrack, WaveTrack *newTrack)</argsstring>
        <name>ReplaceWaveTrack</name>
        <param>
          <type><ref refid="class_wave_track" kindref="compound">WaveTrack</ref> *</type>
          <declname>oldTrack</declname>
        </param>
        <param>
          <type><ref refid="class_wave_track" kindref="compound">WaveTrack</ref> *</type>
          <declname>newTrack</declname>
        </param>
        <briefdescription>
<para>replaces all instances of a <ref refid="class_wave_track" kindref="compound">WaveTrack</ref> within this task with another. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="54" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.cpp" bodystart="206" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_o_d_wave_track_task_queue_1a9ef490dcacef826900911fe6f806cbfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void ODWaveTrackTaskQueue::MakeWaveTrackIndependent</definition>
        <argsstring>(WaveTrack *track)</argsstring>
        <name>MakeWaveTrackIndependent</name>
        <param>
          <type><ref refid="class_wave_track" kindref="compound">WaveTrack</ref> *</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="57" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.cpp" bodystart="146" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_o_d_wave_track_task_queue_1a185407f037927f2384ae40910bd93378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool ODWaveTrackTaskQueue::CanMergeWith</definition>
        <argsstring>(ODWaveTrackTaskQueue *otherQueue)</argsstring>
        <name>CanMergeWith</name>
        <param>
          <type><ref refid="class_o_d_wave_track_task_queue" kindref="compound">ODWaveTrackTaskQueue</ref> *</type>
          <declname>otherQueue</declname>
        </param>
        <briefdescription>
<para>returns whether or not this queue&apos;s task list and another&apos;s can merge together, as when we make two mono tracks stereo. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="60" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.cpp" bodystart="41" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_o_d_wave_track_task_queue_1aca1351c9096298368e022c997ee734b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void ODWaveTrackTaskQueue::MergeWaveTrack</definition>
        <argsstring>(WaveTrack *track)</argsstring>
        <name>MergeWaveTrack</name>
        <param>
          <type><ref refid="class_wave_track" kindref="compound">WaveTrack</ref> *</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>add track to the masterTrack&apos;s queue - this will allow future ODScheduling to affect them together. sets the NeedODUpdateFlag since we don&apos;t want the head task to finish without haven&apos;t dealt with the depednent</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>track</parametername>
</parameternamelist>
<parameterdescription>
<para>the track to bring into the tasks AND tracklist for this queue </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="61" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.cpp" bodystart="64" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_o_d_wave_track_task_queue_1a59f5152239f913ea545b3347c7ebb97b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool ODWaveTrackTaskQueue::ContainsWaveTrack</definition>
        <argsstring>(WaveTrack *track)</argsstring>
        <name>ContainsWaveTrack</name>
        <param>
          <type><ref refid="class_wave_track" kindref="compound">WaveTrack</ref> *</type>
          <declname>track</declname>
        </param>
        <briefdescription>
<para>returns true if the argument is in the <ref refid="class_wave_track" kindref="compound">WaveTrack</ref> list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="65" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.cpp" bodystart="78" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_o_d_wave_track_task_queue_1a09b6539f4a8cb0388291d20f521b9cfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_wave_track" kindref="compound">WaveTrack</ref> *</type>
        <definition>WaveTrack * ODWaveTrackTaskQueue::GetWaveTrack</definition>
        <argsstring>(size_t x)</argsstring>
        <name>GetWaveTrack</name>
        <param>
          <type>size_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="68" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.cpp" bodystart="224" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="class_o_d_wave_track_task_queue_1acdff21bd79058284dc516f78e44703f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int ODWaveTrackTaskQueue::GetNumWaveTracks</definition>
        <argsstring>()</argsstring>
        <name>GetNumWaveTracks</name>
        <briefdescription>
<para>returns the number of wavetracks in this queue. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="71" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.cpp" bodystart="235" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="class_o_d_wave_track_task_queue_1a583badb4082706b53f635022e7bcb4c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void ODWaveTrackTaskQueue::AddTask</definition>
        <argsstring>(ODTask *task)</argsstring>
        <name>AddTask</name>
        <param>
          <type><ref refid="class_o_d_task" kindref="compound">ODTask</ref> *</type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Add a task to the queue. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="74" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.cpp" bodystart="103" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_o_d_wave_track_task_queue_1a103649c6c70fc522b4d40be235ea8fbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool ODWaveTrackTaskQueue::IsEmpty</definition>
        <argsstring>()</argsstring>
        <name>IsEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="77" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.cpp" bodystart="268" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="class_o_d_wave_track_task_queue_1ab784be325fca9f544c81e1456f9aa317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool ODWaveTrackTaskQueue::IsFrontTaskComplete</definition>
        <argsstring>()</argsstring>
        <name>IsFrontTaskComplete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="80" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.cpp" bodystart="283" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="class_o_d_wave_track_task_queue_1a5003850e42c56fe77a8fa511b911a216" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void ODWaveTrackTaskQueue::RemoveFrontTask</definition>
        <argsstring>()</argsstring>
        <name>RemoveFrontTask</name>
        <briefdescription>
<para>Removes and deletes the front task from the list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="83" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.cpp" bodystart="302" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="class_o_d_wave_track_task_queue_1ad9932b0a64d16989df8664acdce516e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_o_d_task" kindref="compound">ODTask</ref> *</type>
        <definition>ODTask * ODWaveTrackTaskQueue::GetFrontTask</definition>
        <argsstring>()</argsstring>
        <name>GetFrontTask</name>
        <briefdescription>
<para>Schedules the front task for immediate execution. </para>        </briefdescription>
        <detaileddescription>
<para>gets the front task for immediate execution </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="86" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.cpp" bodystart="315" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="class_o_d_wave_track_task_queue_1a66b9e1509e6066969012ec4e1d6ba3be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int ODWaveTrackTaskQueue::GetNumTasks</definition>
        <argsstring>()</argsstring>
        <name>GetNumTasks</name>
        <briefdescription>
<para>returns the number of ODTasks in this queue </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="89" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.cpp" bodystart="245" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="class_o_d_wave_track_task_queue_1afc3a9b1a81e7ddd54fdb80b076b46c47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_o_d_task" kindref="compound">ODTask</ref> *</type>
        <definition>ODTask * ODWaveTrackTaskQueue::GetTask</definition>
        <argsstring>(size_t x)</argsstring>
        <name>GetTask</name>
        <param>
          <type>size_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>returns a <ref refid="class_o_d_task" kindref="compound">ODTask</ref> at position x </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="92" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.cpp" bodystart="255" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="class_o_d_wave_track_task_queue_1acb8e8f090235b422276395410eed07d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void ODWaveTrackTaskQueue::FillTipForWaveTrack</definition>
        <argsstring>(WaveTrack *t, wxString &amp;tip)</argsstring>
        <name>FillTipForWaveTrack</name>
        <param>
          <type><ref refid="class_wave_track" kindref="compound">WaveTrack</ref> *</type>
          <declname>t</declname>
        </param>
        <param>
          <type>wxString &amp;</type>
          <declname>tip</declname>
        </param>
        <briefdescription>
<para>fills in the status bar message for a given track </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="95" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.cpp" bodystart="328" bodyend="341"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class representing a modular task to be used with the On-Demand structures. </para>    </briefdescription>
    <detaileddescription>
<para>watches over all to be done (not yet started and started but not finished) tasks associated with a <ref refid="class_wave_track" kindref="compound">WaveTrack</ref>. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="7866">
        <label>wxMutex</label>
      </node>
      <node id="7865">
        <label>ODLock</label>
        <link refid="class_o_d_lock"/>
        <childnode refid="7866" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7864">
        <label>ODWaveTrackTaskQueue</label>
        <link refid="class_o_d_wave_track_task_queue"/>
        <childnode refid="7865" relation="usage">
          <edgelabel>mTasksMutex</edgelabel>
          <edgelabel>mTracksMutex</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" line="32" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.h" bodystart="31" bodyend="111"/>
    <listofallmembers>
      <member refid="class_o_d_wave_track_task_queue_1a583badb4082706b53f635022e7bcb4c5" prot="public" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>AddTask</name></member>
      <member refid="class_o_d_wave_track_task_queue_1abe296a4b592fda1425ebed95cd5368c7" prot="public" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>AddWaveTrack</name></member>
      <member refid="class_o_d_wave_track_task_queue_1a185407f037927f2384ae40910bd93378" prot="public" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>CanMergeWith</name></member>
      <member refid="class_o_d_wave_track_task_queue_1a59f5152239f913ea545b3347c7ebb97b" prot="public" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>ContainsWaveTrack</name></member>
      <member refid="class_o_d_wave_track_task_queue_1a50600260d6e33d0d120ab1d1178a4c20" prot="public" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>DemandTrackUpdate</name></member>
      <member refid="class_o_d_wave_track_task_queue_1acb8e8f090235b422276395410eed07d3" prot="public" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>FillTipForWaveTrack</name></member>
      <member refid="class_o_d_wave_track_task_queue_1ad9932b0a64d16989df8664acdce516e3" prot="public" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>GetFrontTask</name></member>
      <member refid="class_o_d_wave_track_task_queue_1a66b9e1509e6066969012ec4e1d6ba3be" prot="public" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>GetNumTasks</name></member>
      <member refid="class_o_d_wave_track_task_queue_1acdff21bd79058284dc516f78e44703f6" prot="public" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>GetNumWaveTracks</name></member>
      <member refid="class_o_d_wave_track_task_queue_1afc3a9b1a81e7ddd54fdb80b076b46c47" prot="public" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>GetTask</name></member>
      <member refid="class_o_d_wave_track_task_queue_1a09b6539f4a8cb0388291d20f521b9cfe" prot="public" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>GetWaveTrack</name></member>
      <member refid="class_o_d_wave_track_task_queue_1a103649c6c70fc522b4d40be235ea8fbb" prot="public" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>IsEmpty</name></member>
      <member refid="class_o_d_wave_track_task_queue_1ab784be325fca9f544c81e1456f9aa317" prot="public" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>IsFrontTaskComplete</name></member>
      <member refid="class_o_d_wave_track_task_queue_1a9ef490dcacef826900911fe6f806cbfe" prot="public" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>MakeWaveTrackIndependent</name></member>
      <member refid="class_o_d_wave_track_task_queue_1aca1351c9096298368e022c997ee734b4" prot="public" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>MergeWaveTrack</name></member>
      <member refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" prot="protected" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>mTasks</name></member>
      <member refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" prot="protected" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>mTasksMutex</name></member>
      <member refid="class_o_d_wave_track_task_queue_1a19654517cedf1ee7b271dc543e439ea1" prot="protected" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>mTipMsg</name></member>
      <member refid="class_o_d_wave_track_task_queue_1ac7ae645d36f3a3769316e929d84a3dd4" prot="protected" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>mTracks</name></member>
      <member refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" prot="protected" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>mTracksMutex</name></member>
      <member refid="class_o_d_wave_track_task_queue_1a1f17dcbeccc80ea43c7f17d0e57cc719" prot="public" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>ODWaveTrackTaskQueue</name></member>
      <member refid="class_o_d_wave_track_task_queue_1a5003850e42c56fe77a8fa511b911a216" prot="public" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>RemoveFrontTask</name></member>
      <member refid="class_o_d_wave_track_task_queue_1ae5a6b6f1492f226c786c8bc9c1a52f42" prot="public" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>RemoveWaveTrack</name></member>
      <member refid="class_o_d_wave_track_task_queue_1a89ffe5e2d7ed615108ae59374dc44192" prot="public" virt="non-virtual"><scope>ODWaveTrackTaskQueue</scope><name>ReplaceWaveTrack</name></member>
      <member refid="class_o_d_wave_track_task_queue_1a4dd991f46f246d38b8ccd29de965211b" prot="public" virt="virtual"><scope>ODWaveTrackTaskQueue</scope><name>~ODWaveTrackTaskQueue</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
