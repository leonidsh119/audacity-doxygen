<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="avio_8h" kind="file" language="C++">
    <compoundname>avio.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes refid="ffmpeg_2libavutil_2common_8h" local="yes">libavutil/common.h</includes>
    <includes refid="dict_8h" local="yes">libavutil/dict.h</includes>
    <includes refid="ffmpeg_2libavutil_2log_8h" local="yes">libavutil/log.h</includes>
    <includes refid="ffmpeg_2libavformat_2version_8h" local="yes">libavformat/version.h</includes>
    <includedby refid="avformat_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h</includedby>
    <incdepgraph>
      <node id="3196">
        <label>mathematics.h</label>
        <link refid="mathematics_8h"/>
        <childnode refid="3179" relation="include">
        </childnode>
        <childnode refid="3184" relation="include">
        </childnode>
        <childnode refid="3188" relation="include">
        </childnode>
        <childnode refid="3197" relation="include">
        </childnode>
        <childnode refid="3198" relation="include">
        </childnode>
      </node>
      <node id="3197">
        <label>rational.h</label>
        <link refid="rational_8h"/>
        <childnode refid="3179" relation="include">
        </childnode>
        <childnode refid="3183" relation="include">
        </childnode>
        <childnode refid="3188" relation="include">
        </childnode>
      </node>
      <node id="3200">
        <label>stdarg.h</label>
      </node>
      <node id="3188">
        <label>attributes.h</label>
        <link refid="attributes_8h"/>
      </node>
      <node id="3195">
        <label>avutil.h</label>
        <link refid="avutil_8h"/>
        <childnode refid="3180" relation="include">
        </childnode>
        <childnode refid="3193" relation="include">
        </childnode>
        <childnode refid="3189" relation="include">
        </childnode>
        <childnode refid="3190" relation="include">
        </childnode>
        <childnode refid="3196" relation="include">
        </childnode>
        <childnode refid="3197" relation="include">
        </childnode>
        <childnode refid="3199" relation="include">
        </childnode>
        <childnode refid="3201" relation="include">
        </childnode>
      </node>
      <node id="3179">
        <label>stdint.h</label>
      </node>
      <node id="3191">
        <label>libavutil/avconfig.h</label>
        <link refid="avconfig_8h"/>
      </node>
      <node id="3186">
        <label>stdlib.h</label>
      </node>
      <node id="3203">
        <label>libavutil/dict.h</label>
        <link refid="dict_8h"/>
      </node>
      <node id="3181">
        <label>errno.h</label>
      </node>
      <node id="3189">
        <label>version.h</label>
        <link refid="ffmpeg_2libavutil_2version_8h"/>
        <childnode refid="3190" relation="include">
        </childnode>
      </node>
      <node id="3194">
        <label>stddef.h</label>
      </node>
      <node id="3183">
        <label>limits.h</label>
      </node>
      <node id="3193">
        <label>error.h</label>
        <link refid="error_8h"/>
        <childnode refid="3181" relation="include">
        </childnode>
        <childnode refid="3194" relation="include">
        </childnode>
      </node>
      <node id="3199">
        <label>log.h</label>
        <link refid="ffmpeg_2libavutil_2log_8h"/>
        <childnode refid="3200" relation="include">
        </childnode>
        <childnode refid="3195" relation="include">
        </childnode>
        <childnode refid="3188" relation="include">
        </childnode>
      </node>
      <node id="3187">
        <label>string.h</label>
      </node>
      <node id="3192">
        <label>mem.h</label>
        <link refid="ffmpeg_2libavutil_2mem_8h"/>
        <childnode refid="3183" relation="include">
        </childnode>
        <childnode refid="3179" relation="include">
        </childnode>
        <childnode refid="3188" relation="include">
        </childnode>
        <childnode refid="3193" relation="include">
        </childnode>
        <childnode refid="3195" relation="include">
        </childnode>
      </node>
      <node id="3198">
        <label>intfloat.h</label>
        <link refid="intfloat_8h"/>
        <childnode refid="3179" relation="include">
        </childnode>
        <childnode refid="3188" relation="include">
        </childnode>
      </node>
      <node id="3202">
        <label>old_pix_fmts.h</label>
        <link refid="old__pix__fmts_8h"/>
      </node>
      <node id="3204">
        <label>libavformat/version.h</label>
        <link refid="ffmpeg_2libavformat_2version_8h"/>
        <childnode refid="3189" relation="include">
        </childnode>
      </node>
      <node id="3178">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h</label>
        <link refid="avio.h"/>
        <childnode refid="3179" relation="include">
        </childnode>
        <childnode refid="3180" relation="include">
        </childnode>
        <childnode refid="3203" relation="include">
        </childnode>
        <childnode refid="3199" relation="include">
        </childnode>
        <childnode refid="3204" relation="include">
        </childnode>
      </node>
      <node id="3184">
        <label>math.h</label>
      </node>
      <node id="3190">
        <label>macros.h</label>
        <link refid="ffmpeg_2libavutil_2macros_8h"/>
      </node>
      <node id="3180">
        <label>libavutil/common.h</label>
        <link refid="ffmpeg_2libavutil_2common_8h"/>
        <childnode refid="3181" relation="include">
        </childnode>
        <childnode refid="3182" relation="include">
        </childnode>
        <childnode refid="3183" relation="include">
        </childnode>
        <childnode refid="3184" relation="include">
        </childnode>
        <childnode refid="3179" relation="include">
        </childnode>
        <childnode refid="3185" relation="include">
        </childnode>
        <childnode refid="3186" relation="include">
        </childnode>
        <childnode refid="3187" relation="include">
        </childnode>
        <childnode refid="3188" relation="include">
        </childnode>
        <childnode refid="3189" relation="include">
        </childnode>
        <childnode refid="3191" relation="include">
        </childnode>
        <childnode refid="3180" relation="include">
        </childnode>
        <childnode refid="3192" relation="include">
        </childnode>
      </node>
      <node id="3185">
        <label>stdio.h</label>
      </node>
      <node id="3201">
        <label>pixfmt.h</label>
        <link refid="pixfmt_8h"/>
        <childnode refid="3191" relation="include">
        </childnode>
        <childnode refid="3189" relation="include">
        </childnode>
        <childnode refid="3202" relation="include">
        </childnode>
      </node>
      <node id="3182">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3205">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h</label>
        <link refid="avio.h"/>
        <childnode refid="3206" relation="include">
        </childnode>
      </node>
      <node id="3206">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h</label>
        <link refid="avformat_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_a_v_i_o_interrupt_c_b" prot="public">AVIOInterruptCB</innerclass>
    <innerclass refid="struct_a_v_i_o_context" prot="public">AVIOContext</innerclass>
      <sectiondef kind="user-defined">
      <header>Functions for reading from AVIOContext</header>
      <description><para><simplesect kind="note"><para>return 0 if EOF, so you cannot use it if EOF handling is necessary </para></simplesect>
</para></description>
      <memberdef kind="function" id="avio_8h_1af0d12eeb9d701134d971b91b4083bb43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avio_r8</definition>
        <argsstring>(AVIOContext *s)</argsstring>
        <name>avio_r8</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="298" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a71a15b7c123789a03115af82021698fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int avio_rl16</definition>
        <argsstring>(AVIOContext *s)</argsstring>
        <name>avio_rl16</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="299" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1ac3229b4447938b646e4ecbf25a594e8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int avio_rl24</definition>
        <argsstring>(AVIOContext *s)</argsstring>
        <name>avio_rl24</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="300" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1abc91c5452c4d7b5da84021be3a9a3d70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int avio_rl32</definition>
        <argsstring>(AVIOContext *s)</argsstring>
        <name>avio_rl32</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="301" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1af60c7d8fdabc3667ead1fffd2fac7ad5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
        <definition>uint64_t avio_rl64</definition>
        <argsstring>(AVIOContext *s)</argsstring>
        <name>avio_rl64</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="302" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a383f5f7f7df5b6cc9b7949713a43cb37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int avio_rb16</definition>
        <argsstring>(AVIOContext *s)</argsstring>
        <name>avio_rb16</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="303" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1ae5f28c2379d309467db446d2fa03269b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int avio_rb24</definition>
        <argsstring>(AVIOContext *s)</argsstring>
        <name>avio_rb24</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="304" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1af089361fd70426624d19d436a10f87ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int avio_rb32</definition>
        <argsstring>(AVIOContext *s)</argsstring>
        <name>avio_rb32</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="305" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a14d7da25344458b5f3aad11edb0f4918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
        <definition>uint64_t avio_rb64</definition>
        <argsstring>(AVIOContext *s)</argsstring>
        <name>avio_rb64</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="306" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>URL open modes</header>
      <description><para>The flags argument to avio_open must be one of the following constants, optionally ORed with other flags. </para></description>
      <memberdef kind="define" id="avio_8h_1a21e61cb486bd1588eb7f775998cf8c77" prot="public" static="no">
        <name>AVIO_FLAG_READ</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>read-only </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="341" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="avio_8h_1a5c9308f296545a8f3b7687d277a6dabc" prot="public" static="no">
        <name>AVIO_FLAG_WRITE</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>write-only </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="342" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="avio_8h_1aba7dc6a03cfe63d2a7e2c00532007eb2" prot="public" static="no">
        <name>AVIO_FLAG_READ_WRITE</name>
        <initializer>(<ref refid="avio_8h_1a21e61cb486bd1588eb7f775998cf8c77" kindref="member">AVIO_FLAG_READ</ref>|<ref refid="avio_8h_1a5c9308f296545a8f3b7687d277a6dabc" kindref="member">AVIO_FLAG_WRITE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>read-write pseudo flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="343" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="avio_8h_1a03ea0dfa113a05f4843bbfff69e0cd0a" prot="public" static="no">
        <name>AVIO_SEEKABLE_NORMAL</name>
        <initializer>0x0001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Seeking works like for a local file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="38" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="avio_8h_1a427ff2a881637b47ee7d7f9e368be63f" prot="public" static="no">
        <name>AVSEEK_SIZE</name>
        <initializer>0x10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Passing this as the &quot;whence&quot; parameter to a seek function causes it to return the filesize without seeking anywhere. Supporting this is optional. If it is not supported then the seek function will return &lt;0. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="231" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="avio_8h_1afc6af68de5304c6cea23a785c1f94cd5" prot="public" static="no">
        <name>AVSEEK_FORCE</name>
        <initializer>0x20000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Oring this flag as into the &quot;whence&quot; parameter to a seek function causes it to seek by any means (like reopening and linear reading) or other normally unreasonable means that can be extremely slow. This may be ignored by the seek code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="239" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="avio_8h_1aea3131c92c70177e463538e9a6b4308e" prot="public" static="no">
        <name>AVIO_FLAG_NONBLOCK</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use non-blocking mode. If this flag is set, operations on the context will return <ref refid="group__lavu__error_1gae4bb6f165973d09584e0ec0f335f69ca" kindref="member">AVERROR(EAGAIN)</ref> if they can not be performed immediately. If this flag is not set, operations on the context will never return <ref refid="group__lavu__error_1gae4bb6f165973d09584e0ec0f335f69ca" kindref="member">AVERROR(EAGAIN)</ref>. Note that this flag does not affect the opening/connecting of the context. Connecting a protocol will always block if necessary (e.g. on network protocols) but never hang (e.g. on busy devices). Warning: non-blocking protocols is work-in-progress; this flag may be silently ignored. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="360" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="avio_8h_1ab48ea445f38c16d407cc56d00be0f6bb" prot="public" static="no">
        <name>AVIO_FLAG_DIRECT</name>
        <initializer>0x8000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use direct mode. avio_read and avio_write should if possible be satisfied directly instead of going through a buffer, and avio_seek will always call the underlying seek function directly. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="368" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" bodystart="368" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="avio_8h_1a3a07e88081df0ba613d06d0587e1dd8a" prot="public" static="no">
        <type>struct <ref refid="struct_a_v_i_o_interrupt_c_b" kindref="compound">AVIOInterruptCB</ref></type>
        <definition>typedef struct AVIOInterruptCB  AVIOInterruptCB</definition>
        <argsstring></argsstring>
        <name>AVIOInterruptCB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_callback" kindref="compound">Callback</ref> for checking whether to abort blocking functions. AVERROR_EXIT is returned in this case by the interrupted function. During blocking operations, callback is called with opaque as parameter. If the callback returns 1, the blocking operation will be aborted.</para><para>No members can be added to this struct without a major bump, if new elements have been added after this struct in <ref refid="struct_a_v_format_context" kindref="compound">AVFormatContext</ref> or <ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="avio_8h_1ae5bfc92acdfc756c86cecdff2189438a" prot="public" static="no">
        <type>struct <ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref></type>
        <definition>typedef struct AVIOContext  AVIOContext</definition>
        <argsstring></argsstring>
        <name>AVIOContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bytestream IO Context. New fields can be added to the end with minor version bumps. Removal, reordering and changes to existing fields require a major version bump. sizeof(AVIOContext) must not be used outside libav*.</para><para><simplesect kind="note"><para>None of the function pointers in <ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> should be called directly, they should only be set by the client application when implementing custom I/O. Normally these are set to the function pointers specified in <ref refid="avio_8h_1a853f5149136a27ffba3207d8520172a5" kindref="member">avio_alloc_context()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="149" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="avio_8h_1a612d7e4aede364861a728c18383714c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* avio_find_protocol_name</definition>
        <argsstring>(const char *url)</argsstring>
        <name>avio_find_protocol_name</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>url</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the name of the protocol that will handle the passed URL.</para><para>NULL is returned if no protocol could be found for the given URL.</para><para><simplesect kind="return"><para>Name of the protocol or NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1aa4006f7b803e4d104231734a23b35ab7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avio_check</definition>
        <argsstring>(const char *url, int flags)</argsstring>
        <name>avio_check</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>url</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return AVIO_FLAG_* access flags corresponding to the access permissions of the resource in url, or a negative value corresponding to an AVERROR code in case of failure. The returned access flags are masked by the value in flags.</para><para><simplesect kind="note"><para>This function is intrinsically unsafe, in the sense that the checked resource may change its existence or permission status from one call to another. Thus you should not trust the returned value, unless you are sure that no other processes are accessing the checked resource. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a853f5149136a27ffba3207d8520172a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
        <definition>AVIOContext* avio_alloc_context</definition>
        <argsstring>(unsigned char *buffer, int buffer_size, int write_flag, void *opaque, int(*read_packet)(void *opaque, uint8_t *buf, int buf_size), int(*write_packet)(void *opaque, uint8_t *buf, int buf_size), int64_t(*seek)(void *opaque, int64_t offset, int whence))</argsstring>
        <name>avio_alloc_context</name>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>buffer_size</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>write_flag</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>opaque</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*)(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *opaque, <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *<ref refid="xlstr_8c_1a781718f5b53a876fe91c424c4607fa8f" kindref="member">buf</ref>, <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> buf_size)</type>
          <declname>read_packet</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*)(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *opaque, <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *<ref refid="xlstr_8c_1a781718f5b53a876fe91c424c4607fa8f" kindref="member">buf</ref>, <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> buf_size)</type>
          <declname>write_packet</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref>(*)(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *opaque, <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref> <ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>, <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> whence)</type>
          <declname>seek</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate and initialize an <ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> for buffered I/O. It must be later freed with <ref refid="group__lavu__mem_1ga0c9096f498624c525aa2315b8a20c411" kindref="member">av_free()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory block for input/output operations via <ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref>. The buffer must be allocated with <ref refid="group__lavu__mem_1gacbca30ebc510a7e4156d66e7aceb2dc8" kindref="member">av_malloc()</ref> and friends. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer size is very important for performance. For protocols with fixed blocksize it should be set to this blocksize. For others a typical size is a cache page, e.g. 4kb. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>write_flag</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to 1 if the buffer should be writable, 0 otherwise. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opaque</parametername>
</parameternamelist>
<parameterdescription>
<para>An opaque pointer to user-specific data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>read_packet</parametername>
</parameternamelist>
<parameterdescription>
<para>A function for refilling the buffer, may be NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>write_packet</parametername>
</parameternamelist>
<parameterdescription>
<para>A function for writing the buffer contents, may be NULL. The function may not change the input buffers content. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seek</parametername>
</parameternamelist>
<parameterdescription>
<para>A function for seeking to specified byte position, may be NULL.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Allocated <ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> or NULL on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a1dddee2b73f4dd6512ac9821cf5adc18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void avio_w8</definition>
        <argsstring>(AVIOContext *s, int b)</argsstring>
        <name>avio_w8</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1acc3626afc6aa3964b75d02811457164e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void avio_write</definition>
        <argsstring>(AVIOContext *s, const unsigned char *buf, int size)</argsstring>
        <name>avio_write</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a09510d3318eda871f8b91693e2774425" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void avio_wl64</definition>
        <argsstring>(AVIOContext *s, uint64_t val)</argsstring>
        <name>avio_wl64</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a9a88d79a1fc983c04a4e009b85361d54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void avio_wb64</definition>
        <argsstring>(AVIOContext *s, uint64_t val)</argsstring>
        <name>avio_wb64</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="206" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a16f2ba75f978a70f16dc55e2393f3439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void avio_wl32</definition>
        <argsstring>(AVIOContext *s, unsigned int val)</argsstring>
        <name>avio_wl32</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a1f2b9ee1bde6c6982072edbe929b47ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void avio_wb32</definition>
        <argsstring>(AVIOContext *s, unsigned int val)</argsstring>
        <name>avio_wb32</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1aa1ceef83bd4b74280f51eba321f70273" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void avio_wl24</definition>
        <argsstring>(AVIOContext *s, unsigned int val)</argsstring>
        <name>avio_wl24</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a81a5cfb941abfe2b83a30be4f86ad06d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void avio_wb24</definition>
        <argsstring>(AVIOContext *s, unsigned int val)</argsstring>
        <name>avio_wb24</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a1ba843eb6d34706bbdd177a4256e71e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void avio_wl16</definition>
        <argsstring>(AVIOContext *s, unsigned int val)</argsstring>
        <name>avio_wl16</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="211" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a21c2d7b7ddd7f31d24d278f8b3281ec3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void avio_wb16</definition>
        <argsstring>(AVIOContext *s, unsigned int val)</argsstring>
        <name>avio_wb16</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="212" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a1d2113a3b0d7015c415897d92bd441f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avio_put_str</definition>
        <argsstring>(AVIOContext *s, const char *str)</argsstring>
        <name>avio_put_str</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write a NULL-terminated string. <simplesect kind="return"><para>number of bytes written. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="218" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a4ff718da93c106f7ba48de1cb6b010c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avio_put_str16le</definition>
        <argsstring>(AVIOContext *s, const char *str)</argsstring>
        <name>avio_put_str16le</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert an UTF-8 string to UTF-16LE and write it. <simplesect kind="return"><para>number of bytes written. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a03e23bf0144030961c34e803c71f614f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t avio_seek</definition>
        <argsstring>(AVIOContext *s, int64_t offset, int whence)</argsstring>
        <name>avio_seek</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>whence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>fseek() equivalent for <ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref>. <simplesect kind="return"><para>new position or AVERROR. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="245" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1aa22e02f986ea8a8dc018f9615af27eea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t avio_skip</definition>
        <argsstring>(AVIOContext *s, int64_t offset)</argsstring>
        <name>avio_skip</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Skip given number of bytes forward <simplesect kind="return"><para>new position or AVERROR. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a63157a668f29b8f5a89f00bc24838b8e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>static av_always_inline int64_t avio_tell</definition>
        <argsstring>(AVIOContext *s)</argsstring>
        <name>avio_tell</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ftell() equivalent for <ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref>. <simplesect kind="return"><para>position or AVERROR. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="257" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" bodystart="257" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a375f057e315dd2273579555128a070fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t avio_size</definition>
        <argsstring>(AVIOContext *s)</argsstring>
        <name>avio_size</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the filesize. <simplesect kind="return"><para>filesize or AVERROR </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a085ff3269fefcb710e99c47caf77e35e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int url_feof</definition>
        <argsstring>(AVIOContext *s)</argsstring>
        <name>url_feof</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>feof() equivalent for <ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref>. <simplesect kind="return"><para>non zero if and only if end of file </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a79127cec97b09a308b549253119ff38f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avio_printf</definition>
        <argsstring>(AVIOContext *s, const char *fmt,...) av_printf_format(2</argsstring>
        <name>avio_printf</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>currently size is limited </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="275" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a60ed6497a3fed8be0b3b688142e8f54c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>int void avio_flush</definition>
        <argsstring>(AVIOContext *s)</argsstring>
        <name>avio_flush</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Force flushing of buffered data to the output s.</para><para>Force the buffered data to be immediately written to the output, without to wait to fill the internal buffer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="283" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1abb4e58439be0bff0dc2e2974ee5fb6a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avio_read</definition>
        <argsstring>(AVIOContext *s, unsigned char *buf, int size)</argsstring>
        <name>avio_read</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read size bytes from <ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> into buf. <simplesect kind="return"><para>number of bytes read or AVERROR </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="289" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1abeee0414e5f2ce5b150cf9c5694a2e4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avio_get_str</definition>
        <argsstring>(AVIOContext *pb, int maxlen, char *buf, int buflen)</argsstring>
        <name>avio_get_str</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>pb</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>maxlen</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>buflen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read a string from pb into buf. The reading will terminate when either a NULL character was encountered, maxlen bytes have been read, or nothing more can be read from pb. The result is guaranteed to be NULL-terminated, it will be truncated if buf is too small. Note that the string is not interpreted or validated in any way, it might get truncated in the middle of a sequence for multi-byte encodings.</para><para><simplesect kind="return"><para>number of bytes read (is always &lt;= maxlen). If reading ends on EOF or error, the return value will be one more than bytes actually read. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="323" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a39507bbc53328eae98ac7d683078fcf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avio_get_str16le</definition>
        <argsstring>(AVIOContext *pb, int maxlen, char *buf, int buflen)</argsstring>
        <name>avio_get_str16le</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>pb</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>maxlen</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>buflen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read a UTF-16 string from pb and convert it to UTF-8. The reading will terminate when either a null or invalid character was encountered or maxlen bytes have been read. <simplesect kind="return"><para>number of bytes read (is always &lt;= maxlen) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="331" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a02be750099c47406eb68b50d75a01bdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avio_get_str16be</definition>
        <argsstring>(AVIOContext *pb, int maxlen, char *buf, int buflen)</argsstring>
        <name>avio_get_str16be</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>pb</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>maxlen</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>buflen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="332" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a371a670112abc5f3e15bc570da076301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avio_open</definition>
        <argsstring>(AVIOContext **s, const char *url, int flags)</argsstring>
        <name>avio_open</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> **</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>url</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create and initialize a <ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> for accessing the resource indicated by url. <simplesect kind="note"><para>When the resource indicated by url has been opened in read+write mode, the <ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> can be used only for writing.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>Used to return the pointer to the created <ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref>. In case of failure the pointed to value is set to NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>url</parametername>
</parameternamelist>
<parameterdescription>
<para>resource to access </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>flags which control how the resource indicated by url is to be opened </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&gt;= 0 in case of success, a negative value corresponding to an AVERROR code in case of failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="384" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1ade8a63980569494c99593ebf0d1e891b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avio_open2</definition>
        <argsstring>(AVIOContext **s, const char *url, int flags, const AVIOInterruptCB *int_cb, AVDictionary **options)</argsstring>
        <name>avio_open2</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> **</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>url</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_i_o_interrupt_c_b" kindref="compound">AVIOInterruptCB</ref> *</type>
          <declname>int_cb</declname>
        </param>
        <param>
          <type><ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref> **</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create and initialize a <ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> for accessing the resource indicated by url. <simplesect kind="note"><para>When the resource indicated by url has been opened in read+write mode, the <ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> can be used only for writing.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>Used to return the pointer to the created <ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref>. In case of failure the pointed to value is set to NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>url</parametername>
</parameternamelist>
<parameterdescription>
<para>resource to access </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>flags which control how the resource indicated by url is to be opened </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>an interrupt callback to be used at the protocols level </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>A dictionary filled with protocol-private options. On return this parameter will be destroyed and replaced with a dict containing options that were not found. May be NULL. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&gt;= 0 in case of success, a negative value corresponding to an AVERROR code in case of failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="404" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1ad71cada104a5e4365d35d45669ea03ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avio_close</definition>
        <argsstring>(AVIOContext *s)</argsstring>
        <name>avio_close</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Close the resource accessed by the <ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> s and free it. This function can only be used if s was opened by <ref refid="avio_8h_1a371a670112abc5f3e15bc570da076301" kindref="member">avio_open()</ref>.</para><para>The internal buffer is automatically flushed before closing the resource.</para><para><simplesect kind="return"><para>0 on success, an AVERROR &lt; 0 on error. </para></simplesect>
<simplesect kind="see"><para><ref refid="avio_8h_1ae118a1f37f1e48617609ead9910aac15" kindref="member">avio_closep</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="417" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1ae118a1f37f1e48617609ead9910aac15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avio_closep</definition>
        <argsstring>(AVIOContext **s)</argsstring>
        <name>avio_closep</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> **</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Close the resource accessed by the <ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *s, free it and set the pointer pointing to it to NULL. This function can only be used if s was opened by <ref refid="avio_8h_1a371a670112abc5f3e15bc570da076301" kindref="member">avio_open()</ref>.</para><para>The internal buffer is automatically flushed before closing the resource.</para><para><simplesect kind="return"><para>0 on success, an AVERROR &lt; 0 on error. </para></simplesect>
<simplesect kind="see"><para><ref refid="avio_8h_1ad71cada104a5e4365d35d45669ea03ca" kindref="member">avio_close</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="430" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1adb5259ad07633518173eaa47fe6575e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avio_open_dyn_buf</definition>
        <argsstring>(AVIOContext **s)</argsstring>
        <name>avio_open_dyn_buf</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> **</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open a write only memory stream.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>new IO context </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if no error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="439" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a8faed62ce72e7411cbea2356494af8ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avio_close_dyn_buf</definition>
        <argsstring>(AVIOContext *s, uint8_t **pbuffer)</argsstring>
        <name>avio_close_dyn_buf</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> **</type>
          <declname>pbuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the written size and a pointer to the buffer. The buffer must be freed with <ref refid="group__lavu__mem_1ga0c9096f498624c525aa2315b8a20c411" kindref="member">av_free()</ref>. Padding of FF_INPUT_BUFFER_PADDING_SIZE is added to the buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>IO context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pbuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a byte buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the length of the byte buffer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="450" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a50fda7362db877e8b9e493650c9e3fb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* avio_enum_protocols</definition>
        <argsstring>(void **opaque, int output)</argsstring>
        <name>avio_enum_protocols</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> **</type>
          <declname>opaque</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Iterate through names of available protocols.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>opaque</parametername>
</parameternamelist>
<parameterdescription>
<para>A private pointer representing current protocol. It must be a pointer to NULL on first iteration and will be updated by successive calls to avio_enum_protocols. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to 1, iterate over output protocols, otherwise over input protocols.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A static string containing the name of current protocol or NULL </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="463" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1a1ac23b54d5f5bbfee4353978d313e472" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avio_pause</definition>
        <argsstring>(AVIOContext *h, int pause)</argsstring>
        <name>avio_pause</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>pause</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pause and resume playing - only meaningful if using a network streaming protocol (e.g. MMS).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>IO context from which to call the read_pause function pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pause</parametername>
</parameternamelist>
<parameterdescription>
<para>1 for pause, 0 for resume </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="472" column="1"/>
      </memberdef>
      <memberdef kind="function" id="avio_8h_1adbdec54e1897c66b8c8bc43ce0063187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t avio_seek_time</definition>
        <argsstring>(AVIOContext *h, int stream_index, int64_t timestamp, int flags)</argsstring>
        <name>avio_seek_time</name>
        <param>
          <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>stream_index</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>timestamp</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Seek to a given timestamp relative to some component stream. Only meaningful if using a network streaming protocol (e.g. MMS.).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>IO context from which to call the seek function pointers </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The stream index that the timestamp is relative to. If stream_index is (-1) the timestamp should be in AV_TIME_BASE units from the beginning of the presentation. If a stream_index &gt;= 0 is used and the protocol does not support seeking based on component streams, the call will fail. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>timestamp in <ref refid="struct_a_v_stream_1a9db755451f14e2bf590d4b85d82b32e6" kindref="member">AVStream.time_base</ref> units or if there is no stream specified then in AV_TIME_BASE units. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional combination of AVSEEK_FLAG_BACKWARD, AVSEEK_FLAG_BYTE and AVSEEK_FLAG_ANY. The protocol may silently ignore AVSEEK_FLAG_BACKWARD and AVSEEK_FLAG_ANY, but AVSEEK_FLAG_BYTE will fail if used and not supported. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&gt;= 0 on success </para></simplesect>
<simplesect kind="see"><para><ref refid="struct_a_v_input_format_1a04a3b9ba459666bdb43628c472fa29bf" kindref="member">AVInputFormat::read_seek</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h" line="493" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Buffered I/O operations </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>copyright<sp/>(c)<sp/>2001<sp/>Fabrice<sp/>Bellard</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>FFmpeg.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>FFmpeg<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>FFmpeg<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>FFmpeg;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110-1301<sp/>USA</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>AVFORMAT_AVIO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AVFORMAT_AVIO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ffmpeg_2libavutil_2common_8h" kindref="compound">libavutil/common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dict_8h" kindref="compound">libavutil/dict.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ffmpeg_2libavutil_2log_8h" kindref="compound">libavutil/log.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ffmpeg_2libavformat_2version_8h" kindref="compound">libavformat/version.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="avio_8h_1a03ea0dfa113a05f4843bbfff69e0cd0a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AVIO_SEEKABLE_NORMAL<sp/>0x0001<sp/></highlight></codeline>
<codeline lineno="51" refid="struct_a_v_i_o_interrupt_c_b" refkind="compound"><highlight class="preprocessor">typedef<sp/>struct<sp/>AVIOInterruptCB<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="struct_a_v_i_o_interrupt_c_b_1ac5de25559a8b29f3e55a3e956115e54a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*callback)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="53" refid="struct_a_v_i_o_interrupt_c_b_1a873ae56fef71d27dca1088dfd55c2197" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_v_i_o_interrupt_c_b_1a873ae56fef71d27dca1088dfd55c2197" kindref="member">opaque</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}<sp/><ref refid="avio_8h_1a3a07e88081df0ba613d06d0587e1dd8a" kindref="member">AVIOInterruptCB</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="struct_a_v_i_o_context" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>{</highlight></codeline>
<codeline lineno="81" refid="struct_a_v_i_o_context_1a25d3b039ac00850a25d7b772566db6a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_class" kindref="compound">AVClass</ref><sp/>*<ref refid="struct_a_v_i_o_context_1a25d3b039ac00850a25d7b772566db6a8" kindref="member">av_class</ref>;</highlight></codeline>
<codeline lineno="82" refid="struct_a_v_i_o_context_1a901e8fd2b978d40957c4ed0b77c2daf0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_v_i_o_context_1a901e8fd2b978d40957c4ed0b77c2daf0" kindref="member">buffer</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="83" refid="struct_a_v_i_o_context_1a0204148f407d72becba822b90e8ce9a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_i_o_context_1a0204148f407d72becba822b90e8ce9a6" kindref="member">buffer_size</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84" refid="struct_a_v_i_o_context_1a3500915a7434270c42dffc80fafffa2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_v_i_o_context_1a3500915a7434270c42dffc80fafffa2d" kindref="member">buf_ptr</ref>;<sp/></highlight></codeline>
<codeline lineno="85" refid="struct_a_v_i_o_context_1a0683d1a134b647c54f6d087d152c9a64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_v_i_o_context_1a0683d1a134b647c54f6d087d152c9a64" kindref="member">buf_end</ref>;<sp/></highlight></codeline>
<codeline lineno="89" refid="struct_a_v_i_o_context_1afa97c079a10a48588f7b55f9dfff1e47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_v_i_o_context_1afa97c079a10a48588f7b55f9dfff1e47" kindref="member">opaque</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91" refid="struct_a_v_i_o_context_1a9be0423e0c66d11d8e0ace043e3aec08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*<ref refid="struct_a_v_i_o_context_1a9be0423e0c66d11d8e0ace043e3aec08" kindref="member">read_packet</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_v_i_o_context_1afa97c079a10a48588f7b55f9dfff1e47" kindref="member">opaque</ref>,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_size);</highlight></codeline>
<codeline lineno="92" refid="struct_a_v_i_o_context_1afb1f05f0e4e957090ccc23f0b82a0b08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*<ref refid="struct_a_v_i_o_context_1afb1f05f0e4e957090ccc23f0b82a0b08" kindref="member">write_packet</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_v_i_o_context_1afa97c079a10a48588f7b55f9dfff1e47" kindref="member">opaque</ref>,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_size);</highlight></codeline>
<codeline lineno="93" refid="struct_a_v_i_o_context_1a4cda0cd632c90d13a546f663287e6cf5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>(*<ref refid="struct_a_v_i_o_context_1a4cda0cd632c90d13a546f663287e6cf5" kindref="member">seek</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_v_i_o_context_1afa97c079a10a48588f7b55f9dfff1e47" kindref="member">opaque</ref>,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whence);</highlight></codeline>
<codeline lineno="94" refid="struct_a_v_i_o_context_1a7158ec9b44d75704ea5c2fa5ac28fd50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/><ref refid="struct_a_v_i_o_context_1a7158ec9b44d75704ea5c2fa5ac28fd50" kindref="member">pos</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95" refid="struct_a_v_i_o_context_1a06e6f0186fcf571355cee82e837dc339" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_i_o_context_1a06e6f0186fcf571355cee82e837dc339" kindref="member">must_flush</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96" refid="struct_a_v_i_o_context_1aa9214f54c01f07076e0a0718b2e9c27b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_i_o_context_1aa9214f54c01f07076e0a0718b2e9c27b" kindref="member">eof_reached</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97" refid="struct_a_v_i_o_context_1aab6ff8baf51038f1557e817717baccba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_i_o_context_1aab6ff8baf51038f1557e817717baccba" kindref="member">write_flag</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98" refid="struct_a_v_i_o_context_1aca19990941933d7573a485851c6b798e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_i_o_context_1aca19990941933d7573a485851c6b798e" kindref="member">max_packet_size</ref>;</highlight></codeline>
<codeline lineno="99" refid="struct_a_v_i_o_context_1a949cd6dbd89e2d5d59f5c768754004ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_i_o_context_1a949cd6dbd89e2d5d59f5c768754004ca" kindref="member">checksum</ref>;</highlight></codeline>
<codeline lineno="100" refid="struct_a_v_i_o_context_1a10cbe217c46aeb653d360a9391aff310" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_v_i_o_context_1a10cbe217c46aeb653d360a9391aff310" kindref="member">checksum_ptr</ref>;</highlight></codeline>
<codeline lineno="101" refid="struct_a_v_i_o_context_1a7ff26703ccfb39cdd38fd49f5a95796c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long<sp/>(*<ref refid="struct_a_v_i_o_context_1a7ff26703ccfb39cdd38fd49f5a95796c" kindref="member">update_checksum</ref>)(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_i_o_context_1a949cd6dbd89e2d5d59f5c768754004ca" kindref="member">checksum</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="102" refid="struct_a_v_i_o_context_1afb903b1d9614bfb59e8cc5213de3777b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_i_o_context_1afb903b1d9614bfb59e8cc5213de3777b" kindref="member">error</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106" refid="struct_a_v_i_o_context_1ae3658a91428df0cfa2b834f6bd7d7bd4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*<ref refid="struct_a_v_i_o_context_1ae3658a91428df0cfa2b834f6bd7d7bd4" kindref="member">read_pause</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_v_i_o_context_1afa97c079a10a48588f7b55f9dfff1e47" kindref="member">opaque</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="winmain2_8h_1aef3a6553bfd1b1958085c0ea353c0fa8" kindref="member">pause</ref>);</highlight></codeline>
<codeline lineno="112" refid="struct_a_v_i_o_context_1ac2e538dd7f6a73cbc77e6ffdf3f11882" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>(*<ref refid="struct_a_v_i_o_context_1ac2e538dd7f6a73cbc77e6ffdf3f11882" kindref="member">read_seek</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_v_i_o_context_1afa97c079a10a48588f7b55f9dfff1e47" kindref="member">opaque</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stream_index,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>timestamp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="117" refid="struct_a_v_i_o_context_1a0e3c41c290b38923880b9cccb669bf78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_i_o_context_1a0e3c41c290b38923880b9cccb669bf78" kindref="member">seekable</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="struct_a_v_i_o_context_1a33e387aeb28b7a352c62ba8c30a214e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/><ref refid="struct_a_v_i_o_context_1a33e387aeb28b7a352c62ba8c30a214e7" kindref="member">maxsize</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="struct_a_v_i_o_context_1af719be70947f5f8eebaa5f8ac58fd306" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_i_o_context_1af719be70947f5f8eebaa5f8ac58fd306" kindref="member">direct</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="struct_a_v_i_o_context_1a2685da68190c842c028ec161ff2b563e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/><ref refid="struct_a_v_i_o_context_1a2685da68190c842c028ec161ff2b563e" kindref="member">bytes_read</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="struct_a_v_i_o_context_1a38b3c122a21fc2271e3174342e87a79f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_i_o_context_1a38b3c122a21fc2271e3174342e87a79f" kindref="member">seek_count</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="struct_a_v_i_o_context_1ac027eace34bf1dbcab5f71b0806d1c8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_i_o_context_1ac027eace34bf1dbcab5f71b0806d1c8a" kindref="member">writeout_count</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}<sp/><ref refid="avio_8h_1ae5bfc92acdfc756c86cecdff2189438a" kindref="member">AVIOContext</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>unbuffered<sp/>I/O<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="avio_8h_1a612d7e4aede364861a728c18383714c2" kindref="member">avio_find_protocol_name</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*url);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1aa4006f7b803e4d104231734a23b35ab7" kindref="member">avio_check</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*url,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*<ref refid="avio_8h_1a853f5149136a27ffba3207d8520172a5" kindref="member">avio_alloc_context</ref>(</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_i_o_context_1a0204148f407d72becba822b90e8ce9a6" kindref="member">buffer_size</ref>,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_i_o_context_1aab6ff8baf51038f1557e817717baccba" kindref="member">write_flag</ref>,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_v_i_o_context_1afa97c079a10a48588f7b55f9dfff1e47" kindref="member">opaque</ref>,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*<ref refid="struct_a_v_i_o_context_1a9be0423e0c66d11d8e0ace043e3aec08" kindref="member">read_packet</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*opaque,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_size),</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*<ref refid="struct_a_v_i_o_context_1afb1f05f0e4e957090ccc23f0b82a0b08" kindref="member">write_packet</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*opaque,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_size),</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>(*<ref refid="struct_a_v_i_o_context_1a4cda0cd632c90d13a546f663287e6cf5" kindref="member">seek</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*opaque,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whence));</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1a1dddee2b73f4dd6512ac9821cf5adc18" kindref="member">avio_w8</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1acc3626afc6aa3964b75d02811457164e" kindref="member">avio_write</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1a09510d3318eda871f8b91693e2774425" kindref="member">avio_wl64</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>val);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1a9a88d79a1fc983c04a4e009b85361d54" kindref="member">avio_wb64</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>val);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1a16f2ba75f978a70f16dc55e2393f3439" kindref="member">avio_wl32</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1a1f2b9ee1bde6c6982072edbe929b47ea" kindref="member">avio_wb32</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1aa1ceef83bd4b74280f51eba321f70273" kindref="member">avio_wl24</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1a81a5cfb941abfe2b83a30be4f86ad06d" kindref="member">avio_wb24</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1a1ba843eb6d34706bbdd177a4256e71e2" kindref="member">avio_wl16</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1a21c2d7b7ddd7f31d24d278f8b3281ec3" kindref="member">avio_wb16</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1a1d2113a3b0d7015c415897d92bd441f3" kindref="member">avio_put_str</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1a4ff718da93c106f7ba48de1cb6b010c6" kindref="member">avio_put_str16le</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="avio_8h_1a427ff2a881637b47ee7d7f9e368be63f" refkind="member"><highlight class="preprocessor">#define<sp/>AVSEEK_SIZE<sp/>0x10000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="avio_8h_1afc6af68de5304c6cea23a785c1f94cd5" refkind="member"><highlight class="preprocessor">#define<sp/>AVSEEK_FORCE<sp/>0x20000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/><ref refid="avio_8h_1a03e23bf0144030961c34e803c71f614f" kindref="member">avio_seek</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whence);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/><ref refid="avio_8h_1aa22e02f986ea8a8dc018f9615af27eea" kindref="member">avio_skip</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="attributes_8h_1a28f50f4c125959216885f01d56dbe866" kindref="member">av_always_inline</ref><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>avio_tell(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1a03e23bf0144030961c34e803c71f614f" kindref="member">avio_seek</ref>(s,<sp/>0,<sp/>SEEK_CUR);</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/><ref refid="avio_8h_1a375f057e315dd2273579555128a070fb" kindref="member">avio_size</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1a085ff3269fefcb710e99c47caf77e35e" kindref="member">url_feof</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1a79127cec97b09a308b549253119ff38f" kindref="member">avio_printf</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)<sp/><ref refid="attributes_8h_1a4b078d4b8e02c0f452ee1dcaa7d983d3" kindref="member">av_printf_format</ref>(2,<sp/>3);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1a60ed6497a3fed8be0b3b688142e8f54c" kindref="member">avio_flush</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*s);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1abb4e58439be0bff0dc2e2974ee5fb6a3" kindref="member">avio_read</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*s,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="avio_8h_1af0d12eeb9d701134d971b91b4083bb43" kindref="member">avio_r8</ref><sp/><sp/>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*s);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1a71a15b7c123789a03115af82021698fe" kindref="member">avio_rl16</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*s);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1ac3229b4447938b646e4ecbf25a594e8a" kindref="member">avio_rl24</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*s);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1abc91c5452c4d7b5da84021be3a9a3d70" kindref="member">avio_rl32</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*s);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/><sp/><sp/><sp/><sp/><ref refid="avio_8h_1af60c7d8fdabc3667ead1fffd2fac7ad5" kindref="member">avio_rl64</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*s);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1a383f5f7f7df5b6cc9b7949713a43cb37" kindref="member">avio_rb16</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*s);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1ae5f28c2379d309467db446d2fa03269b" kindref="member">avio_rb24</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*s);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1af089361fd70426624d19d436a10f87ad" kindref="member">avio_rb32</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*s);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/><sp/><sp/><sp/><sp/><ref refid="avio_8h_1a14d7da25344458b5f3aad11edb0f4918" kindref="member">avio_rb64</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*s);</highlight></codeline>
<codeline lineno="323"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1abeee0414e5f2ce5b150cf9c5694a2e4f" kindref="member">avio_get_str</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*pb,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxlen,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buflen);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1a39507bbc53328eae98ac7d683078fcf1" kindref="member">avio_get_str16le</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*pb,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxlen,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buflen);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1a02be750099c47406eb68b50d75a01bdd" kindref="member">avio_get_str16be</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*pb,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxlen,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buflen);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="avio_8h_1a21e61cb486bd1588eb7f775998cf8c77" refkind="member"><highlight class="preprocessor">#define<sp/>AVIO_FLAG_READ<sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="342" refid="avio_8h_1a5c9308f296545a8f3b7687d277a6dabc" refkind="member"><highlight class="preprocessor">#define<sp/>AVIO_FLAG_WRITE<sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="343" refid="avio_8h_1aba7dc6a03cfe63d2a7e2c00532007eb2" refkind="member"><highlight class="preprocessor">#define<sp/>AVIO_FLAG_READ_WRITE<sp/>(AVIO_FLAG_READ|AVIO_FLAG_WRITE)<sp/><sp/></highlight></codeline>
<codeline lineno="360" refid="avio_8h_1aea3131c92c70177e463538e9a6b4308e" refkind="member"><highlight class="preprocessor">#define<sp/>AVIO_FLAG_NONBLOCK<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="avio_8h_1ab48ea445f38c16d407cc56d00be0f6bb" refkind="member"><highlight class="preprocessor">#define<sp/>AVIO_FLAG_DIRECT<sp/>0x8000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1a371a670112abc5f3e15bc570da076301" kindref="member">avio_open</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>**s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*url,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1ade8a63980569494c99593ebf0d1e891b" kindref="member">avio_open2</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>**s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*url,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_i_o_interrupt_c_b" kindref="compound">AVIOInterruptCB</ref><sp/>*int_cb,<sp/><ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref><sp/>**<ref refid="namespacewaflib_1_1_options_1a59b9c00933a268d11c1c960cd109e113" kindref="member">options</ref>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1ad71cada104a5e4365d35d45669ea03ca" kindref="member">avio_close</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*s);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1ae118a1f37f1e48617609ead9910aac15" kindref="member">avio_closep</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>**s);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1adb5259ad07633518173eaa47fe6575e2" kindref="member">avio_open_dyn_buf</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>**s);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="avio_8h_1a8faed62ce72e7411cbea2356494af8ce" kindref="member">avio_close_dyn_buf</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*s,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>**pbuffer);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="avio_8h_1a50fda7362db877e8b9e493650c9e3fb3" kindref="member">avio_enum_protocols</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**opaque,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="avio_8h_1a1ac23b54d5f5bbfee4353978d313e472" kindref="member">avio_pause</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="winmain2_8h_1aef3a6553bfd1b1958085c0ea353c0fa8" kindref="member">pause</ref>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/><ref refid="avio_8h_1adbdec54e1897c66b8c8bc43ce0063187" kindref="member">avio_seek_time</ref>(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stream_index,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>timestamp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>AVFORMAT_AVIO_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h"/>
  </compounddef>
</doxygen>
