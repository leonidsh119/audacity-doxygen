<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="subband_8cpp" kind="file" language="C++">
    <compoundname>subband.cpp</compoundname>
    <includes refid="sbsms_2src_2subband_8h" local="yes">subband.h</includes>
    <includes refid="real_8h" local="yes">real.h</includes>
    <includes refid="sbsms_8h" local="yes">sbsms.h</includes>
    <includes refid="sbsms_2src_2utils_8h" local="yes">utils.h</includes>
    <includes local="no">algorithm</includes>
    <incdepgraph>
      <node id="31761">
        <label>list</label>
      </node>
      <node id="31757">
        <label>fft.h</label>
        <link refid="lib-src_2sbsms_2src_2fft_8h"/>
        <childnode refid="31754" relation="include">
        </childnode>
        <childnode refid="31758" relation="include">
        </childnode>
        <childnode refid="31759" relation="include">
        </childnode>
      </node>
      <node id="31766">
        <label>queue</label>
      </node>
      <node id="31763">
        <label>track.h</label>
        <link refid="lib-src_2sbsms_2src_2track_8h"/>
        <childnode refid="31764" relation="include">
        </childnode>
        <childnode refid="31751" relation="include">
        </childnode>
        <childnode refid="31765" relation="include">
        </childnode>
      </node>
      <node id="31760">
        <label>stdlib.h</label>
      </node>
      <node id="31756">
        <label>grain.h</label>
        <link refid="grain_8h"/>
        <childnode refid="31757" relation="include">
        </childnode>
        <childnode refid="31752" relation="include">
        </childnode>
      </node>
      <node id="31755">
        <label>buffer.h</label>
        <link refid="sbsms_2src_2buffer_8h"/>
        <childnode refid="31752" relation="include">
        </childnode>
        <childnode refid="31756" relation="include">
        </childnode>
        <childnode refid="31760" relation="include">
        </childnode>
        <childnode refid="31761" relation="include">
        </childnode>
      </node>
      <node id="31748">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/sbsms/src/subband.cpp</label>
        <link refid="subband.cpp"/>
        <childnode refid="31749" relation="include">
        </childnode>
        <childnode refid="31750" relation="include">
        </childnode>
        <childnode refid="31752" relation="include">
        </childnode>
        <childnode refid="31759" relation="include">
        </childnode>
        <childnode refid="31767" relation="include">
        </childnode>
      </node>
      <node id="31759">
        <label>utils.h</label>
        <link refid="sbsms_2src_2utils_8h"/>
        <childnode refid="31750" relation="include">
        </childnode>
        <childnode refid="31751" relation="include">
        </childnode>
        <childnode refid="31752" relation="include">
        </childnode>
      </node>
      <node id="31752">
        <label>sbsms.h</label>
        <link refid="sbsms_8h"/>
        <childnode refid="31753" relation="include">
        </childnode>
      </node>
      <node id="31758">
        <label>string.h</label>
      </node>
      <node id="31749">
        <label>subband.h</label>
        <link refid="sbsms_2src_2subband_8h"/>
        <childnode refid="31750" relation="include">
        </childnode>
        <childnode refid="31755" relation="include">
        </childnode>
        <childnode refid="31762" relation="include">
        </childnode>
        <childnode refid="31753" relation="include">
        </childnode>
        <childnode refid="31751" relation="include">
        </childnode>
      </node>
      <node id="31765">
        <label>vector</label>
      </node>
      <node id="31750">
        <label>real.h</label>
        <link refid="real_8h"/>
        <childnode refid="31751" relation="include">
        </childnode>
        <childnode refid="31752" relation="include">
        </childnode>
        <childnode refid="31754" relation="include">
        </childnode>
      </node>
      <node id="31754">
        <label>math.h</label>
      </node>
      <node id="31762">
        <label>sms.h</label>
        <link refid="sms_8h"/>
        <childnode refid="31751" relation="include">
        </childnode>
        <childnode refid="31752" relation="include">
        </childnode>
        <childnode refid="31763" relation="include">
        </childnode>
        <childnode refid="31756" relation="include">
        </childnode>
        <childnode refid="31755" relation="include">
        </childnode>
        <childnode refid="31766" relation="include">
        </childnode>
        <childnode refid="31761" relation="include">
        </childnode>
      </node>
      <node id="31764">
        <label>trackpoint.h</label>
        <link refid="trackpoint_8h"/>
        <childnode refid="31752" relation="include">
        </childnode>
      </node>
      <node id="31751">
        <label>config.h</label>
      </node>
      <node id="31767">
        <label>algorithm</label>
      </node>
      <node id="31753">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace__sbsms__">_sbsms_</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbsms_2src_2subband_8h" kindref="compound">subband.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="real_8h" kindref="compound">real.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbsms_8h" kindref="compound">sbsms.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbsms_2src_2utils_8h" kindref="compound">utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace__sbsms__" kindref="compound">_sbsms_</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="class__sbsms___1_1_sub_band_1a22ede76c6bc6b5daccb36bb68a94bc3e" refkind="member"><highlight class="normal">SubBand<sp/>::<sp/>SubBand(<ref refid="class__sbsms___1_1_sub_band" kindref="compound">SubBand</ref><sp/>*parent,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>band,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels,<sp/><ref refid="class__sbsms___1_1_s_b_s_m_s_quality" kindref="compound">SBSMSQuality</ref><sp/>*quality,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSynthesize)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(band&lt;quality-&gt;<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>.bands-1)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>sub<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_sub_band" kindref="compound">SubBand</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,band+1,channels,quality,bSynthesize);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>sub<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>this-&gt;quality<sp/>=<sp/>quality;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>this-&gt;channels<sp/>=<sp/>channels;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>this-&gt;parent<sp/>=<sp/>parent;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>this-&gt;band<sp/>=<sp/>band;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1aad05f78187c942f9dd521605fa81f1ba" kindref="member">M</ref><sp/>=<sp/>(1&lt;&lt;band);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M_MAX<sp/>=<sp/>1&lt;&lt;(quality-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_quality_1aaffdf053cc2f970b928f9f39885d9c9e" kindref="member">params</ref>.<ref refid="struct__sbsms___1_1_s_b_s_m_s_quality_params_1a12837690a45fa94b0534443d299d2f41" kindref="member">bands</ref>-1);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref><sp/>=<sp/>quality-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_quality_1aaffdf053cc2f970b928f9f39885d9c9e" kindref="member">params</ref>.<ref refid="struct__sbsms___1_1_s_b_s_m_s_quality_params_1a6afd86d066a4a45f9898d3be9e659c16" kindref="member">N</ref>[band];</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N0<sp/>=<sp/>quality-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_quality_1aaffdf053cc2f970b928f9f39885d9c9e" kindref="member">params</ref>.<ref refid="struct__sbsms___1_1_s_b_s_m_s_quality_params_1a738b1587be2e5559c12a80c0a081a731" kindref="member">N0</ref>[band];</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N1<sp/>=<sp/>quality-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_quality_1aaffdf053cc2f970b928f9f39885d9c9e" kindref="member">params</ref>.<ref refid="struct__sbsms___1_1_s_b_s_m_s_quality_params_1aab33c781a432fc87d6f1b762ca9e2aff" kindref="member">N1</ref>[band];<sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N2<sp/>=<sp/>quality-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_quality_1aaffdf053cc2f970b928f9f39885d9c9e" kindref="member">params</ref>.<ref refid="struct__sbsms___1_1_s_b_s_m_s_quality_params_1a1fd7199cccf829c490cbf88aba499e30" kindref="member">N2</ref>[band];</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>this-&gt;res<sp/>=<sp/>quality-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_quality_1aaffdf053cc2f970b928f9f39885d9c9e" kindref="member">params</ref>.<ref refid="struct__sbsms___1_1_s_b_s_m_s_quality_params_1a588c35d09633cc190deb59e960f6056b" kindref="member">res</ref>[band];</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>this-&gt;resMask<sp/>=<sp/>res<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>this-&gt;bSynthesize<sp/>=<sp/>bSynthesize;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>nGrainsPerFrame<sp/>=<sp/>res;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>nGrainsPerFrame<sp/>*=<sp/>sub-&gt;nGrainsPerFrame;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>inputFrameSize<sp/>=<sp/>M_MAX*quality-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_quality_1aaffdf053cc2f970b928f9f39885d9c9e" kindref="member">params</ref>.<ref refid="struct__sbsms___1_1_s_b_s_m_s_quality_params_1a709b40781a537fb4380463de5b469b67" kindref="member">H</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>h<sp/>=<sp/>inputFrameSize<sp/>/<sp/>(M*nGrainsPerFrame);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>nToDrop0<sp/>=<sp/>(quality-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_quality_1ac7cc57ca3f85ef0c75edac9b2f314f1b" kindref="member">getMaxPresamples</ref>()/M<sp/>-<sp/>N0/2);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>nToDrop1<sp/>=<sp/>(quality-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_quality_1ac7cc57ca3f85ef0c75edac9b2f314f1b" kindref="member">getMaxPresamples</ref>()/M<sp/>-<sp/>N1/2);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>nToDrop2<sp/>=<sp/>(quality-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_quality_1ac7cc57ca3f85ef0c75edac9b2f314f1b" kindref="member">getMaxPresamples</ref>()/M<sp/>-<sp/>N2/2);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>nToWriteForGrain<sp/>=<sp/>(quality-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_quality_1ac7cc57ca3f85ef0c75edac9b2f314f1b" kindref="member">getMaxPresamples</ref>()/M<sp/>+<sp/>N2/2);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>nToPrepad1<sp/>=<sp/>N1/2;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>nToPrepad0<sp/>=<sp/>N0/2;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>nReadFromOutputFrame<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;3;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>nFramesAnalyzed[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=0;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>&lt;channels;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>nFramesExtracted[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>nFramesMarked[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>nFramesAssigned[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>nFramesTrialed2[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>nFramesTrialed1[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>nFramesRendered[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsMarked[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsAssigned[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsTrialed2[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsTrialed1[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsAdvanced[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>nGrainsWritten<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>nFramesAdjusted2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>nGrainsAdjusted2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>nFramesAdjusted1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>nGrainsAdjusted1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>nFramesRead<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>totalSizef<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>samplesSubIn<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespace__sbsms___1a8cd0992a16c2cc5448b63d446239c196" kindref="member">SampleBuf</ref>(<ref refid="namespace__sbsms___1a1074f2891e042ba40cfa1c793cee3e65a25ecb24fd92518a71a3eddc01338a887" kindref="member">NDownSample</ref>/2);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>grainsIn<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_grain_buf" kindref="compound">GrainBuf</ref>(<ref refid="namespace__sbsms___1a1074f2891e042ba40cfa1c793cee3e65a25ecb24fd92518a71a3eddc01338a887" kindref="member">NDownSample</ref>,<sp/><ref refid="namespace__sbsms___1a1074f2891e042ba40cfa1c793cee3e65a25ecb24fd92518a71a3eddc01338a887" kindref="member">NDownSample</ref>/<ref refid="namespace__sbsms___1a1074f2891e042ba40cfa1c793cee3e65ab0f9e22fc2bd4d17b42bd9b5ee84cc3f" kindref="member">SDownSample</ref>,<sp/><ref refid="namespace__sbsms___1a1074f2891e042ba40cfa1c793cee3e65a25ecb24fd92518a71a3eddc01338a887" kindref="member">NDownSample</ref>,<sp/><ref refid="namespace__sbsms___1a62c9e6ed284aa8472274a48cccd777f1a59da3b0b8fdeb25dac4eec9c53828d91" kindref="member">hann</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>downSampledGrainAllocator<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_grain_allocator" kindref="compound">GrainAllocator</ref>(<ref refid="namespace__sbsms___1a1074f2891e042ba40cfa1c793cee3e65a25ecb24fd92518a71a3eddc01338a887" kindref="member">NDownSample</ref>/2,<ref refid="namespace__sbsms___1a1074f2891e042ba40cfa1c793cee3e65a25ecb24fd92518a71a3eddc01338a887" kindref="member">NDownSample</ref>/2,<ref refid="namespace__sbsms___1a62c9e6ed284aa8472274a48cccd777f1a59da3b0b8fdeb25dac4eec9c53828d91" kindref="member">hann</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(band<sp/>&gt;=<sp/><ref refid="namespace__sbsms___1a79a0ca762d317030c29295cb20496a7dad3d329f6ea1764f86f37427db90bdf46" kindref="member">minTrial1Band</ref>)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>grains[0]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_grain_buf" kindref="compound">GrainBuf</ref>(<ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>,<sp/>h,<sp/>N0,<sp/><ref refid="namespace__sbsms___1a62c9e6ed284aa8472274a48cccd777f1ad5b7ad1b715cc9a6f75b8b74c4fe69a3" kindref="member">hannpoisson</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>grains[0]<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(band<sp/>&gt;=<sp/><ref refid="namespace__sbsms___1a79a0ca762d317030c29295cb20496a7da47f713a03ba9176eedce881edd4cdbdf" kindref="member">minTrial2Band</ref>)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>grains[1]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_grain_buf" kindref="compound">GrainBuf</ref>(<ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>,<sp/>h,<sp/>N1,<sp/><ref refid="namespace__sbsms___1a62c9e6ed284aa8472274a48cccd777f1ad5b7ad1b715cc9a6f75b8b74c4fe69a3" kindref="member">hannpoisson</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>grains[1]<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>grains[2]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_grain_buf" kindref="compound">GrainBuf</ref>(<ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>,<sp/>h,<sp/>N2,<sp/><ref refid="namespace__sbsms___1a62c9e6ed284aa8472274a48cccd777f1ad5b7ad1b715cc9a6f75b8b74c4fe69a3" kindref="member">hannpoisson</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=0;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>&lt;channels;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(band<sp/>&gt;=<sp/><ref refid="namespace__sbsms___1a79a0ca762d317030c29295cb20496a7dad3d329f6ea1764f86f37427db90bdf46" kindref="member">minTrial1Band</ref>)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>analyzedGrains[0][<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_grain_buf" kindref="compound">GrainBuf</ref>(<ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>,<sp/>h,<sp/>N0,<sp/><ref refid="namespace__sbsms___1a62c9e6ed284aa8472274a48cccd777f1ad5b7ad1b715cc9a6f75b8b74c4fe69a3" kindref="member">hannpoisson</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>analyzedGrains[0][<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(band<sp/>&gt;=<sp/><ref refid="namespace__sbsms___1a79a0ca762d317030c29295cb20496a7da47f713a03ba9176eedce881edd4cdbdf" kindref="member">minTrial2Band</ref>)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>analyzedGrains[1][<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_grain_buf" kindref="compound">GrainBuf</ref>(<ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>,<sp/>h,<sp/>N1,<sp/><ref refid="namespace__sbsms___1a62c9e6ed284aa8472274a48cccd777f1ad5b7ad1b715cc9a6f75b8b74c4fe69a3" kindref="member">hannpoisson</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>analyzedGrains[1][<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>analyzedGrains[2][<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_grain_buf" kindref="compound">GrainBuf</ref>(<ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>,<sp/>h,<sp/>N2,<sp/><ref refid="namespace__sbsms___1a62c9e6ed284aa8472274a48cccd777f1ad5b7ad1b715cc9a6f75b8b74c4fe69a3" kindref="member">hannpoisson</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>pthread_mutex_init(&amp;dataMutex,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;3;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_init(&amp;grainMutex[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>sms<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_s_m_s" kindref="compound">SMS</ref>(sub?sub-&gt;sms:<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>,band,quality-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_quality_1aaffdf053cc2f970b928f9f39885d9c9e" kindref="member">params</ref>.<ref refid="struct__sbsms___1_1_s_b_s_m_s_quality_params_1a12837690a45fa94b0534443d299d2f41" kindref="member">bands</ref>-1,h,res,N0,N1,N2,channels,analyzedGrains[2][0]-&gt;getWindowFFT());</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>nTrial2Latency<sp/>=<sp/>sms-&gt;<ref refid="class__sbsms___1_1_s_m_s_1a62e37698ecae7d6719913cf220014bbd" kindref="member">getTrial2Latency</ref>()<sp/>/<sp/>nGrainsPerFrame<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sms-&gt;getTrial2Latency()<sp/>%<sp/>nGrainsPerFrame)<sp/>nTrial2Latency++;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nAdjust2LatencyGrains<sp/>=<sp/>N1/(2*h);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>nAdjust2Latency<sp/>=<sp/>nAdjust2LatencyGrains<sp/>/<sp/>nGrainsPerFrame<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nAdjust2LatencyGrains<sp/>%<sp/>nGrainsPerFrame)<sp/>nAdjust2Latency++;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nAdjust1LatencyGrains<sp/>=<sp/>N0/(2*h);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>nAdjust1Latency<sp/>=<sp/>nAdjust1LatencyGrains<sp/>/<sp/>nGrainsPerFrame<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nAdjust1LatencyGrains<sp/>%<sp/>nGrainsPerFrame)<sp/>nAdjust1Latency++;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>nTrial2Latency<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(nTrial2Latency,sub-&gt;nTrial2Latency);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>nAdjust2Latency<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(nAdjust2Latency,sub-&gt;nAdjust2Latency);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>nAdjust1Latency<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(nAdjust1Latency,sub-&gt;nAdjust1Latency);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>nMarkLatency<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>nAssignLatency<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>nTrial1Latency<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>nRenderLatency<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(band==0)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class__sbsms___1_1_sub_band" kindref="compound">SubBand</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>sub;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(s)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="class__sbsms___1_1_sub_band_1aff3a79aeee5305de3c29e7816d9efd68" kindref="member">nTrial2Latency</ref><sp/>=<sp/>nTrial2Latency;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="class__sbsms___1_1_sub_band_1a8284b65159a237d4f9d88847b2f763ad" kindref="member">nAdjust2Latency</ref><sp/>=<sp/>nAdjust2Latency;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="class__sbsms___1_1_sub_band_1aa05755663636b7fed71050364fce0a86" kindref="member">nAdjust1Latency</ref><sp/>=<sp/>nAdjust1Latency;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>s-&gt;<ref refid="class__sbsms___1_1_sub_band_1a1e1a1206dff7e31fff824706ed967883" kindref="member">sub</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>nWriteSlack<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>nAnalyzeSlack<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>nExtractSlack<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>nMarkSlack<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>nAssignSlack<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>nTrial2Slack<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>nAdjust2Slack<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>nTrial1Slack<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>nAdjust1Slack<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>nRenderSlack<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>nWriteSlack<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>nAnalyzeSlack<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>nExtractSlack<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>nMarkSlack<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>nAssignSlack<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>nTrial2Slack<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>nAdjust2Slack<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>nTrial1Slack<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>nAdjust1Slack<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>nRenderSlack<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>synthRenderer<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>outMixer<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bSynthesize)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>synthRenderer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_synth_renderer" kindref="compound">SynthRenderer</ref>(channels,M*h);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>renderers.push_back(synthRenderer);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>samplesSubOut<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespace__sbsms___1a8cd0992a16c2cc5448b63d446239c196" kindref="member">SampleBuf</ref>(0);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outMixer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_mixer" kindref="compound">Mixer</ref>(synthRenderer,samplesSubOut);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outMixer<sp/>=<sp/>synthRenderer;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="class__sbsms___1_1_sub_band_1a6dd08da29f6a9817737f233b045b5ac6" refkind="member"><highlight class="normal">SubBand<sp/>::<sp/>~SubBand()<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;3;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(grains[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>grains[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=0;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>&lt;channels;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(analyzedGrains[i][<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>])<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>analyzedGrains[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>][<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>];</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>sms;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>sub;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>grainsIn;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>samplesSubIn;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>downSampledGrainAllocator;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bSynthesize)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>samplesSubOut;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>outMixer;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bSynthesize)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>synthRenderer;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="class__sbsms___1_1_sub_band_1ac346467c4ef2b91ac19cbb17343e944a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>addRenderer(<ref refid="class__sbsms___1_1_s_b_s_m_s_renderer" kindref="compound">SBSMSRenderer</ref><sp/>*renderer)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;addRenderer(renderer);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>renderers.push_back(renderer);</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="class__sbsms___1_1_sub_band_1ad7271546836ec53cff91a37dbf613131" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>removeRenderer(<ref refid="class__sbsms___1_1_s_b_s_m_s_renderer" kindref="compound">SBSMSRenderer</ref><sp/>*renderer)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;removeRenderer(renderer);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>renderers.remove(renderer);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="class__sbsms___1_1_sub_band_1ae81b56e5718224afc9c2893e7ecd8ea9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>setStretch(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stretch)</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;dataMutex);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parent)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oFrameSizef<sp/>=<sp/>(stretch==0.0f?1.0f:stretch)*(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)inputFrameSize;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>totalSizef<sp/>+=<sp/>oFrameSizef;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>oFrameSizei<sp/>=<sp/><ref refid="real_8h_1a483e8f95ebd254c9279e0ada03a9a6e8" kindref="member">lrintf</ref>(totalSizef);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>totalSizef<sp/>-=<sp/>oFrameSizei;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>outputFrameSize.write(oFrameSizei);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>stretchRender.write(stretch);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;dataMutex);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;setStretch(stretch);</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="class__sbsms___1_1_sub_band_1a653b2764a85fe1acd4050bdfb7a144b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>setPitch(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;setPitch(f);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;dataMutex);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>pitchRender.write(f);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;dataMutex);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="class__sbsms___1_1_sub_band_1a4cd458d5fdfa047f31455f67f94cbe32" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>stepAnalyzeFrame(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;stepAnalyzeFrame(i);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>nFramesAnalyzed[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]++;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="class__sbsms___1_1_sub_band_1a7eba3dc8d20b749b96173121992215bb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>stepExtractFrame(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;stepExtractFrame(c);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>nFramesExtracted[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]++;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="class__sbsms___1_1_sub_band_1af6ed864153f57d6c1c7a8a309549a93f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>stepMarkFrame(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;stepMarkFrame(c);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>nFramesMarked[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]++;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="class__sbsms___1_1_sub_band_1a30df26fdb8599ba88ced1b041540ee40" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>stepAssignFrame(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;stepAssignFrame(c);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>nFramesAssigned[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]++;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="class__sbsms___1_1_sub_band_1acd818f2adc51784f3756fbfdd80b9aa5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>stepTrial2Frame(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;stepTrial2Frame(c);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>nFramesTrialed2[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]++;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="class__sbsms___1_1_sub_band_1ae5115f25febd5e9ab4fb52a86567d02c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>stepAdjust2Frame()</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;stepAdjust2Frame();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>nFramesAdjusted2++;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265" refid="class__sbsms___1_1_sub_band_1ab3070fcdb57c136669c5d2cc03012f8d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>stepTrial1Frame(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;stepTrial1Frame(c);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>nFramesTrialed1[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]++;</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="class__sbsms___1_1_sub_band_1ad5d825e516bbff0a4b08d6c3389ec085" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>stepAdjust1Frame()</highlight></codeline>
<codeline lineno="272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;stepAdjust1Frame();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;dataMutex);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>stretchRender.advance(1);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>pitchRender.advance(1);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;dataMutex);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>nFramesAdjusted1++;</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="class__sbsms___1_1_sub_band_1ad1efc457e8605706806aacbdf2817d3a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>stepRenderFrame(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;stepRenderFrame(c);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>nFramesRendered[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]++;</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="class__sbsms___1_1_sub_band_1ab77a53a8b6fe70ae792d43719c9be6a7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>stepReadFrame()</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;stepReadFrame();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>nFramesRead++;</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="class__sbsms___1_1_sub_band_1a2f33dfd5ed5f5c03d31812c5e9934bc7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>writeInit()</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>getFramesAtFront(0);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(n,getFramesAtFront(1));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(n,getFramesAtFront(2));</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(n<sp/>&lt;=<sp/>nWriteSlack);</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="class__sbsms___1_1_sub_band_1a9b0cd5cf05fb5b1313d47aae231511f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>readInit()</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>nFramesRendered[0];</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=1;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>&lt;channels;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(0L,<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(1L,<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(n,nFramesRendered[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]-nFramesRead)));</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>n<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(n,sub-&gt;readInit());</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="class__sbsms___1_1_sub_band_1ab6e5103bbdccf4514777a6e1a5294faa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>analyzeInit(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSet,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parent)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>getFramesAtFront(i);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=0;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>&lt;channels;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(0L,<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(1L,<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(n,nAnalyzeSlack-(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(nFramesAnalyzed[i]-nFramesExtracted[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]))));</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bSet)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsToAnalyze[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>n<sp/>*<sp/>nGrainsPerFrame;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;analyzeInit(i,bSet,n);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="class__sbsms___1_1_sub_band_1a57174feb58c021ed5a6014eb58224b75" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>extractInit(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSet)</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>n<sp/>=<sp/>res*sub-&gt;extractInit(c,bSet);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!sub)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(0L,<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(1L,nExtractSlack+nMarkLatency-(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(nFramesExtracted[c]-nFramesMarked[c])));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;3;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(0L,<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(1L,<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(n,(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(nFramesAnalyzed[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-nFramesExtracted[c]))));</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bSet)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsToExtract[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="class__sbsms___1_1_sub_band_1ad980bbbe3ace0033f2b8296f22286be5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>markInit(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSet)</highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>n<sp/>=<sp/>res*sub-&gt;markInit(c,bSet);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!sub)<sp/>n<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(0L,<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(1L,<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(nFramesExtracted[c]-nFramesMarked[c])-nMarkLatency,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nMarkSlack+nAssignLatency-(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(nFramesMarked[c]-nFramesAssigned[c]))));</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bSet)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsToMark[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="class__sbsms___1_1_sub_band_1aa00b869792f0ba99d84fd212146c550f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>assignInit(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSet)</highlight></codeline>
<codeline lineno="361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>res<sp/>*<sp/>sub-&gt;assignInit(c,bSet);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(0L,<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(1L,<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(nFramesMarked[c]-nFramesAssigned[c])-nAssignLatency,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nAssignSlack+nTrial2Latency-(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(nFramesAssigned[c]-nFramesTrialed2[c]))));</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bSet)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsToAdvance[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsToAssign[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nFramesAssigned[c]==0)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sms-&gt;start(0,c);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="class__sbsms___1_1_sub_band_1a061a6feb9cf09238b086edfe426de436" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>trial2Init(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSet)</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>res<sp/>*<sp/>sub-&gt;trial2Init(c,bSet);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(0L,<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(1L,<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(nFramesAssigned[c]-nFramesTrialed2[c])-nTrial2Latency,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTrial2Slack+nAdjust2Latency-(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(nFramesTrialed2[c]-nFramesAdjusted2))));</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bSet)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsToTrial2[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsTrialed2[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="class__sbsms___1_1_sub_band_1a44f4df4a8d164953fb1e2acf4a4a57dd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>adjust2Init(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSet)</highlight></codeline>
<codeline lineno="398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>res<sp/>*<sp/>sub-&gt;adjust2Init(bSet);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=0;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>&lt;channels;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(n,(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(nFramesTrialed2[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]-nFramesAdjusted2-nAdjust2Latency));</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(n,nAdjust2Slack+nTrial1Latency-(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(nFramesAdjusted2-nFramesTrialed1[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]));</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(0L,n);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bSet)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsToAdjust2<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsAdjusted2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="class__sbsms___1_1_sub_band_1a1d95f4391735cf895de4cb1447799776" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>trial1Init(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSet)</highlight></codeline>
<codeline lineno="418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>res<sp/>*<sp/>sub-&gt;trial1Init(c,bSet);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(0L,<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(1L,<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(nFramesAdjusted2-nFramesTrialed1[c])-nTrial1Latency,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTrial1Slack+nAdjust1Latency-(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(nFramesTrialed1[c]-nFramesAdjusted1))));</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bSet)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsToTrial1[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsTrialed1[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="class__sbsms___1_1_sub_band_1a142a3e85451d24feb067aabae284e8f9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>adjust1Init(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSet)</highlight></codeline>
<codeline lineno="434"><highlight class="normal">{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>res<sp/>*<sp/>sub-&gt;adjust1Init(bSet);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=0;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>&lt;channels;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(n,(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(nFramesTrialed1[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]-nFramesAdjusted1-nAdjust1Latency));</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(n,nAdjust1Slack+nRenderLatency-(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(nFramesAdjusted1-nFramesRendered[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]));</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(0L,n);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bSet)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsToAdjust1<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsAdjusted1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="class__sbsms___1_1_sub_band_1a11298bf9dcf50d86d43a966d3c610a6c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>renderInit(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSet)<sp/></highlight></codeline>
<codeline lineno="454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>res<sp/>*<sp/>sub-&gt;renderInit(c,bSet);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(0L,<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(1L,<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(nFramesAdjusted1-nFramesRendered[c])-nRenderLatency,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nRenderSlack-(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(nFramesRendered[c]-nFramesRead))));</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bSet)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsRendered[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsToRender[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469" refid="class__sbsms___1_1_sub_band_1adf13d04840d6b23e30ed7fff9c6d3170" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="src_2flac_2main_8c_1a9e9f8e1cc955d6cd62f40bcb8eac9732" kindref="member">SubBand :: analyze</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="470"><highlight class="normal">{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;analyze(i);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(grains[i])<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;grain*&gt;<sp/>gV;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;grainMutex[i]);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>=grains[i]-&gt;readPos;<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>&lt;grains[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;readPos+nGrainsToAnalyze[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class__sbsms___1_1grain" kindref="compound">grain</ref><sp/>*g<sp/>=<sp/>grains[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;read(<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gV.push_back(g);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;grainMutex[i]);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>=0;<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>&lt;nGrainsToAnalyze[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gV[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]-&gt;analyze();</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;grainMutex[i]);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>=0;<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>&lt;nGrainsToAnalyze[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=0;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>&lt;channels;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analyzedGrains[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>][<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]-&gt;write(gV[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>grains[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;advance(nGrainsToAnalyze[i]);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;grainMutex[i]);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504" refid="class__sbsms___1_1_sub_band_1a24e4f72adf4b5e6c3fa55b4407016c0f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>extract(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="505"><highlight class="normal">{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;extract(c);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>vector&lt;grain*&gt;<sp/>gV[3];</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;3;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(grains[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;grainMutex[i]);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>=analyzedGrains[i][c]-&gt;readPos;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>&lt;analyzedGrains[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>][<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]-&gt;readPos+nGrainsToExtract[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>];</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class__sbsms___1_1grain" kindref="compound">grain</ref><sp/>*g<sp/>=<sp/>analyzedGrains[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>][<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]-&gt;read(<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gV[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].push_back(g);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;grainMutex[i]);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>=0;<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>&lt;nGrainsToExtract[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>];<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class__sbsms___1_1grain" kindref="compound">grain</ref><sp/>*g0<sp/>=<sp/>(grains[0]?gV[0][<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]:<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class__sbsms___1_1grain" kindref="compound">grain</ref><sp/>*g1<sp/>=<sp/>(grains[1]?gV[1][<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]:<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class__sbsms___1_1grain" kindref="compound">grain</ref><sp/>*g2<sp/>=<sp/>gV[2][<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>sms-&gt;add(g0,g1,g2,c);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;3;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(grains[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;grainMutex[i]);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>analyzedGrains[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>][<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]-&gt;advance(nGrainsToExtract[c]);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;grainMutex[i]);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546" refid="class__sbsms___1_1_sub_band_1ae8ebbfa6bedea270e6c48166e9186ddd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xldmem_8c_1ae8cb64b8b02eb280bb21f141a33f6a36" kindref="member">SubBand :: mark</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="547"><highlight class="normal">{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ntodo<sp/>=<sp/>parent?1:nGrainsToMark[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>];</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ndone<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(ndone&lt;ntodo)<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>sms-&gt;mark(nGrainsMarked[c],c);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nGrainsMarked[c]&amp;resMask<sp/>||<sp/>res==1)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;mark(c);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>ndone++;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsMarked[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]++;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560" refid="class__sbsms___1_1_sub_band_1a2ec0cd9139461afd5a84a832e97b4e32" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>assign(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)<sp/></highlight></codeline>
<codeline lineno="561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndone=0;<sp/>ndone&lt;nGrainsToAssign[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>];<sp/>ndone++)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>assignStart(c);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bCont<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(bCont)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assignInit(c);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assignFind(c);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bCont<sp/>=<sp/>assignConnect(c);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>assignStep(c);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>splitMerge(c);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575" refid="class__sbsms___1_1_sub_band_1a2b0dfdfc8a76a51b2fed77f716d39533" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>assignStart(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="576"><highlight class="normal">{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub<sp/>&amp;&amp;<sp/>!(nGrainsAssigned[c]&amp;resMask))<sp/>sub-&gt;assignStart(c);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>sms-&gt;assignStart(nGrainsAssigned[c],c);</highlight></codeline>
<codeline lineno="579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581" refid="class__sbsms___1_1_sub_band_1acd1e272c554a2c256e2ae145c173e763" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>assignInit(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;assignInit(c);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/>sms-&gt;assignInit(nGrainsAssigned[c],c);</highlight></codeline>
<codeline lineno="585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587" refid="class__sbsms___1_1_sub_band_1af7f97f62a2325c6313c0b3193d7842da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>assignFind(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;assignFind(c);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>sms-&gt;assignFind(nGrainsAssigned[c],c);</highlight></codeline>
<codeline lineno="591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593" refid="class__sbsms___1_1_sub_band_1a3556f93d50440021f4274c7fa745a2d9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>assignConnect(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="594"><highlight class="normal">{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bCont<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub-&gt;assignConnect(c))<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bCont<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sms-&gt;assignConnect(nGrainsAssigned[c],c,</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>bCont<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bCont;</highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607" refid="class__sbsms___1_1_sub_band_1ae621380859d16d8322d5dc2583ff739d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>assignStep(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="608"><highlight class="normal">{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>sms-&gt;assignConnect(nGrainsAssigned[c],c,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub<sp/>&amp;&amp;<sp/>!((nGrainsAssigned[c]+1)&amp;resMask))<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;assignStep(c);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>sms-&gt;start(nGrainsAssigned[c]+1,c);</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616" refid="class__sbsms___1_1_sub_band_1a4540d423e7bd473daf3a27fd836a827c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>splitMerge(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="617"><highlight class="normal">{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>nGrainsAssigned[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]++;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub<sp/>&amp;&amp;<sp/>!(nGrainsAssigned[c]&amp;resMask))<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;splitMerge(c);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>sms-&gt;splitMerge(c);</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625" refid="class__sbsms___1_1_sub_band_1a63f22db739d953fb13972541d8c90768" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>advance(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="626"><highlight class="normal">{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ntodo<sp/>=<sp/>parent?1:nGrainsToAdvance[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>];</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ndone<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(ndone&lt;ntodo)<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub<sp/>&amp;&amp;<sp/>!(nGrainsAdvanced[c]&amp;resMask))<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;advance(c);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>sms-&gt;advance(c);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsMarked[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]--;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsAssigned[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]--;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsAdvanced[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]++;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>ndone++;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641" refid="class__sbsms___1_1_sub_band_1a2a6e70ebd26cef2048f2e76e1bf2ec19" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>trial2(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="642"><highlight class="normal">{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;nGrainsToTrial2[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>];<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>trial2Start(c);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>trial2Trial(c);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>trial2End(c);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650" refid="class__sbsms___1_1_sub_band_1a638cccd8f224a8748229a3928f56d415" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>trial2Start(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(nGrainsTrialed2[c]&amp;resMask))<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;trial2Start(c);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>sms-&gt;trial2Start(c);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658" refid="class__sbsms___1_1_sub_band_1a8aeb38ff6b136c90afb35a6513ce258a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>trial2Trial(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="659"><highlight class="normal">{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub<sp/>&amp;&amp;<sp/>!(nGrainsTrialed2[c]&amp;resMask))<sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;trial2Trial(c);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>sms-&gt;trial2(c);</highlight></codeline>
<codeline lineno="664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666" refid="class__sbsms___1_1_sub_band_1a2e33b1167616e8302e5060824c55fe19" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>trial2End(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="667"><highlight class="normal">{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>nGrainsTrialed2[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]++;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(nGrainsTrialed2[c]&amp;resMask))<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;trial2End(c);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>sms-&gt;trial2End(c);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675" refid="class__sbsms___1_1_sub_band_1af98e91edc48ce763182b1fd3c086209d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>adjust2()</highlight></codeline>
<codeline lineno="676"><highlight class="normal">{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ntodo<sp/>=<sp/>parent?1:nGrainsToAdjust2;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ndone<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(ndone&lt;ntodo)<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(nGrainsAdjusted2&amp;resMask))<sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;adjust2();</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>sms-&gt;adjust2();</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>ndone++;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsAdjusted2++;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal">}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689" refid="class__sbsms___1_1_sub_band_1a4e169963dc19c9d61938540e2fb3f7fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>trial1(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="690"><highlight class="normal">{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;nGrainsToTrial1[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>];<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>trial1Start(c);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>trial1Trial(c);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>trial1End(c);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698" refid="class__sbsms___1_1_sub_band_1a6ea08be04211c20852505acb3fd16cf0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>trial1Start(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="699"><highlight class="normal">{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(nGrainsTrialed1[c]&amp;resMask))<sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;trial1Start(c);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>sms-&gt;trial1Start(c);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706" refid="class__sbsms___1_1_sub_band_1a37e437fd0817da602ad7665631bc64f8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>trial1Trial(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub<sp/>&amp;&amp;<sp/>!(nGrainsTrialed1[c]&amp;resMask))<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;trial1Trial(c);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>sms-&gt;trial1(c);</highlight></codeline>
<codeline lineno="712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714" refid="class__sbsms___1_1_sub_band_1af545e135bbe7c57aae78d7ee57fd6a3c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>trial1End(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>nGrainsTrialed1[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]++;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(nGrainsTrialed1[c]&amp;resMask))<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;trial1End(c);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>sms-&gt;trial1End(c);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723" refid="class__sbsms___1_1_sub_band_1a95a1efd629da6068b2d38e40ef23f993" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>adjust1()</highlight></codeline>
<codeline lineno="724"><highlight class="normal">{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;dataMutex);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stretch<sp/>=<sp/>stretchRender.read();</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f0<sp/>=<sp/>pitchRender.read(pitchRender.readPos);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f1;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pitchRender.nReadable()&gt;=2)<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>f1<sp/>=<sp/>pitchRender.read(pitchRender.readPos+1);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>f1<sp/>=<sp/>f0;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;dataMutex);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ntodo<sp/>=<sp/>parent?1:nGrainsToAdjust1;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ndone<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>df<sp/>=<sp/>(f1-f0)/(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)nGrainsToAdjust1;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(ndone&lt;ntodo)<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(nGrainsAdjusted1&amp;resMask))<sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;adjust1();</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>sms-&gt;adjust1(stretch,f0+nGrainsAdjusted1*df,f0+(nGrainsAdjusted1+1)*df);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>ndone++;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsAdjusted1++;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752" refid="class__sbsms___1_1_sub_band_1a4617b62b18ece2c54ee7de2c7e2ff8c1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>readSubSamples()</highlight></codeline>
<codeline lineno="753"><highlight class="normal">{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>sub-&gt;readSubSamples();</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref><sp/>fromSub[<ref refid="namespace__sbsms___1a1074f2891e042ba40cfa1c793cee3e65ac1d0e1dd9f180285a3ef33a0bcc76fc8" kindref="member">subBufSize</ref>];</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nFromSub<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nFromSub<sp/>=<sp/>sub-&gt;outMixer-&gt;read(fromSub,<ref refid="namespace__sbsms___1a1074f2891e042ba40cfa1c793cee3e65ac1d0e1dd9f180285a3ef33a0bcc76fc8" kindref="member">subBufSize</ref>);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>samplesSubOut-&gt;write(fromSub,<sp/>nFromSub);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(nFromSub&gt;0);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal">}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765" refid="class__sbsms___1_1_sub_band_1ab3d36a0e3fda3358f021a53ad60c6d77" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>read(<ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref><sp/>*<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)<sp/></highlight></codeline>
<codeline lineno="766"><highlight class="normal">{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nRead<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nToRead<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/>readSubSamples();</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(nToRead<sp/>&amp;&amp;<sp/>nRead<sp/>&lt;<sp/>n<sp/>&amp;&amp;<sp/>outputFrameSize.nReadable())<sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nToReadFromOutputFrame<sp/>=<sp/>outputFrameSize.read();</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>nToRead<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(n-nRead,nToReadFromOutputFrame-nReadFromOutputFrame);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>nToRead<sp/>=<sp/>outMixer-&gt;read(buf+nRead,<sp/>nToRead);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>nReadFromOutputFrame<sp/>+=<sp/>nToRead;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>nRead<sp/>+=<sp/>nToRead;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nReadFromOutputFrame<sp/>==<sp/>nToReadFromOutputFrame)<sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nReadFromOutputFrame<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outputFrameSize.advance(1);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stepReadFrame();</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nRead;</highlight></codeline>
<codeline lineno="783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785" refid="class__sbsms___1_1_sub_band_1a80661762a677ce11060cf5608d69bdcf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>renderSynchronous()<sp/></highlight></codeline>
<codeline lineno="786"><highlight class="normal">{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(list&lt;SBSMSRenderer*&gt;::iterator<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>renderers.begin();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>!=<sp/>renderers.end();<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class__sbsms___1_1_s_b_s_m_s_renderer" kindref="compound">SBSMSRenderer</ref><sp/>*renderer<sp/>=<sp/>*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>renderer-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_renderer_1a739e28bdee5a9cd756c54164215334e7" kindref="member">startFrame</ref>();</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=0;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>&lt;channels;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)<sp/>{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>renderInit(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>render(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>stepRenderFrame(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(list&lt;SBSMSRenderer*&gt;::iterator<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>renderers.begin();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>!=<sp/>renderers.end();<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class__sbsms___1_1_s_b_s_m_s_renderer" kindref="compound">SBSMSRenderer</ref><sp/>*renderer<sp/>=<sp/>*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>renderer-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_renderer_1af913b15607ebc624107f327f5cc0169d" kindref="member">endFrame</ref>();</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="test__rw__echo_8c_1a39c8d1039645bc924aecc49d76f472a0" kindref="member">samples</ref><sp/>=<sp/>outputFrameSize.read();</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>outputFrameSize.advance(1);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/>stepReadFrame();</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="test__rw__echo_8c_1a39c8d1039645bc924aecc49d76f472a0" kindref="member">samples</ref>;</highlight></codeline>
<codeline lineno="804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806" refid="class__sbsms___1_1_sub_band_1a3d1c089c0fd88c70c6e1936763d01ef1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>render(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="807"><highlight class="normal">{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ntodo<sp/>=<sp/>parent?1:nGrainsToRender[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>];</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ndone<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nRenderedTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(ndone&lt;ntodo)<sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub<sp/>&amp;&amp;<sp/>!(nGrainsRendered[c]&amp;resMask))<sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;render(c);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>sms-&gt;render(c,renderers);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>nGrainsRendered[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]++;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>ndone++;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822" refid="class__sbsms___1_1_sub_band_1a86bb056f4f1efeb1d3ea5887947f2fce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>renderComplete(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace__sbsms___1ae4ba47977e7e07f5945e529e2256b662" kindref="member">SampleCountType</ref><sp/>&amp;<ref refid="test__rw__echo_8c_1a39c8d1039645bc924aecc49d76f472a0" kindref="member">samples</ref>)</highlight></codeline>
<codeline lineno="823"><highlight class="normal">{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(list&lt;SBSMSRenderer*&gt;::iterator<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>renderers.begin();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>!=<sp/>renderers.end();<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class__sbsms___1_1_s_b_s_m_s_renderer" kindref="compound">SBSMSRenderer</ref><sp/>*renderer<sp/>=<sp/>*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>renderer-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_renderer_1a28d079a5fd7cc291243ccf5cda73828a" kindref="member">end</ref>(samples);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830" refid="class__sbsms___1_1_sub_band_1ad3e97167c024b1087b63430daffe19ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>write(<ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref><sp/>*inBuf,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stretch,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1a7f083f7b76ea4d09b2820211a2b0d04e" kindref="member">pitch</ref>)</highlight></codeline>
<codeline lineno="831"><highlight class="normal">{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nWritten<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(nWritten&lt;n)<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nToWrite<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(nToWriteForGrain,n-nWritten);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nToDrop2)<sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nToWrite<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(nToDrop2,nToWrite);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nToDrop2<sp/>-=<sp/>nToWrite;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nToDrop1<sp/>-=<sp/>nToWrite;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nToDrop0<sp/>-=<sp/>nToWrite;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nToDrop1)<sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nToWrite<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(nToDrop1,nToWrite);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nToDrop1<sp/>-=<sp/>nToWrite;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nToDrop0<sp/>-=<sp/>nToWrite;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nToDrop0)<sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nToWrite<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(nToDrop0,nToWrite);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nToPrepad0)<sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nToWrite<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(nToPrepad0,nToWrite);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nToPrepad1)<sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nToWrite<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(nToPrepad1,nToWrite);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sms-&gt;prepad1(inBuf+nWritten,<sp/>nToWrite);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nToPrepad1<sp/>-=<sp/>nToWrite;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nToDrop0)<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nToDrop0<sp/>-=<sp/>nToWrite;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nToPrepad0)<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sms-&gt;prepad0(inBuf+nWritten,<sp/>nToWrite);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nToPrepad0<sp/>-=<sp/>nToWrite;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;grainMutex[0]);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(grains[0])<sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grains[0]-&gt;write(inBuf+nWritten,<sp/>nToWrite);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;grainMutex[0]);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;grainMutex[1]);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(grains[1])<sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grains[1]-&gt;write(inBuf+nWritten,<sp/>nToWrite);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;grainMutex[1]);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;grainMutex[2]);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>grains[2]-&gt;write(inBuf+nWritten,<sp/>nToWrite);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;grainMutex[2]);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>nWritten<sp/>+=<sp/>nToWrite;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>nToWriteForGrain<sp/>-=<sp/>nToWrite;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nToWriteForGrain<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nToWriteForGrain<sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parent)<sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nGrainsWritten<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStretch(stretch);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setPitch(pitch);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nGrainsWritten++;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nGrainsWritten<sp/>==<sp/>nGrainsPerFrame)<sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nGrainsWritten<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>grainsIn-&gt;write(inBuf,<sp/>n);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nGrainsRead<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>=grainsIn-&gt;readPos;k&lt;grainsIn-&gt;writePos;<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class__sbsms___1_1grain" kindref="compound">grain</ref><sp/>*g<sp/>=<sp/>grainsIn-&gt;read(<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>);<sp/>g-&gt;<ref refid="class__sbsms___1_1grain_1a125a0745bb6d783c79bf89dc7d614e7f" kindref="member">analyze</ref>();</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class__sbsms___1_1grain" kindref="compound">grain</ref><sp/>*gdown<sp/>=<sp/>downSampledGrainAllocator-&gt;create();</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="class__sbsms___1_1grain_1a17be22b8bc00d0f3d4e9f46fd13e0cad" kindref="member">downsample</ref>(gdown);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>samplesSubIn-&gt;write(gdown,<sp/><ref refid="namespace__sbsms___1a1074f2891e042ba40cfa1c793cee3e65a1d7ff7dc7e17b7600724288e591d518f" kindref="member">hSub</ref>);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>downSampledGrainAllocator-&gt;forget(gdown);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nGrainsRead++;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>grainsIn-&gt;advance(nGrainsRead);<sp/><sp/></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nWriteToSub<sp/>=<sp/>samplesSubIn-&gt;nReadable();</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref><sp/>*subBuf<sp/>=<sp/>samplesSubIn-&gt;getReadBuf();</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>nWriteToSub<sp/>=<sp/>sub-&gt;write(subBuf,nWriteToSub,stretch,pitch);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>samplesSubIn-&gt;advance(nWriteToSub);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929" refid="class__sbsms___1_1_sub_band_1afcbf8c43a63de5a335880a89244144e8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="allegroconvert_8cpp_1abb375a84711578752877900a37a229f0" kindref="member">SubBand :: process</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bRender)</highlight></codeline>
<codeline lineno="930"><highlight class="normal">{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;3;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(analyzeInit(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2flac_2main_8c_1a9e9f8e1cc955d6cd62f40bcb8eac9732" kindref="member">analyze</ref>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stepAnalyzeFrame(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=0;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>&lt;channels;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(extractInit(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>extract(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stepExtractFrame(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(markInit(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8c_1ae8cb64b8b02eb280bb21f141a33f6a36" kindref="member">mark</ref>(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stepMarkFrame(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(assignInit(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assign(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>advance(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stepAssignFrame(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(trial2Init(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>trial2(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stepTrial2Frame(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(adjust2Init(</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjust2();</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stepAdjust2Frame();</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(trial1Init(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>trial1(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stepTrial1Frame(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(adjust1Init(</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjust1();</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stepAdjust1Frame();</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bRender)<sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(renderInit(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>render(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stepRenderFrame(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="982"><highlight class="normal">}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984" refid="class__sbsms___1_1_sub_band_1a768997d2ae62d86a3244c6969709e64e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>getFramesAtFront(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="985"><highlight class="normal">{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>65536;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;grainMutex[i]);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(grains[i])<sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>grains[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;nReadable()<sp/>/<sp/>nGrainsPerFrame;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;grainMutex[i]);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sub)<sp/>n<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(n,sub-&gt;getFramesAtFront(i));</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000" refid="class__sbsms___1_1_sub_band_1a3c43487da46e4d61a071457fee2a3ff2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SubBand<sp/>::<sp/>getInputFrameSize()</highlight></codeline>
<codeline lineno="1001"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inputFrameSize;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/sbsms/src/subband.cpp"/>
  </compounddef>
</doxygen>
