<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="pffft_8c" kind="file" language="C++">
    <compoundname>pffft.c</compoundname>
    <includes refid="pffft_8h" local="yes">pffft.h</includes>
    <includes refid="simd_8h" local="yes">simd.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includedby refid="pffft32_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft32.c</includedby>
    <includedby refid="pffft32s_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft32s.c</includedby>
    <includedby refid="simd-dev_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/simd-dev.h</includedby>
    <incdepgraph>
      <node id="21218">
        <label>stdlib.h</label>
      </node>
      <node id="21215">
        <label>stddef.h</label>
      </node>
      <node id="21220">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="21217">
        <label>string.h</label>
      </node>
      <node id="21219">
        <label>math.h</label>
      </node>
      <node id="21213">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c</label>
        <link refid="pffft.c"/>
        <childnode refid="21214" relation="include">
        </childnode>
        <childnode refid="21216" relation="include">
        </childnode>
        <childnode refid="21217" relation="include">
        </childnode>
        <childnode refid="21218" relation="include">
        </childnode>
        <childnode refid="21219" relation="include">
        </childnode>
        <childnode refid="21220" relation="include">
        </childnode>
      </node>
      <node id="21214">
        <label>pffft.h</label>
        <link refid="pffft_8h"/>
        <childnode refid="21215" relation="include">
        </childnode>
      </node>
      <node id="21216">
        <label>simd.h</label>
        <link refid="simd_8h"/>
        <childnode refid="21215" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="21222">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft32.c</label>
        <link refid="pffft32_8c"/>
      </node>
      <node id="21224">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/simd-dev.h</label>
        <link refid="simd-dev_8h"/>
        <childnode refid="21225" relation="include">
        </childnode>
      </node>
      <node id="21223">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft32s.c</label>
        <link refid="pffft32s_8c"/>
      </node>
      <node id="21221">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c</label>
        <link refid="pffft.c"/>
        <childnode refid="21222" relation="include">
        </childnode>
        <childnode refid="21223" relation="include">
        </childnode>
        <childnode refid="21224" relation="include">
        </childnode>
      </node>
      <node id="21225">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/simd.c</label>
        <link refid="simd_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_p_f_f_f_t___setup" prot="public">PFFFT_Setup</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="pffft_8c_1a659b995ebc7e2c31a877cd3552875391" prot="public" static="no">
        <name>pffft_aligned_free</name>
        <initializer><ref refid="simd_8h_1a3ce083fe0e094f9619e8bf14798444f2" kindref="member">_soxr_simd_aligned_free</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="68" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pffft_8c_1a68ab1a6f8cf7d3c6f317c8c207fc4e2a" prot="public" static="no">
        <name>pffft_aligned_malloc</name>
        <initializer><ref refid="simd_8h_1a9085552d1234a8d3d02487fecb3da5cd" kindref="member">_soxr_simd_aligned_malloc</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="69" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pffft_8c_1a3a15779d66e1bb38882ce1a76c7439e5" prot="public" static="no">
        <name>pffft_aligned_calloc</name>
        <initializer><ref refid="simd_8h_1a0961e33fc1a87b6e4fe44e5bf3cd8b29" kindref="member">_soxr_simd_aligned_calloc</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="70" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pffft_8c_1a689b73aca835247e173b8e2c9b2907b0" prot="public" static="no">
        <name>PFFFT_SIMD_DISABLE</name>
        <initializer>/* fallback to scalar code */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="183" column="18" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pffft_8c_1a846721193721413578b2d26c223b42cd" prot="public" static="no">
        <name>SIMD_SZ</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="190" column="11" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pffft_8c_1ae65c737e16e4d79390822edf1d118656" prot="public" static="no">
        <name>VZERO</name>
        <param></param>
        <initializer>0.<ref refid="checksum_8c_1ae747d72a1a803f5ff4a4b2602857d93b" kindref="member">f</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="191" column="11" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" prot="public" static="no">
        <name>VMUL</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)*(<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="192" column="11" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" prot="public" static="no">
        <name>VADD</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)+(<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="193" column="11" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pffft_8c_1a36c509112d032c08aab512c603ef82be" prot="public" static="no">
        <name>VMADD</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)*(<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>)+(<ref refid="rfft2d_test_m_l_8m_1ae0323a9039add2978bf5b49550572c7c" kindref="member">c</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="194" column="11" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" prot="public" static="no">
        <name>VSUB</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)-(<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="195" column="11" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" prot="public" static="no">
        <name>LD_PS1</name>
        <param><defname>p</defname></param>
        <initializer>(<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="196" column="11" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pffft_8c_1a717b8f27ff2bfe8df7934c7df9f62af7" prot="public" static="no">
        <name>VALIGNED</name>
        <param><defname>ptr</defname></param>
        <initializer>((((long)(ptr)) &amp; 0x3) == 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="197" column="11" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" prot="public" static="no">
        <name>VCPLXMUL</name>
        <param><defname>ar</defname></param>
        <param><defname>ai</defname></param>
        <param><defname>br</defname></param>
        <param><defname>bi</defname></param>
        <initializer>{ <ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref> tmp; tmp=<ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(ar,bi); ar=<ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(ar,br); ar=<ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(ar,<ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(ai,bi)); ai=<ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(ai,br); ai=<ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(ai,tmp); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="201" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pffft_8c_1ad63f2a81495a70ecb612fb189dd527a3" prot="public" static="no">
        <name>VCPLXMULCONJ</name>
        <param><defname>ar</defname></param>
        <param><defname>ai</defname></param>
        <param><defname>br</defname></param>
        <param><defname>bi</defname></param>
        <initializer>{ <ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref> tmp; tmp=<ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(ar,bi); ar=<ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(ar,br); ar=<ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(ar,<ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(ai,bi)); ai=<ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(ai,br); ai=<ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(ai,tmp); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="202" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pffft_8c_1a28642ecbd9d1e77ab5a140a460f47d83" prot="public" static="no">
        <name>sin</name>
        <initializer>sinf</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PFFFT_SIMD_DISABLE </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="262" column="12" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" prot="public" static="no">
        <name>cos</name>
        <initializer>cosf</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="263" column="11" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pffft_8c_1aa24b1d9ff30bffebb698183fffa3a5a9" prot="public" static="no">
        <name>pffft_zreorder_nosimd</name>
        <initializer>pffft_zreorder</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="1593" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="1593" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pffft_8c_1a471a24df0565a6d00f7d0307a269e26e" prot="public" static="no">
        <name>pffft_transform_internal_nosimd</name>
        <initializer>pffft_transform_internal</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="1613" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="1613" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pffft_8c_1a6bd4f36c3cafbf7e2d74a0cd770a245b" prot="public" static="no">
        <name>pffft_zconvolve_nosimd</name>
        <initializer>pffft_zconvolve</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="1693" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="1693" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" prot="public" static="no">
        <type>float</type>
        <definition>typedef float v4sf</definition>
        <argsstring></argsstring>
        <name>v4sf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="189" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="189" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pffft_8c_1ab4147d5b6c2236eb770580f00e6a1d38" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static NEVER_INLINE</definition>
        <argsstring>(void)</argsstring>
        <name>NEVER_INLINE</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="273" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="273" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="pffft_8c_1ac0361dcdec41eb4fc24b52b8095de6a8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void radf3_ps</definition>
        <argsstring>(int ido, int l1, const v4sf *RESTRICT cc, v4sf *RESTRICT ch, const float *wa1, const float *wa2)</argsstring>
        <name>radf3_ps</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>ido</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>l1</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref> *RESTRICT</type>
          <declname>cc</declname>
        </param>
        <param>
          <type><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref> *RESTRICT</type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float *</type>
          <declname>wa1</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float *</type>
          <declname>wa2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="467" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="467" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="pffft_8c_1adf181d606f7c42b5264c94de0298c856" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void radb3_ps</definition>
        <argsstring>(int ido, int l1, const v4sf *RESTRICT cc, v4sf *RESTRICT ch, const float *wa1, const float *wa2)</argsstring>
        <name>radb3_ps</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>ido</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>l1</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref> *RESTRICT</type>
          <declname>cc</declname>
        </param>
        <param>
          <type><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref> *RESTRICT</type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float *</type>
          <declname>wa1</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float *</type>
          <declname>wa2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="508" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="508" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="pffft_8c_1a3f690908b2d7bb60c06f412be6f8ea5e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static NEVER_INLINE</definition>
        <argsstring>(v4sf *)</argsstring>
        <name>NEVER_INLINE</name>
        <param>
          <type><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="715" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="715" bodyend="754"/>
      </memberdef>
      <memberdef kind="function" id="pffft_8c_1ace67977aeb4949439364fffc47cd6156" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int decompose</definition>
        <argsstring>(int n, int *ifac, const int ntryh[3])</argsstring>
        <name>decompose</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>ifac</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>ntryh</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="797" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="797" bodyend="820"/>
      </memberdef>
      <memberdef kind="function" id="pffft_8c_1a5b1d65bcd74ce44edde5d42685cbead2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void rffti1_ps</definition>
        <argsstring>(int n, float *wa, int *ifac)</argsstring>
        <name>rffti1_ps</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>wa</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>ifac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="824" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="824" bodyend="856"/>
      </memberdef>
      <memberdef kind="function" id="pffft_8c_1a207516980f595c2efdea0d7cf327570b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void cffti1_ps</definition>
        <argsstring>(int n, float *wa, int *ifac)</argsstring>
        <name>cffti1_ps</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>wa</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>ifac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="858" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="858" bodyend="894"/>
      </memberdef>
      <memberdef kind="function" id="pffft_8c_1a3beae1ed8e6307f7310a2b92bc8d72b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref> *</type>
        <definition>static v4sf* cfftf1_ps</definition>
        <argsstring>(int n, const v4sf *input_readonly, v4sf *work1, v4sf *work2, const float *wa, const int *ifac, int isign)</argsstring>
        <name>cfftf1_ps</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref> *</type>
          <declname>input_readonly</declname>
        </param>
        <param>
          <type><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref> *</type>
          <declname>work1</declname>
        </param>
        <param>
          <type><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref> *</type>
          <declname>work2</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float *</type>
          <declname>wa</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>ifac</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>isign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="897" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="897" bodyend="935"/>
      </memberdef>
      <memberdef kind="function" id="pffft_8c_1a7a523ab656e85367f1d256f89ee39974" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_p_f_f_f_t___setup" kindref="compound">PFFFT_Setup</ref> *</type>
        <definition>PFFFT_Setup* pffft_new_setup</definition>
        <argsstring>(int N, pffft_transform_t transform)</argsstring>
        <name>pffft_new_setup</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>N</declname>
        </param>
        <param>
          <type><ref refid="pffft_8h_1af5506e26b5d8295b89aa0186261dfef1" kindref="member">pffft_transform_t</ref></type>
          <declname>transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="948" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="948" bodyend="992"/>
      </memberdef>
      <memberdef kind="function" id="pffft_8c_1a7b4eea50b0330c17d28d96b64d7bf00c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void pffft_destroy_setup</definition>
        <argsstring>(PFFFT_Setup *s)</argsstring>
        <name>pffft_destroy_setup</name>
        <param>
          <type><ref refid="struct_p_f_f_f_t___setup" kindref="compound">PFFFT_Setup</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="995" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="995" bodyend="1000"/>
      </memberdef>
      <memberdef kind="function" id="pffft_8c_1a8a74e5d261cea1aba26af54edae50746" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void pffft_zreorder_nosimd</definition>
        <argsstring>(PFFFT_Setup *setup, const float *in, float *out, pffft_direction_t direction)</argsstring>
        <name>pffft_zreorder_nosimd</name>
        <param>
          <type><ref refid="struct_p_f_f_f_t___setup" kindref="compound">PFFFT_Setup</ref> *</type>
          <declname>setup</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="pffft_8h_1a2e53fece2e9e96e8beeabe770f191f91" kindref="member">pffft_direction_t</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="1594" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="1594" bodyend="1611"/>
      </memberdef>
      <memberdef kind="function" id="pffft_8c_1a8e2cf4c548a2317d4c3ae6f191e8feb0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void pffft_transform_internal_nosimd</definition>
        <argsstring>(PFFFT_Setup *setup, const float *input, float *output, float *scratch, pffft_direction_t direction, int ordered)</argsstring>
        <name>pffft_transform_internal_nosimd</name>
        <param>
          <type><ref refid="struct_p_f_f_f_t___setup" kindref="compound">PFFFT_Setup</ref> *</type>
          <declname>setup</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>scratch</declname>
        </param>
        <param>
          <type><ref refid="pffft_8h_1a2e53fece2e9e96e8beeabe770f191f91" kindref="member">pffft_direction_t</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>ordered</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="1614" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="1614" bodyend="1668"/>
      </memberdef>
      <memberdef kind="function" id="pffft_8c_1aec05f2d8562f85f5e4c0950d9900a638" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void pffft_zconvolve_nosimd</definition>
        <argsstring>(PFFFT_Setup *s, const float *a, const float *b, float *ab)</argsstring>
        <name>pffft_zconvolve_nosimd</name>
        <param>
          <type><ref refid="struct_p_f_f_f_t___setup" kindref="compound">PFFFT_Setup</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>ab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="1694" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="1694" bodyend="1711"/>
      </memberdef>
      <memberdef kind="function" id="pffft_8c_1acb44f7f85bccc37e35ebf9c53ed3027f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void pffft_transform</definition>
        <argsstring>(PFFFT_Setup *setup, const float *input, float *output, float *work, pffft_direction_t direction)</argsstring>
        <name>pffft_transform</name>
        <param>
          <type><ref refid="struct_p_f_f_f_t___setup" kindref="compound">PFFFT_Setup</ref> *</type>
          <declname>setup</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>work</declname>
        </param>
        <param>
          <type><ref refid="pffft_8h_1a2e53fece2e9e96e8beeabe770f191f91" kindref="member">pffft_direction_t</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="1715" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="1715" bodyend="1717"/>
      </memberdef>
      <memberdef kind="function" id="pffft_8c_1a7d882f918abebb24d1b4125f3a5dc5d1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void pffft_transform_ordered</definition>
        <argsstring>(PFFFT_Setup *setup, const float *input, float *output, float *work, pffft_direction_t direction)</argsstring>
        <name>pffft_transform_ordered</name>
        <param>
          <type><ref refid="struct_p_f_f_f_t___setup" kindref="compound">PFFFT_Setup</ref> *</type>
          <declname>setup</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>work</declname>
        </param>
        <param>
          <type><ref refid="pffft_8h_1a2e53fece2e9e96e8beeabe770f191f91" kindref="member">pffft_direction_t</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="1719" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="1719" bodyend="1721"/>
      </memberdef>
      <memberdef kind="function" id="pffft_8c_1a61e5a8623ce08a01b835c2e946ee4eeb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void pffft_reorder_back</definition>
        <argsstring>(int length, void *setup, float *data, float *work)</argsstring>
        <name>pffft_reorder_back</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>setup</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>work</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" line="1724" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c" bodystart="1724" bodyend="1728"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Copyright<sp/>(c)<sp/>2011<sp/><sp/>Julien<sp/>Pommier<sp/>(<sp/>pommier@modartt.com<sp/>)</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/>Based<sp/>on<sp/>original<sp/>fortran<sp/>77<sp/>code<sp/>from<sp/>FFTPACKv4<sp/>from<sp/>NETLIB</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/>(http://www.netlib.org/fftpack),<sp/>authored<sp/>by<sp/>Dr<sp/>Paul<sp/>Swarztrauber</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/>of<sp/>NCAR,<sp/>in<sp/>1985.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>As<sp/>confirmed<sp/>by<sp/>the<sp/>NCAR<sp/>fftpack<sp/>software<sp/>curators,<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/>FFTPACKv5<sp/>license<sp/>applies<sp/>to<sp/>FFTPACKv4<sp/>sources.<sp/>My<sp/>changes<sp/>are</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/>released<sp/>under<sp/>the<sp/>same<sp/>terms.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/>FFTPACK<sp/>license:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/>http://www.cisl.ucar.edu/css/software/fftpack5/ftpk.html</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2004<sp/>the<sp/>University<sp/>Corporation<sp/>for<sp/>Atmospheric</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/>Research<sp/>(&quot;UCAR&quot;).<sp/>All<sp/>rights<sp/>reserved.<sp/>Developed<sp/>by<sp/>NCAR&apos;s</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/>Computational<sp/>and<sp/>Information<sp/>Systems<sp/>Laboratory,<sp/>UCAR,</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/>www.cisl.ucar.edu.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>of<sp/>the<sp/>Software<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/>with<sp/>or<sp/>without<sp/>modification,<sp/>is<sp/>permitted<sp/>provided<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/>-<sp/>Neither<sp/>the<sp/>names<sp/>of<sp/>NCAR&apos;s<sp/>Computational<sp/>and<sp/>Information<sp/>Systems</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/>Laboratory,<sp/>the<sp/>University<sp/>Corporation<sp/>for<sp/>Atmospheric<sp/>Research,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>sponsors<sp/>or<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>Software<sp/>without</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/>-<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/>notices,<sp/>this<sp/>list<sp/>of<sp/>conditions,<sp/>and<sp/>the<sp/>disclaimer<sp/>below.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"></highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/><sp/>-<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions,<sp/>and<sp/>the<sp/>disclaimer<sp/>below<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>CONTRIBUTORS<sp/>OR<sp/>COPYRIGHT</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>WITH<sp/>THE</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="47"><highlight class="comment"></highlight></codeline>
<codeline lineno="48"><highlight class="comment"></highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/>PFFFT<sp/>:<sp/>a<sp/>Pretty<sp/>Fast<sp/>FFT.</highlight></codeline>
<codeline lineno="50"><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>largerly<sp/>based<sp/>on<sp/>the<sp/>original<sp/>FFTPACK<sp/>implementation,<sp/>modified<sp/>in</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/>order<sp/>to<sp/>take<sp/>advantage<sp/>of<sp/>SIMD<sp/>instructions<sp/>of<sp/>modern<sp/>CPUs.</highlight></codeline>
<codeline lineno="53"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/>ChangeLog:</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/>-<sp/>2011/10/02,<sp/>version<sp/>1:<sp/>This<sp/>is<sp/>the<sp/>very<sp/>first<sp/>release<sp/>of<sp/>this<sp/>file.</highlight></codeline>
<codeline lineno="58"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>PFFT_MACROS_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pffft_8h" kindref="compound">pffft.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="simd_8h" kindref="compound">simd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="pffft_8c_1a659b995ebc7e2c31a877cd3552875391" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>pffft_aligned_free<sp/><sp/><sp/><sp/>_soxr_simd_aligned_free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="pffft_8c_1a68ab1a6f8cf7d3c6f317c8c207fc4e2a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>pffft_aligned_malloc<sp/><sp/>_soxr_simd_aligned_malloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="pffft_8c_1a3a15779d66e1bb38882ce1a76c7439e5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>pffft_aligned_calloc<sp/><sp/>_soxr_simd_aligned_calloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/>vector<sp/>support<sp/>macros:<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>code<sp/>is<sp/>independant<sp/>of</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/>SSE/Altivec/NEON<sp/>--<sp/>adding<sp/>support<sp/>for<sp/>other<sp/>platforms<sp/>with<sp/>4-element</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/>vectors<sp/>should<sp/>be<sp/>limited<sp/>to<sp/>these<sp/>macros</highlight></codeline>
<codeline lineno="77"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>define<sp/>PFFFT_SIMD_DISABLE<sp/>if<sp/>you<sp/>want<sp/>to<sp/>use<sp/>scalar<sp/>code<sp/>instead<sp/>of<sp/>simd<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*#define<sp/>PFFFT_SIMD_DISABLE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>detect<sp/>compiler<sp/>flavour<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_MSVC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>COMPILER_GCC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(COMPILER_GCC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>ALWAYS_INLINE(return_type)<sp/>inline<sp/>return_type<sp/>__attribute__<sp/>((always_inline))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>NEVER_INLINE(return_type)<sp/>return_type<sp/>__attribute__<sp/>((noinline))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>RESTRICT<sp/>__restrict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/*#<sp/><sp/>define<sp/>VLA_ARRAY_ON_STACK(type__,<sp/>varname__,<sp/>size__)<sp/>type__<sp/>varname__[size__];<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(COMPILER_MSVC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>ALWAYS_INLINE(return_type)<sp/>__forceinline<sp/>return_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>NEVER_INLINE(return_type)<sp/>__declspec(noinline)<sp/>return_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>RESTRICT<sp/>__restrict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">/*#<sp/><sp/>define<sp/>VLA_ARRAY_ON_STACK(type__,<sp/>varname__,<sp/>size__)<sp/>type__<sp/>*varname__<sp/>=<sp/>(v4sf*)_alloca(size__<sp/>*<sp/>sizeof(type__))<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/>Altivec<sp/>support<sp/>macros</highlight></codeline>
<codeline lineno="104"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(PFFFT_SIMD_DISABLE)<sp/>&amp;&amp;<sp/>(defined(__ppc__)<sp/>||<sp/>defined(__ppc64__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>vector<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>SIMD_SZ<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VZERO()<sp/>((vector<sp/>float)<sp/>vec_splat_u8(0))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VMUL(a,b)<sp/>vec_madd(a,b,<sp/>VZERO())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VADD(a,b)<sp/>vec_add(a,b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VMADD(a,b,c)<sp/>vec_madd(a,b,c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VSUB(a,b)<sp/>vec_sub(a,b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>ld_ps1(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)<sp/>{<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>v=vec_lde(0,p);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vec_splat(vec_perm(v,<sp/>v,<sp/>vec_lvsl(0,<sp/>p)),<sp/>0);<sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>LD_PS1(p)<sp/>ld_ps1(&amp;p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>INTERLEAVE2(in1,<sp/>in2,<sp/>out1,<sp/>out2)<sp/>{<sp/>v4sf<sp/>tmp__<sp/>=<sp/>vec_mergeh(in1,<sp/>in2);<sp/>out2<sp/>=<sp/>vec_mergel(in1,<sp/>in2);<sp/>out1<sp/>=<sp/>tmp__;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>UNINTERLEAVE2(in1,<sp/>in2,<sp/>out1,<sp/>out2)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>vector<sp/>unsigned<sp/>char<sp/>vperm1<sp/>=<sp/><sp/>(vector<sp/>unsigned<sp/>char)(0,1,2,3,8,9,10,11,16,17,18,19,24,25,26,27);<sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>vector<sp/>unsigned<sp/>char<sp/>vperm2<sp/>=<sp/><sp/>(vector<sp/>unsigned<sp/>char)(4,5,6,7,12,13,14,15,20,21,22,23,28,29,30,31);<sp/>\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>v4sf<sp/>tmp__<sp/>=<sp/>vec_perm(in1,<sp/>in2,<sp/>vperm1);<sp/>out2<sp/>=<sp/>vec_perm(in1,<sp/>in2,<sp/>vperm2);<sp/>out1<sp/>=<sp/>tmp__;<sp/>\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VTRANSPOSE4(x0,x1,x2,x3)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>v4sf<sp/>y0<sp/>=<sp/>vec_mergeh(x0,<sp/>x2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>v4sf<sp/>y1<sp/>=<sp/>vec_mergel(x0,<sp/>x2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>v4sf<sp/>y2<sp/>=<sp/>vec_mergeh(x1,<sp/>x3);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>v4sf<sp/>y3<sp/>=<sp/>vec_mergel(x1,<sp/>x3);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>vec_mergeh(y0,<sp/>y2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>vec_mergel(y0,<sp/>y2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>vec_mergeh(y1,<sp/>y3);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>x3<sp/>=<sp/>vec_mergel(y1,<sp/>y3);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VSWAPHL(a,b)<sp/>vec_perm(a,b,<sp/>(vector<sp/>unsigned<sp/>char)(16,17,18,19,20,21,22,23,8,9,10,11,12,13,14,15))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VALIGNED(ptr)<sp/>((((long)(ptr))<sp/>&amp;<sp/>0xF)<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/>SSE1<sp/>support<sp/>macros</highlight></codeline>
<codeline lineno="136"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>!defined(PFFFT_SIMD_DISABLE)<sp/>&amp;&amp;<sp/>(defined(__x86_64__)<sp/>||<sp/>defined(_M_X64)<sp/>||<sp/>defined(i386)<sp/>||<sp/>defined(_M_IX86))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;xmmintrin.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__m128<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>SIMD_SZ<sp/>4<sp/></highlight><highlight class="comment">/*<sp/>4<sp/>floats<sp/>by<sp/>simd<sp/>vector<sp/>--<sp/>this<sp/>is<sp/>pretty<sp/>much<sp/>hardcoded<sp/>in<sp/>the<sp/>preprocess/finalize<sp/>functions<sp/>anyway<sp/>so<sp/>you<sp/>will<sp/>have<sp/>to<sp/>work<sp/>if<sp/>you<sp/>want<sp/>to<sp/>enable<sp/>AVX<sp/>with<sp/>its<sp/>256-bit<sp/>vectors.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VZERO()<sp/>_mm_setzero_ps()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VMUL(a,b)<sp/>_mm_mul_ps(a,b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VADD(a,b)<sp/>_mm_add_ps(a,b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VMADD(a,b,c)<sp/>_mm_add_ps(_mm_mul_ps(a,b),<sp/>c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VSUB(a,b)<sp/>_mm_sub_ps(a,b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>LD_PS1(p)<sp/>_mm_set1_ps(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>INTERLEAVE2(in1,<sp/>in2,<sp/>out1,<sp/>out2)<sp/>{<sp/>v4sf<sp/>tmp__<sp/>=<sp/>_mm_unpacklo_ps(in1,<sp/>in2);<sp/>out2<sp/>=<sp/>_mm_unpackhi_ps(in1,<sp/>in2);<sp/>out1<sp/>=<sp/>tmp__;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>UNINTERLEAVE2(in1,<sp/>in2,<sp/>out1,<sp/>out2)<sp/>{<sp/>v4sf<sp/>tmp__<sp/>=<sp/>_mm_shuffle_ps(in1,<sp/>in2,<sp/>_MM_SHUFFLE(2,0,2,0));<sp/>out2<sp/>=<sp/>_mm_shuffle_ps(in1,<sp/>in2,<sp/>_MM_SHUFFLE(3,1,3,1));<sp/>out1<sp/>=<sp/>tmp__;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VTRANSPOSE4(x0,x1,x2,x3)<sp/>_MM_TRANSPOSE4_PS(x0,x1,x2,x3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VSWAPHL(a,b)<sp/>_mm_shuffle_ps(b,<sp/>a,<sp/>_MM_SHUFFLE(3,2,1,0))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VALIGNED(ptr)<sp/>((((long)(ptr))<sp/>&amp;<sp/>0xF)<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/>ARM<sp/>NEON<sp/>support<sp/>macros</highlight></codeline>
<codeline lineno="156"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>!defined(PFFFT_SIMD_DISABLE)<sp/>&amp;&amp;<sp/>defined(__arm__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;arm_neon.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>float32x4_t<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>SIMD_SZ<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VZERO()<sp/>vdupq_n_f32(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VMUL(a,b)<sp/>vmulq_f32(a,b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VADD(a,b)<sp/>vaddq_f32(a,b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VMADD(a,b,c)<sp/>vmlaq_f32(c,a,b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VSUB(a,b)<sp/>vsubq_f32(a,b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>LD_PS1(p)<sp/>vld1q_dup_f32(&amp;(p))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>INTERLEAVE2(in1,<sp/>in2,<sp/>out1,<sp/>out2)<sp/>{<sp/>float32x4x2_t<sp/>tmp__<sp/>=<sp/>vzipq_f32(in1,in2);<sp/>out1=tmp__.val[0];<sp/>out2=tmp__.val[1];<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>UNINTERLEAVE2(in1,<sp/>in2,<sp/>out1,<sp/>out2)<sp/>{<sp/>float32x4x2_t<sp/>tmp__<sp/>=<sp/>vuzpq_f32(in1,in2);<sp/>out1=tmp__.val[0];<sp/>out2=tmp__.val[1];<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VTRANSPOSE4_(x0,x1,x2,x3)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>float32x4x2_t<sp/>t0_<sp/>=<sp/>vzipq_f32(x0,<sp/>x2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>float32x4x2_t<sp/>t1_<sp/>=<sp/>vzipq_f32(x1,<sp/>x3);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>float32x4x2_t<sp/>u0_<sp/>=<sp/>vzipq_f32(t0_.val[0],<sp/>t1_.val[0]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>float32x4x2_t<sp/>u1_<sp/>=<sp/>vzipq_f32(t0_.val[1],<sp/>t1_.val[1]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>u0_.val[0];<sp/>x1<sp/>=<sp/>u0_.val[1];<sp/>x2<sp/>=<sp/>u1_.val[0];<sp/>x3<sp/>=<sp/>u1_.val[1];<sp/>\</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>marginally<sp/>faster<sp/>version<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VTRANSPOSE4(x0,x1,x2,x3)<sp/>{<sp/>asm(&quot;vtrn.32<sp/>%q0,<sp/>%q1;\n<sp/>vtrn.32<sp/>%q2,%q3\n<sp/>vswp<sp/>%f0,%e2\n<sp/>vswp<sp/>%f1,%e3&quot;<sp/>:<sp/>&quot;+w&quot;(x0),<sp/>&quot;+w&quot;(x1),<sp/>&quot;+w&quot;(x2),<sp/>&quot;+w&quot;(x3)::);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VSWAPHL(a,b)<sp/>vcombine_f32(vget_low_f32(b),<sp/>vget_high_f32(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VALIGNED(ptr)<sp/>((((long)(ptr))<sp/>&amp;<sp/>0x3)<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>!defined(PFFFT_SIMD_DISABLE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>warning<sp/>&quot;building<sp/>with<sp/>simd<sp/>disabled<sp/>!\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="pffft_8c_1a689b73aca835247e173b8e2c9b2907b0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>PFFFT_SIMD_DISABLE<sp/></highlight><highlight class="comment">/*<sp/>fallback<sp/>to<sp/>scalar<sp/>code<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fallback<sp/>mode<sp/>for<sp/>situations<sp/>where<sp/>SSE/Altivec<sp/>are<sp/>not<sp/>available,<sp/>use<sp/>scalar<sp/>mode<sp/>instead<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PFFFT_SIMD_DISABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>;</highlight></codeline>
<codeline lineno="190" refid="pffft_8c_1a846721193721413578b2d26c223b42cd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>SIMD_SZ<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="pffft_8c_1ae65c737e16e4d79390822edf1d118656" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VZERO()<sp/>0.f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VMUL(a,b)<sp/>((a)*(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VADD(a,b)<sp/>((a)+(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="pffft_8c_1a36c509112d032c08aab512c603ef82be" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VMADD(a,b,c)<sp/>((a)*(b)+(c))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VSUB(a,b)<sp/>((a)-(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>LD_PS1(p)<sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="pffft_8c_1a717b8f27ff2bfe8df7934c7df9f62af7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>VALIGNED(ptr)<sp/>((((long)(ptr))<sp/>&amp;<sp/>0x3)<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>shortcuts<sp/>for<sp/>complex<sp/>multiplcations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VCPLXMUL(ar,ai,br,bi)<sp/>{<sp/>v4sf<sp/>tmp;<sp/>tmp=VMUL(ar,bi);<sp/>ar=VMUL(ar,br);<sp/>ar=VSUB(ar,VMUL(ai,bi));<sp/>ai=VMUL(ai,br);<sp/>ai=VADD(ai,tmp);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="pffft_8c_1ad63f2a81495a70ecb612fb189dd527a3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VCPLXMULCONJ(ar,ai,br,bi)<sp/>{<sp/>v4sf<sp/>tmp;<sp/>tmp=VMUL(ar,bi);<sp/>ar=VMUL(ar,br);<sp/>ar=VADD(ar,VMUL(ai,bi));<sp/>ai=VMUL(ai,br);<sp/>ai=VSUB(ai,tmp);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(PFFFT_SIMD_DISABLE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">v4sf_union<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/><sp/>v;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>[4];</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}<sp/>v4sf_union;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>assertv4(v,f0,f1,f2,f3)<sp/>assert(v.f[0]<sp/>==<sp/>(f0)<sp/>&amp;&amp;<sp/>v.f[1]<sp/>==<sp/>(f1)<sp/>&amp;&amp;<sp/>v.f[2]<sp/>==<sp/>(f2)<sp/>&amp;&amp;<sp/>v.f[3]<sp/>==<sp/>(f3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>detect<sp/>bugs<sp/>with<sp/>the<sp/>vector<sp/>support<sp/>macros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>validate_pffft_simd()<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>[16]<sp/>=<sp/>{<sp/>0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15<sp/>};</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>v4sf_union<sp/>a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/>u;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>memcpy(a0.f,<sp/>f,<sp/>4*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>memcpy(a1.f,<sp/>f+4,<sp/>4*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>memcpy(a2.f,<sp/>f+8,<sp/>4*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>memcpy(a3.f,<sp/>f+12,<sp/>4*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>t<sp/>=<sp/>a0;<sp/>u<sp/>=<sp/>a1;<sp/>t.v<sp/>=<sp/><ref refid="pffft_8c_1ae65c737e16e4d79390822edf1d118656" kindref="member">VZERO</ref>();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;VZERO=[%2g<sp/>%2g<sp/>%2g<sp/>%2g]\n&quot;</highlight><highlight class="normal">,<sp/>t.f[0],<sp/>t.f[1],<sp/>t.f[2],<sp/>t.f[3]);<sp/>assertv4(t,<sp/>0,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>t.v<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(a1.v,<sp/>a2.v);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;VADD(4:7,8:11)=[%2g<sp/>%2g<sp/>%2g<sp/>%2g]\n&quot;</highlight><highlight class="normal">,<sp/>t.f[0],<sp/>t.f[1],<sp/>t.f[2],<sp/>t.f[3]);<sp/>assertv4(t,<sp/>12,<sp/>14,<sp/>16,<sp/>18);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>t.v<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(a1.v,<sp/>a2.v);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;VMUL(4:7,8:11)=[%2g<sp/>%2g<sp/>%2g<sp/>%2g]\n&quot;</highlight><highlight class="normal">,<sp/>t.f[0],<sp/>t.f[1],<sp/>t.f[2],<sp/>t.f[3]);<sp/>assertv4(t,<sp/>32,<sp/>45,<sp/>60,<sp/>77);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>t.v<sp/>=<sp/><ref refid="pffft_8c_1a36c509112d032c08aab512c603ef82be" kindref="member">VMADD</ref>(a1.v,<sp/>a2.v,a0.v);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;VMADD(4:7,8:11,0:3)=[%2g<sp/>%2g<sp/>%2g<sp/>%2g]\n&quot;</highlight><highlight class="normal">,<sp/>t.f[0],<sp/>t.f[1],<sp/>t.f[2],<sp/>t.f[3]);<sp/>assertv4(t,<sp/>32,<sp/>46,<sp/>62,<sp/>80);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>INTERLEAVE2(a1.v,a2.v,t.v,u.v);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;INTERLEAVE2(4:7,8:11)=[%2g<sp/>%2g<sp/>%2g<sp/>%2g]<sp/>[%2g<sp/>%2g<sp/>%2g<sp/>%2g]\n&quot;</highlight><highlight class="normal">,<sp/>t.f[0],<sp/>t.f[1],<sp/>t.f[2],<sp/>t.f[3],<sp/>u.f[0],<sp/>u.f[1],<sp/>u.f[2],<sp/>u.f[3]);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>assertv4(t,<sp/>4,<sp/>8,<sp/>5,<sp/>9);<sp/>assertv4(u,<sp/>6,<sp/>10,<sp/>7,<sp/>11);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>UNINTERLEAVE2(a1.v,a2.v,t.v,u.v);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;UNINTERLEAVE2(4:7,8:11)=[%2g<sp/>%2g<sp/>%2g<sp/>%2g]<sp/>[%2g<sp/>%2g<sp/>%2g<sp/>%2g]\n&quot;</highlight><highlight class="normal">,<sp/>t.f[0],<sp/>t.f[1],<sp/>t.f[2],<sp/>t.f[3],<sp/>u.f[0],<sp/>u.f[1],<sp/>u.f[2],<sp/>u.f[3]);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>assertv4(t,<sp/>4,<sp/>6,<sp/>8,<sp/>10);<sp/>assertv4(u,<sp/>5,<sp/>7,<sp/>9,<sp/>11);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>t.v=<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(f[15]);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;LD_PS1(15)=[%2g<sp/>%2g<sp/>%2g<sp/>%2g]\n&quot;</highlight><highlight class="normal">,<sp/>t.f[0],<sp/>t.f[1],<sp/>t.f[2],<sp/>t.f[3]);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>assertv4(t,<sp/>15,<sp/>15,<sp/>15,<sp/>15);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>t.v<sp/>=<sp/>VSWAPHL(a1.v,<sp/>a2.v);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;VSWAPHL(4:7,8:11)=[%2g<sp/>%2g<sp/>%2g<sp/>%2g]\n&quot;</highlight><highlight class="normal">,<sp/>t.f[0],<sp/>t.f[1],<sp/>t.f[2],<sp/>t.f[3]);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>assertv4(t,<sp/>8,<sp/>9,<sp/>6,<sp/>7);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>VTRANSPOSE4(a0.v,<sp/>a1.v,<sp/>a2.v,<sp/>a3.v);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;VTRANSPOSE4(0:3,4:7,8:11,12:15)=[%2g<sp/>%2g<sp/>%2g<sp/>%2g]<sp/>[%2g<sp/>%2g<sp/>%2g<sp/>%2g]<sp/>[%2g<sp/>%2g<sp/>%2g<sp/>%2g]<sp/>[%2g<sp/>%2g<sp/>%2g<sp/>%2g]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a0.f[0],<sp/>a0.f[1],<sp/>a0.f[2],<sp/>a0.f[3],<sp/>a1.f[0],<sp/>a1.f[1],<sp/>a1.f[2],<sp/>a1.f[3],</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2.f[0],<sp/>a2.f[1],<sp/>a2.f[2],<sp/>a2.f[3],<sp/>a3.f[0],<sp/>a3.f[1],<sp/>a3.f[2],<sp/>a3.f[3]);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>assertv4(a0,<sp/>0,<sp/>4,<sp/>8,<sp/>12);<sp/>assertv4(a1,<sp/>1,<sp/>5,<sp/>9,<sp/>13);<sp/>assertv4(a2,<sp/>2,<sp/>6,<sp/>10,<sp/>14);<sp/>assertv4(a3,<sp/>3,<sp/>7,<sp/>11,<sp/>15);</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor">#if<sp/>!defined<sp/>PFFT_MACROS_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(COMPILER_MSVC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>sin<sp/><sp/><sp/>(float)sin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>cos<sp/><sp/><sp/>(float)cos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="pffft_8c_1a28642ecbd9d1e77ab5a140a460f47d83" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>sin<sp/><sp/><sp/>sinf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>cos<sp/><sp/><sp/>cosf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="267"><highlight class="comment">int<sp/>pffft_simd_size()<sp/>{<sp/>return<sp/>SIMD_SZ;<sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/>passf2<sp/>and<sp/>passb2<sp/>has<sp/>been<sp/>merged<sp/>here,<sp/>fsign<sp/>=<sp/>-1<sp/>for<sp/>passf2,<sp/>+1<sp/>for<sp/>passb2</highlight></codeline>
<codeline lineno="272"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>NEVER_INLINE(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>passf2_ps(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ido,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l1,<sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*cc,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*ch,<sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*wa1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fsign)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l1ido<sp/>=<sp/>l1*ido;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ido<sp/>&lt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>l1ido;<sp/>k<sp/>+=<sp/>ido,<sp/>ch<sp/>+=<sp/>ido,<sp/>cc+=<sp/>2*ido)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[0]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[0],<sp/>cc[ido+0]);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[l1ido]<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(cc[0],<sp/>cc[ido+0]);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[1]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[1],<sp/>cc[ido+1]);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[l1ido<sp/>+<sp/>1]<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(cc[1],<sp/>cc[ido+1]);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>l1ido;<sp/>k<sp/>+=<sp/>ido,<sp/>ch<sp/>+=<sp/>ido,<sp/>cc<sp/>+=<sp/>2*ido)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;ido-1;<sp/>i+=2)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>tr2<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(cc[i+0],<sp/>cc[i+ido+0]);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>ti2<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(cc[i+1],<sp/>cc[i+ido+1]);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>wr<sp/>=<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa1[i]),<sp/>wi<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(fsign),<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa1[i+1]));</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/><sp/><sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[i+0],<sp/>cc[i+ido+0]);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[i+1]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[i+1],<sp/>cc[i+ido+1]);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(tr2,<sp/>ti2,<sp/>wr,<sp/>wi);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[i+l1ido]<sp/><sp/><sp/>=<sp/>tr2;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[i+l1ido+1]<sp/>=<sp/>ti2;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/>passf3<sp/>and<sp/>passb3<sp/>has<sp/>been<sp/>merged<sp/>here,<sp/>fsign<sp/>=<sp/>-1<sp/>for<sp/>passf3,<sp/>+1<sp/>for<sp/>passb3</highlight></codeline>
<codeline lineno="301"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>NEVER_INLINE(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>passf3_ps(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ido,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*cc,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*ch,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*wa1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*wa2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fsign)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>taur<sp/>=<sp/>-0.5f;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>taui<sp/>=<sp/>0.866025403784439f*fsign;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>tr2,<sp/>ti2,<sp/>cr2,<sp/>ci2,<sp/>cr3,<sp/>ci3,<sp/>dr2,<sp/>di2,<sp/>dr3,<sp/>di3;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l1ido<sp/>=<sp/>l1*ido;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wr1,<sp/>wi1,<sp/>wr2,<sp/>wi2;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(ido<sp/>&gt;<sp/>2);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k&lt;<sp/>l1ido;<sp/>k<sp/>+=<sp/>ido,<sp/>cc+=<sp/>3*ido,<sp/>ch<sp/>+=ido)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;ido-1;<sp/>i+=2)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tr2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[i+ido],<sp/>cc[i+2*ido]);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cr2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[i],<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(taur),tr2));</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/><sp/><sp/><sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[i],<sp/>tr2);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ti2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[i+ido+1],<sp/>cc[i+2*ido+1]);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ci2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[i<sp/><sp/><sp/><sp/>+1],<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(taur),ti2));</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[i+1]<sp/><sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[i+1],<sp/>ti2);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cr3<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(taui),<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(cc[i+ido],<sp/>cc[i+2*ido]));</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ci3<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(taui),<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(cc[i+ido+1],<sp/>cc[i+2*ido+1]));</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dr2<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(cr2,<sp/>ci3);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dr3<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cr2,<sp/>ci3);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>di2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(ci2,<sp/>cr3);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>di3<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(ci2,<sp/>cr3);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wr1=wa1[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<sp/>wi1=fsign*wa1[i+1],<sp/>wr2=wa2[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<sp/>wi2=fsign*wa2[i+1];</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(dr2,<sp/>di2,<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wr1),<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wi1));</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[i+l1ido]<sp/>=<sp/>dr2;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[i+l1ido<sp/>+<sp/>1]<sp/>=<sp/>di2;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(dr3,<sp/>di3,<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wr2),<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wi2));</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[i+2*l1ido]<sp/>=<sp/>dr3;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[i+2*l1ido+1]<sp/>=<sp/>di3;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>passf3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>NEVER_INLINE(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>passf4_ps(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ido,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*cc,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*ch,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*wa1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*wa2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*wa3,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fsign)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>isign<sp/>==<sp/>-1<sp/>for<sp/>forward<sp/>transform<sp/>and<sp/>+1<sp/>for<sp/>backward<sp/>transform<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>ci2,<sp/>ci3,<sp/>ci4,<sp/>cr2,<sp/>cr3,<sp/>cr4,<sp/>ti1,<sp/>ti2,<sp/>ti3,<sp/>ti4,<sp/>tr1,<sp/>tr2,<sp/>tr3,<sp/>tr4;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l1ido<sp/>=<sp/>l1*ido;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ido<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>l1ido;<sp/>k<sp/>+=<sp/>ido,<sp/>ch<sp/>+=<sp/>ido,<sp/>cc<sp/>+=<sp/>4*ido)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tr1<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(cc[0],<sp/>cc[2*ido<sp/>+<sp/>0]);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tr2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[0],<sp/>cc[2*ido<sp/>+<sp/>0]);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ti1<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(cc[1],<sp/>cc[2*ido<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ti2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[1],<sp/>cc[2*ido<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ti4<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(cc[1*ido<sp/>+<sp/>0],<sp/>cc[3*ido<sp/>+<sp/>0]),<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(fsign));</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tr4<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(cc[3*ido<sp/>+<sp/>1],<sp/>cc[1*ido<sp/>+<sp/>1]),<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(fsign));</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tr3<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[ido<sp/>+<sp/>0],<sp/>cc[3*ido<sp/>+<sp/>0]);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ti3<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[ido<sp/>+<sp/>1],<sp/>cc[3*ido<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[0*l1ido<sp/>+<sp/>0]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(tr2,<sp/>tr3);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[0*l1ido<sp/>+<sp/>1]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(ti2,<sp/>ti3);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[1*l1ido<sp/>+<sp/>0]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(tr1,<sp/>tr4);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[1*l1ido<sp/>+<sp/>1]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(ti1,<sp/>ti4);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[2*l1ido<sp/>+<sp/>0]<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(tr2,<sp/>tr3);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[2*l1ido<sp/>+<sp/>1]<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(ti2,<sp/>ti3);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[3*l1ido<sp/>+<sp/>0]<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(tr1,<sp/>tr4);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[3*l1ido<sp/>+<sp/>1]<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(ti1,<sp/>ti4);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>l1ido;<sp/>k<sp/>+=<sp/>ido,<sp/>ch+=ido,<sp/>cc<sp/>+=<sp/>4*ido)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;ido-1;<sp/>i+=2)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wr1,<sp/>wi1,<sp/>wr2,<sp/>wi2,<sp/>wr3,<sp/>wi3;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr1<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(cc[i<sp/>+<sp/>0],<sp/>cc[i<sp/>+<sp/>2*ido<sp/>+<sp/>0]);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[i<sp/>+<sp/>0],<sp/>cc[i<sp/>+<sp/>2*ido<sp/>+<sp/>0]);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti1<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(cc[i<sp/>+<sp/>1],<sp/>cc[i<sp/>+<sp/>2*ido<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[i<sp/>+<sp/>1],<sp/>cc[i<sp/>+<sp/>2*ido<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr4<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(cc[i<sp/>+<sp/>3*ido<sp/>+<sp/>1],<sp/>cc[i<sp/>+<sp/>1*ido<sp/>+<sp/>1]),<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(fsign));</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti4<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(cc[i<sp/>+<sp/>1*ido<sp/>+<sp/>0],<sp/>cc[i<sp/>+<sp/>3*ido<sp/>+<sp/>0]),<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(fsign));</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr3<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[i<sp/>+<sp/>ido<sp/>+<sp/>0],<sp/>cc[i<sp/>+<sp/>3*ido<sp/>+<sp/>0]);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti3<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[i<sp/>+<sp/>ido<sp/>+<sp/>1],<sp/>cc[i<sp/>+<sp/>3*ido<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(tr2,<sp/>tr3);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr3<sp/><sp/><sp/><sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(tr2,<sp/>tr3);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[i<sp/>+<sp/>1]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(ti2,<sp/>ti3);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci3<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(ti2,<sp/>ti3);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(tr1,<sp/>tr4);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr4<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(tr1,<sp/>tr4);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(ti1,<sp/>ti4);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci4<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(ti1,<sp/>ti4);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wr1=wa1[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<sp/>wi1=fsign*wa1[i+1];</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(cr2,<sp/>ci2,<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wr1),<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wi1));</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wr2=wa2[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<sp/>wi2=fsign*wa2[i+1];</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[i<sp/>+<sp/>l1ido]<sp/>=<sp/>cr2;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[i<sp/>+<sp/>l1ido<sp/>+<sp/>1]<sp/>=<sp/>ci2;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(cr3,<sp/>ci3,<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wr2),<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wi2));</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wr3=wa3[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<sp/>wi3=fsign*wa3[i+1];</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[i<sp/>+<sp/>2*l1ido]<sp/>=<sp/>cr3;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[i<sp/>+<sp/>2*l1ido<sp/>+<sp/>1]<sp/>=<sp/>ci3;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(cr4,<sp/>ci4,<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wr3),<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wi3));</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[i<sp/>+<sp/>3*l1ido]<sp/>=<sp/>cr4;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[i<sp/>+<sp/>3*l1ido<sp/>+<sp/>1]<sp/>=<sp/>ci4;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>passf4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>NEVER_INLINE(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>radf2_ps(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ido,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<sp/>RESTRICT<sp/>cc,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<sp/>RESTRICT<sp/>ch,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*wa1)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minus_one<sp/>=<sp/>-1.f;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/>l1ido<sp/>=<sp/>l1*ido;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>l1ido;<sp/>k<sp/>+=<sp/>ido)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref><sp/>=<sp/>cc[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>],<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>=<sp/>cc[k<sp/>+<sp/>l1ido];</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>ch[2*<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(a,<sp/>b);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>ch[2*(k+ido)-1]<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(a,<sp/>b);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ido<sp/>&lt;<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ido<sp/>!=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>l1ido;<sp/>k<sp/>+=<sp/>ido)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=2;<sp/>i&lt;ido;<sp/>i+=2)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>tr2<sp/>=<sp/>cc[i<sp/>-<sp/>1<sp/>+<sp/>k<sp/>+<sp/>l1ido],<sp/>ti2<sp/>=<sp/>cc[i<sp/>+<sp/>k<sp/>+<sp/>l1ido];</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>br<sp/>=<sp/>cc[i<sp/>-<sp/>1<sp/>+<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>],<sp/>bi<sp/>=<sp/>cc[i<sp/>+<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1ad63f2a81495a70ecb612fb189dd527a3" kindref="member">VCPLXMULCONJ</ref>(tr2,<sp/>ti2,<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa1[i<sp/>-<sp/>2]),<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa1[i<sp/>-<sp/>1]));</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[i<sp/>+<sp/>2*<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(bi,<sp/>ti2);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[2*(k+ido)<sp/>-<sp/>i]<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(ti2,<sp/>bi);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[i<sp/>-<sp/>1<sp/>+<sp/>2*<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(br,<sp/>tr2);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[2*(k+ido)<sp/>-<sp/>i<sp/>-1]<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(br,<sp/>tr2);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ido<sp/>%<sp/>2<sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>l1ido;<sp/>k<sp/>+=<sp/>ido)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>ch[2*k<sp/>+<sp/>ido]<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(minus_one),<sp/>cc[ido-1<sp/>+<sp/>k<sp/>+<sp/>l1ido]);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>ch[2*k<sp/>+<sp/>ido-1]<sp/>=<sp/>cc[k<sp/>+<sp/>ido-1];</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>radf2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>NEVER_INLINE(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>radb2_ps(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ido,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*cc,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*ch,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*wa1)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minus_two=-2;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/>l1ido<sp/>=<sp/>l1*ido;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>,<sp/>tr2,<sp/>ti2;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>l1ido;<sp/>k<sp/>+=<sp/>ido)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>cc[2*<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];<sp/>b<sp/>=<sp/>cc[2*(k+ido)<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>ch[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(a,<sp/>b);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>ch[k<sp/>+<sp/>l1ido]<sp/>=<ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(a,<sp/>b);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ido<sp/>&lt;<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ido<sp/>!=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>l1ido;<sp/>k<sp/>+=<sp/>ido)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>2;<sp/>i<sp/>&lt;<sp/>ido;<sp/>i<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>cc[i-1<sp/>+<sp/>2*<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];<sp/>b<sp/>=<sp/>cc[2*(k<sp/>+<sp/>ido)<sp/>-<sp/>i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>cc[i+0<sp/>+<sp/>2*<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];<sp/>d<sp/>=<sp/>cc[2*(k<sp/>+<sp/>ido)<sp/>-<sp/>i<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[i-1<sp/>+<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(a,<sp/>b);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr2<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(a,<sp/>b);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[i+0<sp/>+<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(c,<sp/>d);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(c,<sp/>d);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(tr2,<sp/>ti2,<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa1[i<sp/>-<sp/>2]),<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa1[i<sp/>-<sp/>1]));</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[i-1<sp/>+<sp/>k<sp/>+<sp/>l1ido]<sp/>=<sp/>tr2;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[i+0<sp/>+<sp/>k<sp/>+<sp/>l1ido]<sp/>=<sp/>ti2;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ido<sp/>%<sp/>2<sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>l1ido;<sp/>k<sp/>+=<sp/>ido)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>cc[2*k<sp/>+<sp/>ido-1];<sp/>b<sp/>=<sp/>cc[2*k<sp/>+<sp/>ido];</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>ch[k<sp/>+<sp/>ido-1]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(a,a);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>ch[k<sp/>+<sp/>ido-1<sp/>+<sp/>l1ido]<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(minus_two),<sp/>b);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>radb2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radf3_ps(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ido,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<sp/>RESTRICT<sp/>cc,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<sp/>RESTRICT<sp/>ch,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*wa1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*wa2)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>taur<sp/>=<sp/>-0.5f;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>taui<sp/>=<sp/>0.866025403784439f;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/>ic;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>ci2,<sp/>di2,<sp/>di3,<sp/>cr2,<sp/>dr2,<sp/>dr3,<sp/>ti2,<sp/>ti3,<sp/>tr2,<sp/>tr3,<sp/>wr1,<sp/>wi1,<sp/>wr2,<sp/>wi2;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k&lt;l1;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>cr2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[(k<sp/>+<sp/>l1)*ido],<sp/>cc[(k<sp/>+<sp/>2*l1)*ido]);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>ch[3*k*ido]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[k*ido],<sp/>cr2);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>ch[(3*k+2)*ido]<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(taui),<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(cc[(k<sp/>+<sp/>l1*2)*ido],<sp/>cc[(k<sp/>+<sp/>l1)*ido]));</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>ch[ido-1<sp/>+<sp/>(3*k<sp/>+<sp/>1)*ido]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[k*ido],<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(taur),<sp/>cr2));</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ido<sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k&lt;l1;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=2;<sp/>i&lt;ido;<sp/>i+=2)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ic<sp/>=<sp/>ido<sp/>-<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wr1<sp/>=<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa1[i<sp/>-<sp/>2]);<sp/>wi1<sp/>=<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa1[i<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dr2<sp/>=<sp/>cc[i<sp/>-<sp/>1<sp/>+<sp/>(k<sp/>+<sp/>l1)*ido];<sp/>di2<sp/>=<sp/>cc[i<sp/>+<sp/>(k<sp/>+<sp/>l1)*ido];</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1ad63f2a81495a70ecb612fb189dd527a3" kindref="member">VCPLXMULCONJ</ref>(dr2,<sp/>di2,<sp/>wr1,<sp/>wi1);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wr2<sp/>=<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa2[i<sp/>-<sp/>2]);<sp/>wi2<sp/>=<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa2[i<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dr3<sp/>=<sp/>cc[i<sp/>-<sp/>1<sp/>+<sp/>(k<sp/>+<sp/>l1*2)*ido];<sp/>di3<sp/>=<sp/>cc[i<sp/>+<sp/>(k<sp/>+<sp/>l1*2)*ido];</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1ad63f2a81495a70ecb612fb189dd527a3" kindref="member">VCPLXMULCONJ</ref>(dr3,<sp/>di3,<sp/>wr2,<sp/>wi2);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cr2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(dr2,<sp/>dr3);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ci2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(di2,<sp/>di3);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[i<sp/>-<sp/>1<sp/>+<sp/>3*k*ido]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[i<sp/>-<sp/>1<sp/>+<sp/>k*ido],<sp/>cr2);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[i<sp/>+<sp/>3*k*ido]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[i<sp/>+<sp/>k*ido],<sp/>ci2);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tr2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[i<sp/>-<sp/>1<sp/>+<sp/>k*ido],<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(taur),<sp/>cr2));</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ti2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[i<sp/>+<sp/>k*ido],<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(taur),<sp/>ci2));</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tr3<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(taui),<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(di2,<sp/>di3));</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ti3<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(taui),<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(dr3,<sp/>dr2));</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[i<sp/>-<sp/>1<sp/>+<sp/>(3*k<sp/>+<sp/>2)*ido]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(tr2,<sp/>tr3);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[ic<sp/>-<sp/>1<sp/>+<sp/>(3*k<sp/>+<sp/>1)*ido]<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(tr2,<sp/>tr3);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[i<sp/>+<sp/>(3*k<sp/>+<sp/>2)*ido]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(ti2,<sp/>ti3);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[ic<sp/>+<sp/>(3*k<sp/>+<sp/>1)*ido]<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(ti3,<sp/>ti2);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>radf3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radb3_ps(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ido,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*RESTRICT<sp/>cc,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*RESTRICT<sp/>ch,</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*wa1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*wa2)</highlight></codeline>
<codeline lineno="510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>taur<sp/>=<sp/>-0.5f;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>taui<sp/>=<sp/>0.866025403784439f;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>taui_2<sp/>=<sp/>0.866025403784439f*2;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/>ic;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>ci2,<sp/>ci3,<sp/>di2,<sp/>di3,<sp/>cr2,<sp/>cr3,<sp/>dr2,<sp/>dr3,<sp/>ti2,<sp/>tr2;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k&lt;l1;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>tr2<sp/>=<sp/>cc[ido-1<sp/>+<sp/>(3*k<sp/>+<sp/>1)*ido];<sp/>tr2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(tr2,tr2);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>cr2<sp/>=<sp/><ref refid="pffft_8c_1a36c509112d032c08aab512c603ef82be" kindref="member">VMADD</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(taur),<sp/>tr2,<sp/>cc[3*k*ido]);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>ch[k*ido]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[3*k*ido],<sp/>tr2);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>ci3<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(taui_2),<sp/>cc[(3*k<sp/>+<sp/>2)*ido]);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>ch[(k<sp/>+<sp/>l1)*ido]<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(cr2,<sp/>ci3);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>ch[(k<sp/>+<sp/>2*l1)*ido]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cr2,<sp/>ci3);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ido<sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k&lt;l1;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=2;<sp/>i&lt;ido;<sp/>i+=2)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ic<sp/>=<sp/>ido<sp/>-<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tr2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[i<sp/>-<sp/>1<sp/>+<sp/>(3*k<sp/>+<sp/>2)*ido],<sp/>cc[ic<sp/>-<sp/>1<sp/>+<sp/>(3*k<sp/>+<sp/>1)*ido]);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cr2<sp/>=<sp/><ref refid="pffft_8c_1a36c509112d032c08aab512c603ef82be" kindref="member">VMADD</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(taur),<sp/>tr2,<sp/>cc[i<sp/>-<sp/>1<sp/>+<sp/>3*k*ido]);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[i<sp/>-<sp/>1<sp/>+<sp/>k*ido]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[i<sp/>-<sp/>1<sp/>+<sp/>3*k*ido],<sp/>tr2);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ti2<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(cc[i<sp/>+<sp/>(3*k<sp/>+<sp/>2)*ido],<sp/>cc[ic<sp/>+<sp/>(3*k<sp/>+<sp/>1)*ido]);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ci2<sp/>=<sp/><ref refid="pffft_8c_1a36c509112d032c08aab512c603ef82be" kindref="member">VMADD</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(taur),<sp/>ti2,<sp/>cc[i<sp/>+<sp/>3*k*ido]);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[i<sp/>+<sp/>k*ido]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[i<sp/>+<sp/>3*k*ido],<sp/>ti2);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cr3<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(taui),<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(cc[i<sp/>-<sp/>1<sp/>+<sp/>(3*k<sp/>+<sp/>2)*ido],<sp/>cc[ic<sp/>-<sp/>1<sp/>+<sp/>(3*k<sp/>+<sp/>1)*ido]));</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ci3<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(taui),<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cc[i<sp/>+<sp/>(3*k<sp/>+<sp/>2)*ido],<sp/>cc[ic<sp/>+<sp/>(3*k<sp/>+<sp/>1)*ido]));</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dr2<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(cr2,<sp/>ci3);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dr3<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cr2,<sp/>ci3);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>di2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(ci2,<sp/>cr3);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>di3<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(ci2,<sp/>cr3);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(dr2,<sp/>di2,<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa1[i-2]),<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa1[i-1]));</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[i<sp/>-<sp/>1<sp/>+<sp/>(k<sp/>+<sp/>l1)*ido]<sp/>=<sp/>dr2;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[i<sp/>+<sp/>(k<sp/>+<sp/>l1)*ido]<sp/>=<sp/>di2;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(dr3,<sp/>di3,<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa2[i-2]),<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa2[i-1]));</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[i<sp/>-<sp/>1<sp/>+<sp/>(k<sp/>+<sp/>2*l1)*ido]<sp/>=<sp/>dr3;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[i<sp/>+<sp/>(k<sp/>+<sp/>2*l1)*ido]<sp/>=<sp/>di3;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>radb3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>NEVER_INLINE(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>radf4_ps(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ido,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*RESTRICT<sp/>cc,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<sp/>RESTRICT<sp/>ch,</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>RESTRICT<sp/>wa1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>RESTRICT<sp/>wa2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>RESTRICT<sp/>wa3)</highlight></codeline>
<codeline lineno="553"><highlight class="normal">{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minus_hsqt2<sp/>=<sp/>(float)-0.7071067811865475;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/>l1ido<sp/>=<sp/>l1*ido;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*RESTRICT<sp/>cc_<sp/>=<sp/>cc,<sp/>*<sp/>RESTRICT<sp/>cc_end<sp/>=<sp/>cc<sp/>+<sp/>l1ido;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<sp/>RESTRICT<sp/>ch_<sp/>=<sp/>ch;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cc<sp/>&lt;<sp/>cc_end)<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>loop<sp/>represents<sp/>between<sp/>25%<sp/>and<sp/>40%<sp/>of<sp/>total<sp/>radf4_ps<sp/>cost<sp/>!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>a0<sp/>=<sp/>cc[0],<sp/>a1<sp/>=<sp/>cc[l1ido];</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>a2<sp/>=<sp/>cc[2*l1ido],<sp/>a3<sp/>=<sp/>cc[3*l1ido];</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>tr1<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(a1,<sp/>a3);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>tr2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(a0,<sp/>a2);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[2*ido-1]<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(a0,<sp/>a2);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[2*ido<sp/><sp/>]<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(a3,<sp/>a1);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[0<sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(tr1,<sp/>tr2);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[4*ido-1]<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(tr2,<sp/>tr1);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cc<sp/>+=<sp/>ido;<sp/>ch<sp/>+=<sp/>4*ido;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>cc<sp/>=<sp/>cc_;<sp/>ch<sp/>=<sp/>ch_;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ido<sp/>&lt;<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ido<sp/>!=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>l1ido;<sp/>k<sp/>+=<sp/>ido)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<sp/>RESTRICT<sp/>pc<sp/>=<sp/>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)(cc<sp/>+<sp/>1<sp/>+<sp/>k);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=2;<sp/>i&lt;ido;<sp/>i<sp/>+=<sp/>2,<sp/>pc<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ic<sp/>=<sp/>ido<sp/>-<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>wr,<sp/>wi,<sp/>cr2,<sp/>ci2,<sp/>cr3,<sp/>ci3,<sp/>cr4,<sp/>ci4;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>tr1,<sp/>ti1,<sp/>tr2,<sp/>ti2,<sp/>tr3,<sp/>ti3,<sp/>tr4,<sp/>ti4;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr2<sp/>=<sp/>pc[1*l1ido+0];</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci2<sp/>=<sp/>pc[1*l1ido+1];</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wr=<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa1[i<sp/>-<sp/>2]);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wi=<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa1[i<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1ad63f2a81495a70ecb612fb189dd527a3" kindref="member">VCPLXMULCONJ</ref>(cr2,ci2,wr,wi);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr3<sp/>=<sp/>pc[2*l1ido+0];</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci3<sp/>=<sp/>pc[2*l1ido+1];</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wr<sp/>=<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa2[i-2]);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wi<sp/>=<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa2[i-1]);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1ad63f2a81495a70ecb612fb189dd527a3" kindref="member">VCPLXMULCONJ</ref>(cr3,<sp/>ci3,<sp/>wr,<sp/>wi);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr4<sp/>=<sp/>pc[3*l1ido];</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci4<sp/>=<sp/>pc[3*l1ido+1];</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wr<sp/>=<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa3[i-2]);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wi<sp/>=<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa3[i-1]);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1ad63f2a81495a70ecb612fb189dd527a3" kindref="member">VCPLXMULCONJ</ref>(cr4,<sp/>ci4,<sp/>wr,<sp/>wi);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>at<sp/>this<sp/>point,<sp/>on<sp/>SSE,<sp/>five<sp/>of<sp/>&quot;cr2<sp/>cr3<sp/>cr4<sp/>ci2<sp/>ci3<sp/>ci4&quot;<sp/>should<sp/>be<sp/>loaded<sp/>in<sp/>registers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr1<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(cr2,cr4);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr4<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(cr4,cr2);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(pc[0],cr3);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr3<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(pc[0],cr3);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[i<sp/>-<sp/>1<sp/>+<sp/>4*<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(tr1,tr2);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[ic<sp/>-<sp/>1<sp/>+<sp/>4*k<sp/>+<sp/>3*ido]<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(tr2,tr1);<sp/></highlight><highlight class="comment">/*<sp/>at<sp/>this<sp/>point<sp/>tr1<sp/>and<sp/>tr2<sp/>can<sp/>be<sp/>disposed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti1<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(ci2,ci4);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti4<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(ci2,ci4);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[i<sp/>-<sp/>1<sp/>+<sp/>4*k<sp/>+<sp/>2*ido]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(ti4,tr3);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[ic<sp/>-<sp/>1<sp/>+<sp/>4*k<sp/>+<sp/>1*ido]<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(tr3,ti4);<sp/></highlight><highlight class="comment">/*<sp/>dispose<sp/>tr3,<sp/>ti4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(pc[1],ci3);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti3<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(pc[1],ci3);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[i<sp/>+<sp/>4*<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(ti1,<sp/>ti2);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[ic<sp/>+<sp/>4*k<sp/>+<sp/>3*ido]<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(ti1,<sp/>ti2);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[i<sp/>+<sp/>4*k<sp/>+<sp/>2*ido]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(tr4,<sp/>ti3);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[ic<sp/>+<sp/>4*k<sp/>+<sp/>1*ido]<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(tr4,<sp/>ti3);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ido<sp/>%<sp/>2<sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k&lt;l1ido;<sp/>k<sp/>+=<sp/>ido)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref><sp/>=<sp/>cc[ido-1<sp/>+<sp/>k<sp/>+<sp/>l1ido],<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>=<sp/>cc[ido-1<sp/>+<sp/>k<sp/>+<sp/>3*l1ido];</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>cc[ido-1<sp/>+<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>],<sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref><sp/>=<sp/>cc[ido-1<sp/>+<sp/>k<sp/>+<sp/>2*l1ido];</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>ti1<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(minus_hsqt2),<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(a,<sp/>b));</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>tr1<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(minus_hsqt2),<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(b,<sp/>a));</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>ch[ido-1<sp/>+<sp/>4*<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(tr1,<sp/>c);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>ch[ido-1<sp/>+<sp/>4*k<sp/>+<sp/>2*ido]<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(c,<sp/>tr1);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>ch[4*k<sp/>+<sp/>1*ido]<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(ti1,<sp/>d);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>ch[4*k<sp/>+<sp/>3*ido]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(ti1,<sp/>d);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>radf4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>NEVER_INLINE(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>radb4_ps(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ido,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<sp/>RESTRICT<sp/>cc,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<sp/>RESTRICT<sp/>ch,</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>RESTRICT<sp/>wa1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>RESTRICT<sp/>wa2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*RESTRICT<sp/>wa3)</highlight></codeline>
<codeline lineno="637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minus_sqrt2<sp/>=<sp/>(float)-1.414213562373095;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>two<sp/>=<sp/>2.f;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/>l1ido<sp/>=<sp/>l1*ido;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>ci2,<sp/>ci3,<sp/>ci4,<sp/>cr2,<sp/>cr3,<sp/>cr4,<sp/>ti1,<sp/>ti2,<sp/>ti3,<sp/>ti4,<sp/>tr1,<sp/>tr2,<sp/>tr3,<sp/>tr4;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*RESTRICT<sp/>cc_<sp/>=<sp/>cc,<sp/>*<sp/>RESTRICT<sp/>ch_end<sp/>=<sp/>ch<sp/>+<sp/>l1ido;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*ch_<sp/>=<sp/>ch;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ch<sp/>&lt;<sp/>ch_end)<sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref><sp/>=<sp/>cc[0],<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>=<sp/>cc[4*ido-1];</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>cc[2*ido],<sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref><sp/>=<sp/>cc[2*ido-1];</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tr3<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(two),d);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tr2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(a,b);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tr1<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(a,b);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tr4<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(two),c);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[0*l1ido]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(tr2,<sp/>tr3);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[2*l1ido]<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(tr2,<sp/>tr3);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[1*l1ido]<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(tr1,<sp/>tr4);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch[3*l1ido]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(tr1,<sp/>tr4);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cc<sp/>+=<sp/>4*ido;<sp/>ch<sp/>+=<sp/>ido;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>cc<sp/>=<sp/>cc_;<sp/>ch<sp/>=<sp/>ch_;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ido<sp/>&lt;<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ido<sp/>!=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>l1ido;<sp/>k<sp/>+=<sp/>ido)<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<sp/>RESTRICT<sp/>pc<sp/>=<sp/>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)(cc<sp/>-<sp/>1<sp/>+<sp/>4*k);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<sp/>RESTRICT<sp/>ph<sp/>=<sp/>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)(ch<sp/>+<sp/>k<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>2;<sp/>i<sp/>&lt;<sp/>ido;<sp/>i<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr1<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(pc[i],<sp/>pc[4*ido<sp/>-<sp/>i]);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(pc[i],<sp/>pc[4*ido<sp/>-<sp/>i]);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti4<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(pc[2*ido<sp/>+<sp/>i],<sp/>pc[2*ido<sp/>-<sp/>i]);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr3<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(pc[2*ido<sp/>+<sp/>i],<sp/>pc[2*ido<sp/>-<sp/>i]);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ph[0]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(tr2,<sp/>tr3);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr3<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(tr2,<sp/>tr3);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti3<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(pc[2*ido<sp/>+<sp/>i<sp/>+<sp/>1],<sp/>pc[2*ido<sp/>-<sp/>i<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr4<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(pc[2*ido<sp/>+<sp/>i<sp/>+<sp/>1],<sp/>pc[2*ido<sp/>-<sp/>i<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr2<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(tr1,<sp/>tr4);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr4<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(tr1,<sp/>tr4);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti1<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(pc[i<sp/>+<sp/>1],<sp/>pc[4*ido<sp/>-<sp/>i<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti2<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(pc[i<sp/>+<sp/>1],<sp/>pc[4*ido<sp/>-<sp/>i<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ph[1]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(ti2,<sp/>ti3);<sp/>ph<sp/>+=<sp/>l1ido;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci3<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(ti2,<sp/>ti3);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(ti1,<sp/>ti4);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci4<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(ti1,<sp/>ti4);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(cr2,<sp/>ci2,<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa1[i-2]),<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa1[i-1]));</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ph[0]<sp/>=<sp/>cr2;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ph[1]<sp/>=<sp/>ci2;<sp/>ph<sp/>+=<sp/>l1ido;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(cr3,<sp/>ci3,<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa2[i-2]),<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa2[i-1]));</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ph[0]<sp/>=<sp/>cr3;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ph[1]<sp/>=<sp/>ci3;<sp/>ph<sp/>+=<sp/>l1ido;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(cr4,<sp/>ci4,<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa3[i-2]),<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(wa3[i-1]));</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ph[0]<sp/>=<sp/>cr4;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ph[1]<sp/>=<sp/>ci4;<sp/>ph<sp/>=<sp/>ph<sp/>-<sp/>3*l1ido<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ido<sp/>%<sp/>2<sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>l1ido;<sp/>k+=ido)<sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i0<sp/>=<sp/>4*k<sp/>+<sp/>ido;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>cc[i0-1],<sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref><sp/>=<sp/>cc[i0<sp/>+<sp/>2*ido-1];</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref><sp/>=<sp/>cc[i0+0],<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>=<sp/>cc[i0<sp/>+<sp/>2*ido+0];</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>tr1<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(c,d);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>tr2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(c,d);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>ti1<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(b,a);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>ti2<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(b,a);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>ch[ido-1<sp/>+<sp/>k<sp/>+<sp/>0*l1ido]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(tr2,tr2);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>ch[ido-1<sp/>+<sp/>k<sp/>+<sp/>1*l1ido]<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(minus_sqrt2),<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(ti1,<sp/>tr1));</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>ch[ido-1<sp/>+<sp/>k<sp/>+<sp/>2*l1ido]<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(ti2,<sp/>ti2);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>ch[ido-1<sp/>+<sp/>k<sp/>+<sp/>3*l1ido]<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(<ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(minus_sqrt2),<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(ti1,<sp/>tr1));</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>radb4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>NEVER_INLINE(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*)<sp/>rfftf1_ps(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*input_readonly,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*work1,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*work2,</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*wa,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ifac)<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/><sp/>=<sp/>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)input_readonly;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref><sp/>=<sp/>(in<sp/>==<sp/>work2<sp/>?<sp/>work1<sp/>:<sp/>work2);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nf<sp/>=<sp/>ifac[1],<sp/>k1;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l2<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iw<sp/>=<sp/>n-1;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(in<sp/>!=<sp/>out<sp/>&amp;&amp;<sp/>work1<sp/>!=<sp/>work2);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k1<sp/>=<sp/>1;<sp/>k1<sp/>&lt;=<sp/>nf;<sp/>++k1)<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kh<sp/>=<sp/>nf<sp/>-<sp/>k1;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip<sp/>=<sp/>ifac[kh<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l1<sp/>=<sp/>l2<sp/>/<sp/>ip;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ido<sp/>=<sp/>n<sp/>/<sp/>l2;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>iw<sp/>-=<sp/>(ip<sp/>-<sp/>1)*ido;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ip)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix2<sp/>=<sp/>iw<sp/>+<sp/>ido;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix3<sp/>=<sp/>ix2<sp/>+<sp/>ido;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radf4_ps(ido,<sp/>l1,<sp/>in,<sp/>out,<sp/>&amp;wa[iw],<sp/>&amp;wa[ix2],<sp/>&amp;wa[ix3]);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix2<sp/>=<sp/>iw<sp/>+<sp/>ido;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radf3_ps(ido,<sp/>l1,<sp/>in,<sp/>out,<sp/>&amp;wa[iw],<sp/>&amp;wa[ix2]);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radf2_ps(ido,<sp/>l1,<sp/>in,<sp/>out,<sp/>&amp;wa[iw]);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(0);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>l2<sp/>=<sp/>l1;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out<sp/>==<sp/>work2)<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>work1;<sp/>in<sp/>=<sp/>work2;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>work2;<sp/>in<sp/>=<sp/>work1;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>;<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>in<sp/>fact<sp/>the<sp/>output<sp/>..<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>rfftf1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>NEVER_INLINE(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*)<sp/>rfftb1_ps(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*input_readonly,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*work1,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*work2,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*wa,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ifac)<sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/><sp/>=<sp/>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)input_readonly;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref><sp/>=<sp/>(in<sp/>==<sp/>work2<sp/>?<sp/>work1<sp/>:<sp/>work2);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nf<sp/>=<sp/>ifac[1],<sp/>k1;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l1<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iw<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(in<sp/>!=<sp/>out);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k1=1;<sp/>k1&lt;=nf;<sp/>k1++)<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip<sp/>=<sp/>ifac[k1<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l2<sp/>=<sp/>ip*l1;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ido<sp/>=<sp/>n<sp/>/<sp/>l2;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ip)<sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix2<sp/>=<sp/>iw<sp/>+<sp/>ido;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix3<sp/>=<sp/>ix2<sp/>+<sp/>ido;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radb4_ps(ido,<sp/>l1,<sp/>in,<sp/>out,<sp/>&amp;wa[iw],<sp/>&amp;wa[ix2],<sp/>&amp;wa[ix3]);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix2<sp/>=<sp/>iw<sp/>+<sp/>ido;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radb3_ps(ido,<sp/>l1,<sp/>in,<sp/>out,<sp/>&amp;wa[iw],<sp/>&amp;wa[ix2]);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radb2_ps(ido,<sp/>l1,<sp/>in,<sp/>out,<sp/>&amp;wa[iw]);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(0);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>l1<sp/>=<sp/>l2;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>iw<sp/>+=<sp/>(ip<sp/>-<sp/>1)*ido;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out<sp/>==<sp/>work2)<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>work1;<sp/>in<sp/>=<sp/>work2;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>work2;<sp/>in<sp/>=<sp/>work1;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>;<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>in<sp/>fact<sp/>the<sp/>output<sp/>..<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal">}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decompose(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ifac,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntryh[3])<sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nl<sp/>=<sp/>n,<sp/>nf<sp/>=<sp/>0,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>3;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntry<sp/>=<sp/>ntryh[j];</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(nl<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nq<sp/>=<sp/>nl<sp/>/<sp/>ntry;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nr<sp/>=<sp/>nl<sp/>-<sp/>ntry<sp/>*<sp/>nq;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nr<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ifac[2+nf++]<sp/>=<sp/>ntry;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nl<sp/>=<sp/>nq;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ntry<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>nf<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>2;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;=<sp/>nf;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib<sp/>=<sp/>nf<sp/>-<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ifac[ib<sp/>+<sp/>1]<sp/>=<sp/>ifac[ib];</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ifac[2]<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/>ifac[0]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/>ifac[1]<sp/>=<sp/>nf;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nf;</highlight></codeline>
<codeline lineno="820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rffti1_ps(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*wa,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ifac)</highlight></codeline>
<codeline lineno="825"><highlight class="normal">{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntryh[3]<sp/>=<sp/>{<sp/>4,2,3<sp/>};</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/>j,<sp/>ii;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nf<sp/>=<sp/>decompose(n,ifac,ntryh);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>argh<sp/>=<sp/>(float)((2*<ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>)<sp/>/<sp/>n);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nfm1<sp/>=<sp/>nf<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l1<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nfm1<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k1<sp/>=<sp/>1;<sp/>k1<sp/>&lt;=<sp/>nfm1;<sp/>k1++)<sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip<sp/>=<sp/>ifac[k1<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ld<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l2<sp/>=<sp/>l1*ip;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ido<sp/>=<sp/>n<sp/>/<sp/>l2;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ipm<sp/>=<sp/>ip<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>ipm;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>argld;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>is,<sp/>fi=0;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ld<sp/>+=<sp/>l1;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>argld<sp/>=<sp/>(float)ld*argh;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ii<sp/>=<sp/>3;<sp/>ii<sp/>&lt;=<sp/>ido;<sp/>ii<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fi<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wa[i<sp/>-<sp/>2]<sp/>=<sp/><ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)fi*argld);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wa[i<sp/>-<sp/>1]<sp/>=<sp/><ref refid="pffft_8c_1a28642ecbd9d1e77ab5a140a460f47d83" kindref="member">sin</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)fi*argld);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>+=<sp/>ido;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>l1<sp/>=<sp/>l2;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>rffti1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cffti1_ps(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*wa,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ifac)</highlight></codeline>
<codeline lineno="859"><highlight class="normal">{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntryh[3]<sp/>=<sp/>{<sp/>3,4,2<sp/>};</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k1,<sp/>j,<sp/>ii;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nf<sp/>=<sp/>decompose(n,ifac,ntryh);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>argh<sp/>=<sp/>(float)((2*<ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>)/n);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l1<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k1=1;<sp/>k1&lt;=nf;<sp/>k1++)<sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip<sp/>=<sp/>ifac[k1+1];</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ld<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l2<sp/>=<sp/>l1*ip;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ido<sp/>=<sp/>n<sp/>/<sp/>l2;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idot<sp/>=<sp/>ido<sp/>+<sp/>ido<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ipm<sp/>=<sp/>ip<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=1;<sp/>j&lt;=ipm;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>argld;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1aec25a56c89da9b37e346ecc7a8fc68e5" kindref="member">i1</ref><sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>fi<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wa[i-1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wa[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ld<sp/>+=<sp/>l1;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>argld<sp/>=<sp/>(float)ld*argh;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ii<sp/>=<sp/>4;<sp/>ii<sp/>&lt;=<sp/>idot;<sp/>ii<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fi<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wa[i-1]<sp/>=<sp/><ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)fi*argld);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wa[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="pffft_8c_1a28642ecbd9d1e77ab5a140a460f47d83" kindref="member">sin</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)fi*argld);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ip<sp/>&gt;<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wa[i1-1]<sp/>=<sp/>wa[i-1];</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wa[<ref refid="convtest_8m_1aec25a56c89da9b37e346ecc7a8fc68e5" kindref="member">i1</ref>]<sp/>=<sp/>wa[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>l1<sp/>=<sp/>l2;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>cffti1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*cfftf1_ps(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*input_readonly,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*work1,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*work2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*wa,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ifac,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isign)<sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/><sp/>=<sp/>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)input_readonly;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref><sp/>=<sp/>(in<sp/>==<sp/>work2<sp/>?<sp/>work1<sp/>:<sp/>work2);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nf<sp/>=<sp/>ifac[1],<sp/>k1;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l1<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iw<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(in<sp/>!=<sp/>out<sp/>&amp;&amp;<sp/>work1<sp/>!=<sp/>work2);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k1=2;<sp/>k1&lt;=nf+1;<sp/>k1++)<sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip<sp/>=<sp/>ifac[k1];</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l2<sp/>=<sp/>ip*l1;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ido<sp/>=<sp/>n<sp/>/<sp/>l2;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idot<sp/>=<sp/>ido<sp/>+<sp/>ido;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ip)<sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix2<sp/>=<sp/>iw<sp/>+<sp/>idot;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix3<sp/>=<sp/>ix2<sp/>+<sp/>idot;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>passf4_ps(idot,<sp/>l1,<sp/>in,<sp/>out,<sp/>&amp;wa[iw],<sp/>&amp;wa[ix2],<sp/>&amp;wa[ix3],<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)isign);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>passf2_ps(idot,<sp/>l1,<sp/>in,<sp/>out,<sp/>&amp;wa[iw],<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)isign);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix2<sp/>=<sp/>iw<sp/>+<sp/>idot;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>passf3_ps(idot,<sp/>l1,<sp/>in,<sp/>out,<sp/>&amp;wa[iw],<sp/>&amp;wa[ix2],<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)isign);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(0);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>l1<sp/>=<sp/>l2;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>iw<sp/>+=<sp/>(ip<sp/>-<sp/>1)*idot;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out<sp/>==<sp/>work2)<sp/>{</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>work1;<sp/>in<sp/>=<sp/>work2;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>work2;<sp/>in<sp/>=<sp/>work1;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>;<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>in<sp/>fact<sp/>the<sp/>output<sp/>..<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal">}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938" refid="struct_p_f_f_f_t___setup" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_p_f_f_f_t___setup" kindref="compound">PFFFT_Setup</ref><sp/>{</highlight></codeline>
<codeline lineno="939" refid="struct_p_f_f_f_t___setup_1a328951e60dcbf47bb9d89946cf67571d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="struct_p_f_f_f_t___setup_1a328951e60dcbf47bb9d89946cf67571d" kindref="member">N</ref>;</highlight></codeline>
<codeline lineno="940" refid="struct_p_f_f_f_t___setup_1abd11f546bae7f16ca052958bf000116d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="struct_p_f_f_f_t___setup_1abd11f546bae7f16ca052958bf000116d" kindref="member">Ncvec</ref>;<sp/></highlight><highlight class="comment">/*<sp/>nb<sp/>of<sp/>complex<sp/>simd<sp/>vectors<sp/>(N/4<sp/>if<sp/>PFFFT_COMPLEX,<sp/>N/8<sp/>if<sp/>PFFFT_REAL)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941" refid="struct_p_f_f_f_t___setup_1a71ab430945d91b2e534e1c6c50a7fbdf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ifac[15];</highlight></codeline>
<codeline lineno="942" refid="struct_p_f_f_f_t___setup_1a980def09ec15883c12689443d97a36b5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="pffft_8h_1af5506e26b5d8295b89aa0186261dfef1" kindref="member">pffft_transform_t</ref><sp/><ref refid="struct_p_f_f_f_t___setup_1a980def09ec15883c12689443d97a36b5" kindref="member">transform</ref>;</highlight></codeline>
<codeline lineno="943" refid="struct_p_f_f_f_t___setup_1a52a6ca29e3a4c59f54070a622db4ec3f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="struct_p_f_f_f_t___setup_1a52a6ca29e3a4c59f54070a622db4ec3f" kindref="member">data</ref>;<sp/></highlight><highlight class="comment">/*<sp/>allocated<sp/>room<sp/>for<sp/>twiddle<sp/>coefs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944" refid="struct_p_f_f_f_t___setup_1af063d9d895bb58628cd9116079cc72b6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="struct_p_f_f_f_t___setup_1af063d9d895bb58628cd9116079cc72b6" kindref="member">e</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>points<sp/>into<sp/>&apos;data&apos;<sp/>,<sp/>N/4*3<sp/>elements<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945" refid="struct_p_f_f_f_t___setup_1acda18fead895e0d4e29bcda839bb9ccf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="struct_p_f_f_f_t___setup_1acda18fead895e0d4e29bcda839bb9ccf" kindref="member">twiddle</ref>;<sp/></highlight><highlight class="comment">/*<sp/>points<sp/>into<sp/>&apos;data&apos;,<sp/>N/4<sp/>elements<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal">};</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948" refid="pffft_8c_1a7a523ab656e85367f1d256f89ee39974" refkind="member"><highlight class="normal"><ref refid="struct_p_f_f_f_t___setup" kindref="compound">PFFFT_Setup</ref><sp/>*<ref refid="pffft_8c_1a7a523ab656e85367f1d256f89ee39974" kindref="member">pffft_new_setup</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>,<sp/><ref refid="pffft_8h_1af5506e26b5d8295b89aa0186261dfef1" kindref="member">pffft_transform_t</ref><sp/>transform)<sp/>{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><ref refid="struct_p_f_f_f_t___setup" kindref="compound">PFFFT_Setup</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>(<ref refid="struct_p_f_f_f_t___setup" kindref="compound">PFFFT_Setup</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_p_f_f_f_t___setup" kindref="compound">PFFFT_Setup</ref>));</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s)</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transform<sp/>==<sp/><ref refid="pffft_8h_1af5506e26b5d8295b89aa0186261dfef1a0d8b922832bef8ecca106aad8bcd67a8" kindref="member">PFFFT_REAL</ref>)<sp/>{<sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(N<sp/>&gt;=<sp/>32);<sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transform<sp/>==<sp/><ref refid="pffft_8h_1af5506e26b5d8295b89aa0186261dfef1a49bcfbb9d5a46fd48c907c98fe0e9af9" kindref="member">PFFFT_COMPLEX</ref>)<sp/>{<sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(N<sp/>&gt;=<sp/>16);<sp/>}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*assert((N<sp/>%<sp/>32)<sp/>==<sp/>0);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="struct_p_f_f_f_t___setup_1a328951e60dcbf47bb9d89946cf67571d" kindref="member">N</ref><sp/>=<sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="struct_p_f_f_f_t___setup_1a980def09ec15883c12689443d97a36b5" kindref="member">transform</ref><sp/>=<sp/>transform;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>nb<sp/>of<sp/>complex<sp/>simd<sp/>vectors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="struct_p_f_f_f_t___setup_1abd11f546bae7f16ca052958bf000116d" kindref="member">Ncvec</ref><sp/>=<sp/>(transform<sp/>==<sp/><ref refid="pffft_8h_1af5506e26b5d8295b89aa0186261dfef1a0d8b922832bef8ecca106aad8bcd67a8" kindref="member">PFFFT_REAL</ref><sp/>?<sp/>N/2<sp/>:<sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>)/<ref refid="pffft_8c_1a846721193721413578b2d26c223b42cd" kindref="member">SIMD_SZ</ref>;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="struct_p_f_f_f_t___setup_1a52a6ca29e3a4c59f54070a622db4ec3f" kindref="member">data</ref><sp/>=<sp/>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)<ref refid="pffft_8c_1a68ab1a6f8cf7d3c6f317c8c207fc4e2a" kindref="member">pffft_aligned_malloc</ref>(2*(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)s-&gt;<ref refid="struct_p_f_f_f_t___setup_1abd11f546bae7f16ca052958bf000116d" kindref="member">Ncvec</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>));</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s-&gt;<ref refid="struct_p_f_f_f_t___setup_1a52a6ca29e3a4c59f54070a622db4ec3f" kindref="member">data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>free(s);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="struct_p_f_f_f_t___setup_1af063d9d895bb58628cd9116079cc72b6" kindref="member">e</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)s-&gt;<ref refid="struct_p_f_f_f_t___setup_1a52a6ca29e3a4c59f54070a622db4ec3f" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="struct_p_f_f_f_t___setup_1acda18fead895e0d4e29bcda839bb9ccf" kindref="member">twiddle</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)(s-&gt;<ref refid="struct_p_f_f_f_t___setup_1a52a6ca29e3a4c59f54070a622db4ec3f" kindref="member">data</ref><sp/>+<sp/>(2*s-&gt;<ref refid="struct_p_f_f_f_t___setup_1abd11f546bae7f16ca052958bf000116d" kindref="member">Ncvec</ref>*(<ref refid="pffft_8c_1a846721193721413578b2d26c223b42cd" kindref="member">SIMD_SZ</ref>-1))/<ref refid="pffft_8c_1a846721193721413578b2d26c223b42cd" kindref="member">SIMD_SZ</ref>);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transform<sp/>==<sp/><ref refid="pffft_8h_1af5506e26b5d8295b89aa0186261dfef1a0d8b922832bef8ecca106aad8bcd67a8" kindref="member">PFFFT_REAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>s-&gt;<ref refid="struct_p_f_f_f_t___setup_1abd11f546bae7f16ca052958bf000116d" kindref="member">Ncvec</ref>;<sp/>++<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>k/<ref refid="pffft_8c_1a846721193721413578b2d26c223b42cd" kindref="member">SIMD_SZ</ref>;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>k%<ref refid="pffft_8c_1a846721193721413578b2d26c223b42cd" kindref="member">SIMD_SZ</ref>;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(m=0;<sp/>m<sp/>&lt;<sp/><ref refid="pffft_8c_1a846721193721413578b2d26c223b42cd" kindref="member">SIMD_SZ</ref>-1;<sp/>++<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>)<sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2add_8c_1a955f504eccf76b4eb2489c0adab03121" kindref="member">A</ref><sp/>=<sp/>(float)(-2*<ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>*(m+1)*k<sp/>/<sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="struct_p_f_f_f_t___setup_1af063d9d895bb58628cd9116079cc72b6" kindref="member">e</ref>[(2*(i*3<sp/>+<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>)<sp/>+<sp/>0)<sp/>*<sp/>SIMD_SZ<sp/>+<sp/>j]<sp/>=<sp/><ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>(A);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="struct_p_f_f_f_t___setup_1af063d9d895bb58628cd9116079cc72b6" kindref="member">e</ref>[(2*(i*3<sp/>+<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>)<sp/>+<sp/>1)<sp/>*<sp/>SIMD_SZ<sp/>+<sp/>j]<sp/>=<sp/><ref refid="pffft_8c_1a28642ecbd9d1e77ab5a140a460f47d83" kindref="member">sin</ref>(A);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>rffti1_ps(N/<ref refid="pffft_8c_1a846721193721413578b2d26c223b42cd" kindref="member">SIMD_SZ</ref>,<sp/>s-&gt;<ref refid="struct_p_f_f_f_t___setup_1acda18fead895e0d4e29bcda839bb9ccf" kindref="member">twiddle</ref>,<sp/>s-&gt;<ref refid="struct_p_f_f_f_t___setup_1a71ab430945d91b2e534e1c6c50a7fbdf" kindref="member">ifac</ref>);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>s-&gt;<ref refid="struct_p_f_f_f_t___setup_1abd11f546bae7f16ca052958bf000116d" kindref="member">Ncvec</ref>;<sp/>++<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>k/<ref refid="pffft_8c_1a846721193721413578b2d26c223b42cd" kindref="member">SIMD_SZ</ref>;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>k%<ref refid="pffft_8c_1a846721193721413578b2d26c223b42cd" kindref="member">SIMD_SZ</ref>;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(m=0;<sp/>m<sp/>&lt;<sp/><ref refid="pffft_8c_1a846721193721413578b2d26c223b42cd" kindref="member">SIMD_SZ</ref>-1;<sp/>++<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>)<sp/>{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2add_8c_1a955f504eccf76b4eb2489c0adab03121" kindref="member">A</ref><sp/>=<sp/>(float)(-2*<ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>*(m+1)*k<sp/>/<sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="struct_p_f_f_f_t___setup_1af063d9d895bb58628cd9116079cc72b6" kindref="member">e</ref>[(2*(i*3<sp/>+<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>)<sp/>+<sp/>0)*SIMD_SZ<sp/>+<sp/>j]<sp/>=<sp/><ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>(A);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="struct_p_f_f_f_t___setup_1af063d9d895bb58628cd9116079cc72b6" kindref="member">e</ref>[(2*(i*3<sp/>+<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>)<sp/>+<sp/>1)*SIMD_SZ<sp/>+<sp/>j]<sp/>=<sp/><ref refid="pffft_8c_1a28642ecbd9d1e77ab5a140a460f47d83" kindref="member">sin</ref>(A);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>cffti1_ps(N/<ref refid="pffft_8c_1a846721193721413578b2d26c223b42cd" kindref="member">SIMD_SZ</ref>,<sp/>s-&gt;<ref refid="struct_p_f_f_f_t___setup_1acda18fead895e0d4e29bcda839bb9ccf" kindref="member">twiddle</ref>,<sp/>s-&gt;<ref refid="struct_p_f_f_f_t___setup_1a71ab430945d91b2e534e1c6c50a7fbdf" kindref="member">ifac</ref>);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="992"><highlight class="normal">}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pffft_destroy_setup(<ref refid="struct_p_f_f_f_t___setup" kindref="compound">PFFFT_Setup</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)<sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s){</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a659b995ebc7e2c31a877cd3552875391" kindref="member">pffft_aligned_free</ref>(s-&gt;<ref refid="struct_p_f_f_f_t___setup_1a52a6ca29e3a4c59f54070a622db4ec3f" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>free(s);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(PFFFT_SIMD_DISABLE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>[0<sp/>0<sp/>1<sp/>2<sp/>3<sp/>4<sp/>5<sp/>6<sp/>7<sp/>8]<sp/>-&gt;<sp/>[0<sp/>8<sp/>7<sp/>6<sp/>5<sp/>4<sp/>3<sp/>2<sp/>1]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reversed_copy(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>in_stride,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>g0,<sp/>g1;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/>INTERLEAVE2(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[0],<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[1],<sp/>g0,<sp/>g1);<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/>+=<sp/>in_stride;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/>*--out<sp/>=<sp/>VSWAPHL(g0,<sp/>g1);<sp/></highlight><highlight class="comment">/*<sp/>[g0l,<sp/>g0h],<sp/>[g1l<sp/>g1h]<sp/>-&gt;<sp/>[g1l,<sp/>g0h]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=1;<sp/>k<sp/>&lt;<sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>;<sp/>++<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>h0,<sp/>h1;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>INTERLEAVE2(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[0],<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[1],<sp/>h0,<sp/>h1);<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/>+=<sp/>in_stride;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>*--out<sp/>=<sp/>VSWAPHL(g1,<sp/>h0);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>*--out<sp/>=<sp/>VSWAPHL(h0,<sp/>h1);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>g1<sp/>=<sp/>h1;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/>*--out<sp/>=<sp/>VSWAPHL(g1,<sp/>g0);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unreversed_copy(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_stride)<sp/>{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>g0,<sp/>g1,<sp/>h0,<sp/>h1;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/>g0<sp/>=<sp/>g1<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[0];<sp/>++<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=1;<sp/>k<sp/>&lt;<sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>;<sp/>++<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>h0<sp/>=<sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>++;<sp/>h1<sp/>=<sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>++;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>g1<sp/>=<sp/>VSWAPHL(g1,<sp/>h0);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>h0<sp/>=<sp/>VSWAPHL(h0,<sp/>h1);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>UNINTERLEAVE2(h0,<sp/>g1,<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>[0],<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>[1]);<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref><sp/>+=<sp/>out_stride;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>g1<sp/>=<sp/>h1;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/>h0<sp/>=<sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>++;<sp/>h1<sp/>=<sp/>g0;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/>g1<sp/>=<sp/>VSWAPHL(g1,<sp/>h0);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/>h0<sp/>=<sp/>VSWAPHL(h0,<sp/>h1);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/>UNINTERLEAVE2(h0,<sp/>g1,<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>[0],<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>[1]);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pffft_zreorder(<ref refid="struct_p_f_f_f_t___setup" kindref="compound">PFFFT_Setup</ref><sp/>*<ref refid="namespacesetup" kindref="compound">setup</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/><ref refid="pffft_8h_1a2e53fece2e9e96e8beeabe770f191f91" kindref="member">pffft_direction_t</ref><sp/>direction)<sp/>{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref><sp/>=<sp/>setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1a328951e60dcbf47bb9d89946cf67571d" kindref="member">N</ref>,<sp/>Ncvec<sp/>=<sp/>setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1abd11f546bae7f16ca052958bf000116d" kindref="member">Ncvec</ref>;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*vin<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*vout<sp/>=<sp/>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/>!=<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1a980def09ec15883c12689443d97a36b5" kindref="member">transform</ref><sp/>==<sp/><ref refid="pffft_8h_1af5506e26b5d8295b89aa0186261dfef1a0d8b922832bef8ecca106aad8bcd67a8" kindref="member">PFFFT_REAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/>dk<sp/>=<sp/>N/32;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/><ref refid="pffft_8h_1a2e53fece2e9e96e8beeabe770f191f91a5b1276b534d9d8995951d81f61e179bb" kindref="member">PFFFT_FORWARD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>dk;<sp/>++<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INTERLEAVE2(vin[k*8<sp/>+<sp/>0],<sp/>vin[k*8<sp/>+<sp/>1],<sp/>vout[2*(0*dk<sp/>+<sp/>k)<sp/>+<sp/>0],<sp/>vout[2*(0*dk<sp/>+<sp/>k)<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INTERLEAVE2(vin[k*8<sp/>+<sp/>4],<sp/>vin[k*8<sp/>+<sp/>5],<sp/>vout[2*(2*dk<sp/>+<sp/>k)<sp/>+<sp/>0],<sp/>vout[2*(2*dk<sp/>+<sp/>k)<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reversed_copy(dk,<sp/>vin+2,<sp/>8,<sp/>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)(<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref><sp/>+<sp/>N/2));</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reversed_copy(dk,<sp/>vin+6,<sp/>8,<sp/>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)(<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref><sp/>+<sp/>N));</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>dk;<sp/>++<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNINTERLEAVE2(vin[2*(0*dk<sp/>+<sp/>k)<sp/>+<sp/>0],<sp/>vin[2*(0*dk<sp/>+<sp/>k)<sp/>+<sp/>1],<sp/>vout[k*8<sp/>+<sp/>0],<sp/>vout[k*8<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNINTERLEAVE2(vin[2*(2*dk<sp/>+<sp/>k)<sp/>+<sp/>0],<sp/>vin[2*(2*dk<sp/>+<sp/>k)<sp/>+<sp/>1],<sp/>vout[k*8<sp/>+<sp/>4],<sp/>vout[k*8<sp/>+<sp/>5]);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unreversed_copy(dk,<sp/>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/>+<sp/>N/4),<sp/>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)(<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref><sp/>+<sp/>N<sp/>-<sp/>6*<ref refid="pffft_8c_1a846721193721413578b2d26c223b42cd" kindref="member">SIMD_SZ</ref>),<sp/>-8);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unreversed_copy(dk,<sp/>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/>+<sp/>3*N/4),<sp/>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)(<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref><sp/>+<sp/>N<sp/>-<sp/>2*<ref refid="pffft_8c_1a846721193721413578b2d26c223b42cd" kindref="member">SIMD_SZ</ref>),<sp/>-8);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/><ref refid="pffft_8h_1a2e53fece2e9e96e8beeabe770f191f91a5b1276b534d9d8995951d81f61e179bb" kindref="member">PFFFT_FORWARD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>Ncvec;<sp/>++<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk<sp/>=<sp/>(k/4)<sp/>+<sp/>(k%4)*(Ncvec/4);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INTERLEAVE2(vin[k*2],<sp/>vin[k*2+1],<sp/>vout[kk*2],<sp/>vout[kk*2+1]);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>Ncvec;<sp/>++<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk<sp/>=<sp/>(k/4)<sp/>+<sp/>(k%4)*(Ncvec/4);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNINTERLEAVE2(vin[kk*2],<sp/>vin[kk*2+1],<sp/>vout[k*2],<sp/>vout[k*2+1]);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pffft_cplx_finalize(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ncvec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/>dk<sp/>=<sp/>Ncvec/<ref refid="pffft_8c_1a846721193721413578b2d26c223b42cd" kindref="member">SIMD_SZ</ref>;<sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>4x4<sp/>matrix<sp/>blocks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>r0,<sp/>i0,<sp/><ref refid="namespacewaflib_1_1fixpy2_1a721a8f58a4734bba827b4f6d985f98ff" kindref="member">r1</ref>,<sp/><ref refid="convtest_8m_1aec25a56c89da9b37e346ecc7a8fc68e5" kindref="member">i1</ref>,<sp/>r2,<sp/>i2,<sp/>r3,<sp/>i3;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>sr0,<sp/>dr0,<sp/>sr1,<sp/>dr1,<sp/>si0,<sp/>di0,<sp/>si1,<sp/>di1;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/>!=<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>dk;<sp/>++<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>r0<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[8*k+0];<sp/>i0<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[8*k+1];</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>r1<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[8*k+2];<sp/>i1<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[8*k+3];</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>r2<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[8*k+4];<sp/>i2<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[8*k+5];</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>r3<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[8*k+6];<sp/>i3<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[8*k+7];</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>VTRANSPOSE4(r0,r1,r2,r3);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>VTRANSPOSE4(i0,i1,i2,i3);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(r1,i1,e[k*6+0],e[k*6+1]);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(r2,i2,e[k*6+2],e[k*6+3]);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(r3,i3,e[k*6+4],e[k*6+5]);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>sr0<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(r0,r2);<sp/>dr0<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(r0,<sp/>r2);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>sr1<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(r1,r3);<sp/>dr1<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(r1,<sp/>r3);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>si0<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(i0,i2);<sp/>di0<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(i0,<sp/>i2);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>si1<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(i1,i3);<sp/>di1<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(i1,<sp/>i3);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1097"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>transformation<sp/>for<sp/>each<sp/>column<sp/>is:</highlight></codeline>
<codeline lineno="1098"><highlight class="comment"></highlight></codeline>
<codeline lineno="1099"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>[1<sp/><sp/><sp/>1<sp/><sp/><sp/>1<sp/><sp/><sp/>1<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0]<sp/><sp/><sp/>[r0]</highlight></codeline>
<codeline lineno="1100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>[1<sp/><sp/><sp/>0<sp/><sp/>-1<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/>-1<sp/><sp/><sp/>0<sp/><sp/><sp/>1]<sp/><sp/><sp/>[r1]</highlight></codeline>
<codeline lineno="1101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>[1<sp/><sp/>-1<sp/><sp/><sp/>1<sp/><sp/>-1<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0]<sp/><sp/><sp/>[r2]</highlight></codeline>
<codeline lineno="1102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>[1<sp/><sp/><sp/>0<sp/><sp/>-1<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>1<sp/><sp/><sp/>0<sp/><sp/>-1]<sp/><sp/><sp/>[r3]</highlight></codeline>
<codeline lineno="1103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>[0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>1<sp/><sp/><sp/>1<sp/><sp/><sp/>1<sp/><sp/><sp/>1]<sp/>*<sp/>[i0]</highlight></codeline>
<codeline lineno="1104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>[0<sp/><sp/><sp/>1<sp/><sp/><sp/>0<sp/><sp/>-1<sp/><sp/><sp/>1<sp/><sp/><sp/>0<sp/><sp/>-1<sp/><sp/><sp/>0]<sp/><sp/><sp/>[i1]</highlight></codeline>
<codeline lineno="1105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>[0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>1<sp/><sp/>-1<sp/><sp/><sp/>1<sp/><sp/>-1]<sp/><sp/><sp/>[i2]</highlight></codeline>
<codeline lineno="1106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>[0<sp/><sp/>-1<sp/><sp/><sp/>0<sp/><sp/><sp/>1<sp/><sp/><sp/>1<sp/><sp/><sp/>0<sp/><sp/>-1<sp/><sp/><sp/>0]<sp/><sp/><sp/>[i3]</highlight></codeline>
<codeline lineno="1107"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>r0<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(sr0,<sp/>sr1);<sp/>i0<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(si0,<sp/>si1);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>r1<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(dr0,<sp/>di1);<sp/>i1<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(di0,<sp/>dr1);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>r2<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(sr0,<sp/>sr1);<sp/>i2<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(si0,<sp/>si1);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>r3<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(dr0,<sp/>di1);<sp/>i3<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(di0,<sp/>dr1);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/>r0;<sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/>i0;<sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/><ref refid="namespacewaflib_1_1fixpy2_1a721a8f58a4734bba827b4f6d985f98ff" kindref="member">r1</ref>;<sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/><ref refid="convtest_8m_1aec25a56c89da9b37e346ecc7a8fc68e5" kindref="member">i1</ref>;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/>r2;<sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/>i2;<sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/>r3;<sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/>i3;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pffft_cplx_preprocess(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ncvec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/>dk<sp/>=<sp/>Ncvec/<ref refid="pffft_8c_1a846721193721413578b2d26c223b42cd" kindref="member">SIMD_SZ</ref>;<sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>4x4<sp/>matrix<sp/>blocks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>r0,<sp/>i0,<sp/><ref refid="namespacewaflib_1_1fixpy2_1a721a8f58a4734bba827b4f6d985f98ff" kindref="member">r1</ref>,<sp/><ref refid="convtest_8m_1aec25a56c89da9b37e346ecc7a8fc68e5" kindref="member">i1</ref>,<sp/>r2,<sp/>i2,<sp/>r3,<sp/>i3;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>sr0,<sp/>dr0,<sp/>sr1,<sp/>dr1,<sp/>si0,<sp/>di0,<sp/>si1,<sp/>di1;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/>!=<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>dk;<sp/>++<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>r0<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[8*k+0];<sp/>i0<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[8*k+1];</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>r1<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[8*k+2];<sp/>i1<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[8*k+3];</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>r2<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[8*k+4];<sp/>i2<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[8*k+5];</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>r3<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[8*k+6];<sp/>i3<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[8*k+7];</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>sr0<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(r0,r2);<sp/>dr0<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(r0,<sp/>r2);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>sr1<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(r1,r3);<sp/>dr1<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(r1,<sp/>r3);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>si0<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(i0,i2);<sp/>di0<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(i0,<sp/>i2);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/>si1<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(i1,i3);<sp/>di1<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(i1,<sp/>i3);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>r0<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(sr0,<sp/>sr1);<sp/>i0<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(si0,<sp/>si1);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>r1<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(dr0,<sp/>di1);<sp/>i1<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(di0,<sp/>dr1);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>r2<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(sr0,<sp/>sr1);<sp/>i2<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(si0,<sp/>si1);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>r3<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(dr0,<sp/>di1);<sp/>i3<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(di0,<sp/>dr1);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1ad63f2a81495a70ecb612fb189dd527a3" kindref="member">VCPLXMULCONJ</ref>(r1,i1,e[k*6+0],e[k*6+1]);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1ad63f2a81495a70ecb612fb189dd527a3" kindref="member">VCPLXMULCONJ</ref>(r2,i2,e[k*6+2],e[k*6+3]);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1ad63f2a81495a70ecb612fb189dd527a3" kindref="member">VCPLXMULCONJ</ref>(r3,i3,e[k*6+4],e[k*6+5]);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>VTRANSPOSE4(r0,r1,r2,r3);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>VTRANSPOSE4(i0,i1,i2,i3);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/>r0;<sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/>i0;<sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/><ref refid="namespacewaflib_1_1fixpy2_1a721a8f58a4734bba827b4f6d985f98ff" kindref="member">r1</ref>;<sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/><ref refid="convtest_8m_1aec25a56c89da9b37e346ecc7a8fc68e5" kindref="member">i1</ref>;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/>r2;<sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/>i2;<sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/>r3;<sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/>i3;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ALWAYS_INLINE(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>pffft_real_finalize_4x4(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*in0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*in1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>r0,<sp/>i0,<sp/><ref refid="namespacewaflib_1_1fixpy2_1a721a8f58a4734bba827b4f6d985f98ff" kindref="member">r1</ref>,<sp/><ref refid="convtest_8m_1aec25a56c89da9b37e346ecc7a8fc68e5" kindref="member">i1</ref>,<sp/>r2,<sp/>i2,<sp/>r3,<sp/>i3;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>sr0,<sp/>dr0,<sp/>sr1,<sp/>dr1,<sp/>si0,<sp/>di0,<sp/>si1,<sp/>di1;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/>r0<sp/>=<sp/>*in0;<sp/>i0<sp/>=<sp/>*in1;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/>r1<sp/>=<sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>++;<sp/>i1<sp/>=<sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>++;<sp/>r2<sp/>=<sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>++;<sp/>i2<sp/>=<sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>++;<sp/>r3<sp/>=<sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>++;<sp/>i3<sp/>=<sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>++;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/>VTRANSPOSE4(r0,r1,r2,r3);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/>VTRANSPOSE4(i0,i1,i2,i3);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1163"><highlight class="comment"><sp/><sp/><sp/><sp/>transformation<sp/>for<sp/>each<sp/>column<sp/>is:</highlight></codeline>
<codeline lineno="1164"><highlight class="comment"></highlight></codeline>
<codeline lineno="1165"><highlight class="comment"><sp/><sp/><sp/><sp/>[1<sp/><sp/><sp/>1<sp/><sp/><sp/>1<sp/><sp/><sp/>1<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0]<sp/><sp/><sp/>[r0]</highlight></codeline>
<codeline lineno="1166"><highlight class="comment"><sp/><sp/><sp/><sp/>[1<sp/><sp/><sp/>0<sp/><sp/>-1<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/>-1<sp/><sp/><sp/>0<sp/><sp/><sp/>1]<sp/><sp/><sp/>[r1]</highlight></codeline>
<codeline lineno="1167"><highlight class="comment"><sp/><sp/><sp/><sp/>[1<sp/><sp/><sp/>0<sp/><sp/>-1<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>1<sp/><sp/><sp/>0<sp/><sp/>-1]<sp/><sp/><sp/>[r2]</highlight></codeline>
<codeline lineno="1168"><highlight class="comment"><sp/><sp/><sp/><sp/>[1<sp/><sp/>-1<sp/><sp/><sp/>1<sp/><sp/>-1<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0]<sp/><sp/><sp/>[r3]</highlight></codeline>
<codeline lineno="1169"><highlight class="comment"><sp/><sp/><sp/><sp/>[0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>1<sp/><sp/><sp/>1<sp/><sp/><sp/>1<sp/><sp/><sp/>1]<sp/>*<sp/>[i0]</highlight></codeline>
<codeline lineno="1170"><highlight class="comment"><sp/><sp/><sp/><sp/>[0<sp/><sp/>-1<sp/><sp/><sp/>0<sp/><sp/><sp/>1<sp/><sp/>-1<sp/><sp/><sp/>0<sp/><sp/><sp/>1<sp/><sp/><sp/>0]<sp/><sp/><sp/>[i1]</highlight></codeline>
<codeline lineno="1171"><highlight class="comment"><sp/><sp/><sp/><sp/>[0<sp/><sp/>-1<sp/><sp/><sp/>0<sp/><sp/><sp/>1<sp/><sp/><sp/>1<sp/><sp/><sp/>0<sp/><sp/>-1<sp/><sp/><sp/>0]<sp/><sp/><sp/>[i2]</highlight></codeline>
<codeline lineno="1172"><highlight class="comment"><sp/><sp/><sp/><sp/>[0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/>-1<sp/><sp/><sp/>1<sp/><sp/>-1<sp/><sp/><sp/>1]<sp/><sp/><sp/>[i3]</highlight></codeline>
<codeline lineno="1173"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*cerr<sp/>&lt;&lt;<sp/>&quot;matrix<sp/>initial,<sp/>before<sp/>e<sp/>,<sp/>REAL:\n<sp/>1:<sp/>&quot;<sp/>&lt;&lt;<sp/>r0<sp/>&lt;&lt;<sp/>&quot;\n<sp/>1:<sp/>&quot;<sp/>&lt;&lt;<sp/>r1<sp/>&lt;&lt;<sp/>&quot;\n<sp/>1:<sp/>&quot;<sp/>&lt;&lt;<sp/>r2<sp/>&lt;&lt;<sp/>&quot;\n<sp/>1:<sp/>&quot;<sp/>&lt;&lt;<sp/>r3<sp/>&lt;&lt;<sp/>&quot;\n&quot;;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*cerr<sp/>&lt;&lt;<sp/>&quot;matrix<sp/>initial,<sp/>before<sp/>e,<sp/>IMAG<sp/>:\n<sp/>1:<sp/>&quot;<sp/>&lt;&lt;<sp/>i0<sp/>&lt;&lt;<sp/>&quot;\n<sp/>1:<sp/>&quot;<sp/>&lt;&lt;<sp/>i1<sp/>&lt;&lt;<sp/>&quot;\n<sp/>1:<sp/>&quot;<sp/>&lt;&lt;<sp/>i2<sp/>&lt;&lt;<sp/>&quot;\n<sp/>1:<sp/>&quot;<sp/>&lt;&lt;<sp/>i3<sp/>&lt;&lt;<sp/>&quot;\n&quot;;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(r1,i1,<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>[0],<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>[1]);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(r2,i2,<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>[2],<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>[3]);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(r3,i3,<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>[4],<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>[5]);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*cerr<sp/>&lt;&lt;<sp/>&quot;matrix<sp/>initial,<sp/>real<sp/>part:\n<sp/>1:<sp/>&quot;<sp/>&lt;&lt;<sp/>r0<sp/>&lt;&lt;<sp/>&quot;\n<sp/>1:<sp/>&quot;<sp/>&lt;&lt;<sp/>r1<sp/>&lt;&lt;<sp/>&quot;\n<sp/>1:<sp/>&quot;<sp/>&lt;&lt;<sp/>r2<sp/>&lt;&lt;<sp/>&quot;\n<sp/>1:<sp/>&quot;<sp/>&lt;&lt;<sp/>r3<sp/>&lt;&lt;<sp/>&quot;\n&quot;;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*cerr<sp/>&lt;&lt;<sp/>&quot;matrix<sp/>initial,<sp/>imag<sp/>part:\n<sp/>1:<sp/>&quot;<sp/>&lt;&lt;<sp/>i0<sp/>&lt;&lt;<sp/>&quot;\n<sp/>1:<sp/>&quot;<sp/>&lt;&lt;<sp/>i1<sp/>&lt;&lt;<sp/>&quot;\n<sp/>1:<sp/>&quot;<sp/>&lt;&lt;<sp/>i2<sp/>&lt;&lt;<sp/>&quot;\n<sp/>1:<sp/>&quot;<sp/>&lt;&lt;<sp/>i3<sp/>&lt;&lt;<sp/>&quot;\n&quot;;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/>sr0<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(r0,r2);<sp/>dr0<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(r0,r2);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/>sr1<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(r1,r3);<sp/>dr1<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(r3,r1);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/>si0<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(i0,i2);<sp/>di0<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(i0,i2);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/>si1<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(i1,i3);<sp/>di1<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(i3,i1);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/>r0<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(sr0,<sp/>sr1);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/>r3<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(sr0,<sp/>sr1);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/>i0<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(si0,<sp/>si1);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>i3<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(si1,<sp/>si0);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/>r1<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(dr0,<sp/>di1);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>r2<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(dr0,<sp/>di1);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/>i1<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(dr1,<sp/>di0);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/>i2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(dr1,<sp/>di0);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/>*out++<sp/>=<sp/>r0;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/>*out++<sp/>=<sp/>i0;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/>*out++<sp/>=<sp/><ref refid="namespacewaflib_1_1fixpy2_1a721a8f58a4734bba827b4f6d985f98ff" kindref="member">r1</ref>;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/>*out++<sp/>=<sp/><ref refid="convtest_8m_1aec25a56c89da9b37e346ecc7a8fc68e5" kindref="member">i1</ref>;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/>*out++<sp/>=<sp/>r2;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/>*out++<sp/>=<sp/>i2;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/>*out++<sp/>=<sp/>r3;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/>*out++<sp/>=<sp/>i3;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>NEVER_INLINE(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>pffft_real_finalize(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ncvec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/>dk<sp/>=<sp/>Ncvec/<ref refid="pffft_8c_1a846721193721413578b2d26c223b42cd" kindref="member">SIMD_SZ</ref>;<sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>4x4<sp/>matrix<sp/>blocks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>fftpack<sp/>order<sp/>is<sp/>f0r<sp/>f1r<sp/>f1i<sp/>f2r<sp/>f2i<sp/>...<sp/>f(n-1)r<sp/>f(n-1)i<sp/>f(n)r<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/>v4sf_union<sp/>cr,<sp/>ci,<sp/>*uout<sp/>=<sp/>(v4sf_union*)<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>save<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[7],<sp/>zero=<ref refid="pffft_8c_1ae65c737e16e4d79390822edf1d118656" kindref="member">VZERO</ref>();</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xr0,<sp/>xi0,<sp/>xr1,<sp/>xi1,<sp/>xr2,<sp/>xi2,<sp/>xr3,<sp/>xi3;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>(float)(<ref refid="mathematics_8h_1a66b3ab30f1332874326ed93969e496e0" kindref="member">M_SQRT2</ref>/2);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/>cr.v<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[0];<sp/>ci.v<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[Ncvec*2-1];</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/>!=<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/>pffft_real_finalize_4x4(&amp;zero,<sp/>&amp;zero,<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>+1,<sp/>e,<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1224"><highlight class="comment"><sp/><sp/><sp/><sp/>[cr0<sp/>cr1<sp/>cr2<sp/>cr3<sp/>ci0<sp/>ci1<sp/>ci2<sp/>ci3]</highlight></codeline>
<codeline lineno="1225"><highlight class="comment"></highlight></codeline>
<codeline lineno="1226"><highlight class="comment"><sp/><sp/><sp/><sp/>[Xr(1)]<sp/><sp/>]<sp/>[1<sp/><sp/><sp/>1<sp/><sp/><sp/>1<sp/><sp/><sp/>1<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0]</highlight></codeline>
<codeline lineno="1227"><highlight class="comment"><sp/><sp/><sp/><sp/>[Xr(N/4)<sp/>]<sp/>[0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>1<sp/><sp/><sp/>s<sp/><sp/><sp/>0<sp/><sp/>-s]</highlight></codeline>
<codeline lineno="1228"><highlight class="comment"><sp/><sp/><sp/><sp/>[Xr(N/2)<sp/>]<sp/>[1<sp/><sp/><sp/>0<sp/><sp/>-1<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0]</highlight></codeline>
<codeline lineno="1229"><highlight class="comment"><sp/><sp/><sp/><sp/>[Xr(3N/4)]<sp/>[0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>1<sp/><sp/>-s<sp/><sp/><sp/>0<sp/><sp/><sp/>s]</highlight></codeline>
<codeline lineno="1230"><highlight class="comment"><sp/><sp/><sp/><sp/>[Xi(1)<sp/><sp/><sp/>]<sp/>[1<sp/><sp/>-1<sp/><sp/><sp/>1<sp/><sp/>-1<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0]</highlight></codeline>
<codeline lineno="1231"><highlight class="comment"><sp/><sp/><sp/><sp/>[Xi(N/4)<sp/>]<sp/>[0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/>-s<sp/><sp/>-1<sp/><sp/>-s]</highlight></codeline>
<codeline lineno="1232"><highlight class="comment"><sp/><sp/><sp/><sp/>[Xi(N/2)<sp/>]<sp/>[0<sp/><sp/>-1<sp/><sp/><sp/>0<sp/><sp/><sp/>1<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0]</highlight></codeline>
<codeline lineno="1233"><highlight class="comment"><sp/><sp/><sp/><sp/>[Xi(3N/4)]<sp/>[0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/>-s<sp/><sp/><sp/>1<sp/><sp/>-s]</highlight></codeline>
<codeline lineno="1234"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/>xr0=(cr.f[0]+cr.f[2])<sp/>+<sp/>(cr.f[1]+cr.f[3]);<sp/>uout[0].f[0]<sp/>=<sp/>xr0;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/>xi0=(cr.f[0]+cr.f[2])<sp/>-<sp/>(cr.f[1]+cr.f[3]);<sp/>uout[1].f[0]<sp/>=<sp/>xi0;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/>xr2=(cr.f[0]-cr.f[2]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uout[4].f[0]<sp/>=<sp/>xr2;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/>xi2=(cr.f[3]-cr.f[1]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uout[5].f[0]<sp/>=<sp/>xi2;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/>xr1=<sp/>ci.f[0]<sp/>+<sp/>s*(ci.f[1]-ci.f[3]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uout[2].f[0]<sp/>=<sp/>xr1;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/>xi1=-ci.f[2]<sp/>-<sp/>s*(ci.f[1]+ci.f[3]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uout[3].f[0]<sp/>=<sp/>xi1;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/>xr3=<sp/>ci.f[0]<sp/>-<sp/>s*(ci.f[1]-ci.f[3]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uout[6].f[0]<sp/>=<sp/>xr3;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/>xi3=<sp/>ci.f[2]<sp/>-<sp/>s*(ci.f[1]+ci.f[3]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uout[7].f[0]<sp/>=<sp/>xi3;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=1;<sp/>k<sp/>&lt;<sp/>dk;<sp/>++<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>save_next<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[8*k+7];</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>pffft_real_finalize_4x4(&amp;save,<sp/>&amp;<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[8*k+0],<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/>+<sp/>8*k+1,</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>+<sp/>k*6,<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref><sp/>+<sp/>k*8);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>save<sp/>=<sp/>save_next;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ALWAYS_INLINE(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>pffft_real_preprocess_4x4(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first)<sp/>{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>r0=<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[0],<sp/>i0=<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[1],<sp/><ref refid="namespacewaflib_1_1fixpy2_1a721a8f58a4734bba827b4f6d985f98ff" kindref="member">r1</ref>=<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[2],<sp/><ref refid="convtest_8m_1aec25a56c89da9b37e346ecc7a8fc68e5" kindref="member">i1</ref>=<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[3],<sp/>r2=<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[4],<sp/>i2=<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[5],<sp/>r3=<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[6],<sp/>i3=<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[7];</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1258"><highlight class="comment"><sp/><sp/><sp/><sp/>transformation<sp/>for<sp/>each<sp/>column<sp/>is:</highlight></codeline>
<codeline lineno="1259"><highlight class="comment"></highlight></codeline>
<codeline lineno="1260"><highlight class="comment"><sp/><sp/><sp/><sp/>[1<sp/><sp/><sp/>1<sp/><sp/><sp/>1<sp/><sp/><sp/>1<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0]<sp/><sp/><sp/>[r0]</highlight></codeline>
<codeline lineno="1261"><highlight class="comment"><sp/><sp/><sp/><sp/>[1<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/>-1<sp/><sp/><sp/>0<sp/><sp/>-1<sp/><sp/>-1<sp/><sp/><sp/>0]<sp/><sp/><sp/>[r1]</highlight></codeline>
<codeline lineno="1262"><highlight class="comment"><sp/><sp/><sp/><sp/>[1<sp/><sp/>-1<sp/><sp/>-1<sp/><sp/><sp/>1<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0]<sp/><sp/><sp/>[r2]</highlight></codeline>
<codeline lineno="1263"><highlight class="comment"><sp/><sp/><sp/><sp/>[1<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/>-1<sp/><sp/><sp/>0<sp/><sp/><sp/>1<sp/><sp/><sp/>1<sp/><sp/><sp/>0]<sp/><sp/><sp/>[r3]</highlight></codeline>
<codeline lineno="1264"><highlight class="comment"><sp/><sp/><sp/><sp/>[0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>1<sp/><sp/>-1<sp/><sp/><sp/>1<sp/><sp/>-1]<sp/>*<sp/>[i0]</highlight></codeline>
<codeline lineno="1265"><highlight class="comment"><sp/><sp/><sp/><sp/>[0<sp/><sp/>-1<sp/><sp/><sp/>1<sp/><sp/><sp/>0<sp/><sp/><sp/>1<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>1]<sp/><sp/><sp/>[i1]</highlight></codeline>
<codeline lineno="1266"><highlight class="comment"><sp/><sp/><sp/><sp/>[0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>1<sp/><sp/><sp/>1<sp/><sp/>-1<sp/><sp/>-1]<sp/><sp/><sp/>[i2]</highlight></codeline>
<codeline lineno="1267"><highlight class="comment"><sp/><sp/><sp/><sp/>[0<sp/><sp/><sp/>1<sp/><sp/>-1<sp/><sp/><sp/>0<sp/><sp/><sp/>1<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>1]<sp/><sp/><sp/>[i3]</highlight></codeline>
<codeline lineno="1268"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>sr0<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(r0,r3),<sp/>dr0<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(r0,r3);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>sr1<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(r1,r2),<sp/>dr1<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(r1,r2);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>si0<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(i0,i3),<sp/>di0<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(i0,i3);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>si1<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(i1,i2),<sp/>di1<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(i1,i2);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/>r0<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(sr0,<sp/>sr1);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/>r2<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(sr0,<sp/>sr1);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/>r1<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(dr0,<sp/>si1);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/>r3<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(dr0,<sp/>si1);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/>i0<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(di0,<sp/>di1);</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/>i2<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(di0,<sp/>di1);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/>i1<sp/>=<sp/><ref refid="pffft_8c_1aa718c9ed99018c9ef37ddaa8cfb1f697" kindref="member">VSUB</ref>(si0,<sp/>dr1);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/>i3<sp/>=<sp/><ref refid="pffft_8c_1a5ba194f0c52d11f771f155b1a7740d56" kindref="member">VADD</ref>(si0,<sp/>dr1);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1ad63f2a81495a70ecb612fb189dd527a3" kindref="member">VCPLXMULCONJ</ref>(r1,i1,<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>[0],<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>[1]);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1ad63f2a81495a70ecb612fb189dd527a3" kindref="member">VCPLXMULCONJ</ref>(r2,i2,<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>[2],<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>[3]);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1ad63f2a81495a70ecb612fb189dd527a3" kindref="member">VCPLXMULCONJ</ref>(r3,i3,<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>[4],<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>[5]);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/>VTRANSPOSE4(r0,r1,r2,r3);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/>VTRANSPOSE4(i0,i1,i2,i3);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!first)<sp/>{</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/>r0;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/>i0;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/><ref refid="namespacewaflib_1_1fixpy2_1a721a8f58a4734bba827b4f6d985f98ff" kindref="member">r1</ref>;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/><ref refid="convtest_8m_1aec25a56c89da9b37e346ecc7a8fc68e5" kindref="member">i1</ref>;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/>r2;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/>i2;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/>r3;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>++<sp/>=<sp/>i3;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>NEVER_INLINE(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>pffft_real_preprocess(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ncvec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/>dk<sp/>=<sp/>Ncvec/<ref refid="pffft_8c_1a846721193721413578b2d26c223b42cd" kindref="member">SIMD_SZ</ref>;<sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>4x4<sp/>matrix<sp/>blocks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>fftpack<sp/>order<sp/>is<sp/>f0r<sp/>f1r<sp/>f1i<sp/>f2r<sp/>f2i<sp/>...<sp/>f(n-1)r<sp/>f(n-1)i<sp/>f(n)r<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/>v4sf_union<sp/>Xr,<sp/>Xi,<sp/>*uout<sp/>=<sp/>(v4sf_union*)<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cr0,<sp/>ci0,<sp/>cr1,<sp/>ci1,<sp/>cr2,<sp/>ci2,<sp/>cr3,<sp/>ci3;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>(float)<ref refid="mathematics_8h_1a66b3ab30f1332874326ed93969e496e0" kindref="member">M_SQRT2</ref>;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/>!=<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>4;<sp/>++<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>Xr.f[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>=<sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>)[8*<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/>Xi.f[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>=<sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>)[8*k+4];</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/>pffft_real_preprocess_4x4(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/>e,<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>+1,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>will<sp/>write<sp/>only<sp/>6<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1319"><highlight class="comment"><sp/><sp/><sp/><sp/>[Xr0<sp/>Xr1<sp/>Xr2<sp/>Xr3<sp/>Xi0<sp/>Xi1<sp/>Xi2<sp/>Xi3]</highlight></codeline>
<codeline lineno="1320"><highlight class="comment"></highlight></codeline>
<codeline lineno="1321"><highlight class="comment"><sp/><sp/><sp/><sp/>[cr0]<sp/>[1<sp/><sp/><sp/>0<sp/><sp/><sp/>2<sp/><sp/><sp/>0<sp/><sp/><sp/>1<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0]</highlight></codeline>
<codeline lineno="1322"><highlight class="comment"><sp/><sp/><sp/><sp/>[cr1]<sp/>[1<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/>-1<sp/><sp/><sp/>0<sp/><sp/>-2<sp/><sp/><sp/>0]</highlight></codeline>
<codeline lineno="1323"><highlight class="comment"><sp/><sp/><sp/><sp/>[cr2]<sp/>[1<sp/><sp/><sp/>0<sp/><sp/>-2<sp/><sp/><sp/>0<sp/><sp/><sp/>1<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0]</highlight></codeline>
<codeline lineno="1324"><highlight class="comment"><sp/><sp/><sp/><sp/>[cr3]<sp/>[1<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/>-1<sp/><sp/><sp/>0<sp/><sp/><sp/>2<sp/><sp/><sp/>0]</highlight></codeline>
<codeline lineno="1325"><highlight class="comment"><sp/><sp/><sp/><sp/>[ci0]<sp/>[0<sp/><sp/><sp/>2<sp/><sp/><sp/>0<sp/><sp/><sp/>2<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0]</highlight></codeline>
<codeline lineno="1326"><highlight class="comment"><sp/><sp/><sp/><sp/>[ci1]<sp/>[0<sp/><sp/><sp/>s<sp/><sp/><sp/>0<sp/><sp/>-s<sp/><sp/><sp/>0<sp/><sp/>-s<sp/><sp/><sp/>0<sp/><sp/>-s]</highlight></codeline>
<codeline lineno="1327"><highlight class="comment"><sp/><sp/><sp/><sp/>[ci2]<sp/>[0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/>-2<sp/><sp/><sp/>0<sp/><sp/><sp/>2]</highlight></codeline>
<codeline lineno="1328"><highlight class="comment"><sp/><sp/><sp/><sp/>[ci3]<sp/>[0<sp/><sp/>-s<sp/><sp/><sp/>0<sp/><sp/><sp/>s<sp/><sp/><sp/>0<sp/><sp/>-s<sp/><sp/><sp/>0<sp/><sp/>-s]</highlight></codeline>
<codeline lineno="1329"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=1;<sp/>k<sp/>&lt;<sp/>dk;<sp/>++<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/>pffft_real_preprocess_4x4(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>+8*k,<sp/>e<sp/>+<sp/>k*6,<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>-1+k*8,<sp/>0);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/>cr0=(Xr.f[0]+Xi.f[0])<sp/>+<sp/>2*Xr.f[2];<sp/>uout[0].f[0]<sp/>=<sp/>cr0;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/>cr1=(Xr.f[0]-Xi.f[0])<sp/>-<sp/>2*Xi.f[2];<sp/>uout[0].f[1]<sp/>=<sp/>cr1;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/>cr2=(Xr.f[0]+Xi.f[0])<sp/>-<sp/>2*Xr.f[2];<sp/>uout[0].f[2]<sp/>=<sp/>cr2;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/>cr3=(Xr.f[0]-Xi.f[0])<sp/>+<sp/>2*Xi.f[2];<sp/>uout[0].f[3]<sp/>=<sp/>cr3;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/>ci0=<sp/>2*(Xr.f[1]+Xr.f[3]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uout[2*Ncvec-1].f[0]<sp/>=<sp/>ci0;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/>ci1=<sp/>s*(Xr.f[1]-Xr.f[3])<sp/>-<sp/>s*(Xi.f[1]+Xi.f[3]);<sp/>uout[2*Ncvec-1].f[1]<sp/>=<sp/>ci1;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/>ci2=<sp/>2*(Xi.f[3]-Xi.f[1]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uout[2*Ncvec-1].f[2]<sp/>=<sp/>ci2;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/>ci3=-s*(Xr.f[1]-Xr.f[3])<sp/>-<sp/>s*(Xi.f[1]+Xi.f[3]);<sp/>uout[2*Ncvec-1].f[3]<sp/>=<sp/>ci3;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pffft_transform_internal(<ref refid="struct_p_f_f_f_t___setup" kindref="compound">PFFFT_Setup</ref><sp/>*setup,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*finput,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*foutput,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*scratch,</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8h_1a2e53fece2e9e96e8beeabe770f191f91" kindref="member">pffft_direction_t</ref><sp/>direction,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ordered)<sp/>{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/>Ncvec<sp/><sp/><sp/>=<sp/>setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1abd11f546bae7f16ca052958bf000116d" kindref="member">Ncvec</ref>;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nf_odd<sp/>=<sp/>(setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1a71ab430945d91b2e534e1c6c50a7fbdf" kindref="member">ifac</ref>[1]<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>temporary<sp/>buffer<sp/>is<sp/>allocated<sp/>on<sp/>the<sp/>stack<sp/>if<sp/>the<sp/>scratch<sp/>pointer<sp/>is<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*int<sp/>stack_allocate<sp/>=<sp/>(scratch<sp/>==<sp/>0<sp/>?<sp/>Ncvec*2<sp/>:<sp/>1);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*VLA_ARRAY_ON_STACK(v4sf,<sp/>scratch_on_stack,<sp/>stack_allocate);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib<sp/>=<sp/>(nf_odd<sp/>^<sp/>ordered<sp/>?<sp/>1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*vinput<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)finput;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*voutput<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)foutput;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="midibuff_8h_1a1fe7b489101e4edaac7dfa4ed053a4c6" kindref="member">buff</ref>[2];</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/>buff[0]<sp/>=<sp/>voutput,<sp/>buff[1]<sp/>=<sp/>scratch<sp/></highlight><highlight class="comment">/*?<sp/>scratch<sp/>:<sp/>scratch_on_stack*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*if<sp/>(scratch<sp/>==<sp/>0)<sp/>scratch<sp/>=<sp/>scratch_on_stack;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<ref refid="pffft_8c_1a717b8f27ff2bfe8df7934c7df9f62af7" kindref="member">VALIGNED</ref>(finput)<sp/>&amp;&amp;<sp/><ref refid="pffft_8c_1a717b8f27ff2bfe8df7934c7df9f62af7" kindref="member">VALIGNED</ref>(foutput));</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*assert(finput<sp/>!=<sp/>foutput);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/><ref refid="pffft_8h_1a2e53fece2e9e96e8beeabe770f191f91a5b1276b534d9d8995951d81f61e179bb" kindref="member">PFFFT_FORWARD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>ib<sp/>=<sp/>!ib;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1a980def09ec15883c12689443d97a36b5" kindref="member">transform</ref><sp/>==<sp/><ref refid="pffft_8h_1af5506e26b5d8295b89aa0186261dfef1a0d8b922832bef8ecca106aad8bcd67a8" kindref="member">PFFFT_REAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ib<sp/>=<sp/>(rfftf1_ps(Ncvec*2,<sp/>vinput,<sp/>buff[ib],<sp/>buff[!ib],</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1acda18fead895e0d4e29bcda839bb9ccf" kindref="member">twiddle</ref>,<sp/>&amp;setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1a71ab430945d91b2e534e1c6c50a7fbdf" kindref="member">ifac</ref>[0])<sp/>==<sp/>buff[0]<sp/>?<sp/>0<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pffft_real_finalize(Ncvec,<sp/>buff[ib],<sp/>buff[!ib],<sp/>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1af063d9d895bb58628cd9116079cc72b6" kindref="member">e</ref>);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*tmp<sp/>=<sp/>buff[ib];</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>Ncvec;<sp/>++<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNINTERLEAVE2(vinput[k*2],<sp/>vinput[k*2+1],<sp/>tmp[k*2],<sp/>tmp[k*2+1]);</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ib<sp/>=<sp/>(cfftf1_ps(Ncvec,<sp/>buff[ib],<sp/>buff[!ib],<sp/>buff[ib],</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1acda18fead895e0d4e29bcda839bb9ccf" kindref="member">twiddle</ref>,<sp/>&amp;setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1a71ab430945d91b2e534e1c6c50a7fbdf" kindref="member">ifac</ref>[0],<sp/>-1)<sp/>==<sp/>buff[0]<sp/>?<sp/>0<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pffft_cplx_finalize(Ncvec,<sp/>buff[ib],<sp/>buff[!ib],<sp/>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1af063d9d895bb58628cd9116079cc72b6" kindref="member">e</ref>);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ordered)<sp/>{</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pffft_zreorder(setup,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)buff[!ib],<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)buff[ib],<sp/><ref refid="pffft_8h_1a2e53fece2e9e96e8beeabe770f191f91a5b1276b534d9d8995951d81f61e179bb" kindref="member">PFFFT_FORWARD</ref>);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>ib<sp/>=<sp/>!ib;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vinput<sp/>==<sp/>buff[ib])<sp/>{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ib<sp/>=<sp/>!ib;<sp/></highlight><highlight class="comment">/*<sp/>may<sp/>happen<sp/>when<sp/>finput<sp/>==<sp/>foutput<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ordered)<sp/>{</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pffft_zreorder(setup,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)vinput,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)buff[ib],<sp/><ref refid="pffft_8h_1a2e53fece2e9e96e8beeabe770f191f91a1b2da06526af5dde2d16fa0b36cba46b" kindref="member">PFFFT_BACKWARD</ref>);</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vinput<sp/>=<sp/>buff[ib];<sp/>ib<sp/>=<sp/>!ib;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1a980def09ec15883c12689443d97a36b5" kindref="member">transform</ref><sp/>==<sp/><ref refid="pffft_8h_1af5506e26b5d8295b89aa0186261dfef1a0d8b922832bef8ecca106aad8bcd67a8" kindref="member">PFFFT_REAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pffft_real_preprocess(Ncvec,<sp/>vinput,<sp/>buff[ib],<sp/>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1af063d9d895bb58628cd9116079cc72b6" kindref="member">e</ref>);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ib<sp/>=<sp/>(rfftb1_ps(Ncvec*2,<sp/>buff[ib],<sp/>buff[0],<sp/>buff[1],</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1acda18fead895e0d4e29bcda839bb9ccf" kindref="member">twiddle</ref>,<sp/>&amp;setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1a71ab430945d91b2e534e1c6c50a7fbdf" kindref="member">ifac</ref>[0])<sp/>==<sp/>buff[0]<sp/>?<sp/>0<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pffft_cplx_preprocess(Ncvec,<sp/>vinput,<sp/>buff[ib],<sp/>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1af063d9d895bb58628cd9116079cc72b6" kindref="member">e</ref>);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ib<sp/>=<sp/>(cfftf1_ps(Ncvec,<sp/>buff[ib],<sp/>buff[0],<sp/>buff[1],</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1acda18fead895e0d4e29bcda839bb9ccf" kindref="member">twiddle</ref>,<sp/>&amp;setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1a71ab430945d91b2e534e1c6c50a7fbdf" kindref="member">ifac</ref>[0],<sp/>+1)<sp/>==<sp/>buff[0]<sp/>?<sp/>0<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>Ncvec;<sp/>++<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INTERLEAVE2(buff[ib][k*2],<sp/>buff[ib][k*2+1],<sp/>buff[ib][k*2],<sp/>buff[ib][k*2+1]);</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buff[ib]<sp/>!=<sp/>voutput)<sp/>{</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>extra<sp/>copy<sp/>required<sp/>--<sp/>this<sp/>situation<sp/>should<sp/>only<sp/>happen<sp/>when<sp/>finput<sp/>==<sp/>foutput<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(finput==foutput);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>Ncvec;<sp/>++<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref><sp/>=<sp/>buff[ib][2*<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>],<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>=<sp/>buff[ib][2*k+1];</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>voutput[2*<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>=<sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>;<sp/>voutput[2*k+1]<sp/>=<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/>ib<sp/>=<sp/>!ib;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(buff[ib]<sp/>==<sp/>voutput);</highlight></codeline>
<codeline lineno="1415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pffft_zconvolve_accumulate(<ref refid="struct_p_f_f_f_t___setup" kindref="compound">PFFFT_Setup</ref><sp/>*s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ab,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scaling)<sp/>{</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>Ncvec<sp/>=<sp/>s-&gt;<ref refid="struct_p_f_f_f_t___setup_1abd11f546bae7f16ca052958bf000116d" kindref="member">Ncvec</ref>;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<sp/>RESTRICT<sp/>va<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<sp/>RESTRICT<sp/>vb<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<sp/>RESTRICT<sp/>vab<sp/>=<sp/>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)ab;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__arm__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/>__builtin_prefetch(va);</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/>__builtin_prefetch(vb);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/>__builtin_prefetch(vab);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/>__builtin_prefetch(va+2);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/>__builtin_prefetch(vb+2);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/>__builtin_prefetch(vab+2);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/>__builtin_prefetch(va+4);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/>__builtin_prefetch(vb+4);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/>__builtin_prefetch(vab+4);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/>__builtin_prefetch(va+6);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/>__builtin_prefetch(vb+6);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/>__builtin_prefetch(vab+6);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ar,<sp/>ai,<sp/>br,<sp/>bi,<sp/>abr,<sp/>abi;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>vscal<sp/>=<sp/><ref refid="pffft_8c_1a7b258d80a0163d7981e070c53a2c4558" kindref="member">LD_PS1</ref>(scaling);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<ref refid="pffft_8c_1a717b8f27ff2bfe8df7934c7df9f62af7" kindref="member">VALIGNED</ref>(<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>)<sp/>&amp;&amp;<sp/><ref refid="pffft_8c_1a717b8f27ff2bfe8df7934c7df9f62af7" kindref="member">VALIGNED</ref>(<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>)<sp/>&amp;&amp;<sp/><ref refid="pffft_8c_1a717b8f27ff2bfe8df7934c7df9f62af7" kindref="member">VALIGNED</ref>(ab));</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/>ar<sp/>=<sp/>((v4sf_union*)va)[0].f[0];</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/>ai<sp/>=<sp/>((v4sf_union*)va)[1].f[0];</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/>br<sp/>=<sp/>((v4sf_union*)vb)[0].f[0];</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/>bi<sp/>=<sp/>((v4sf_union*)vb)[1].f[0];</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/>abr<sp/>=<sp/>((v4sf_union*)vab)[0].f[0];</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/>abi<sp/>=<sp/>((v4sf_union*)vab)[1].f[0];</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__arm__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>1<sp/></highlight><highlight class="comment">/*<sp/>inline<sp/>asm<sp/>version<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*a_<sp/>=<sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/>*b_<sp/>=<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>;<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ab_<sp/>=<sp/>ab;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref><sp/>=<sp/>Ncvec;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">asm</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;mov<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r8,<sp/>%2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vdup.f32<sp/><sp/><sp/><sp/>q15,<sp/>%4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;pld<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[%0,#64]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;pld<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[%1,#64]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;pld<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[%2,#64]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;pld<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[%0,#96]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;pld<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[%1,#96]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;pld<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[%2,#96]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vld1.f32<sp/><sp/><sp/><sp/>{q0,q1},<sp/><sp/><sp/>[%0,:128]!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vld1.f32<sp/><sp/><sp/><sp/>{q4,q5},<sp/><sp/><sp/>[%1,:128]!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vld1.f32<sp/><sp/><sp/><sp/>{q2,q3},<sp/><sp/><sp/>[%0,:128]!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vld1.f32<sp/><sp/><sp/><sp/>{q6,q7},<sp/><sp/><sp/>[%1,:128]!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vld1.f32<sp/><sp/><sp/><sp/>{q8,q9},<sp/><sp/><sp/>[r8,:128]!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vmul.f32<sp/><sp/><sp/><sp/>q10,<sp/>q0,<sp/>q4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vmul.f32<sp/><sp/><sp/><sp/>q11,<sp/>q0,<sp/>q5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vmul.f32<sp/><sp/><sp/><sp/>q12,<sp/>q2,<sp/>q6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vmul.f32<sp/><sp/><sp/><sp/>q13,<sp/>q2,<sp/>q7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vmls.f32<sp/><sp/><sp/><sp/>q10,<sp/>q1,<sp/>q5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vmla.f32<sp/><sp/><sp/><sp/>q11,<sp/>q1,<sp/>q4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vld1.f32<sp/><sp/><sp/><sp/>{q0,q1},<sp/>[r8,:128]!<sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vmls.f32<sp/><sp/><sp/><sp/>q12,<sp/>q3,<sp/>q7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vmla.f32<sp/><sp/><sp/><sp/>q13,<sp/>q3,<sp/>q6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vmla.f32<sp/><sp/><sp/><sp/>q8,<sp/>q10,<sp/>q15<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vmla.f32<sp/><sp/><sp/><sp/>q9,<sp/>q11,<sp/>q15<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vmla.f32<sp/><sp/><sp/><sp/>q0,<sp/>q12,<sp/>q15<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vmla.f32<sp/><sp/><sp/><sp/>q1,<sp/>q13,<sp/>q15<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vst1.f32<sp/><sp/><sp/><sp/>{q8,q9},[%2,:128]!<sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vst1.f32<sp/><sp/><sp/><sp/>{q0,q1},[%2,:128]!<sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;subs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%3,<sp/>#2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;bne<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;+r&quot;</highlight><highlight class="normal">(a_),<sp/></highlight><highlight class="stringliteral">&quot;+r&quot;</highlight><highlight class="normal">(b_),<sp/></highlight><highlight class="stringliteral">&quot;+r&quot;</highlight><highlight class="normal">(ab_),<sp/></highlight><highlight class="stringliteral">&quot;+r&quot;</highlight><highlight class="normal">(N)<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">(scaling)<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;r8&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;q0&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;q1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;q2&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;q3&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;q4&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;q5&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;q6&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;q7&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;q8&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;q9&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;q10&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;q11&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;q12&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;q13&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;q15&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>else<sp/></highlight><highlight class="comment">/*<sp/>neon<sp/>instrinsics<sp/>version,<sp/>30%<sp/>slower<sp/>that<sp/>the<sp/>asm<sp/>one<sp/>with<sp/>gcc<sp/>4.6<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>a1r,<sp/>a1i,<sp/>b1r,<sp/>b1i;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>a2r,<sp/>a2i,<sp/>b2r,<sp/>b2i;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>ab1r,<sp/>ab1i,<sp/>ab2r,<sp/>ab2i;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>Ncvec;<sp/>i<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/>__builtin_prefetch(va+8);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/>__builtin_prefetch(va+10);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/>a1r<sp/>=<sp/>*va++;<sp/>a1i<sp/>=<sp/>*va++;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>a2r<sp/>=<sp/>*va++;<sp/>a2i<sp/>=<sp/>*va++;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/>b1r<sp/>=<sp/>*vb++;<sp/>b1i<sp/>=<sp/>*vb++;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/>b2r<sp/>=<sp/>*vb++;<sp/>b2i<sp/>=<sp/>*vb++;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/>ab1r<sp/>=<sp/>vab[0];<sp/>ab1i<sp/>=<sp/>vab[1];</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/>ab2r<sp/>=<sp/>vab[2];<sp/>ab2i<sp/>=<sp/>vab[3];</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>z1r<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(a1r,<sp/>b1r);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>z2r<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(a2r,<sp/>b2r);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>z1i<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(a1r,<sp/>b1i);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>z2i<sp/>=<sp/><ref refid="pffft_8c_1a1b059bdd5e00c04f357920a2caa4ab17" kindref="member">VMUL</ref>(a2r,<sp/>b2i);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/>__builtin_prefetch(vb+4);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/>__builtin_prefetch(vb+6);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/>z1r<sp/>=<sp/>vmlsq_f32(z1r,<sp/>a1i,<sp/>b1i);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/>z2r<sp/>=<sp/>vmlsq_f32(z2r,<sp/>a2i,<sp/>b2i);</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/>z1i<sp/>=<sp/>vmlaq_f32(z1i,<sp/>a1i,<sp/>b1r);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/>z2i<sp/>=<sp/>vmlaq_f32(z2i,<sp/>a2i,<sp/>b2r);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/>__builtin_prefetch(vab+4);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/>__builtin_prefetch(vab+6);</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/>ab1r<sp/>=<sp/>vmlaq_f32(ab1r,<sp/>z1r,<sp/>vscal);</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/>ab2r<sp/>=<sp/>vmlaq_f32(ab2r,<sp/>z2r,<sp/>vscal);</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>ab1i<sp/>=<sp/>vmlaq_f32(ab1i,<sp/>z1i,<sp/>vscal);</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/>ab2i<sp/>=<sp/>vmlaq_f32(ab2i,<sp/>z2i,<sp/>vscal);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/>*vab++<sp/>=<sp/>ab1r;<sp/>*vab++<sp/>=<sp/>ab1i;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/>*vab++<sp/>=<sp/>ab2r;<sp/>*vab++<sp/>=<sp/>ab2i;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>ARM,<sp/>no<sp/>need<sp/>to<sp/>use<sp/>a<sp/>special<sp/>routine<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>Ncvec;<sp/>i<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>ar,<sp/>ai,<sp/>br,<sp/>bi;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/>ar<sp/>=<sp/>va[2*i+0];<sp/>ai<sp/>=<sp/>va[2*i+1];</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/>br<sp/>=<sp/>vb[2*i+0];<sp/>bi<sp/>=<sp/>vb[2*i+1];</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(ar,<sp/>ai,<sp/>br,<sp/>bi);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/>vab[2*i+0]<sp/>=<sp/><ref refid="pffft_8c_1a36c509112d032c08aab512c603ef82be" kindref="member">VMADD</ref>(ar,<sp/>vscal,<sp/>vab[2*i+0]);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/>vab[2*i+1]<sp/>=<sp/><ref refid="pffft_8c_1a36c509112d032c08aab512c603ef82be" kindref="member">VMADD</ref>(ai,<sp/>vscal,<sp/>vab[2*i+1]);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/>ar<sp/>=<sp/>va[2*i+2];<sp/>ai<sp/>=<sp/>va[2*i+3];</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/>br<sp/>=<sp/>vb[2*i+2];<sp/>bi<sp/>=<sp/>vb[2*i+3];</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(ar,<sp/>ai,<sp/>br,<sp/>bi);</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/>vab[2*i+2]<sp/>=<sp/><ref refid="pffft_8c_1a36c509112d032c08aab512c603ef82be" kindref="member">VMADD</ref>(ar,<sp/>vscal,<sp/>vab[2*i+2]);</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/>vab[2*i+3]<sp/>=<sp/><ref refid="pffft_8c_1a36c509112d032c08aab512c603ef82be" kindref="member">VMADD</ref>(ai,<sp/>vscal,<sp/>vab[2*i+3]);</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="struct_p_f_f_f_t___setup_1a980def09ec15883c12689443d97a36b5" kindref="member">transform</ref><sp/>==<sp/><ref refid="pffft_8h_1af5506e26b5d8295b89aa0186261dfef1a0d8b922832bef8ecca106aad8bcd67a8" kindref="member">PFFFT_REAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/>((v4sf_union*)vab)[0].f[0]<sp/>=<sp/>abr<sp/>+<sp/>ar*br*scaling;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/>((v4sf_union*)vab)[1].f[0]<sp/>=<sp/>abi<sp/>+<sp/>ai*bi*scaling;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pffft_zconvolve(<ref refid="struct_p_f_f_f_t___setup" kindref="compound">PFFFT_Setup</ref><sp/>*s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ab)<sp/>{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>Ncvec<sp/>=<sp/>s-&gt;<ref refid="struct_p_f_f_f_t___setup_1abd11f546bae7f16ca052958bf000116d" kindref="member">Ncvec</ref>;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<sp/></highlight><highlight class="comment">/*RESTRICT*/</highlight><highlight class="normal"><sp/>va<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<sp/>RESTRICT<sp/>vb<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<sp/></highlight><highlight class="comment">/*RESTRICT*/</highlight><highlight class="normal"><sp/>vab<sp/>=<sp/>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)ab;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ar,<sp/>ai,<sp/>br,<sp/>bi;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__arm__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight><highlight class="preprocessor">#error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<ref refid="pffft_8c_1a717b8f27ff2bfe8df7934c7df9f62af7" kindref="member">VALIGNED</ref>(<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>)<sp/>&amp;&amp;<sp/><ref refid="pffft_8c_1a717b8f27ff2bfe8df7934c7df9f62af7" kindref="member">VALIGNED</ref>(<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>)<sp/>&amp;&amp;<sp/><ref refid="pffft_8c_1a717b8f27ff2bfe8df7934c7df9f62af7" kindref="member">VALIGNED</ref>(ab));</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/>ar<sp/>=<sp/>((v4sf_union*)va)[0].f[0];</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/>ai<sp/>=<sp/>((v4sf_union*)va)[1].f[0];</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/>br<sp/>=<sp/>((v4sf_union*)vb)[0].f[0];</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/>bi<sp/>=<sp/>((v4sf_union*)vb)[1].f[0];</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>Ncvec;<sp/>i<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>ar,<sp/>ai,<sp/>br,<sp/>bi;</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/>ar<sp/>=<sp/>va[2*i+0];<sp/>ai<sp/>=<sp/>va[2*i+1];</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/>br<sp/>=<sp/>vb[2*i+0];<sp/>bi<sp/>=<sp/>vb[2*i+1];</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(ar,<sp/>ai,<sp/>br,<sp/>bi);</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/>vab[2*i+0]<sp/>=<sp/>ar;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/>vab[2*i+1]<sp/>=<sp/>ai;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/>ar<sp/>=<sp/>va[2*i+2];<sp/>ai<sp/>=<sp/>va[2*i+3];</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/>br<sp/>=<sp/>vb[2*i+2];<sp/>bi<sp/>=<sp/>vb[2*i+3];</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(ar,<sp/>ai,<sp/>br,<sp/>bi);</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/>vab[2*i+2]<sp/>=<sp/>ar;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/>vab[2*i+3]<sp/>=<sp/>ai;</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="struct_p_f_f_f_t___setup_1a980def09ec15883c12689443d97a36b5" kindref="member">transform</ref><sp/>==<sp/><ref refid="pffft_8h_1af5506e26b5d8295b89aa0186261dfef1a0d8b922832bef8ecca106aad8bcd67a8" kindref="member">PFFFT_REAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/>((v4sf_union*)vab)[0].f[0]<sp/>=<sp/>ar*br;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/>((v4sf_union*)vab)[1].f[0]<sp/>=<sp/>ai*bi;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>defined(PFFFT_SIMD_DISABLE)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>standard<sp/>routine<sp/>using<sp/>scalar<sp/>floats,<sp/>without<sp/>SIMD<sp/>stuff.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593" refid="pffft_8c_1aa24b1d9ff30bffebb698183fffa3a5a9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>pffft_zreorder_nosimd<sp/>pffft_zreorder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1aa24b1d9ff30bffebb698183fffa3a5a9" kindref="member">pffft_zreorder_nosimd</ref>(<ref refid="struct_p_f_f_f_t___setup" kindref="compound">PFFFT_Setup</ref><sp/>*setup,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/><ref refid="pffft_8h_1a2e53fece2e9e96e8beeabe770f191f91" kindref="member">pffft_direction_t</ref><sp/>direction)<sp/>{</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref><sp/>=<sp/>setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1a328951e60dcbf47bb9d89946cf67571d" kindref="member">N</ref>;</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1a980def09ec15883c12689443d97a36b5" kindref="member">transform</ref><sp/>==<sp/><ref refid="pffft_8h_1af5506e26b5d8295b89aa0186261dfef1a49bcfbb9d5a46fd48c907c98fe0e9af9" kindref="member">PFFFT_COMPLEX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>2*<ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>;<sp/>++<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>out[k]<sp/>=<sp/>in[k];</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/><ref refid="pffft_8h_1a2e53fece2e9e96e8beeabe770f191f91a5b1276b534d9d8995951d81f61e179bb" kindref="member">PFFFT_FORWARD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_N<sp/>=<sp/>in[N-1];</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=N-1;<sp/>k<sp/>&gt;<sp/>1;<sp/>--<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>out[k]<sp/>=<sp/>in[k-1];</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/>out[0]<sp/>=<sp/>in[0];</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/>out[1]<sp/>=<sp/>x_N;</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_N<sp/>=<sp/>in[1];</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=1;<sp/>k<sp/>&lt;<sp/>N-1;<sp/>++<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>out[k]<sp/>=<sp/>in[k+1];</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/>out[0]<sp/>=<sp/>in[0];</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/>out[N-1]<sp/>=<sp/>x_N;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight></codeline>
<codeline lineno="1613" refid="pffft_8c_1a471a24df0565a6d00f7d0307a269e26e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>pffft_transform_internal_nosimd<sp/>pffft_transform_internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a471a24df0565a6d00f7d0307a269e26e" kindref="member">pffft_transform_internal_nosimd</ref>(<ref refid="struct_p_f_f_f_t___setup" kindref="compound">PFFFT_Setup</ref><sp/>*setup,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*input,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*scratch,</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pffft_8h_1a2e53fece2e9e96e8beeabe770f191f91" kindref="member">pffft_direction_t</ref><sp/>direction,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ordered)<sp/>{</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ncvec<sp/><sp/><sp/>=<sp/>setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1abd11f546bae7f16ca052958bf000116d" kindref="member">Ncvec</ref>;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nf_odd<sp/>=<sp/>(setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1a71ab430945d91b2e534e1c6c50a7fbdf" kindref="member">ifac</ref>[1]<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>temporary<sp/>buffer<sp/>is<sp/>allocated<sp/>on<sp/>the<sp/>stack<sp/>if<sp/>the<sp/>scratch<sp/>pointer<sp/>is<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*int<sp/>stack_allocate<sp/>=<sp/>(scratch<sp/>==<sp/>0<sp/>?<sp/>Ncvec*2<sp/>:<sp/>1);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*VLA_ARRAY_ON_STACK(v4sf,<sp/>scratch_on_stack,<sp/>stack_allocate);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*if<sp/>(scratch<sp/>==<sp/>0)<sp/>scratch<sp/>=<sp/>scratch_on_stack;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="midibuff_8h_1a1fe7b489101e4edaac7dfa4ed053a4c6" kindref="member">buff</ref>[2];</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/>buff[0]<sp/>=<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>,<sp/>buff[1]<sp/>=<sp/>scratch;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1a980def09ec15883c12689443d97a36b5" kindref="member">transform</ref><sp/>==<sp/><ref refid="pffft_8h_1af5506e26b5d8295b89aa0186261dfef1a49bcfbb9d5a46fd48c907c98fe0e9af9" kindref="member">PFFFT_COMPLEX</ref>)<sp/>ordered<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>it<sp/>is<sp/>always<sp/>ordered.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/>ib<sp/>=<sp/>(nf_odd<sp/>^<sp/>ordered<sp/>?<sp/>1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/><ref refid="pffft_8h_1a2e53fece2e9e96e8beeabe770f191f91a5b1276b534d9d8995951d81f61e179bb" kindref="member">PFFFT_FORWARD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1a980def09ec15883c12689443d97a36b5" kindref="member">transform</ref><sp/>==<sp/><ref refid="pffft_8h_1af5506e26b5d8295b89aa0186261dfef1a0d8b922832bef8ecca106aad8bcd67a8" kindref="member">PFFFT_REAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ib<sp/>=<sp/>(rfftf1_ps(Ncvec*2,<sp/>input,<sp/>buff[ib],<sp/>buff[!ib],</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1acda18fead895e0d4e29bcda839bb9ccf" kindref="member">twiddle</ref>,<sp/>&amp;setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1a71ab430945d91b2e534e1c6c50a7fbdf" kindref="member">ifac</ref>[0])<sp/>==<sp/>buff[0]<sp/>?<sp/>0<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ib<sp/>=<sp/>(cfftf1_ps(Ncvec,<sp/>input,<sp/>buff[ib],<sp/>buff[!ib],</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1acda18fead895e0d4e29bcda839bb9ccf" kindref="member">twiddle</ref>,<sp/>&amp;setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1a71ab430945d91b2e534e1c6c50a7fbdf" kindref="member">ifac</ref>[0],<sp/>-1)<sp/>==<sp/>buff[0]<sp/>?<sp/>0<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ordered)<sp/>{</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pffft_zreorder(setup,<sp/>buff[ib],<sp/>buff[!ib],<sp/><ref refid="pffft_8h_1a2e53fece2e9e96e8beeabe770f191f91a5b1276b534d9d8995951d81f61e179bb" kindref="member">PFFFT_FORWARD</ref>);<sp/>ib<sp/>=<sp/>!ib;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input<sp/>==<sp/>buff[ib])<sp/>{</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ib<sp/>=<sp/>!ib;<sp/></highlight><highlight class="comment">/*<sp/>may<sp/>happen<sp/>when<sp/>finput<sp/>==<sp/>foutput<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ordered)<sp/>{</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pffft_zreorder(setup,<sp/>input,<sp/>buff[!ib],<sp/><ref refid="pffft_8h_1a2e53fece2e9e96e8beeabe770f191f91a1b2da06526af5dde2d16fa0b36cba46b" kindref="member">PFFFT_BACKWARD</ref>);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>input<sp/>=<sp/>buff[!ib];</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1a980def09ec15883c12689443d97a36b5" kindref="member">transform</ref><sp/>==<sp/><ref refid="pffft_8h_1af5506e26b5d8295b89aa0186261dfef1a0d8b922832bef8ecca106aad8bcd67a8" kindref="member">PFFFT_REAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ib<sp/>=<sp/>(rfftb1_ps(Ncvec*2,<sp/>input,<sp/>buff[ib],<sp/>buff[!ib],</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1acda18fead895e0d4e29bcda839bb9ccf" kindref="member">twiddle</ref>,<sp/>&amp;setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1a71ab430945d91b2e534e1c6c50a7fbdf" kindref="member">ifac</ref>[0])<sp/>==<sp/>buff[0]<sp/>?<sp/>0<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ib<sp/>=<sp/>(cfftf1_ps(Ncvec,<sp/>input,<sp/>buff[ib],<sp/>buff[!ib],</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1acda18fead895e0d4e29bcda839bb9ccf" kindref="member">twiddle</ref>,<sp/>&amp;setup-&gt;<ref refid="struct_p_f_f_f_t___setup_1a71ab430945d91b2e534e1c6c50a7fbdf" kindref="member">ifac</ref>[0],<sp/>+1)<sp/>==<sp/>buff[0]<sp/>?<sp/>0<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buff[ib]<sp/>!=<sp/>output)<sp/>{</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>extra<sp/>copy<sp/>required<sp/>--<sp/>this<sp/>situation<sp/>should<sp/>happens<sp/>only<sp/>when<sp/>finput<sp/>==<sp/>foutput<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(input==output);</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>Ncvec;<sp/>++<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref><sp/>=<sp/>buff[ib][2*<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>],<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>=<sp/>buff[ib][2*k+1];</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output[2*<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>=<sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>;<sp/>output[2*k+1]<sp/>=<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>;</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/>ib<sp/>=<sp/>!ib;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(buff[ib]<sp/>==<sp/>output);</highlight></codeline>
<codeline lineno="1668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>pffft_zconvolve_accumulate_nosimd<sp/>pffft_zconvolve_accumulate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pffft_zconvolve_accumulate_nosimd(<ref refid="struct_p_f_f_f_t___setup" kindref="compound">PFFFT_Setup</ref><sp/>*s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ab,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scaling)<sp/>{</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>Ncvec<sp/>=<sp/>s-&gt;<ref refid="struct_p_f_f_f_t___setup_1abd11f546bae7f16ca052958bf000116d" kindref="member">Ncvec</ref>;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="struct_p_f_f_f_t___setup_1a980def09ec15883c12689443d97a36b5" kindref="member">transform</ref><sp/>==<sp/><ref refid="pffft_8h_1af5506e26b5d8295b89aa0186261dfef1a0d8b922832bef8ecca106aad8bcd67a8" kindref="member">PFFFT_REAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>take<sp/>care<sp/>of<sp/>the<sp/>fftpack<sp/>ordering<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/>ab[0]<sp/>+=<sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>[0]*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>[0]*scaling;</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/>ab[2*Ncvec-1]<sp/>+=<sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>[2*Ncvec-1]*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>[2*Ncvec-1]*scaling;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/>++ab;<sp/>++<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>;<sp/>++<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>;<sp/>--Ncvec;</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>Ncvec;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ar,<sp/>ai,<sp/>br,<sp/>bi;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/>ar<sp/>=<sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>[2*i+0];<sp/>ai<sp/>=<sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>[2*i+1];</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/>br<sp/>=<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>[2*i+0];<sp/>bi<sp/>=<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>[2*i+1];</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(ar,<sp/>ai,<sp/>br,<sp/>bi);</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/>ab[2*i+0]<sp/>+=<sp/>ar*scaling;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/>ab[2*i+1]<sp/>+=<sp/>ai*scaling;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693" refid="pffft_8c_1a6bd4f36c3cafbf7e2d74a0cd770a245b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>pffft_zconvolve_nosimd<sp/>pffft_zconvolve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pffft_8c_1a6bd4f36c3cafbf7e2d74a0cd770a245b" kindref="member">pffft_zconvolve_nosimd</ref>(<ref refid="struct_p_f_f_f_t___setup" kindref="compound">PFFFT_Setup</ref><sp/>*s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ab)<sp/>{</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>Ncvec<sp/>=<sp/>s-&gt;<ref refid="struct_p_f_f_f_t___setup_1abd11f546bae7f16ca052958bf000116d" kindref="member">Ncvec</ref>;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="struct_p_f_f_f_t___setup_1a980def09ec15883c12689443d97a36b5" kindref="member">transform</ref><sp/>==<sp/><ref refid="pffft_8h_1af5506e26b5d8295b89aa0186261dfef1a0d8b922832bef8ecca106aad8bcd67a8" kindref="member">PFFFT_REAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>take<sp/>care<sp/>of<sp/>the<sp/>fftpack<sp/>ordering<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/>ab[0]<sp/>=<sp/>a[0]*b[0];</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/>ab[2*Ncvec-1]<sp/>=<sp/>a[2*Ncvec-1]*b[2*Ncvec-1];</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/>++ab;<sp/>++<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>;<sp/>++<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>;<sp/>--Ncvec;</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>Ncvec;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ar,<sp/>ai,<sp/>br,<sp/>bi;</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/>ar<sp/>=<sp/>a[2*i+0];<sp/>ai<sp/>=<sp/>a[2*i+1];</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/>br<sp/>=<sp/>b[2*i+0];<sp/>bi<sp/>=<sp/>b[2*i+1];</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pffft_8c_1a693b3e5107191c7ad5bc6b42693631dd" kindref="member">VCPLXMUL</ref>(ar,<sp/>ai,<sp/>br,<sp/>bi);</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/>ab[2*i+0]<sp/>=<sp/>ar;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/>ab[2*i+1]<sp/>=<sp/>ai;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>defined(PFFFT_SIMD_DISABLE)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pffft_transform(<ref refid="struct_p_f_f_f_t___setup" kindref="compound">PFFFT_Setup</ref><sp/>*setup,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*input,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*work,<sp/><ref refid="pffft_8h_1a2e53fece2e9e96e8beeabe770f191f91" kindref="member">pffft_direction_t</ref><sp/>direction)<sp/>{</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/>pffft_transform_internal(setup,<sp/>input,<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>,<sp/>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)work,<sp/>direction,<sp/>0);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pffft_transform_ordered(<ref refid="struct_p_f_f_f_t___setup" kindref="compound">PFFFT_Setup</ref><sp/>*setup,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*input,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*work,<sp/><ref refid="pffft_8h_1a2e53fece2e9e96e8beeabe770f191f91" kindref="member">pffft_direction_t</ref><sp/>direction)<sp/>{</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/>pffft_transform_internal(setup,<sp/>input,<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>,<sp/>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)work,<sp/>direction,<sp/>1);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pffft_reorder_back(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>setup,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>work)</highlight></codeline>
<codeline lineno="1725"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/>memcpy(work,<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*work));</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/>pffft_zreorder(setup,<sp/>work,<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/><ref refid="pffft_8h_1a2e53fece2e9e96e8beeabe770f191f91a1b2da06526af5dde2d16fa0b36cba46b" kindref="member">PFFFT_BACKWARD</ref>);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/pffft.c"/>
  </compounddef>
</doxygen>
