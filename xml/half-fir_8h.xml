<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="half-fir_8h" kind="file" language="C++">
    <compoundname>half-fir.h</compoundname>
    <includedby refid="filters_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/filters.h</includedby>
    <invincdepgraph>
      <node id="21196">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate64.c</label>
        <link refid="rate64_8c"/>
      </node>
      <node id="21193">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h</label>
        <link refid="rate_8h"/>
        <childnode refid="21194" relation="include">
        </childnode>
        <childnode refid="21195" relation="include">
        </childnode>
        <childnode refid="21196" relation="include">
        </childnode>
      </node>
      <node id="21194">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate32.c</label>
        <link refid="rate32_8c"/>
      </node>
      <node id="21195">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate32s.c</label>
        <link refid="rate32s_8c"/>
      </node>
      <node id="21192">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/filters.h</label>
        <link refid="filters_8h"/>
        <childnode refid="21193" relation="include">
        </childnode>
      </node>
      <node id="21191">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/half-fir.h</label>
        <link refid="half-fir.h"/>
        <childnode refid="21192" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="half-fir_8h_1ae4dfd7b0d66121016d6466d2ff10e8ba" prot="public" static="no">
        <name>_</name>
        <initializer>sum += (input[-(2*j +1)] + input[(2*j +1)]) * <ref refid="filters_8h_1a8c9f3dadacc1bbf38acc002e8e9b0e2c" kindref="member">COEFS</ref>[j], ++j;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/half-fir.h" line="7" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/half-fir.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="half-fir_8h_1ab047c921fdcf9359721d725c72526257" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void FUNCTION</definition>
        <argsstring>(stage_t *p, fifo_t *output_fifo)</argsstring>
        <name>FUNCTION</name>
        <param>
          <type><ref refid="structstage__t" kindref="compound">stage_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structfifo__t" kindref="compound">fifo_t</ref> *</type>
          <declname>output_fifo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/half-fir.h" line="8" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/half-fir.h" bodystart="8" bodyend="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>SoX<sp/>Resampler<sp/>Library<sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2007-13<sp/>robs@users.sourceforge.net</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licence<sp/>for<sp/>this<sp/>file:<sp/>LGPL<sp/>v2.1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>See<sp/>LICENCE<sp/>for<sp/>details.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Down-sample<sp/>by<sp/>a<sp/>factor<sp/>of<sp/>2<sp/>using<sp/>a<sp/>FIR<sp/>with<sp/>odd<sp/>length<sp/>(LEN).*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Input<sp/>must<sp/>be<sp/>preceded<sp/>and<sp/>followed<sp/>by<sp/>LEN<sp/>&gt;&gt;<sp/>1<sp/>samples.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="half-fir_8h_1ae4dfd7b0d66121016d6466d2ff10e8ba" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_<sp/>sum<sp/>+=<sp/>(input[-(2*j<sp/>+1)]<sp/>+<sp/>input[(2*j<sp/>+1)])<sp/>*<sp/>COEFS[j],<sp/>++j;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="filters_8h_1aee0cf83ee6d754df700e396da8987f1f" kindref="member">FUNCTION</ref>(<ref refid="structstage__t" kindref="compound">stage_t</ref><sp/>*<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/><ref refid="structfifo__t" kindref="compound">fifo_t</ref><sp/>*<sp/>output_fifo)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>input<sp/>=<sp/><ref refid="rate_8h_1a0252bb6d8119002e67e16d9c8be0f4ac" kindref="member">stage_read_p</ref>(p);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>num_out<sp/>=<sp/>(<ref refid="rate_8h_1a99d1a8c8eef09c8366721929b32aab91" kindref="member">stage_occupancy</ref>(p)<sp/>+<sp/>1)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/>*<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref><sp/>=<sp/>fifo_reserve(output_fifo,<sp/>num_out);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_out;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>input<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/>sum<sp/>=<sp/>input[0]<sp/>*<sp/>.5f;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="filters_8h_1aafef2de0ad775042f34be72751d67914" kindref="member">CONVOLVE</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>output[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>sum;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>fifo_read(&amp;p-&gt;<ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>,<sp/>2<sp/>*<sp/>num_out,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>COEFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>CONVOLVE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>FUNCTION</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/half-fir.h"/>
  </compounddef>
</doxygen>
