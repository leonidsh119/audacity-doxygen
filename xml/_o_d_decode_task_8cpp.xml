<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_o_d_decode_task_8cpp" kind="file" language="C++">
    <compoundname>ODDecodeTask.cpp</compoundname>
    <includes refid="_o_d_decode_task_8h" local="yes">ODDecodeTask.h</includes>
    <includes refid="_o_d_decode_block_file_8h" local="yes">../blockfile/ODDecodeBlockFile.h</includes>
    <includes refid="_sequence_8h" local="yes">../Sequence.h</includes>
    <includes refid="_wave_track_8h" local="yes">../WaveTrack.h</includes>
    <includes local="no">wx/wx.h</includes>
    <incdepgraph>
      <node id="49721">
        <label>wx/dir.h</label>
      </node>
      <node id="49730">
        <label>wx/choice.h</label>
      </node>
      <node id="49772">
        <label>WaveClip.h</label>
        <link refid="_wave_clip_8h"/>
        <childnode refid="49689" relation="include">
        </childnode>
        <childnode refid="49699" relation="include">
        </childnode>
        <childnode refid="49754" relation="include">
        </childnode>
        <childnode refid="49687" relation="include">
        </childnode>
        <childnode refid="49694" relation="include">
        </childnode>
        <childnode refid="49703" relation="include">
        </childnode>
        <childnode refid="49773" relation="include">
        </childnode>
        <childnode refid="49771" relation="include">
        </childnode>
        <childnode refid="49753" relation="include">
        </childnode>
        <childnode refid="49705" relation="include">
        </childnode>
        <childnode refid="49774" relation="include">
        </childnode>
        <childnode refid="49685" relation="include">
        </childnode>
      </node>
      <node id="49706">
        <label>wx/hashmap.h</label>
      </node>
      <node id="49758">
        <label>toolbars/SelectionBarListener.h</label>
        <link refid="_selection_bar_listener_8h"/>
      </node>
      <node id="49756">
        <label>wx/gauge.h</label>
      </node>
      <node id="49722">
        <label>wx/event.h</label>
      </node>
      <node id="49692">
        <label>wx/ffile.h</label>
      </node>
      <node id="49745">
        <label>audacity/ModuleInterface.h</label>
        <link refid="_module_interface_8h"/>
        <childnode refid="49701" relation="include">
        </childnode>
        <childnode refid="49737" relation="include">
        </childnode>
        <childnode refid="49746" relation="include">
        </childnode>
      </node>
      <node id="49686">
        <label>ODTask.h</label>
        <link refid="_o_d_task_8h"/>
        <childnode refid="49687" relation="include">
        </childnode>
        <childnode refid="49690" relation="include">
        </childnode>
        <childnode refid="49702" relation="include">
        </childnode>
        <childnode refid="49685" relation="include">
        </childnode>
        <childnode refid="49765" relation="include">
        </childnode>
      </node>
      <node id="49763">
        <label>wx/dcclient.h</label>
      </node>
      <node id="49720">
        <label>wx/cmdline.h</label>
      </node>
      <node id="49683">
        <label>C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODDecodeTask.cpp</label>
        <link refid="ODDecodeTask.cpp"/>
        <childnode refid="49684" relation="include">
        </childnode>
        <childnode refid="49766" relation="include">
        </childnode>
        <childnode refid="49768" relation="include">
        </childnode>
        <childnode refid="49769" relation="include">
        </childnode>
        <childnode refid="49765" relation="include">
        </childnode>
      </node>
      <node id="49736">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="49701" relation="include">
        </childnode>
        <childnode refid="49737" relation="include">
        </childnode>
        <childnode refid="49738" relation="include">
        </childnode>
        <childnode refid="49739" relation="include">
        </childnode>
        <childnode refid="49734" relation="include">
        </childnode>
      </node>
      <node id="49752">
        <label>../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="49697" relation="include">
        </childnode>
        <childnode refid="49691" relation="include">
        </childnode>
        <childnode refid="49753" relation="include">
        </childnode>
      </node>
      <node id="49694">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="49689" relation="include">
        </childnode>
        <childnode refid="49691" relation="include">
        </childnode>
        <childnode refid="49695" relation="include">
        </childnode>
        <childnode refid="49696" relation="include">
        </childnode>
      </node>
      <node id="49712">
        <label>TrackPanelListener.h</label>
        <link refid="_track_panel_listener_8h"/>
      </node>
      <node id="49710">
        <label>wx/wxchar.h</label>
      </node>
      <node id="49762">
        <label>wx/frame.h</label>
      </node>
      <node id="49687">
        <label>ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="49688" relation="include">
        </childnode>
        <childnode refid="49689" relation="include">
        </childnode>
      </node>
      <node id="49738">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="49701" relation="include">
        </childnode>
      </node>
      <node id="49707">
        <label>wx/utils.h</label>
      </node>
      <node id="49755">
        <label>wx/evtloop.h</label>
      </node>
      <node id="49703">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="49700" relation="include">
        </childnode>
      </node>
      <node id="49728">
        <label>wx/timer.h</label>
      </node>
      <node id="49771">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="49708">
        <label>ViewInfo.h</label>
        <link refid="_view_info_8h"/>
        <childnode refid="49685" relation="include">
        </childnode>
        <childnode refid="49709" relation="include">
        </childnode>
      </node>
      <node id="49751">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="49741">
        <label>wx/fileconf.h</label>
      </node>
      <node id="49743">
        <label>map</label>
      </node>
      <node id="49775">
        <label>WaveTrackLocation.h</label>
        <link refid="_wave_track_location_8h"/>
      </node>
      <node id="49746">
        <label>audacity/PluginInterface.h</label>
        <link refid="_plugin_interface_8h"/>
        <childnode refid="49701" relation="include">
        </childnode>
        <childnode refid="49738" relation="include">
        </childnode>
        <childnode refid="49736" relation="include">
        </childnode>
        <childnode refid="49737" relation="include">
        </childnode>
        <childnode refid="49744" relation="include">
        </childnode>
        <childnode refid="49745" relation="include">
        </childnode>
      </node>
      <node id="49773">
        <label>RealFFTf.h</label>
        <link refid="_real_f_f_tf_8h"/>
        <childnode refid="49703" relation="include">
        </childnode>
      </node>
      <node id="49759">
        <label>toolbars/SpectralSelectionBarListener.h</label>
        <link refid="_spectral_selection_bar_listener_8h"/>
        <childnode refid="49689" relation="include">
        </childnode>
      </node>
      <node id="49757">
        <label>wx/stattext.h</label>
      </node>
      <node id="49727">
        <label>wx/socket.h</label>
      </node>
      <node id="49761">
        <label>wx/generic/dragimgg.h</label>
      </node>
      <node id="49737">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="49701" relation="include">
        </childnode>
      </node>
      <node id="49705">
        <label>wx/list.h</label>
      </node>
      <node id="49766">
        <label>../blockfile/ODDecodeBlockFile.h</label>
        <link refid="_o_d_decode_block_file_8h"/>
        <childnode refid="49767" relation="include">
        </childnode>
        <childnode refid="49690" relation="include">
        </childnode>
        <childnode refid="49687" relation="include">
        </childnode>
        <childnode refid="49704" relation="include">
        </childnode>
        <childnode refid="49684" relation="include">
        </childnode>
        <childnode refid="49688" relation="include">
        </childnode>
      </node>
      <node id="49717">
        <label>wx/menu.h</label>
      </node>
      <node id="49700">
        <label>wx/defs.h</label>
      </node>
      <node id="49732">
        <label>wx/window.h</label>
      </node>
      <node id="49724">
        <label>wx/intl.h</label>
      </node>
      <node id="49754">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="49689" relation="include">
        </childnode>
        <childnode refid="49700" relation="include">
        </childnode>
        <childnode refid="49734" relation="include">
        </childnode>
        <childnode refid="49755" relation="include">
        </childnode>
        <childnode refid="49756" relation="include">
        </childnode>
        <childnode refid="49757" relation="include">
        </childnode>
        <childnode refid="49707" relation="include">
        </childnode>
      </node>
      <node id="49684">
        <label>ODDecodeTask.h</label>
        <link refid="_o_d_decode_task_8h"/>
        <childnode refid="49685" relation="include">
        </childnode>
        <childnode refid="49686" relation="include">
        </childnode>
        <childnode refid="49687" relation="include">
        </childnode>
      </node>
      <node id="49749">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="49701">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="49691" relation="include">
        </childnode>
        <childnode refid="49697" relation="include">
        </childnode>
      </node>
      <node id="49690">
        <label>../BlockFile.h</label>
        <link refid="_block_file_8h"/>
        <childnode refid="49691" relation="include">
        </childnode>
        <childnode refid="49692" relation="include">
        </childnode>
        <childnode refid="49693" relation="include">
        </childnode>
        <childnode refid="49694" relation="include">
        </childnode>
        <childnode refid="49696" relation="include">
        </childnode>
        <childnode refid="49699" relation="include">
        </childnode>
      </node>
      <node id="49742">
        <label>../PluginManager.h</label>
        <link refid="_plugin_manager_8h"/>
        <childnode refid="49700" relation="include">
        </childnode>
        <childnode refid="49698" relation="include">
        </childnode>
        <childnode refid="49741" relation="include">
        </childnode>
        <childnode refid="49691" relation="include">
        </childnode>
        <childnode refid="49743" relation="include">
        </childnode>
        <childnode refid="49736" relation="include">
        </childnode>
        <childnode refid="49744" relation="include">
        </childnode>
        <childnode refid="49745" relation="include">
        </childnode>
        <childnode refid="49746" relation="include">
        </childnode>
      </node>
      <node id="49734">
        <label>wx/dialog.h</label>
      </node>
      <node id="49693">
        <label>wx/filename.h</label>
      </node>
      <node id="49733">
        <label>effects/EffectManager.h</label>
        <link refid="_effect_manager_8h"/>
        <childnode refid="49703" relation="include">
        </childnode>
        <childnode refid="49730" relation="include">
        </childnode>
        <childnode refid="49734" relation="include">
        </childnode>
        <childnode refid="49722" relation="include">
        </childnode>
        <childnode refid="49735" relation="include">
        </childnode>
        <childnode refid="49691" relation="include">
        </childnode>
        <childnode refid="49736" relation="include">
        </childnode>
        <childnode refid="49742" relation="include">
        </childnode>
        <childnode refid="49747" relation="include">
        </childnode>
      </node>
      <node id="49768">
        <label>../Sequence.h</label>
        <link refid="_sequence_8h"/>
        <childnode refid="49685" relation="include">
        </childnode>
        <childnode refid="49691" relation="include">
        </childnode>
        <childnode refid="49698" relation="include">
        </childnode>
        <childnode refid="49699" relation="include">
        </childnode>
        <childnode refid="49694" relation="include">
        </childnode>
        <childnode refid="49696" relation="include">
        </childnode>
        <childnode refid="49687" relation="include">
        </childnode>
        <childnode refid="49701" relation="include">
        </childnode>
      </node>
      <node id="49739">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="49740" relation="include">
        </childnode>
        <childnode refid="49720" relation="include">
        </childnode>
        <childnode refid="49741" relation="include">
        </childnode>
        <childnode refid="49724" relation="include">
        </childnode>
      </node>
      <node id="49714">
        <label>commands/CommandManager.h</label>
        <link refid="_command_manager_8h"/>
        <childnode refid="49703" relation="include">
        </childnode>
        <childnode refid="49715" relation="include">
        </childnode>
        <childnode refid="49685" relation="include">
        </childnode>
        <childnode refid="49691" relation="include">
        </childnode>
        <childnode refid="49698" relation="include">
        </childnode>
        <childnode refid="49717" relation="include">
        </childnode>
        <childnode refid="49706" relation="include">
        </childnode>
        <childnode refid="49718" relation="include">
        </childnode>
        <childnode refid="49694" relation="include">
        </childnode>
        <childnode refid="49701" relation="include">
        </childnode>
      </node>
      <node id="49689">
        <label>../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="49731">
        <label>wx/grid.h</label>
      </node>
      <node id="49685">
        <label>vector</label>
      </node>
      <node id="49747">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="49689" relation="include">
        </childnode>
        <childnode refid="49715" relation="include">
        </childnode>
        <childnode refid="49748" relation="include">
        </childnode>
        <childnode refid="49749" relation="include">
        </childnode>
        <childnode refid="49698" relation="include">
        </childnode>
        <childnode refid="49724" relation="include">
        </childnode>
        <childnode refid="49691" relation="include">
        </childnode>
        <childnode refid="49750" relation="include">
        </childnode>
        <childnode refid="49738" relation="include">
        </childnode>
        <childnode refid="49736" relation="include">
        </childnode>
        <childnode refid="49703" relation="include">
        </childnode>
        <childnode refid="49709" relation="include">
        </childnode>
        <childnode refid="49751" relation="include">
        </childnode>
        <childnode refid="49752" relation="include">
        </childnode>
        <childnode refid="49754" relation="include">
        </childnode>
      </node>
      <node id="49698">
        <label>wx/dynarray.h</label>
      </node>
      <node id="49702">
        <label>../Project.h</label>
        <link refid="_project_8h"/>
        <childnode refid="49689" relation="include">
        </childnode>
        <childnode refid="49703" relation="include">
        </childnode>
        <childnode refid="49704" relation="include">
        </childnode>
        <childnode refid="49708" relation="include">
        </childnode>
        <childnode refid="49712" relation="include">
        </childnode>
        <childnode refid="49713" relation="include">
        </childnode>
        <childnode refid="49714" relation="include">
        </childnode>
        <childnode refid="49733" relation="include">
        </childnode>
        <childnode refid="49694" relation="include">
        </childnode>
        <childnode refid="49758" relation="include">
        </childnode>
        <childnode refid="49759" relation="include">
        </childnode>
        <childnode refid="49700" relation="include">
        </childnode>
        <childnode refid="49722" relation="include">
        </childnode>
        <childnode refid="49726" relation="include">
        </childnode>
        <childnode refid="49760" relation="include">
        </childnode>
        <childnode refid="49761" relation="include">
        </childnode>
        <childnode refid="49762" relation="include">
        </childnode>
        <childnode refid="49724" relation="include">
        </childnode>
        <childnode refid="49763" relation="include">
        </childnode>
        <childnode refid="49764" relation="include">
        </childnode>
      </node>
      <node id="49744">
        <label>audacity/ImporterInterface.h</label>
        <link refid="_importer_interface_8h"/>
        <childnode refid="49701" relation="include">
        </childnode>
        <childnode refid="49738" relation="include">
        </childnode>
        <childnode refid="49737" relation="include">
        </childnode>
      </node>
      <node id="49691">
        <label>wx/string.h</label>
      </node>
      <node id="49718">
        <label>../AudacityApp.h</label>
        <link refid="_audacity_app_8h"/>
        <childnode refid="49689" relation="include">
        </childnode>
        <childnode refid="49719" relation="include">
        </childnode>
        <childnode refid="49720" relation="include">
        </childnode>
        <childnode refid="49721" relation="include">
        </childnode>
        <childnode refid="49722" relation="include">
        </childnode>
        <childnode refid="49723" relation="include">
        </childnode>
        <childnode refid="49724" relation="include">
        </childnode>
        <childnode refid="49725" relation="include">
        </childnode>
        <childnode refid="49726" relation="include">
        </childnode>
        <childnode refid="49727" relation="include">
        </childnode>
        <childnode refid="49728" relation="include">
        </childnode>
        <childnode refid="49729" relation="include">
        </childnode>
        <childnode refid="49687" relation="include">
        </childnode>
        <childnode refid="49703" relation="include">
        </childnode>
      </node>
      <node id="49735">
        <label>wx/listbox.h</label>
      </node>
      <node id="49774">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="49726">
        <label>wx/log.h</label>
      </node>
      <node id="49711">
        <label>math.h</label>
      </node>
      <node id="49704">
        <label>DirManager.h</label>
        <link refid="_dir_manager_8h"/>
        <childnode refid="49705" relation="include">
        </childnode>
        <childnode refid="49691" relation="include">
        </childnode>
        <childnode refid="49693" relation="include">
        </childnode>
        <childnode refid="49706" relation="include">
        </childnode>
        <childnode refid="49707" relation="include">
        </childnode>
        <childnode refid="49701" relation="include">
        </childnode>
        <childnode refid="49694" relation="include">
        </childnode>
      </node>
      <node id="49709">
        <label>SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="49689" relation="include">
        </childnode>
        <childnode refid="49703" relation="include">
        </childnode>
        <childnode refid="49700" relation="include">
        </childnode>
        <childnode refid="49710" relation="include">
        </childnode>
        <childnode refid="49711" relation="include">
        </childnode>
      </node>
      <node id="49697">
        <label>wx/arrstr.h</label>
      </node>
      <node id="49765">
        <label>wx/wx.h</label>
      </node>
      <node id="49725">
        <label>wx/snglinst.h</label>
      </node>
      <node id="49770">
        <label>Track.h</label>
        <link refid="src_2track_8h"/>
        <childnode refid="49689" relation="include">
        </childnode>
        <childnode refid="49715" relation="include">
        </childnode>
        <childnode refid="49685" relation="include">
        </childnode>
        <childnode refid="49698" relation="include">
        </childnode>
        <childnode refid="49722" relation="include">
        </childnode>
        <childnode refid="49771" relation="include">
        </childnode>
        <childnode refid="49753" relation="include">
        </childnode>
        <childnode refid="49691" relation="include">
        </childnode>
        <childnode refid="49703" relation="include">
        </childnode>
        <childnode refid="49699" relation="include">
        </childnode>
        <childnode refid="49694" relation="include">
        </childnode>
      </node>
      <node id="49688">
        <label>wx/thread.h</label>
      </node>
      <node id="49760">
        <label>wx/dragimag.h</label>
      </node>
      <node id="49767">
        <label>SimpleBlockFile.h</label>
        <link refid="_simple_block_file_8h"/>
        <childnode refid="49691" relation="include">
        </childnode>
        <childnode refid="49693" relation="include">
        </childnode>
        <childnode refid="49690" relation="include">
        </childnode>
        <childnode refid="49704" relation="include">
        </childnode>
        <childnode refid="49696" relation="include">
        </childnode>
      </node>
      <node id="49750">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="49715">
        <label>../MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="49716" relation="include">
        </childnode>
      </node>
      <node id="49729">
        <label>widgets/FileHistory.h</label>
        <link refid="_file_history_8h"/>
        <childnode refid="49700" relation="include">
        </childnode>
        <childnode refid="49730" relation="include">
        </childnode>
        <childnode refid="49698" relation="include">
        </childnode>
        <childnode refid="49722" relation="include">
        </childnode>
        <childnode refid="49731" relation="include">
        </childnode>
        <childnode refid="49691" relation="include">
        </childnode>
        <childnode refid="49732" relation="include">
        </childnode>
      </node>
      <node id="49748">
        <label>set</label>
      </node>
      <node id="49764">
        <label>Menus.h</label>
        <link refid="_menus_8h"/>
        <childnode refid="49703" relation="include">
        </childnode>
      </node>
      <node id="49719">
        <label>wx/app.h</label>
        <link refid="app_8h"/>
      </node>
      <node id="49753">
        <label>wx/longlong.h</label>
      </node>
      <node id="49769">
        <label>../WaveTrack.h</label>
        <link refid="_wave_track_8h"/>
        <childnode refid="49770" relation="include">
        </childnode>
        <childnode refid="49699" relation="include">
        </childnode>
        <childnode refid="49772" relation="include">
        </childnode>
        <childnode refid="49703" relation="include">
        </childnode>
        <childnode refid="49754" relation="include">
        </childnode>
        <childnode refid="49685" relation="include">
        </childnode>
        <childnode refid="49771" relation="include">
        </childnode>
        <childnode refid="49753" relation="include">
        </childnode>
        <childnode refid="49688" relation="include">
        </childnode>
        <childnode refid="49775" relation="include">
        </childnode>
      </node>
      <node id="49695">
        <label>stdio.h</label>
      </node>
      <node id="49699">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="49689" relation="include">
        </childnode>
        <childnode refid="49700" relation="include">
        </childnode>
        <childnode refid="49701" relation="include">
        </childnode>
      </node>
      <node id="49740">
        <label>locale.h</label>
      </node>
      <node id="49723">
        <label>wx/docview.h</label>
      </node>
      <node id="49716">
        <label>memory</label>
      </node>
      <node id="49696">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="49697" relation="include">
        </childnode>
        <childnode refid="49698" relation="include">
        </childnode>
        <childnode refid="49692" relation="include">
        </childnode>
      </node>
      <node id="49713">
        <label>AudioIOListener.h</label>
        <link refid="_audio_i_o_listener_8h"/>
        <childnode refid="49691" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>ODComputeSummaryTask.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Created<sp/>by<sp/>Michael<sp/>Chinen<sp/>(mchinen)<sp/>on<sp/>8/10/08.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>Audacity(R)<sp/>is<sp/>copyright<sp/>(c)<sp/>1999-2008<sp/>Audacity<sp/>Team.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>License:<sp/>GPL<sp/>v2.<sp/><sp/>See<sp/>License.txt.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_o_d_decode_task_8h" kindref="compound">ODDecodeTask.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../blockfile/ODDecodeBlockFile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Sequence.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../WaveTrack.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/wx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_o_d_decode_task_1a20812a1863dcf92d99d7377b71df88ac" refkind="member"><highlight class="normal"><ref refid="class_o_d_decode_task_1a20812a1863dcf92d99d7377b71df88ac" kindref="member">ODDecodeTask::ODDecodeTask</ref>()</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_task_1a9bbae0e983f08ee5a2185f6309b1c144" kindref="member">mMaxBlockFiles</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_task_1a46c66f8053205cb4791b36d5f692a83e" kindref="member">mComputedBlockFiles</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_o_d_decode_task_1abd86c3f6c6d2b7eb7540dec19cf7830d" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_task_1abd86c3f6c6d2b7eb7540dec19cf7830d" kindref="member">ODDecodeTask::DoSomeInternal</ref>()</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_decode_task_1a920d4e6297a7996e6e5a8529e98167ee" kindref="member">mBlockFiles</ref>.size()&lt;=0)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1add5ff78b44107292569dfdeeb90c8118" kindref="member">mPercentCompleteMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1a81842f8c6d99d72ce3cd215c113a261d" kindref="member">mPercentComplete</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1add5ff78b44107292569dfdeeb90c8118" kindref="member">mPercentCompleteMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file" kindref="compound">ODDecodeBlockFile</ref>*<sp/>bf;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_file_decoder" kindref="compound">ODFileDecoder</ref>*<sp/>decoder;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>blockStartSample<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>blockEndSample<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>.size()<sp/>&amp;&amp;<sp/><ref refid="class_o_d_decode_task_1a920d4e6297a7996e6e5a8529e98167ee" kindref="member">mBlockFiles</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bf<sp/>=<sp/><ref refid="class_o_d_decode_task_1a920d4e6297a7996e6e5a8529e98167ee" kindref="member">mBlockFiles</ref>[0];</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//first<sp/>check<sp/>to<sp/>see<sp/>if<sp/>the<sp/>ref<sp/>count<sp/>is<sp/>at<sp/>least<sp/>2.<sp/><sp/>It<sp/>should<sp/>have<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//from<sp/>when<sp/>we<sp/>added<sp/>it<sp/>to<sp/>this<sp/>instance&apos;s<sp/>mBlockFiles<sp/>array,<sp/>and<sp/>one<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>Wavetrack/sequence.<sp/><sp/>If<sp/>it<sp/>doesn&apos;t<sp/>it<sp/>has<sp/>been<sp/>deleted<sp/>and<sp/>we<sp/>should<sp/>forget<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bf-&gt;RefCount()&gt;=2)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//OD<sp/>TODO:<sp/>somehow<sp/>pass<sp/>the<sp/>bf<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>decoder<sp/>that<sp/>manages<sp/>it&apos;s<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>need<sp/>to<sp/>ensure<sp/>that<sp/>the<sp/>filename<sp/>won&apos;t<sp/>change<sp/>or<sp/>be<sp/>moved.<sp/><sp/>We<sp/>do<sp/>this<sp/>by<sp/>calling<sp/>LockRead(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//which<sp/>the<sp/>dirmanager::EnsureSafeFilename<sp/>also<sp/>does.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bf-&gt;<ref refid="class_o_d_decode_block_file_1abb091b40dda043da3921d1aada4f91d6" kindref="member">LockRead</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>decoder.<sp/><sp/>If<sp/>the<sp/>file<sp/>was<sp/>moved,<sp/>we<sp/>need<sp/>to<sp/>create<sp/>another<sp/>one<sp/>and<sp/>init<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoder=<ref refid="class_o_d_decode_task_1a7298664809e6d58b822fd061fb3fa1f9" kindref="member">GetOrCreateMatchingFileDecoder</ref>(bf);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!decoder-&gt;<ref refid="class_o_d_file_decoder_1a5a57197fd38c5d22e741cca5bb6a8fef" kindref="member">IsInitialized</ref>())</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoder-&gt;<ref refid="class_o_d_file_decoder_1acb8e4e1f02377b860252001d3ecd795b" kindref="member">Init</ref>();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bf-&gt;<ref refid="class_o_d_decode_block_file_1a7304b760adc7613d3cd8435177e865f3" kindref="member">SetODFileDecoder</ref>(decoder);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>bf-&gt;<ref refid="class_o_d_decode_block_file_1a12eb93362481f65a46c22618dc5a0161" kindref="member">DoWriteBlockFile</ref>();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bf-&gt;<ref refid="class_o_d_decode_block_file_1a44f54d9088c6e2a64537e0a68c1a2696" kindref="member">UnlockRead</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockStartSample<sp/>=<sp/>bf-&gt;<ref refid="class_o_d_decode_block_file_1ac47facfa6a17e8db263b7004faea00f7" kindref="member">GetStart</ref>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockEndSample<sp/>=<sp/>blockStartSample<sp/>+<sp/>bf-&gt;<ref refid="class_block_file_1a93fa23bb9606cafba976f2c0b818719c" kindref="member">GetLength</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_decode_task_1a46c66f8053205cb4791b36d5f692a83e" kindref="member">mComputedBlockFiles</ref>++;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>waveform<sp/>in<sp/>the<sp/>wavetrack<sp/>now<sp/>is<sp/>shorter,<sp/>so<sp/>we<sp/>need<sp/>to<sp/>update<sp/>mMaxBlockFiles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//because<sp/>now<sp/>there<sp/>is<sp/>less<sp/>work<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_decode_task_1a9bbae0e983f08ee5a2185f6309b1c144" kindref="member">mMaxBlockFiles</ref>--;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Release<sp/>the<sp/>refcount<sp/>we<sp/>placed<sp/>on<sp/>it<sp/>if<sp/>we<sp/>are<sp/>successful</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>&gt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bf-&gt;Deref();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//take<sp/>it<sp/>out<sp/>of<sp/>the<sp/>array<sp/>-<sp/>we<sp/>are<sp/>done<sp/>with<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_decode_task_1a920d4e6297a7996e6e5a8529e98167ee" kindref="member">mBlockFiles</ref>.erase(<ref refid="class_o_d_decode_task_1a920d4e6297a7996e6e5a8529e98167ee" kindref="member">mBlockFiles</ref>.begin());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//upddate<sp/>the<sp/>gui<sp/>for<sp/>all<sp/>associated<sp/>blocks.<sp/><sp/>It<sp/>doesn&apos;t<sp/>matter<sp/>that<sp/>we&apos;re<sp/>hitting<sp/>more<sp/>wavetracks<sp/>then<sp/>we<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//because<sp/>this<sp/>loop<sp/>runs<sp/>a<sp/>number<sp/>of<sp/>times<sp/>equal<sp/>to<sp/>the<sp/>number<sp/>of<sp/>tracks,<sp/>they<sp/>probably<sp/>are<sp/>getting<sp/>processed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>next<sp/>iteration<sp/>at<sp/>the<sp/>same<sp/>sample<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1ae51c8c57331a0caea29ac0e26a295685" kindref="member">mWaveTrackMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(success<sp/>&amp;&amp;<sp/><ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;AddInvalidRegion(blockStartSample,blockEndSample);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1ae51c8c57331a0caea29ac0e26a295685" kindref="member">mWaveTrackMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//update<sp/>percentage<sp/>complete.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_task_1a686dab2ef1e1d2cc19eed85852fb722a" kindref="member">CalculatePercentComplete</ref>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="class_o_d_decode_task_1a686dab2ef1e1d2cc19eed85852fb722a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_task_1a686dab2ef1e1d2cc19eed85852fb722a" kindref="member">ODDecodeTask::CalculatePercentComplete</ref>()</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1add5ff78b44107292569dfdeeb90c8118" kindref="member">mPercentCompleteMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1a81842f8c6d99d72ce3cd215c113a261d" kindref="member">mPercentComplete</ref><sp/>=<sp/>(float)<sp/>1.0<sp/>-<sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="class_o_d_decode_task_1a920d4e6297a7996e6e5a8529e98167ee" kindref="member">mBlockFiles</ref>.size()<sp/>/<sp/>(<ref refid="class_o_d_decode_task_1a9bbae0e983f08ee5a2185f6309b1c144" kindref="member">mMaxBlockFiles</ref>+1));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1add5ff78b44107292569dfdeeb90c8118" kindref="member">mPercentCompleteMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="class_o_d_decode_task_1aa267d1da349dec91013a660b92d0eae1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_task_1aa267d1da349dec91013a660b92d0eae1" kindref="member">ODDecodeTask::SeekingAllowed</ref>()</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="class_o_d_decode_task_1a1bf85af941ecc998eae165c44cf32c71" kindref="member">mDecoders</ref>.size();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="class_o_d_decode_task_1a1bf85af941ecc998eae165c44cf32c71" kindref="member">mDecoders</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="class_o_d_decode_task_1aa267d1da349dec91013a660b92d0eae1" kindref="member">SeekingAllowed</ref>())</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="class_o_d_decode_task_1a60aad070a6f4fa93b5736865a8b95104" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_task_1a60aad070a6f4fa93b5736865a8b95104" kindref="member">ODDecodeTask::Update</ref>()</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;ODDecodeBlockFile*&gt;<sp/>tempBlocks;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1ae51c8c57331a0caea29ac0e26a295685" kindref="member">mWaveTrackMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j=0;j&lt;<ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>.size();j++)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>[j])</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_array" kindref="compound">BlockArray</ref><sp/>*blocks;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sequence" kindref="compound">Sequence</ref><sp/>*seq;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//gather<sp/>all<sp/>the<sp/>blockfiles<sp/>that<sp/>we<sp/>should<sp/>process<sp/>in<sp/>the<sp/>wavetrack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WaveClipList::compatibility_iterator<sp/><ref refid="structnode" kindref="compound">node</ref><sp/>=<sp/><ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>[j]-&gt;GetClipIterator();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(node)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip<sp/>=<sp/>node-&gt;GetData();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seq<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1abd2e26af620a0406b2c45aca8736bd9a" kindref="member">GetSequence</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:this<sp/>lock<sp/>is<sp/>way<sp/>to<sp/>big<sp/>since<sp/>the<sp/>whole<sp/>file<sp/>is<sp/>one<sp/>sequence.<sp/><sp/>find<sp/>a<sp/>way<sp/>to<sp/>break<sp/>it<sp/>down.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seq-&gt;<ref refid="class_sequence_1ab1d16275a9ceccd1c66a42ae6c99ce0a" kindref="member">LockDeleteUpdateMutex</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//See<sp/>Sequence::Delete()<sp/>for<sp/>why<sp/>need<sp/>this<sp/>for<sp/>now..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blocks<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a229b276264c7a7c1a9684cdbe6a7234c" kindref="member">GetSequenceBlockArray</ref>();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>insertCursor;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insertCursor<sp/>=0;</highlight><highlight class="comment">//OD<sp/>TODO:see<sp/>if<sp/>this<sp/>works,<sp/>removed<sp/>from<sp/>inner<sp/>loop<sp/>(bfore<sp/>was<sp/>n*n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i&lt;(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)blocks-&gt;size();<sp/>i++)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//since<sp/>we<sp/>have<sp/>more<sp/>than<sp/>one<sp/>ODBlockFile,<sp/>we<sp/>will<sp/>need<sp/>type<sp/>flags<sp/>to<sp/>cast.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_seq_block" kindref="compound">SeqBlock</ref><sp/>&amp;<ref refid="structblock" kindref="compound">block</ref><sp/>=<sp/>(*blocks)[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file" kindref="compound">BlockFile</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>file<sp/>=<sp/>block.<ref refid="class_seq_block_1afc9b7e81170d82463b8849815b2cf2a2" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file" kindref="compound">ODDecodeBlockFile</ref><sp/>*oddbFile;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file-&gt;<ref refid="class_block_file_1a8908840cad2f547172b3a2373f9dd347" kindref="member">IsDataAvailable</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(oddbFile<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_o_d_decode_block_file" kindref="compound">ODDecodeBlockFile</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(file))-&gt;GetDecodeType()<sp/>==<sp/>this-&gt;<ref refid="class_o_d_decode_task_1a991951e399aaa8f616a24a3ab3ea650b" kindref="member">GetODType</ref>())</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;Ref();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oddbFile-&gt;<ref refid="class_o_d_decode_block_file_1acab5d1ed0f079c934b69a3caf44631f5" kindref="member">SetStart</ref>(block.<ref refid="class_seq_block_1a38a34e33b7c97b7b2e55163644b9028f" kindref="member">start</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oddbFile-&gt;<ref refid="class_o_d_decode_block_file_1ab1166dee2c082d48aa8d454aa83a4fb7" kindref="member">SetClipOffset</ref>((<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)(clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()*clip-&gt;<ref refid="class_wave_clip_1a04d1806de89e39538576880a8dd43c11" kindref="member">GetRate</ref>()));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//these<sp/>will<sp/>always<sp/>be<sp/>linear<sp/>within<sp/>a<sp/>sequence-lets<sp/>take<sp/>advantage<sp/>of<sp/>this<sp/>by<sp/>keeping<sp/>a<sp/>cursor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(insertCursor&lt;(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)tempBlocks.size()&amp;&amp;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)(tempBlocks[insertCursor]-&gt;GetStart()+tempBlocks[insertCursor]-&gt;GetClipOffset())<sp/>&lt;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)((oddbFile-&gt;<ref refid="class_o_d_decode_block_file_1ac47facfa6a17e8db263b7004faea00f7" kindref="member">GetStart</ref>()+oddbFile-&gt;<ref refid="class_o_d_decode_block_file_1ac27ea9d10ab8005214d16e91a8b43ee4" kindref="member">GetClipOffset</ref>())))</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insertCursor++;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempBlocks.insert(tempBlocks.begin()+insertCursor++,<sp/>oddbFile);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seq-&gt;<ref refid="class_sequence_1a4bc15c6b891b9bc2b8e723853facbbc3" kindref="member">UnlockDeleteUpdateMutex</ref>();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;GetNext();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1ae51c8c57331a0caea29ac0e26a295685" kindref="member">mWaveTrackMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>NEW<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_task_1a334b4d736f7e24f11567f5d10ab9df76" kindref="member">OrderBlockFiles</ref>(tempBlocks);</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="class_o_d_decode_task_1a334b4d736f7e24f11567f5d10ab9df76" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_task_1a334b4d736f7e24f11567f5d10ab9df76" kindref="member">ODDecodeTask::OrderBlockFiles</ref>(std::vector&lt;ODDecodeBlockFile*&gt;<sp/>&amp;unorderedBlocks)</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>are<sp/>going<sp/>to<sp/>take<sp/>things<sp/>out<sp/>of<sp/>the<sp/>array.<sp/><sp/>But<sp/>first<sp/>deref<sp/>them<sp/>since<sp/>we<sp/>ref<sp/>them<sp/>when<sp/>we<sp/>put<sp/>them<sp/>in.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="class_o_d_decode_task_1a920d4e6297a7996e6e5a8529e98167ee" kindref="member">mBlockFiles</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_decode_task_1a920d4e6297a7996e6e5a8529e98167ee" kindref="member">mBlockFiles</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;Deref();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_task_1a920d4e6297a7996e6e5a8529e98167ee" kindref="member">mBlockFiles</ref>.clear();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:order<sp/>the<sp/>blockfiles<sp/>into<sp/>our<sp/>queue<sp/>in<sp/>a<sp/>fancy<sp/>convenient<sp/>way.<sp/><sp/>(this<sp/>could<sp/>be<sp/>user-prefs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>now<sp/>just<sp/>put<sp/>them<sp/>in<sp/>linear.<sp/><sp/>We<sp/>start<sp/>the<sp/>order<sp/>from<sp/>the<sp/>first<sp/>block<sp/>that<sp/>includes<sp/>the<sp/>ondemand<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//(which<sp/>the<sp/>user<sp/>sets<sp/>by<sp/>clicking.)<sp/><sp/><sp/>note<sp/>that<sp/>this<sp/>code<sp/>is<sp/>pretty<sp/>hacky<sp/>-<sp/>it<sp/>assumes<sp/>that<sp/>the<sp/>array<sp/>is<sp/>sorted<sp/>in<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//find<sp/>the<sp/>startpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>processStartSample<sp/>=<sp/><ref refid="class_o_d_task_1ace2d7a68e5f8681025c539000487aa81" kindref="member">GetDemandSample</ref>();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)unorderedBlocks.size())-1;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&gt;=<sp/>0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>--)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>to<sp/>see<sp/>if<sp/>the<sp/>refcount<sp/>is<sp/>at<sp/>least<sp/>two<sp/>before<sp/>we<sp/>add<sp/>it<sp/>to<sp/>the<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//There<sp/>should<sp/>be<sp/>one<sp/>Ref()<sp/>from<sp/>the<sp/>one<sp/>added<sp/>by<sp/>this<sp/>ODTask,<sp/>and<sp/>one<sp/>from<sp/>the<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>there<sp/>isn&apos;t,<sp/>then<sp/>the<sp/>block<sp/>was<sp/>deleted<sp/>for<sp/>some<sp/>reason<sp/>and<sp/>we<sp/>should<sp/>ignore<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(unorderedBlocks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;RefCount()&gt;=2)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//test<sp/>if<sp/>the<sp/>blockfiles<sp/>are<sp/>near<sp/>the<sp/>task<sp/>cursor.<sp/><sp/>we<sp/>use<sp/>the<sp/>last<sp/>mBlockFiles[0]<sp/>as<sp/>our<sp/>point<sp/>of<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>add<sp/>ones<sp/>that<sp/>are<sp/>closer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//since<sp/>the<sp/>order<sp/>is<sp/>linear<sp/>right<sp/>to<sp/>left,<sp/>this<sp/>will<sp/>add<sp/>blocks<sp/>so<sp/>that<sp/>the<sp/>ones<sp/>on<sp/>the<sp/>right<sp/>side<sp/>of<sp/>the<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//are<sp/>processed<sp/>first,<sp/>with<sp/>the<sp/>ones<sp/>closer<sp/>being<sp/>processed<sp/>earlier.<sp/><sp/>Then<sp/>the<sp/>ones<sp/>on<sp/>the<sp/>left<sp/>side<sp/>get<sp/>processed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_decode_task_1a920d4e6297a7996e6e5a8529e98167ee" kindref="member">mBlockFiles</ref>.size()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unorderedBlocks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;GetGlobalEnd()<sp/>&gt;=<sp/>processStartSample<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/><ref refid="class_o_d_decode_task_1a920d4e6297a7996e6e5a8529e98167ee" kindref="member">mBlockFiles</ref>[0]-&gt;GetGlobalEnd()<sp/>&lt;<sp/>processStartSample<sp/>||</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unorderedBlocks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;GetGlobalStart()<sp/>&lt;=<sp/><ref refid="class_o_d_decode_task_1a920d4e6297a7996e6e5a8529e98167ee" kindref="member">mBlockFiles</ref>[0]-&gt;GetGlobalStart())<sp/>)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//insert<sp/>at<sp/>the<sp/>front<sp/>of<sp/>the<sp/>list<sp/>if<sp/>we<sp/>get<sp/>blockfiles<sp/>that<sp/>are<sp/>after<sp/>the<sp/>demand<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_decode_task_1a920d4e6297a7996e6e5a8529e98167ee" kindref="member">mBlockFiles</ref>.insert(<ref refid="class_o_d_decode_task_1a920d4e6297a7996e6e5a8529e98167ee" kindref="member">mBlockFiles</ref>.begin()+0,unorderedBlocks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//otherwise<sp/>no<sp/>priority</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_decode_task_1a920d4e6297a7996e6e5a8529e98167ee" kindref="member">mBlockFiles</ref>.push_back(unorderedBlocks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_decode_task_1a9bbae0e983f08ee5a2185f6309b1c144" kindref="member">mMaxBlockFiles</ref>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="class_o_d_decode_task_1a920d4e6297a7996e6e5a8529e98167ee" kindref="member">mBlockFiles</ref>.size())</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_decode_task_1a9bbae0e983f08ee5a2185f6309b1c144" kindref="member">mMaxBlockFiles</ref><sp/>=<sp/><ref refid="class_o_d_decode_task_1a920d4e6297a7996e6e5a8529e98167ee" kindref="member">mBlockFiles</ref>.size();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Otherwise,<sp/>let<sp/>it<sp/>be<sp/>deleted<sp/>and<sp/>forget<sp/>about<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unorderedBlocks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;Deref();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="class_o_d_decode_task_1ac92bb5ae7050381450df2ca763c3b355" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_task_1ac92bb5ae7050381450df2ca763c3b355" kindref="member">ODDecodeTask::DemandTrackUpdate</ref>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>track,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>seconds)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//only<sp/>update<sp/>if<sp/>the<sp/>subclass<sp/>says<sp/>we<sp/>can<sp/>seek.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_decode_task_1aa267d1da349dec91013a660b92d0eae1" kindref="member">SeekingAllowed</ref>())</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1a6dfeaa8283bb419c3584dd77f642d0d2" kindref="member">ODTask::DemandTrackUpdate</ref>(track,seconds);</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="class_o_d_decode_task_1a7298664809e6d58b822fd061fb3fa1f9" refkind="member"><highlight class="normal"><ref refid="class_o_d_file_decoder" kindref="compound">ODFileDecoder</ref>*<sp/><ref refid="class_o_d_decode_task_1a7298664809e6d58b822fd061fb3fa1f9" kindref="member">ODDecodeTask::GetOrCreateMatchingFileDecoder</ref>(<ref refid="class_o_d_decode_block_file" kindref="compound">ODDecodeBlockFile</ref>*<sp/>blockFile)</highlight></codeline>
<codeline lineno="260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_file_decoder" kindref="compound">ODFileDecoder</ref>*<sp/>ret=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//see<sp/>if<sp/>the<sp/>filename<sp/>matches<sp/>any<sp/>of<sp/>our<sp/>decoders,<sp/>if<sp/>so,<sp/>return<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<ref refid="class_o_d_decode_task_1a1bf85af941ecc998eae165c44cf32c71" kindref="member">mDecoders</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>check<sp/>filename<sp/>and<sp/>decode<sp/>type,<sp/>since<sp/>two<sp/>types<sp/>of<sp/>ODDecoders<sp/>might<sp/>work<sp/>with<sp/>the<sp/>same<sp/>filetype</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//e.g.,<sp/>FFmpeg<sp/>and<sp/>LibMad<sp/>import<sp/>both<sp/>do<sp/>MP3s.<sp/><sp/>TODO:<sp/>is<sp/>this<sp/>necessary?<sp/>in<sp/>theory<sp/>we<sp/>filter<sp/>this<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//updating<sp/>our<sp/>list<sp/>of<sp/>blockfiles.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_decode_task_1a1bf85af941ecc998eae165c44cf32c71" kindref="member">mDecoders</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;GetFileName()==blockFile-&gt;<ref refid="class_o_d_decode_block_file_1a7fd7ae976d74f4e103d78b9eaa9c7c73" kindref="member">GetAudioFileName</ref>().GetFullPath()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_decode_task_1a991951e399aaa8f616a24a3ab3ea650b" kindref="member">GetODType</ref>()<sp/>==<sp/>blockFile-&gt;<ref refid="class_o_d_decode_block_file_1ae3e3b793c7d7371f45b1fb1ebf3aa524" kindref="member">GetDecodeType</ref>()<sp/>)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="class_o_d_decode_task_1a1bf85af941ecc998eae165c44cf32c71" kindref="member">mDecoders</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//otherwise,<sp/>create<sp/>and<sp/>add<sp/>one,<sp/>and<sp/>return<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ret)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret=<ref refid="class_o_d_decode_task_1abf936ebc04e953bb29187042e3497143" kindref="member">CreateFileDecoder</ref>(blockFile-&gt;<ref refid="class_o_d_decode_block_file_1a7fd7ae976d74f4e103d78b9eaa9c7c73" kindref="member">GetAudioFileName</ref>().GetFullPath());</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283" refid="class_o_d_decode_task_1a853aab1dad352c81a4605db804bf5d39" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_task_1a853aab1dad352c81a4605db804bf5d39" kindref="member">ODDecodeTask::GetNumFileDecoders</ref>()</highlight></codeline>
<codeline lineno="284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_task_1a1bf85af941ecc998eae165c44cf32c71" kindref="member">mDecoders</ref>.size();</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="class_o_d_file_decoder_1ad491afa8ad81e9ed8c018338b1991068" refkind="member"><highlight class="normal"><ref refid="class_o_d_file_decoder_1ad491afa8ad81e9ed8c018338b1991068" kindref="member">ODFileDecoder::ODFileDecoder</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>fName)</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/>mFName<sp/>=<sp/>fName;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/>mInited<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="class_o_d_file_decoder_1a106cba2280b68ea6f0743e8d4ab4e773" refkind="member"><highlight class="normal"><ref refid="class_o_d_file_decoder_1a106cba2280b68ea6f0743e8d4ab4e773" kindref="member">ODFileDecoder::~ODFileDecoder</ref>()</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="class_o_d_file_decoder_1a5a57197fd38c5d22e741cca5bb6a8fef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_o_d_file_decoder_1a5a57197fd38c5d22e741cca5bb6a8fef" kindref="member">ODFileDecoder::IsInitialized</ref>()</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/>mInitedLock.Lock();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/>ret<sp/>=<sp/>mInited;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/>mInitedLock.Unlock();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="class_o_d_file_decoder_1aec8c8e8aad7a504278c9e28840c5a306" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_file_decoder_1aec8c8e8aad7a504278c9e28840c5a306" kindref="member">ODFileDecoder::MarkInitialized</ref>()</highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/>mInitedLock.Lock();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/>mInited=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/>mInitedLock.Unlock();</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODDecodeTask.cpp"/>
  </compounddef>
</doxygen>
