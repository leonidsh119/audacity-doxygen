<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_plugin_host_adapter_8cpp" kind="file" language="C++">
    <compoundname>PluginHostAdapter.cpp</compoundname>
    <includes refid="_plugin_host_adapter_8h" local="no">vamp-hostsdk/PluginHostAdapter.h</includes>
    <includes local="no">cstdlib</includes>
    <incdepgraph>
      <node id="21729">
        <label>vamp-sdk/Plugin.h</label>
        <link refid="libvamp_2vamp-sdk_2plugin_8h"/>
        <childnode refid="21730" relation="include">
        </childnode>
        <childnode refid="21731" relation="include">
        </childnode>
        <childnode refid="21732" relation="include">
        </childnode>
        <childnode refid="21733" relation="include">
        </childnode>
        <childnode refid="21735" relation="include">
        </childnode>
        <childnode refid="21734" relation="include">
        </childnode>
      </node>
      <node id="21737">
        <label>vamp/vamp.h</label>
        <link refid="vamp_8h"/>
      </node>
      <node id="21726">
        <label>vamp-hostsdk/PluginHostAdapter.h</label>
        <link refid="_plugin_host_adapter_8h"/>
        <childnode refid="21727" relation="include">
        </childnode>
        <childnode refid="21728" relation="include">
        </childnode>
        <childnode refid="21737" relation="include">
        </childnode>
        <childnode refid="21731" relation="include">
        </childnode>
      </node>
      <node id="21730">
        <label>string</label>
      </node>
      <node id="21732">
        <label>map</label>
      </node>
      <node id="21734">
        <label>plugguard.h</label>
        <link refid="plugguard_8h"/>
      </node>
      <node id="21733">
        <label>PluginBase.h</label>
        <link refid="vamp-sdk_2_plugin_base_8h"/>
        <childnode refid="21730" relation="include">
        </childnode>
        <childnode refid="21731" relation="include">
        </childnode>
        <childnode refid="21734" relation="include">
        </childnode>
      </node>
      <node id="21727">
        <label>hostguard.h</label>
        <link refid="hostguard_8h"/>
      </node>
      <node id="21731">
        <label>vector</label>
      </node>
      <node id="21735">
        <label>RealTime.h</label>
        <link refid="vamp-sdk_2_real_time_8h"/>
        <childnode refid="21736" relation="include">
        </childnode>
        <childnode refid="21730" relation="include">
        </childnode>
        <childnode refid="21734" relation="include">
        </childnode>
      </node>
      <node id="21738">
        <label>cstdlib</label>
      </node>
      <node id="21736">
        <label>iostream</label>
      </node>
      <node id="21725">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/src/vamp-hostsdk/PluginHostAdapter.cpp</label>
        <link refid="PluginHostAdapter.cpp"/>
        <childnode refid="21726" relation="include">
        </childnode>
        <childnode refid="21738" relation="include">
        </childnode>
      </node>
      <node id="21728">
        <label>Plugin.h</label>
        <link refid="libvamp_2vamp-hostsdk_2plugin_8h"/>
        <childnode refid="21727" relation="include">
        </childnode>
        <childnode refid="21729" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_vamp">Vamp</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_plugin_host_adapter_8cpp_1a256a5721249aa3309437212cc21a9fe4" prot="public" static="no">
        <name>PATH_SEPARATOR</name>
        <initializer>&apos;:&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/src/vamp-hostsdk/PluginHostAdapter.cpp" line="80" column="10"/>
      </memberdef>
      <memberdef kind="define" id="_plugin_host_adapter_8cpp_1aa7a9ce1e832e4f26cd5197ed38d4a58d" prot="public" static="no">
        <name>DEFAULT_VAMP_PATH</name>
        <initializer>&quot;$HOME/vamp:$HOME/.vamp:/usr/local/lib/vamp:/usr/lib/vamp&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/src/vamp-hostsdk/PluginHostAdapter.cpp" line="84" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/><sp/>vi:set<sp/>ts=8<sp/>sts=4<sp/>sw=4:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>Vamp</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>An<sp/>API<sp/>for<sp/>audio<sp/>analysis<sp/>and<sp/>feature<sp/>extraction<sp/>plugins.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>Centre<sp/>for<sp/>Digital<sp/>Music,<sp/>Queen<sp/>Mary,<sp/>University<sp/>of<sp/>London.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>Copyright<sp/>2006<sp/>Chris<sp/>Cannam.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/><sp/>Except<sp/>as<sp/>contained<sp/>in<sp/>this<sp/>notice,<sp/>the<sp/>names<sp/>of<sp/>the<sp/>Centre<sp/>for</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/><sp/>Digital<sp/>Music;<sp/>Queen<sp/>Mary,<sp/>University<sp/>of<sp/>London;<sp/>and<sp/>Chris<sp/>Cannam</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/>shall<sp/>not<sp/>be<sp/>used<sp/>in<sp/>advertising<sp/>or<sp/>otherwise<sp/>to<sp/>promote<sp/>the<sp/>sale,</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/><sp/><sp/>use<sp/>or<sp/>other<sp/>dealings<sp/>in<sp/>this<sp/>Software<sp/>without<sp/>prior<sp/>written</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/>authorization.</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_plugin_host_adapter_8h" kindref="compound">vamp-hostsdk/PluginHostAdapter.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(<sp/>VAMP_SDK_MAJOR_VERSION<sp/>!=<sp/>2<sp/>||<sp/>VAMP_SDK_MINOR_VERSION<sp/>!=<sp/>5<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>Unexpected<sp/>version<sp/>of<sp/>Vamp<sp/>SDK<sp/>header<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="hostguard_8h_1aef42eae5f1b0b897d8dac58cd54afbcd" kindref="member">_VAMP_SDK_HOSTSPACE_BEGIN</ref>(PluginHostAdapter.cpp)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">namespace<sp/><ref refid="namespace_vamp" kindref="compound">Vamp</ref></highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_vamp_1_1_plugin_host_adapter_1a6535abd551acfbbaab381bbe1268cd49" refkind="member"><highlight class="normal">PluginHostAdapter::PluginHostAdapter(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct___vamp_plugin_descriptor" kindref="compound">VampPluginDescriptor</ref><sp/>*descriptor,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inputSampleRate)<sp/>:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref>(inputSampleRate),</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>m_descriptor(descriptor)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;PluginHostAdapter::PluginHostAdapter<sp/>(plugin<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>descriptor-&gt;name<sp/>&lt;&lt;<sp/>&quot;)&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1aa5fa3dfd0b85668a658096de5271c305" kindref="member">instantiate</ref>(<ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>,<sp/>inputSampleRate);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;WARNING:<sp/>PluginHostAdapter:<sp/>Plugin<sp/>instantiation<sp/>failed<sp/>for<sp/>plugin<sp/>&quot;<sp/>&lt;&lt;<sp/>m_descriptor-&gt;name<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="class_vamp_1_1_plugin_host_adapter_1ab0f354cb332852ab1892488f6b8e8c0e" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1ab0f354cb332852ab1892488f6b8e8c0e" kindref="member">PluginHostAdapter::~PluginHostAdapter</ref>()</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;PluginHostAdapter::~PluginHostAdapter<sp/>(plugin<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>m_descriptor-&gt;name<sp/>&lt;&lt;<sp/>&quot;)&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>)<sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1a70974d8d28534c006af87c4470d12b69" kindref="member">cleanup</ref>(<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">std::vector&lt;std::string&gt;</highlight></codeline>
<codeline lineno="68" refid="class_vamp_1_1_plugin_host_adapter_1a08d7ed3a11bf4a3c30fa0f9b41a0fed6" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1a08d7ed3a11bf4a3c30fa0f9b41a0fed6" kindref="member">PluginHostAdapter::getPluginPath</ref>()</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref><sp/>envPath;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cpath<sp/>=<sp/><ref refid="getopt_8c_1abc6595dbf6880c71628fecf0dbb23d66" kindref="member">getenv</ref>(</highlight><highlight class="stringliteral">&quot;VAMP_PATH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cpath)<sp/>envPath<sp/>=<sp/>cpath;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PATH_SEPARATOR<sp/>&apos;;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_VAMP_PATH<sp/>&quot;%ProgramFiles%\\Vamp<sp/>Plugins&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PATH_SEPARATOR<sp/>&apos;:&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__APPLE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_VAMP_PATH<sp/>&quot;$HOME/Library/Audio/Plug-Ins/Vamp:/Library/Audio/Plug-Ins/Vamp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_VAMP_PATH<sp/>&quot;$HOME/vamp:$HOME/.vamp:/usr/local/lib/vamp:/usr/lib/vamp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envPath<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envPath<sp/>=<sp/><ref refid="_plugin_host_adapter_8cpp_1aa7a9ce1e832e4f26cd5197ed38d4a58d" kindref="member">DEFAULT_VAMP_PATH</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*chome<sp/>=<sp/><ref refid="getopt_8c_1abc6595dbf6880c71628fecf0dbb23d66" kindref="member">getenv</ref>(</highlight><highlight class="stringliteral">&quot;HOME&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chome)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref><sp/>home(chome);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string::size_type<sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((f<sp/>=<sp/>envPath.find(</highlight><highlight class="stringliteral">&quot;$HOME&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>std::string::npos<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>&lt;<sp/>envPath.length())<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envPath.replace(f,<sp/>5,<sp/>home);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cpfiles<sp/>=<sp/><ref refid="getopt_8c_1abc6595dbf6880c71628fecf0dbb23d66" kindref="member">getenv</ref>(</highlight><highlight class="stringliteral">&quot;ProgramFiles&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cpfiles)<sp/>cpfiles<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;C:\\Program<sp/>Files&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref><sp/>pfiles(cpfiles);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string::size_type<sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((f<sp/>=<sp/>envPath.find(</highlight><highlight class="stringliteral">&quot;%ProgramFiles%&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>std::string::npos<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>&lt;<sp/>envPath.length())<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envPath.replace(f,<sp/>14,<sp/>pfiles);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string::size_type<sp/>index<sp/>=<sp/>0,<sp/>newindex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((newindex<sp/>=<sp/>envPath.find(<ref refid="_plugin_host_adapter_8cpp_1a256a5721249aa3309437212cc21a9fe4" kindref="member">PATH_SEPARATOR</ref>,<sp/>index))<sp/>&lt;<sp/>envPath.size())<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>path.push_back(envPath.substr(index,<sp/>newindex<sp/>-<sp/>index));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>newindex<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>path.push_back(envPath.substr(index));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="class_vamp_1_1_plugin_host_adapter_1add6a2f1ee7e47bd97fa599cead14b738" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1add6a2f1ee7e47bd97fa599cead14b738" kindref="member">PluginHostAdapter::initialise</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>channels,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stepSize,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>blockSize)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1a7c26381e66fc2b1fccbe9a0e5a0ff2be" kindref="member">initialise</ref>(<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>,<sp/>channels,<sp/>stepSize,<sp/>blockSize)<sp/>?</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="class_vamp_1_1_plugin_host_adapter_1a5d54c5bbd76bc27b7a243827148afeaa" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1a5d54c5bbd76bc27b7a243827148afeaa" kindref="member">PluginHostAdapter::reset</ref>()</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;PluginHostAdapter::reset:<sp/>no<sp/>handle&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;PluginHostAdapter::reset(&quot;<sp/>&lt;&lt;<sp/>m_handle<sp/>&lt;&lt;<sp/>&quot;)&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1a0bb0a037c2cb6baf3abac6b03d4a0009" kindref="member">reset</ref>(<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_1a39cb7649d6dcc20e4cb1640cd55907bc" kindref="member">PluginHostAdapter::InputDomain</ref></highlight></codeline>
<codeline lineno="145" refid="class_vamp_1_1_plugin_host_adapter_1a9c5239a4da67f1a426cd059e1a2856eb" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1a9c5239a4da67f1a426cd059e1a2856eb" kindref="member">PluginHostAdapter::getInputDomain</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="146"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1affc4d1796da7ced2c0cbb2cc2c4a22f4" kindref="member">inputDomain</ref><sp/>==<sp/><ref refid="vamp_8h_1ab107386a5f042feddf6446bea23bb765aee0c1c0d429276f071b8c0730b7bd87d" kindref="member">vampFrequencyDomain</ref>)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_1a39cb7649d6dcc20e4cb1640cd55907bcaa30e7877ab33f76acbdca28607e6ab53" kindref="member">FrequencyDomain</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_1a39cb7649d6dcc20e4cb1640cd55907bcad4a9f31b958a43a9757af7893aa2e7ff" kindref="member">TimeDomain</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="class_vamp_1_1_plugin_host_adapter_1a98aadddc8403eb46c9d8c5a9d1fdd19e" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1a98aadddc8403eb46c9d8c5a9d1fdd19e" kindref="member">PluginHostAdapter::getVampApiVersion</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="156"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1ab6c87760e87ddaa9ac3491bccaaa28c2" kindref="member">vampApiVersion</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></highlight></codeline>
<codeline lineno="161" refid="class_vamp_1_1_plugin_host_adapter_1ab27423a656f878d97d2ad2eba4e76c7a" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1ab27423a656f878d97d2ad2eba4e76c7a" kindref="member">PluginHostAdapter::getIdentifier</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="162"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1a4915ec8276749cb505c01d25a6d02219" kindref="member">identifier</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></highlight></codeline>
<codeline lineno="167" refid="class_vamp_1_1_plugin_host_adapter_1a45f1d0377e233eeddd1b7cefb48be62a" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1a45f1d0377e233eeddd1b7cefb48be62a" kindref="member">PluginHostAdapter::getName</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="168"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1a9dd5a0190e4d453ff36b5acb7000b150" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></highlight></codeline>
<codeline lineno="173" refid="class_vamp_1_1_plugin_host_adapter_1a5eaafcef030e81b90a3e77cf16cf8ae1" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1a5eaafcef030e81b90a3e77cf16cf8ae1" kindref="member">PluginHostAdapter::getDescription</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="174"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1a9ff8050f92f1a04a68bb34a9d368295e" kindref="member">description</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></highlight></codeline>
<codeline lineno="179" refid="class_vamp_1_1_plugin_host_adapter_1af572be0b175f5661559006a380a0f3db" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1af572be0b175f5661559006a380a0f3db" kindref="member">PluginHostAdapter::getMaker</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="180"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1a4dca3d57331802964716edfa80580c9b" kindref="member">maker</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="class_vamp_1_1_plugin_host_adapter_1a6fbd94781867ca46a20368c2a3593c77" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1a6fbd94781867ca46a20368c2a3593c77" kindref="member">PluginHostAdapter::getPluginVersion</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="186"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1a04427c420d9252c7796c0bf5101345ae" kindref="member">pluginVersion</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></highlight></codeline>
<codeline lineno="191" refid="class_vamp_1_1_plugin_host_adapter_1ac73c9d6baad04369beee695e99584815" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1ac73c9d6baad04369beee695e99584815" kindref="member">PluginHostAdapter::getCopyright</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="192"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1ae704bba384af0de056a26da1b13ee521" kindref="member">copyright</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_base_1a3b6bb4bbd86affe1ca9deceea1aad4f8" kindref="member">PluginHostAdapter::ParameterList</ref></highlight></codeline>
<codeline lineno="197" refid="class_vamp_1_1_plugin_host_adapter_1abfa93b20d9b5651a32042a9bb7c8df13" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1abfa93b20d9b5651a32042a9bb7c8df13" kindref="member">PluginHostAdapter::getParameterDescriptors</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="198"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_base_1a3b6bb4bbd86affe1ca9deceea1aad4f8" kindref="member">ParameterList</ref><sp/>list;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1ae6271dc3ea0cea959c84a64185492cab" kindref="member">parameterCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct___vamp_parameter_descriptor" kindref="compound">VampParameterDescriptor</ref><sp/>*spd<sp/>=<sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1a64d614862604c31d6b84c49005f51913" kindref="member">parameters</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor" kindref="compound">ParameterDescriptor</ref><sp/>pd;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pd.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a116fd9f0dc94c2bc4bbc60b5443c598c" kindref="member">identifier</ref><sp/>=<sp/>spd-&gt;<ref refid="struct___vamp_parameter_descriptor_1a26d74afd6a3341a673f15955031845ab" kindref="member">identifier</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pd.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a0ecebb94fb4ada4aad2640e20aa57084" kindref="member">name</ref><sp/>=<sp/>spd-&gt;<ref refid="struct___vamp_parameter_descriptor_1abba810bce9656f6002777f6c3f655957" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pd.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a780ddad41e433d85c82f9ea4d959cbaf" kindref="member">description</ref><sp/>=<sp/>spd-&gt;<ref refid="struct___vamp_parameter_descriptor_1a95489272d6cf5a5b487e949da8e4fac6" kindref="member">description</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pd.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a3bc3df322e4c02e17e96bc6d44982d7b" kindref="member">unit</ref><sp/>=<sp/>spd-&gt;<ref refid="struct___vamp_parameter_descriptor_1a8ca235f816b56dc99125e010eee08fc7" kindref="member">unit</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pd.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1ab3e4d84f5bc199eea8b642b27e425ec8" kindref="member">minValue</ref><sp/>=<sp/>spd-&gt;<ref refid="struct___vamp_parameter_descriptor_1ab59c84f0bbe0d4d0c578d893c087b0db" kindref="member">minValue</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pd.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1ab934b20dd708228a0e3c2811a3e2cec4" kindref="member">maxValue</ref><sp/>=<sp/>spd-&gt;<ref refid="struct___vamp_parameter_descriptor_1a6e7646babdb265c4abfc107ba4350d80" kindref="member">maxValue</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pd.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1aec4ef77451ec02193ecc4a0856673fbc" kindref="member">defaultValue</ref><sp/>=<sp/>spd-&gt;<ref refid="struct___vamp_parameter_descriptor_1a3d37f986ee152ab55feb9902b35f7aca" kindref="member">defaultValue</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pd.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a7c556d58d552f737ee5a34efdf7f9425" kindref="member">isQuantized</ref><sp/>=<sp/>spd-&gt;<ref refid="struct___vamp_parameter_descriptor_1a3f41e3b6b69c7a95ff0ce8625794f83a" kindref="member">isQuantized</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pd.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a01f8387e7c853d5e4e35d4e9a37353d7" kindref="member">quantizeStep</ref><sp/>=<sp/>spd-&gt;<ref refid="struct___vamp_parameter_descriptor_1a68c91fd3fc0b0b3617c2d343fe32d0e5" kindref="member">quantizeStep</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pd.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a7c556d58d552f737ee5a34efdf7f9425" kindref="member">isQuantized</ref><sp/>&amp;&amp;<sp/>spd-&gt;<ref refid="struct___vamp_parameter_descriptor_1a188883325ab1e4a898e3dc53a8f88f9d" kindref="member">valueNames</ref>)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>spd-&gt;<ref refid="struct___vamp_parameter_descriptor_1a188883325ab1e4a898e3dc53a8f88f9d" kindref="member">valueNames</ref>[j];<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pd.<ref refid="struct_vamp_1_1_plugin_base_1_1_parameter_descriptor_1a94df96f53835980b4739965007ff222b" kindref="member">valueNames</ref>.push_back(spd-&gt;<ref refid="struct___vamp_parameter_descriptor_1a188883325ab1e4a898e3dc53a8f88f9d" kindref="member">valueNames</ref>[j]);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list.push_back(pd);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="class_vamp_1_1_plugin_host_adapter_1af0c46d4f67ca93be7c76f3ea2e6c8efb" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1af0c46d4f67ca93be7c76f3ea2e6c8efb" kindref="member">PluginHostAdapter::getParameter</ref>(<ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref><sp/>param)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="224"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1ae6271dc3ea0cea959c84a64185492cab" kindref="member">parameterCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(param<sp/>==<sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1a64d614862604c31d6b84c49005f51913" kindref="member">parameters</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="struct___vamp_parameter_descriptor_1a26d74afd6a3341a673f15955031845ab" kindref="member">identifier</ref>)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1a153dc1fa458602a408d8ae909e4b9780" kindref="member">getParameter</ref>(<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="class_vamp_1_1_plugin_host_adapter_1a29f75395aa75b9de0228aa11edf9c6d6" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1a29f75395aa75b9de0228aa11edf9c6d6" kindref="member">PluginHostAdapter::setParameter</ref>(<ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref><sp/>param,<sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1ae6271dc3ea0cea959c84a64185492cab" kindref="member">parameterCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(param<sp/>==<sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1a64d614862604c31d6b84c49005f51913" kindref="member">parameters</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="struct___vamp_parameter_descriptor_1a26d74afd6a3341a673f15955031845ab" kindref="member">identifier</ref>)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1abe2500934c8aae78d0ecd6b4541d8946" kindref="member">setParameter</ref>(<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>value);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_base_1a7f66f00437b21e5f694fe02356b12f20" kindref="member">PluginHostAdapter::ProgramList</ref></highlight></codeline>
<codeline lineno="251" refid="class_vamp_1_1_plugin_host_adapter_1a7ac5681dcfe08b7b8a796bffc0aff3e3" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1a7ac5681dcfe08b7b8a796bffc0aff3e3" kindref="member">PluginHostAdapter::getPrograms</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="252"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_base_1a7f66f00437b21e5f694fe02356b12f20" kindref="member">ProgramList</ref><sp/>list;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1a1962666aa173e7a9a2c30dc82e4b2e00" kindref="member">programCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list.push_back(<ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1ad488470c582d8472d86455889d71c5ec" kindref="member">programs</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></highlight></codeline>
<codeline lineno="263" refid="class_vamp_1_1_plugin_host_adapter_1a34859eff8ca8d862af39be9636ec1867" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1a34859eff8ca8d862af39be9636ec1867" kindref="member">PluginHostAdapter::getCurrentProgram</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="264"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pn<sp/>=<sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1a2d13712798238db503005808b736cb18" kindref="member">getCurrentProgram</ref>(<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pn<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1a1962666aa173e7a9a2c30dc82e4b2e00" kindref="member">programCount</ref>)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1ad488470c582d8472d86455889d71c5ec" kindref="member">programs</ref>[pn];</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="class_vamp_1_1_plugin_host_adapter_1a8f5515ab34cc13d9403ccc6b4b788683" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1a8f5515ab34cc13d9403ccc6b4b788683" kindref="member">PluginHostAdapter::selectProgram</ref>(<ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref><sp/><ref refid="namespacewaflib_1_1_tools_1_1c__aliases_1a37f66fad92eb3e5608e4ea6cc919987c" kindref="member">program</ref>)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1a1962666aa173e7a9a2c30dc82e4b2e00" kindref="member">programCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(program<sp/>==<sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1ad488470c582d8472d86455889d71c5ec" kindref="member">programs</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1a688596d8abcdd638250799314ef9cb19" kindref="member">selectProgram</ref>(<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="class_vamp_1_1_plugin_host_adapter_1a859ad5d59402691daed3cf1af1899ebe" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1a859ad5d59402691daed3cf1af1899ebe" kindref="member">PluginHostAdapter::getPreferredStepSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="290"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1ae8efb5dec4a16b74fbb32ef36fc90e09" kindref="member">getPreferredStepSize</ref>(<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="class_vamp_1_1_plugin_host_adapter_1ad5e0ea8042bdec4dd18428991117e07a" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1ad5e0ea8042bdec4dd18428991117e07a" kindref="member">PluginHostAdapter::getPreferredBlockSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="297"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1a3052e7f14ad1dfc3000b3b91dddf8c61" kindref="member">getPreferredBlockSize</ref>(<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="class_vamp_1_1_plugin_host_adapter_1a67d1198c0e58d3f0076d0eda599ff28d" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1a67d1198c0e58d3f0076d0eda599ff28d" kindref="member">PluginHostAdapter::getMinChannelCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="304"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1a8a9be1cf9e70d46d20cac1b0049149cd" kindref="member">getMinChannelCount</ref>(<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="class_vamp_1_1_plugin_host_adapter_1a25091905e97e39d515d8ffc1a9f2b9e0" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1a25091905e97e39d515d8ffc1a9f2b9e0" kindref="member">PluginHostAdapter::getMaxChannelCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="311"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1af34bce679c821c38dbd212a0ef1bf867" kindref="member">getMaxChannelCount</ref>(<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_1a30f531b8fb69fac41a24e3d2a6a08ed9" kindref="member">PluginHostAdapter::OutputList</ref></highlight></codeline>
<codeline lineno="317" refid="class_vamp_1_1_plugin_host_adapter_1ae02670cca9d25cdc4100cbe7a12e3e68" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1ae02670cca9d25cdc4100cbe7a12e3e68" kindref="member">PluginHostAdapter::getOutputDescriptors</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="318"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_1a30f531b8fb69fac41a24e3d2a6a08ed9" kindref="member">OutputList</ref><sp/>list;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;PluginHostAdapter::getOutputDescriptors:<sp/>no<sp/>handle<sp/>&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1a71825defc0052a8ac307e2c333c4b935" kindref="member">getOutputCount</ref>(<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___vamp_output_descriptor" kindref="compound">VampOutputDescriptor</ref><sp/>*sd<sp/>=<sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1a033116c818aafe70e7fd15d240234754" kindref="member">getOutputDescriptor</ref>(<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor" kindref="compound">OutputDescriptor</ref><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ae2c893ddb1860589517ab7eaa989a18b" kindref="member">identifier</ref><sp/>=<sp/>sd-&gt;<ref refid="struct___vamp_output_descriptor_1a461161b2010370176115967e4f58a5f5" kindref="member">identifier</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ab824b2b34ee50f897a30901c620e8d87" kindref="member">name</ref><sp/>=<sp/>sd-&gt;<ref refid="struct___vamp_output_descriptor_1af4fca576bd47167fd2bf9b43d588815f" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1af9b4fe8f78e7126ead820ba5dc55efd1" kindref="member">description</ref><sp/>=<sp/>sd-&gt;<ref refid="struct___vamp_output_descriptor_1abfa911b138cfb80cf63e8f2e0fa0fb89" kindref="member">description</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1aa057a8833fa037f06ac9f7b85b85d5e4" kindref="member">unit</ref><sp/>=<sp/>sd-&gt;<ref refid="struct___vamp_output_descriptor_1ad038caa8e596dfd037035637202f1d63" kindref="member">unit</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1af0e577e1a256ff6eed6ea42133fec77d" kindref="member">hasFixedBinCount</ref><sp/>=<sp/>sd-&gt;<ref refid="struct___vamp_output_descriptor_1ae8571f5a2bc740738af0cb7dda0c4749" kindref="member">hasFixedBinCount</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1afdd006959a995e40ef7d565a3a4df6dc" kindref="member">binCount</ref><sp/>=<sp/>sd-&gt;<ref refid="struct___vamp_output_descriptor_1a652ee422092720e44d23d98bdb68f978" kindref="member">binCount</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1af0e577e1a256ff6eed6ea42133fec77d" kindref="member">hasFixedBinCount</ref><sp/>&amp;&amp;<sp/>sd-&gt;<ref refid="struct___vamp_output_descriptor_1a10fffaa32bd894843ff7592240dfe447" kindref="member">binNames</ref>)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>sd-&gt;<ref refid="struct___vamp_output_descriptor_1a652ee422092720e44d23d98bdb68f978" kindref="member">binCount</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1a31d9b79e2d8241344f551a22fcb5c8c7" kindref="member">binNames</ref>.push_back(sd-&gt;<ref refid="struct___vamp_output_descriptor_1a10fffaa32bd894843ff7592240dfe447" kindref="member">binNames</ref>[j]<sp/>?<sp/>sd-&gt;<ref refid="struct___vamp_output_descriptor_1a10fffaa32bd894843ff7592240dfe447" kindref="member">binNames</ref>[j]<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ae9ccb65f99f477096b65dd031f4c5e31" kindref="member">hasKnownExtents</ref><sp/>=<sp/>sd-&gt;<ref refid="struct___vamp_output_descriptor_1af6b512d772023b4e852216689c1c4465" kindref="member">hasKnownExtents</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ac9f5924c0be7571bba8e7ae7e7a921f4" kindref="member">minValue</ref><sp/>=<sp/>sd-&gt;<ref refid="struct___vamp_output_descriptor_1a9a28180989e3d028c12a98517479dc46" kindref="member">minValue</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1a907b4e8fbb48a46ac5a05f880d72719f" kindref="member">maxValue</ref><sp/>=<sp/>sd-&gt;<ref refid="struct___vamp_output_descriptor_1a4cbe540a247df60f85b00b2aa16461ee" kindref="member">maxValue</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1a1b4858928d23bfd7d5bc557c82a83fb4" kindref="member">isQuantized</ref><sp/>=<sp/>sd-&gt;<ref refid="struct___vamp_output_descriptor_1ab56cf0bbb17136819024574d5cc65e30" kindref="member">isQuantized</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1a3bed37153067b625b95acb40b60dbf0b" kindref="member">quantizeStep</ref><sp/>=<sp/>sd-&gt;<ref refid="struct___vamp_output_descriptor_1a71aa40222dda4321030cccd0bb655fe3" kindref="member">quantizeStep</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(sd-&gt;<ref refid="struct___vamp_output_descriptor_1a5da1d27cc99badc214640e859b882072" kindref="member">sampleType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="vamp_8h_1aa24a8cee023d8b7659d25cbe0584b821ab546deafd57f175fb1e7f9cbea1c5113" kindref="member">vampOneSamplePerStep</ref>:</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1a0d1194980d44e31b25ef3b4b070d6b5d" kindref="member">sampleType</ref><sp/>=<sp/><ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1abffa9ed50cd756df70fd51f0355f448ca0459d5d0d2198d21e8bc90abe4fdccca" kindref="member">OutputDescriptor::OneSamplePerStep</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="vamp_8h_1aa24a8cee023d8b7659d25cbe0584b821aafc8a05f722bc83ecce227e12e838cf8" kindref="member">vampFixedSampleRate</ref>:</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1a0d1194980d44e31b25ef3b4b070d6b5d" kindref="member">sampleType</ref><sp/>=<sp/><ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1abffa9ed50cd756df70fd51f0355f448ca4c74bd2fc96dfe2815623f94b40e5629" kindref="member">OutputDescriptor::FixedSampleRate</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="vamp_8h_1aa24a8cee023d8b7659d25cbe0584b821abae8a21a9e30eb73e16d6abc6c7415e8" kindref="member">vampVariableSampleRate</ref>:</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1a0d1194980d44e31b25ef3b4b070d6b5d" kindref="member">sampleType</ref><sp/>=<sp/><ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1abffa9ed50cd756df70fd51f0355f448cadea995a737867f7b22b52f1c43c5432e" kindref="member">OutputDescriptor::VariableSampleRate</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1add0cbbdfa9c91764037c39365b1d42af" kindref="member">sampleRate</ref><sp/>=<sp/>sd-&gt;<ref refid="struct___vamp_output_descriptor_1a1ccf193317b2b9c2eb0dbd8dcf61d26e" kindref="member">sampleRate</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1ab6c87760e87ddaa9ac3491bccaaa28c2" kindref="member">vampApiVersion</ref><sp/>&gt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ab0d7cc6ab19e53b5bd12ee234f549ea3" kindref="member">hasDuration</ref><sp/>=<sp/>sd-&gt;<ref refid="struct___vamp_output_descriptor_1af792a96dbf292ec966b9b68250febd99" kindref="member">hasDuration</ref>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ab0d7cc6ab19e53b5bd12ee234f549ea3" kindref="member">hasDuration</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list.push_back(d);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1a69f9fef2ed20a88985c960de4428cecb" kindref="member">releaseOutputDescriptor</ref>(sd);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">PluginHostAdapter::FeatureSet</ref></highlight></codeline>
<codeline lineno="373" refid="class_vamp_1_1_plugin_host_adapter_1a82c29a512c0587ea0121eee4b0c2a684" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1a82c29a512c0587ea0121eee4b0c2a684" kindref="member">PluginHostAdapter::process</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*inputBuffers,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vamp_1_1_real_time" kindref="compound">RealTime</ref><sp/>timestamp)</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">FeatureSet</ref><sp/><ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sec<sp/>=<sp/>timestamp.<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsec<sp/>=<sp/>timestamp.<ref refid="struct_vamp_1_1_real_time_1a2078835bef7bb92514a65b6051cfc6c8" kindref="member">nsec</ref>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___vamp_feature_list" kindref="compound">VampFeatureList</ref><sp/>*features<sp/>=<sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1aff1c25291c967cb2f198b900e551a7eb" kindref="member">process</ref>(<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputBuffers,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sec,<sp/>nsec);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1aee417a4c9ba9dbb63777c963d5f9452a" kindref="member">convertFeatures</ref>(features,<sp/>fs);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1ab4ed73ea986582ab1b7e6c44149a982a" kindref="member">releaseFeatureSet</ref>(features);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">PluginHostAdapter::FeatureSet</ref></highlight></codeline>
<codeline lineno="392" refid="class_vamp_1_1_plugin_host_adapter_1ad3f5f16a89a821da2ec1186fd2062e83" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1ad3f5f16a89a821da2ec1186fd2062e83" kindref="member">PluginHostAdapter::getRemainingFeatures</ref>()</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">FeatureSet</ref><sp/><ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___vamp_feature_list" kindref="compound">VampFeatureList</ref><sp/>*features<sp/>=<sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1ad897b43458161a43cf6085198217d197" kindref="member">getRemainingFeatures</ref>(<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>);<sp/></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1aee417a4c9ba9dbb63777c963d5f9452a" kindref="member">convertFeatures</ref>(features,<sp/>fs);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1ab4ed73ea986582ab1b7e6c44149a982a" kindref="member">releaseFeatureSet</ref>(features);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="class_vamp_1_1_plugin_host_adapter_1aee417a4c9ba9dbb63777c963d5f9452a" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_host_adapter_1aee417a4c9ba9dbb63777c963d5f9452a" kindref="member">PluginHostAdapter::convertFeatures</ref>(<ref refid="struct___vamp_feature_list" kindref="compound">VampFeatureList</ref><sp/>*features,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">FeatureSet</ref><sp/>&amp;<ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref>)</highlight></codeline>
<codeline lineno="407"><highlight class="normal">{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!features)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/><ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1a71825defc0052a8ac307e2c333c4b935" kindref="member">getOutputCount</ref>(<ref refid="class_vamp_1_1_plugin_host_adapter_1a02ebd03b226b4a467cad747ce77e79ee" kindref="member">m_handle</ref>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>outputs;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___vamp_feature_list" kindref="compound">VampFeatureList</ref><sp/>&amp;list<sp/>=<sp/>features[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list.<ref refid="struct___vamp_feature_list_1a01db33a31ae5e04a4bd097f4b6aa75f1" kindref="member">featureCount</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vamp_1_1_plugin_1_1_feature" kindref="compound">Feature</ref><sp/><ref refid="namespacewaflib_1_1_task_gen_1a839f18f16539f3131cbe573262099bf1" kindref="member">feature</ref>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a60b9f3057386820dbcaec0eb1189ce71" kindref="member">values</ref>.reserve(list.<ref refid="struct___vamp_feature_list_1a103c817094643ac5ff4410768f4f92a7" kindref="member">features</ref>[0].<ref refid="union___vamp_feature_union_1a4a32a2ce141ec3cd36b8be54cd9c3369" kindref="member">v1</ref>.<ref refid="struct___vamp_feature_1ab1ce7c8a2b489e9b0694a967497a29fd" kindref="member">valueCount</ref>);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>list.<ref refid="struct___vamp_feature_list_1a01db33a31ae5e04a4bd097f4b6aa75f1" kindref="member">featureCount</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a98907091d0b6a589720ae35ae588a82b" kindref="member">hasTimestamp</ref><sp/>=<sp/>list.<ref refid="struct___vamp_feature_list_1a103c817094643ac5ff4410768f4f92a7" kindref="member">features</ref>[j].<ref refid="union___vamp_feature_union_1a4a32a2ce141ec3cd36b8be54cd9c3369" kindref="member">v1</ref>.<ref refid="struct___vamp_feature_1abe6aa7a08185beeb9deca2d08d99859f" kindref="member">hasTimestamp</ref>;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1acaa605f36839c07e76f4882f5e22d8d7" kindref="member">timestamp</ref><sp/>=<sp/><ref refid="struct_vamp_1_1_real_time" kindref="compound">RealTime</ref>(list.<ref refid="struct___vamp_feature_list_1a103c817094643ac5ff4410768f4f92a7" kindref="member">features</ref>[j].<ref refid="union___vamp_feature_union_1a4a32a2ce141ec3cd36b8be54cd9c3369" kindref="member">v1</ref>.<ref refid="struct___vamp_feature_1a31f0b57050e33d082692536097953d9c" kindref="member">sec</ref>,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list.<ref refid="struct___vamp_feature_list_1a103c817094643ac5ff4410768f4f92a7" kindref="member">features</ref>[j].<ref refid="union___vamp_feature_union_1a4a32a2ce141ec3cd36b8be54cd9c3369" kindref="member">v1</ref>.<ref refid="struct___vamp_feature_1a8874cb23600c6b10ca6e8a40920d999e" kindref="member">nsec</ref>);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a33686757bd4481c72494122e9bfb9fba" kindref="member">hasDuration</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vamp_1_1_plugin_host_adapter_1a0c9f252aca8ac298e30cadd0de032ec2" kindref="member">m_descriptor</ref>-&gt;<ref refid="struct___vamp_plugin_descriptor_1ab6c87760e87ddaa9ac3491bccaaa28c2" kindref="member">vampApiVersion</ref><sp/>&gt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j2<sp/>=<sp/>j<sp/>+<sp/>list.<ref refid="struct___vamp_feature_list_1a01db33a31ae5e04a4bd097f4b6aa75f1" kindref="member">featureCount</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a33686757bd4481c72494122e9bfb9fba" kindref="member">hasDuration</ref><sp/>=<sp/>list.<ref refid="struct___vamp_feature_list_1a103c817094643ac5ff4410768f4f92a7" kindref="member">features</ref>[j2].<ref refid="union___vamp_feature_union_1a87e508e37e02cce11c3c4ddf087a627a" kindref="member">v2</ref>.<ref refid="struct___vamp_feature_v2_1a44d9c57f1ae197d3fec1a48c650cce81" kindref="member">hasDuration</ref>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1af687c0a7fe041757e922ec296862b115" kindref="member">duration</ref><sp/>=<sp/><ref refid="struct_vamp_1_1_real_time" kindref="compound">RealTime</ref>(list.<ref refid="struct___vamp_feature_list_1a103c817094643ac5ff4410768f4f92a7" kindref="member">features</ref>[j2].<ref refid="union___vamp_feature_union_1a87e508e37e02cce11c3c4ddf087a627a" kindref="member">v2</ref>.<ref refid="struct___vamp_feature_v2_1abc95aac3a2efdef6ef0b17e7b6bd3daf" kindref="member">durationSec</ref>,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list.<ref refid="struct___vamp_feature_list_1a103c817094643ac5ff4410768f4f92a7" kindref="member">features</ref>[j2].<ref refid="union___vamp_feature_union_1a87e508e37e02cce11c3c4ddf087a627a" kindref="member">v2</ref>.<ref refid="struct___vamp_feature_v2_1af71693d907f69048d602d28edbce679e" kindref="member">durationNsec</ref>);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>=<sp/>0;<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>&lt;<sp/>list.<ref refid="struct___vamp_feature_list_1a103c817094643ac5ff4410768f4f92a7" kindref="member">features</ref>[j].<ref refid="union___vamp_feature_union_1a4a32a2ce141ec3cd36b8be54cd9c3369" kindref="member">v1</ref>.<ref refid="struct___vamp_feature_1ab1ce7c8a2b489e9b0694a967497a29fd" kindref="member">valueCount</ref>;<sp/>++<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a60b9f3057386820dbcaec0eb1189ce71" kindref="member">values</ref>.push_back(list.<ref refid="struct___vamp_feature_list_1a103c817094643ac5ff4410768f4f92a7" kindref="member">features</ref>[j].<ref refid="union___vamp_feature_union_1a4a32a2ce141ec3cd36b8be54cd9c3369" kindref="member">v1</ref>.<ref refid="struct___vamp_feature_1ae4030f941ddb2bab8bc147b88e1f1c15" kindref="member">values</ref>[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list.<ref refid="struct___vamp_feature_list_1a103c817094643ac5ff4410768f4f92a7" kindref="member">features</ref>[j].<ref refid="union___vamp_feature_union_1a4a32a2ce141ec3cd36b8be54cd9c3369" kindref="member">v1</ref>.<ref refid="struct___vamp_feature_1a6662b7489a7890cae713bf4e8f6d52cd" kindref="member">label</ref>)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a8eb1fb35f73b247ed13de9527c18f036" kindref="member">label</ref><sp/>=<sp/>list.<ref refid="struct___vamp_feature_list_1a103c817094643ac5ff4410768f4f92a7" kindref="member">features</ref>[j].<ref refid="union___vamp_feature_union_1a4a32a2ce141ec3cd36b8be54cd9c3369" kindref="member">v1</ref>.<ref refid="struct___vamp_feature_1a6662b7489a7890cae713bf4e8f6d52cd" kindref="member">label</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].push_back(feature);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list.<ref refid="struct___vamp_feature_list_1a103c817094643ac5ff4410768f4f92a7" kindref="member">features</ref>[j].<ref refid="union___vamp_feature_union_1a4a32a2ce141ec3cd36b8be54cd9c3369" kindref="member">v1</ref>.<ref refid="struct___vamp_feature_1ab1ce7c8a2b489e9b0694a967497a29fd" kindref="member">valueCount</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a60b9f3057386820dbcaec0eb1189ce71" kindref="member">values</ref>.clear();</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list.<ref refid="struct___vamp_feature_list_1a103c817094643ac5ff4410768f4f92a7" kindref="member">features</ref>[j].<ref refid="union___vamp_feature_union_1a4a32a2ce141ec3cd36b8be54cd9c3369" kindref="member">v1</ref>.<ref refid="struct___vamp_feature_1a6662b7489a7890cae713bf4e8f6d52cd" kindref="member">label</ref>)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature.<ref refid="struct_vamp_1_1_plugin_1_1_feature_1a8eb1fb35f73b247ed13de9527c18f036" kindref="member">label</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><ref refid="hostguard_8h_1a0e6efdc2909bdb0cfab70e087d91b171" kindref="member">_VAMP_SDK_HOSTSPACE_END</ref>(<ref refid="class_vamp_1_1_plugin_host_adapter" kindref="compound">PluginHostAdapter</ref>.cpp)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/src/vamp-hostsdk/PluginHostAdapter.cpp"/>
  </compounddef>
</doxygen>
