<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_o_d_wave_track_task_queue_8cpp" kind="file" language="C++">
    <compoundname>ODWaveTrackTaskQueue.cpp</compoundname>
    <includes refid="_o_d_wave_track_task_queue_8h" local="yes">ODWaveTrackTaskQueue.h</includes>
    <includes refid="_o_d_task_8h" local="yes">ODTask.h</includes>
    <includes refid="_o_d_manager_8h" local="yes">ODManager.h</includes>
    <incdepgraph>
      <node id="50567">
        <label>wx/dir.h</label>
      </node>
      <node id="50576">
        <label>wx/choice.h</label>
      </node>
      <node id="50552">
        <label>wx/hashmap.h</label>
      </node>
      <node id="50604">
        <label>toolbars/SelectionBarListener.h</label>
        <link refid="_selection_bar_listener_8h"/>
      </node>
      <node id="50602">
        <label>wx/gauge.h</label>
      </node>
      <node id="50568">
        <label>wx/event.h</label>
      </node>
      <node id="50538">
        <label>wx/ffile.h</label>
      </node>
      <node id="50591">
        <label>audacity/ModuleInterface.h</label>
        <link refid="_module_interface_8h"/>
        <childnode refid="50547" relation="include">
        </childnode>
        <childnode refid="50583" relation="include">
        </childnode>
        <childnode refid="50592" relation="include">
        </childnode>
      </node>
      <node id="50535">
        <label>ODTask.h</label>
        <link refid="_o_d_task_8h"/>
        <childnode refid="50531" relation="include">
        </childnode>
        <childnode refid="50536" relation="include">
        </childnode>
        <childnode refid="50548" relation="include">
        </childnode>
        <childnode refid="50530" relation="include">
        </childnode>
        <childnode refid="50534" relation="include">
        </childnode>
      </node>
      <node id="50609">
        <label>wx/dcclient.h</label>
      </node>
      <node id="50566">
        <label>wx/cmdline.h</label>
      </node>
      <node id="50582">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="50547" relation="include">
        </childnode>
        <childnode refid="50583" relation="include">
        </childnode>
        <childnode refid="50584" relation="include">
        </childnode>
        <childnode refid="50585" relation="include">
        </childnode>
        <childnode refid="50580" relation="include">
        </childnode>
      </node>
      <node id="50598">
        <label>../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="50543" relation="include">
        </childnode>
        <childnode refid="50537" relation="include">
        </childnode>
        <childnode refid="50599" relation="include">
        </childnode>
      </node>
      <node id="50540">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="50533" relation="include">
        </childnode>
        <childnode refid="50537" relation="include">
        </childnode>
        <childnode refid="50541" relation="include">
        </childnode>
        <childnode refid="50542" relation="include">
        </childnode>
      </node>
      <node id="50558">
        <label>TrackPanelListener.h</label>
        <link refid="_track_panel_listener_8h"/>
      </node>
      <node id="50556">
        <label>wx/wxchar.h</label>
      </node>
      <node id="50608">
        <label>wx/frame.h</label>
      </node>
      <node id="50531">
        <label>ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="50532" relation="include">
        </childnode>
        <childnode refid="50533" relation="include">
        </childnode>
      </node>
      <node id="50584">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="50547" relation="include">
        </childnode>
      </node>
      <node id="50553">
        <label>wx/utils.h</label>
      </node>
      <node id="50611">
        <label>ODManager.h</label>
        <link refid="_o_d_manager_8h"/>
        <childnode refid="50530" relation="include">
        </childnode>
        <childnode refid="50535" relation="include">
        </childnode>
        <childnode refid="50531" relation="include">
        </childnode>
        <childnode refid="50532" relation="include">
        </childnode>
        <childnode refid="50534" relation="include">
        </childnode>
      </node>
      <node id="50528">
        <label>C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.cpp</label>
        <link refid="ODWaveTrackTaskQueue.cpp"/>
        <childnode refid="50529" relation="include">
        </childnode>
        <childnode refid="50535" relation="include">
        </childnode>
        <childnode refid="50611" relation="include">
        </childnode>
      </node>
      <node id="50601">
        <label>wx/evtloop.h</label>
      </node>
      <node id="50549">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="50546" relation="include">
        </childnode>
      </node>
      <node id="50574">
        <label>wx/timer.h</label>
      </node>
      <node id="50554">
        <label>ViewInfo.h</label>
        <link refid="_view_info_8h"/>
        <childnode refid="50530" relation="include">
        </childnode>
        <childnode refid="50555" relation="include">
        </childnode>
      </node>
      <node id="50597">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="50587">
        <label>wx/fileconf.h</label>
      </node>
      <node id="50589">
        <label>map</label>
      </node>
      <node id="50592">
        <label>audacity/PluginInterface.h</label>
        <link refid="_plugin_interface_8h"/>
        <childnode refid="50547" relation="include">
        </childnode>
        <childnode refid="50584" relation="include">
        </childnode>
        <childnode refid="50582" relation="include">
        </childnode>
        <childnode refid="50583" relation="include">
        </childnode>
        <childnode refid="50590" relation="include">
        </childnode>
        <childnode refid="50591" relation="include">
        </childnode>
      </node>
      <node id="50605">
        <label>toolbars/SpectralSelectionBarListener.h</label>
        <link refid="_spectral_selection_bar_listener_8h"/>
        <childnode refid="50533" relation="include">
        </childnode>
      </node>
      <node id="50603">
        <label>wx/stattext.h</label>
      </node>
      <node id="50573">
        <label>wx/socket.h</label>
      </node>
      <node id="50607">
        <label>wx/generic/dragimgg.h</label>
      </node>
      <node id="50583">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="50547" relation="include">
        </childnode>
      </node>
      <node id="50551">
        <label>wx/list.h</label>
      </node>
      <node id="50563">
        <label>wx/menu.h</label>
      </node>
      <node id="50546">
        <label>wx/defs.h</label>
      </node>
      <node id="50578">
        <label>wx/window.h</label>
      </node>
      <node id="50570">
        <label>wx/intl.h</label>
      </node>
      <node id="50600">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="50533" relation="include">
        </childnode>
        <childnode refid="50546" relation="include">
        </childnode>
        <childnode refid="50580" relation="include">
        </childnode>
        <childnode refid="50601" relation="include">
        </childnode>
        <childnode refid="50602" relation="include">
        </childnode>
        <childnode refid="50603" relation="include">
        </childnode>
        <childnode refid="50553" relation="include">
        </childnode>
      </node>
      <node id="50595">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="50547">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="50537" relation="include">
        </childnode>
        <childnode refid="50543" relation="include">
        </childnode>
      </node>
      <node id="50536">
        <label>../BlockFile.h</label>
        <link refid="_block_file_8h"/>
        <childnode refid="50537" relation="include">
        </childnode>
        <childnode refid="50538" relation="include">
        </childnode>
        <childnode refid="50539" relation="include">
        </childnode>
        <childnode refid="50540" relation="include">
        </childnode>
        <childnode refid="50542" relation="include">
        </childnode>
        <childnode refid="50545" relation="include">
        </childnode>
      </node>
      <node id="50588">
        <label>../PluginManager.h</label>
        <link refid="_plugin_manager_8h"/>
        <childnode refid="50546" relation="include">
        </childnode>
        <childnode refid="50544" relation="include">
        </childnode>
        <childnode refid="50587" relation="include">
        </childnode>
        <childnode refid="50537" relation="include">
        </childnode>
        <childnode refid="50589" relation="include">
        </childnode>
        <childnode refid="50582" relation="include">
        </childnode>
        <childnode refid="50590" relation="include">
        </childnode>
        <childnode refid="50591" relation="include">
        </childnode>
        <childnode refid="50592" relation="include">
        </childnode>
      </node>
      <node id="50580">
        <label>wx/dialog.h</label>
      </node>
      <node id="50529">
        <label>ODWaveTrackTaskQueue.h</label>
        <link refid="_o_d_wave_track_task_queue_8h"/>
        <childnode refid="50530" relation="include">
        </childnode>
        <childnode refid="50531" relation="include">
        </childnode>
        <childnode refid="50534" relation="include">
        </childnode>
      </node>
      <node id="50539">
        <label>wx/filename.h</label>
      </node>
      <node id="50579">
        <label>effects/EffectManager.h</label>
        <link refid="_effect_manager_8h"/>
        <childnode refid="50549" relation="include">
        </childnode>
        <childnode refid="50576" relation="include">
        </childnode>
        <childnode refid="50580" relation="include">
        </childnode>
        <childnode refid="50568" relation="include">
        </childnode>
        <childnode refid="50581" relation="include">
        </childnode>
        <childnode refid="50537" relation="include">
        </childnode>
        <childnode refid="50582" relation="include">
        </childnode>
        <childnode refid="50588" relation="include">
        </childnode>
        <childnode refid="50593" relation="include">
        </childnode>
      </node>
      <node id="50585">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="50586" relation="include">
        </childnode>
        <childnode refid="50566" relation="include">
        </childnode>
        <childnode refid="50587" relation="include">
        </childnode>
        <childnode refid="50570" relation="include">
        </childnode>
      </node>
      <node id="50560">
        <label>commands/CommandManager.h</label>
        <link refid="_command_manager_8h"/>
        <childnode refid="50549" relation="include">
        </childnode>
        <childnode refid="50561" relation="include">
        </childnode>
        <childnode refid="50530" relation="include">
        </childnode>
        <childnode refid="50537" relation="include">
        </childnode>
        <childnode refid="50544" relation="include">
        </childnode>
        <childnode refid="50563" relation="include">
        </childnode>
        <childnode refid="50552" relation="include">
        </childnode>
        <childnode refid="50564" relation="include">
        </childnode>
        <childnode refid="50540" relation="include">
        </childnode>
        <childnode refid="50547" relation="include">
        </childnode>
      </node>
      <node id="50533">
        <label>../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="50577">
        <label>wx/grid.h</label>
      </node>
      <node id="50530">
        <label>vector</label>
      </node>
      <node id="50593">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="50533" relation="include">
        </childnode>
        <childnode refid="50561" relation="include">
        </childnode>
        <childnode refid="50594" relation="include">
        </childnode>
        <childnode refid="50595" relation="include">
        </childnode>
        <childnode refid="50544" relation="include">
        </childnode>
        <childnode refid="50570" relation="include">
        </childnode>
        <childnode refid="50537" relation="include">
        </childnode>
        <childnode refid="50596" relation="include">
        </childnode>
        <childnode refid="50584" relation="include">
        </childnode>
        <childnode refid="50582" relation="include">
        </childnode>
        <childnode refid="50549" relation="include">
        </childnode>
        <childnode refid="50555" relation="include">
        </childnode>
        <childnode refid="50597" relation="include">
        </childnode>
        <childnode refid="50598" relation="include">
        </childnode>
        <childnode refid="50600" relation="include">
        </childnode>
      </node>
      <node id="50544">
        <label>wx/dynarray.h</label>
      </node>
      <node id="50548">
        <label>../Project.h</label>
        <link refid="_project_8h"/>
        <childnode refid="50533" relation="include">
        </childnode>
        <childnode refid="50549" relation="include">
        </childnode>
        <childnode refid="50550" relation="include">
        </childnode>
        <childnode refid="50554" relation="include">
        </childnode>
        <childnode refid="50558" relation="include">
        </childnode>
        <childnode refid="50559" relation="include">
        </childnode>
        <childnode refid="50560" relation="include">
        </childnode>
        <childnode refid="50579" relation="include">
        </childnode>
        <childnode refid="50540" relation="include">
        </childnode>
        <childnode refid="50604" relation="include">
        </childnode>
        <childnode refid="50605" relation="include">
        </childnode>
        <childnode refid="50546" relation="include">
        </childnode>
        <childnode refid="50568" relation="include">
        </childnode>
        <childnode refid="50572" relation="include">
        </childnode>
        <childnode refid="50606" relation="include">
        </childnode>
        <childnode refid="50607" relation="include">
        </childnode>
        <childnode refid="50608" relation="include">
        </childnode>
        <childnode refid="50570" relation="include">
        </childnode>
        <childnode refid="50609" relation="include">
        </childnode>
        <childnode refid="50610" relation="include">
        </childnode>
      </node>
      <node id="50590">
        <label>audacity/ImporterInterface.h</label>
        <link refid="_importer_interface_8h"/>
        <childnode refid="50547" relation="include">
        </childnode>
        <childnode refid="50584" relation="include">
        </childnode>
        <childnode refid="50583" relation="include">
        </childnode>
      </node>
      <node id="50537">
        <label>wx/string.h</label>
      </node>
      <node id="50564">
        <label>../AudacityApp.h</label>
        <link refid="_audacity_app_8h"/>
        <childnode refid="50533" relation="include">
        </childnode>
        <childnode refid="50565" relation="include">
        </childnode>
        <childnode refid="50566" relation="include">
        </childnode>
        <childnode refid="50567" relation="include">
        </childnode>
        <childnode refid="50568" relation="include">
        </childnode>
        <childnode refid="50569" relation="include">
        </childnode>
        <childnode refid="50570" relation="include">
        </childnode>
        <childnode refid="50571" relation="include">
        </childnode>
        <childnode refid="50572" relation="include">
        </childnode>
        <childnode refid="50573" relation="include">
        </childnode>
        <childnode refid="50574" relation="include">
        </childnode>
        <childnode refid="50575" relation="include">
        </childnode>
        <childnode refid="50531" relation="include">
        </childnode>
        <childnode refid="50549" relation="include">
        </childnode>
      </node>
      <node id="50581">
        <label>wx/listbox.h</label>
      </node>
      <node id="50572">
        <label>wx/log.h</label>
      </node>
      <node id="50557">
        <label>math.h</label>
      </node>
      <node id="50550">
        <label>DirManager.h</label>
        <link refid="_dir_manager_8h"/>
        <childnode refid="50551" relation="include">
        </childnode>
        <childnode refid="50537" relation="include">
        </childnode>
        <childnode refid="50539" relation="include">
        </childnode>
        <childnode refid="50552" relation="include">
        </childnode>
        <childnode refid="50553" relation="include">
        </childnode>
        <childnode refid="50547" relation="include">
        </childnode>
        <childnode refid="50540" relation="include">
        </childnode>
      </node>
      <node id="50555">
        <label>SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="50533" relation="include">
        </childnode>
        <childnode refid="50549" relation="include">
        </childnode>
        <childnode refid="50546" relation="include">
        </childnode>
        <childnode refid="50556" relation="include">
        </childnode>
        <childnode refid="50557" relation="include">
        </childnode>
      </node>
      <node id="50543">
        <label>wx/arrstr.h</label>
      </node>
      <node id="50571">
        <label>wx/snglinst.h</label>
      </node>
      <node id="50534">
        <label>wx/wx.h</label>
      </node>
      <node id="50532">
        <label>wx/thread.h</label>
      </node>
      <node id="50606">
        <label>wx/dragimag.h</label>
      </node>
      <node id="50596">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="50561">
        <label>../MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="50562" relation="include">
        </childnode>
      </node>
      <node id="50575">
        <label>widgets/FileHistory.h</label>
        <link refid="_file_history_8h"/>
        <childnode refid="50546" relation="include">
        </childnode>
        <childnode refid="50576" relation="include">
        </childnode>
        <childnode refid="50544" relation="include">
        </childnode>
        <childnode refid="50568" relation="include">
        </childnode>
        <childnode refid="50577" relation="include">
        </childnode>
        <childnode refid="50537" relation="include">
        </childnode>
        <childnode refid="50578" relation="include">
        </childnode>
      </node>
      <node id="50594">
        <label>set</label>
      </node>
      <node id="50610">
        <label>Menus.h</label>
        <link refid="_menus_8h"/>
        <childnode refid="50549" relation="include">
        </childnode>
      </node>
      <node id="50565">
        <label>wx/app.h</label>
        <link refid="app_8h"/>
      </node>
      <node id="50599">
        <label>wx/longlong.h</label>
      </node>
      <node id="50541">
        <label>stdio.h</label>
      </node>
      <node id="50545">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="50533" relation="include">
        </childnode>
        <childnode refid="50546" relation="include">
        </childnode>
        <childnode refid="50547" relation="include">
        </childnode>
      </node>
      <node id="50586">
        <label>locale.h</label>
      </node>
      <node id="50569">
        <label>wx/docview.h</label>
      </node>
      <node id="50562">
        <label>memory</label>
      </node>
      <node id="50542">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="50543" relation="include">
        </childnode>
        <childnode refid="50544" relation="include">
        </childnode>
        <childnode refid="50538" relation="include">
        </childnode>
      </node>
      <node id="50559">
        <label>AudioIOListener.h</label>
        <link refid="_audio_i_o_listener_8h"/>
        <childnode refid="50537" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>ODWaveTrackTaskQueue.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Created<sp/>by<sp/>Michael<sp/>Chinen<sp/>(mchinen)<sp/>on<sp/>6/11/08</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>Audacity(R)<sp/>is<sp/>copyright<sp/>(c)<sp/>1999-2008<sp/>Audacity<sp/>Team.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>License:<sp/>GPL<sp/>v2.<sp/><sp/>See<sp/>License.txt.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_o_d_wave_track_task_queue_8h" kindref="compound">ODWaveTrackTaskQueue.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_o_d_task_8h" kindref="compound">ODTask.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_o_d_manager_8h" kindref="compound">ODManager.h</ref>&quot;</highlight></codeline>
<codeline lineno="23" refid="class_o_d_wave_track_task_queue_1a1f17dcbeccc80ea43c7f17d0e57cc719" refkind="member"><highlight class="normal"><ref refid="class_o_d_wave_track_task_queue_1a1f17dcbeccc80ea43c7f17d0e57cc719" kindref="member">ODWaveTrackTaskQueue::ODWaveTrackTaskQueue</ref>()</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_o_d_wave_track_task_queue_1a4dd991f46f246d38b8ccd29de965211b" refkind="member"><highlight class="normal"><ref refid="class_o_d_wave_track_task_queue_1a4dd991f46f246d38b8ccd29de965211b" kindref="member">ODWaveTrackTaskQueue::~ODWaveTrackTaskQueue</ref>()</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>need<sp/>to<sp/>DELETE<sp/>all<sp/>ODTasks.<sp/><sp/>We<sp/>will<sp/>have<sp/>to<sp/>block<sp/>or<sp/>wait<sp/>until<sp/>block<sp/>for<sp/>the<sp/>active<sp/>ones.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;TerminateAndBlock();</highlight><highlight class="comment">//blocks<sp/>if<sp/>active.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//small<sp/>chance<sp/>we<sp/>may<sp/>have<sp/>rea-added<sp/>the<sp/>task<sp/>back<sp/>into<sp/>the<sp/>queue<sp/>from<sp/>a<sp/>diff<sp/>thread.<sp/><sp/>-<sp/>so<sp/>remove<sp/>it<sp/>if<sp/>we<sp/>have.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_manager_1aef1bcdded223f015b22a0d1d439c23ad" kindref="member">ODManager::Instance</ref>()-&gt;<ref refid="class_o_d_manager_1af8842cb56eaca1e61383e9e6f6d86aaa" kindref="member">RemoveTaskIfInQueue</ref>(<ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_o_d_wave_track_task_queue_1a185407f037927f2384ae40910bd93378" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_o_d_wave_track_task_queue_1a185407f037927f2384ae40910bd93378" kindref="member">ODWaveTrackTaskQueue::CanMergeWith</ref>(<ref refid="class_o_d_wave_track_task_queue" kindref="compound">ODWaveTrackTaskQueue</ref>*<sp/>otherQueue)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//have<sp/>to<sp/>be<sp/>very<sp/>careful<sp/>when<sp/>dealing<sp/>with<sp/>two<sp/>lists<sp/>that<sp/>need<sp/>to<sp/>be<sp/>locked.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_wave_track_task_queue_1a66b9e1509e6066969012ec4e1d6ba3be" kindref="member">GetNumTasks</ref>()!=otherQueue-&gt;<ref refid="class_o_d_wave_track_task_queue_1a66b9e1509e6066969012ec4e1d6ba3be" kindref="member">GetNumTasks</ref>())</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="class_o_d_wave_track_task_queue_1a185407f037927f2384ae40910bd93378" kindref="member">CanMergeWith</ref>(otherQueue-&gt;<ref refid="class_o_d_wave_track_task_queue_1afc3a9b1a81e7ddd54fdb80b076b46c47" kindref="member">GetTask</ref>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)))</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="class_o_d_wave_track_task_queue_1aca1351c9096298368e022c997ee734b4" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_wave_track_task_queue_1aca1351c9096298368e022c997ee734b4" kindref="member">ODWaveTrackTaskQueue::MergeWaveTrack</ref>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>track)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1abe296a4b592fda1425ebed95cd5368c7" kindref="member">AddWaveTrack</ref>(track);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;AddWaveTrack(track);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;SetNeedsODUpdate();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="class_o_d_wave_track_task_queue_1a59f5152239f913ea545b3347c7ebb97b" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_o_d_wave_track_task_queue_1a59f5152239f913ea545b3347c7ebb97b" kindref="member">ODWaveTrackTaskQueue::ContainsWaveTrack</ref>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>track)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="class_o_d_wave_track_task_queue_1ac7ae645d36f3a3769316e929d84a3dd4" kindref="member">mTracks</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_wave_track_task_queue_1ac7ae645d36f3a3769316e929d84a3dd4" kindref="member">mTracks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]==track)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93" refid="class_o_d_wave_track_task_queue_1abe296a4b592fda1425ebed95cd5368c7" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_wave_track_task_queue_1abe296a4b592fda1425ebed95cd5368c7" kindref="member">ODWaveTrackTaskQueue::AddWaveTrack</ref>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>track)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(track)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1ac7ae645d36f3a3769316e929d84a3dd4" kindref="member">mTracks</ref>.push_back(track);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="class_o_d_wave_track_task_queue_1a583badb4082706b53f635022e7bcb4c5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_wave_track_task_queue_1a583badb4082706b53f635022e7bcb4c5" kindref="member">ODWaveTrackTaskQueue::AddTask</ref>(<ref refid="class_o_d_task" kindref="compound">ODTask</ref>*<sp/>task)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>.push_back(task);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//take<sp/>all<sp/>of<sp/>the<sp/>tracks<sp/>in<sp/>the<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;task-&gt;<ref refid="class_o_d_task_1afaadfdc39a36023fdf2d434240a71f92" kindref="member">GetNumWaveTracks</ref>();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//task-&gt;GetWaveTrack(i)<sp/>may<sp/>return<sp/>NULL,<sp/>but<sp/>we<sp/>handle<sp/>it<sp/>by<sp/>checking<sp/>before<sp/>using.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>other<sp/>worry<sp/>that<sp/>the<sp/>WaveTrack<sp/>returned<sp/>and<sp/>was<sp/>deleted<sp/>in<sp/>the<sp/>meantime<sp/>is<sp/>also</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//handled<sp/>since<sp/>mQueuesMutex<sp/>is<sp/>locked<sp/>one<sp/>up<sp/>in<sp/>the<sp/>stack<sp/>from<sp/>here,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>WaveTrack<sp/>deletion<sp/>is<sp/>bound<sp/>to<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1ac7ae645d36f3a3769316e929d84a3dd4" kindref="member">mTracks</ref>.push_back(task-&gt;<ref refid="class_o_d_task_1a33106da71ce2e3e6c2124c38e211efd9" kindref="member">GetWaveTrack</ref>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="class_o_d_wave_track_task_queue_1ae5a6b6f1492f226c786c8bc9c1a52f42" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_wave_track_task_queue_1ae5a6b6f1492f226c786c8bc9c1a52f42" kindref="member">ODWaveTrackTaskQueue::RemoveWaveTrack</ref>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>track)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(track)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;StopUsingWaveTrack(track);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="class_o_d_wave_track_task_queue_1ac7ae645d36f3a3769316e929d84a3dd4" kindref="member">mTracks</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_wave_track_task_queue_1ac7ae645d36f3a3769316e929d84a3dd4" kindref="member">mTracks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]==track)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1ac7ae645d36f3a3769316e929d84a3dd4" kindref="member">mTracks</ref>.erase(<ref refid="class_o_d_wave_track_task_queue_1ac7ae645d36f3a3769316e929d84a3dd4" kindref="member">mTracks</ref>.begin()+<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>--);</highlight><highlight class="comment">//decrement<sp/>i<sp/>after<sp/>the<sp/>removal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//if<sp/>the<sp/>wavetrack<sp/>is<sp/>in<sp/>this<sp/>queue,<sp/>and<sp/>is<sp/>not<sp/>the<sp/>only<sp/>wavetrack,<sp/>clones<sp/>the<sp/>tasks<sp/>and<sp/>schedules<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="class_o_d_wave_track_task_queue_1a9ef490dcacef826900911fe6f806cbfe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_wave_track_task_queue_1a9ef490dcacef826900911fe6f806cbfe" kindref="member">ODWaveTrackTaskQueue::MakeWaveTrackIndependent</ref>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>track)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_wave_track_task_queue_1ac7ae645d36f3a3769316e929d84a3dd4" kindref="member">mTracks</ref>.size()&lt;2)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>there<sp/>is<sp/>only<sp/>one<sp/>track,<sp/>it<sp/>is<sp/>already<sp/>independent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="class_o_d_wave_track_task_queue_1ac7ae645d36f3a3769316e929d84a3dd4" kindref="member">mTracks</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_wave_track_task_queue_1ac7ae645d36f3a3769316e929d84a3dd4" kindref="member">mTracks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]==track)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Unlock();</highlight><highlight class="comment">//release<sp/>the<sp/>lock,<sp/>since<sp/>RemoveWaveTrack<sp/>is<sp/>a<sp/>public<sp/>threadsafe<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1ae5a6b6f1492f226c786c8bc9c1a52f42" kindref="member">RemoveWaveTrack</ref>(<ref refid="class_o_d_wave_track_task_queue_1ac7ae645d36f3a3769316e929d84a3dd4" kindref="member">mTracks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//clone<sp/>the<sp/>items<sp/>in<sp/>order<sp/>and<sp/>add<sp/>them<sp/>to<sp/>the<sp/>ODManager.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task" kindref="compound">ODTask</ref>*<sp/>task;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;j&lt;<ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>.size();j++)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task=<ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>[j]-&gt;Clone();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task-&gt;<ref refid="class_o_d_task_1a3438e8f3f97a2ad2954913b23beaa0a6" kindref="member">AddWaveTrack</ref>(track);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//AddNewTask<sp/>requires<sp/>us<sp/>to<sp/>relinquish<sp/>this<sp/>lock.<sp/>However,<sp/>it<sp/>is<sp/>safe<sp/>because<sp/>ODManager::MakeWaveTrackIndependent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//has<sp/>already<sp/>locked<sp/>the<sp/>m_queuesMutex.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//AddNewTask<sp/>locks<sp/>the<sp/>m_queuesMutex<sp/>which<sp/>is<sp/>already<sp/>locked<sp/>by<sp/>ODManager::MakeWaveTrackIndependent,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//so<sp/>we<sp/>pass<sp/>a<sp/>boolean<sp/>flag<sp/>telling<sp/>it<sp/>not<sp/>to<sp/>lock<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_manager_1aef1bcdded223f015b22a0d1d439c23ad" kindref="member">ODManager::Instance</ref>()-&gt;<ref refid="class_o_d_manager_1ab635811e9a08a5e4b14a6736ad83c885" kindref="member">AddNewTask</ref>(task,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="class_o_d_wave_track_task_queue_1a50600260d6e33d0d120ab1d1178a4c20" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_wave_track_task_queue_1a50600260d6e33d0d120ab1d1178a4c20" kindref="member">ODWaveTrackTaskQueue::DemandTrackUpdate</ref>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>track,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>seconds)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(track)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;DemandTrackUpdate(track,seconds);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//Replaces<sp/>all<sp/>instances<sp/>of<sp/>a<sp/>wavetracck<sp/>with<sp/>a<sp/>NEW<sp/>one<sp/>(effectively<sp/>transferes<sp/>the<sp/>task.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="class_o_d_wave_track_task_queue_1a89ffe5e2d7ed615108ae59374dc44192" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_wave_track_task_queue_1a89ffe5e2d7ed615108ae59374dc44192" kindref="member">ODWaveTrackTaskQueue::ReplaceWaveTrack</ref>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>oldTrack,<sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>newTrack)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(oldTrack)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="class_o_d_wave_track_task_queue_1a89ffe5e2d7ed615108ae59374dc44192" kindref="member">ReplaceWaveTrack</ref>(oldTrack,newTrack);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="class_o_d_wave_track_task_queue_1ac7ae645d36f3a3769316e929d84a3dd4" kindref="member">mTracks</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_wave_track_task_queue_1ac7ae645d36f3a3769316e929d84a3dd4" kindref="member">mTracks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]==oldTrack)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1ac7ae645d36f3a3769316e929d84a3dd4" kindref="member">mTracks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=newTrack;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//returns<sp/>the<sp/>wavetrack<sp/>at<sp/>position<sp/>x.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="class_o_d_wave_track_task_queue_1a09b6539f4a8cb0388291d20f521b9cfe" refkind="member"><highlight class="normal"><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/><ref refid="class_o_d_wave_track_task_queue_1a09b6539f4a8cb0388291d20f521b9cfe" kindref="member">ODWaveTrackTaskQueue::GetWaveTrack</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>ret<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/><ref refid="class_o_d_wave_track_task_queue_1ac7ae645d36f3a3769316e929d84a3dd4" kindref="member">mTracks</ref>.size())</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="class_o_d_wave_track_task_queue_1ac7ae645d36f3a3769316e929d84a3dd4" kindref="member">mTracks</ref>[x];</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="class_o_d_wave_track_task_queue_1acdff21bd79058284dc516f78e44703f6" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_o_d_wave_track_task_queue_1acdff21bd79058284dc516f78e44703f6" kindref="member">ODWaveTrackTaskQueue::GetNumWaveTracks</ref>()</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/>ret=<ref refid="class_o_d_wave_track_task_queue_1ac7ae645d36f3a3769316e929d84a3dd4" kindref="member">mTracks</ref>.size();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="class_o_d_wave_track_task_queue_1a66b9e1509e6066969012ec4e1d6ba3be" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_o_d_wave_track_task_queue_1a66b9e1509e6066969012ec4e1d6ba3be" kindref="member">ODWaveTrackTaskQueue::GetNumTasks</ref>()</highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/>ret=<ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>.size();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="class_o_d_wave_track_task_queue_1afc3a9b1a81e7ddd54fdb80b076b46c47" refkind="member"><highlight class="normal"><ref refid="class_o_d_task" kindref="compound">ODTask</ref>*<sp/><ref refid="class_o_d_wave_track_task_queue_1afc3a9b1a81e7ddd54fdb80b076b46c47" kindref="member">ODWaveTrackTaskQueue::GetTask</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task" kindref="compound">ODTask</ref>*<sp/>ret<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/><ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>.size())</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>[x];</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//returns<sp/>true<sp/>if<sp/>either<sp/>tracks<sp/>or<sp/>tasks<sp/>are<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="class_o_d_wave_track_task_queue_1a103649c6c70fc522b4d40be235ea8fbb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_o_d_wave_track_task_queue_1a103649c6c70fc522b4d40be235ea8fbb" kindref="member">ODWaveTrackTaskQueue::IsEmpty</ref>()</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isEmpty;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/>isEmpty<sp/>=<sp/><ref refid="class_o_d_wave_track_task_queue_1ac7ae645d36f3a3769316e929d84a3dd4" kindref="member">mTracks</ref>.size()&lt;=0;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a100b3f3b1091b8abc5b30e3365f8e5b3" kindref="member">mTracksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/>isEmpty<sp/>=<sp/>isEmpty<sp/>||<sp/><ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>.size()&lt;=0;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isEmpty;</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//returns<sp/>true<sp/>if<sp/>the<sp/>foremost<sp/>task<sp/>exists<sp/>and<sp/>is<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="class_o_d_wave_track_task_queue_1ab784be325fca9f544c81e1456f9aa317" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_o_d_wave_track_task_queue_1ab784be325fca9f544c81e1456f9aa317" kindref="member">ODWaveTrackTaskQueue::IsFrontTaskComplete</ref>()</highlight></codeline>
<codeline lineno="284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>.size())</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//there<sp/>is<sp/>a<sp/>chance<sp/>the<sp/>task<sp/>got<sp/>updated<sp/>and<sp/>now<sp/>has<sp/>more<sp/>to<sp/>do,<sp/>(like<sp/>when<sp/>it<sp/>is<sp/>joined<sp/>with<sp/>a<sp/>NEW<sp/>track)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>[0]-&gt;RecalculatePercentComplete();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>[0]-&gt;IsComplete();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="class_o_d_wave_track_task_queue_1a5003850e42c56fe77a8fa511b911a216" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_wave_track_task_queue_1a5003850e42c56fe77a8fa511b911a216" kindref="member">ODWaveTrackTaskQueue::RemoveFrontTask</ref>()</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>.size())</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//wait<sp/>for<sp/>the<sp/>task<sp/>to<sp/>stop<sp/>running.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>[0];</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>.erase(<ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>.begin());</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="class_o_d_wave_track_task_queue_1ad9932b0a64d16989df8664acdce516e3" refkind="member"><highlight class="normal"><ref refid="class_o_d_task" kindref="compound">ODTask</ref>*<sp/><ref refid="class_o_d_wave_track_task_queue_1ad9932b0a64d16989df8664acdce516e3" kindref="member">ODWaveTrackTaskQueue::GetFrontTask</ref>()</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>.size())</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_o_d_wave_track_task_queue_1ac588566fcb4c38b49e2bd29f78ad92fb" kindref="member">mTasks</ref>[0];</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a330f304c94aeca1402d1bfe1cc2870fa" kindref="member">mTasksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="class_o_d_wave_track_task_queue_1acb8e8f090235b422276395410eed07d3" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_wave_track_task_queue_1acb8e8f090235b422276395410eed07d3" kindref="member">ODWaveTrackTaskQueue::FillTipForWaveTrack</ref>(<sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/>wxString<sp/>&amp;tip<sp/>)</highlight></codeline>
<codeline lineno="329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_wave_track_task_queue_1a59f5152239f913ea545b3347c7ebb97b" kindref="member">ContainsWaveTrack</ref>(t)<sp/>&amp;&amp;<sp/><ref refid="class_o_d_wave_track_task_queue_1a66b9e1509e6066969012ec4e1d6ba3be" kindref="member">GetNumTasks</ref>())</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if(GetNumTasks()==1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_wave_track_task_queue_1a19654517cedf1ee7b271dc543e439ea1" kindref="member">mTipMsg</ref>.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>%2.0f%%<sp/>complete.<sp/><sp/>Click<sp/>to<sp/>change<sp/>task<sp/>focal<sp/>point.&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_o_d_wave_track_task_queue_1ad9932b0a64d16989df8664acdce516e3" kindref="member">GetFrontTask</ref>()-&gt;GetTip(),<sp/><ref refid="class_o_d_wave_track_task_queue_1ad9932b0a64d16989df8664acdce516e3" kindref="member">GetFrontTask</ref>()-&gt;PercentComplete()*100.0<sp/>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>msg.Printf(_(&quot;%s<sp/>%d<sp/>additional<sp/>tasks<sp/>remaining.&quot;),<sp/>GetFrontTask()-&gt;GetTip().c_str(),<sp/>GetNumTasks());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tip<sp/>=<sp/><ref refid="class_o_d_wave_track_task_queue_1a19654517cedf1ee7b271dc543e439ea1" kindref="member">mTipMsg</ref>.c_str();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODWaveTrackTaskQueue.cpp"/>
  </compounddef>
</doxygen>
