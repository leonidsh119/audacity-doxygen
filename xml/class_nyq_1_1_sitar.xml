<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_nyq_1_1_sitar" kind="class" language="C++" prot="public">
    <compoundname>Nyq::Sitar</compoundname>
    <basecompoundref refid="class_nyq_1_1_instrmnt" prot="public" virt="non-virtual">Nyq::Instrmnt</basecompoundref>
    <includes refid="_sitar_8h" local="no">Sitar.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_nyq_1_1_sitar_1a32f19e1e08eee588ba905d80f51d3fbb" prot="protected" static="no" mutable="no">
        <type><ref refid="class_nyq_1_1_delay_a" kindref="compound">DelayA</ref></type>
        <definition>DelayA Nyq::Sitar::delayLine_</definition>
        <argsstring></argsstring>
        <name>delayLine_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" line="60" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_nyq_1_1_sitar_1a80fc83b557930d1d96fc0f286bb6d7c3" prot="protected" static="no" mutable="no">
        <type><ref refid="class_nyq_1_1_one_zero" kindref="compound">OneZero</ref></type>
        <definition>OneZero Nyq::Sitar::loopFilter_</definition>
        <argsstring></argsstring>
        <name>loopFilter_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" line="61" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_nyq_1_1_sitar_1ae2f9f4955a6facfce935efc75128f599" prot="protected" static="no" mutable="no">
        <type><ref refid="class_nyq_1_1_noise" kindref="compound">Noise</ref></type>
        <definition>Noise Nyq::Sitar::noise_</definition>
        <argsstring></argsstring>
        <name>noise_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" line="62" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_nyq_1_1_sitar_1a0016f0999222bf430b84aa386d95c11d" prot="protected" static="no" mutable="no">
        <type><ref refid="class_nyq_1_1_a_d_s_r" kindref="compound">ADSR</ref></type>
        <definition>ADSR Nyq::Sitar::envelope_</definition>
        <argsstring></argsstring>
        <name>envelope_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" line="63" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_nyq_1_1_sitar_1a966ff4d5349640aff398fa5af4635811" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
        <definition>StkFloat Nyq::Sitar::loopGain_</definition>
        <argsstring></argsstring>
        <name>loopGain_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" line="65" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_nyq_1_1_sitar_1aef5c3572a0588d617e8c68659d272b4e" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
        <definition>StkFloat Nyq::Sitar::amGain_</definition>
        <argsstring></argsstring>
        <name>amGain_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" line="66" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_nyq_1_1_sitar_1a0eb324a14bdd7f544a273e5984197d6d" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
        <definition>StkFloat Nyq::Sitar::delay_</definition>
        <argsstring></argsstring>
        <name>delay_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" line="67" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_nyq_1_1_sitar_1ac60d88700b8e542affd3b9a106d2ce5a" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
        <definition>StkFloat Nyq::Sitar::targetDelay_</definition>
        <argsstring></argsstring>
        <name>targetDelay_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" line="68" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_nyq_1_1_sitar_1a8432a087a602a0dce715045d670c11a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Sitar::Sitar</definition>
        <argsstring>(StkFloat lowestFrequency=20)</argsstring>
        <name>Sitar</name>
        <param>
          <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>lowestFrequency</declname>
          <defval>20</defval>
        </param>
        <briefdescription>
<para>Class constructor, taking the lowest desired playing frequency. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" line="36" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Sitar.cpp" bodystart="25" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_sitar_1ae249d9a9ddc73ecadd1475f3142b5c2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Sitar::~Sitar</definition>
        <argsstring>()</argsstring>
        <name>~Sitar</name>
        <briefdescription>
<para>Class destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" line="39" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Sitar.cpp" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_sitar_1a7f0c83684744ce9e301149d0fab5a995" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Sitar::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Reset and clear all internal state. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" line="42" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Sitar.cpp" bodystart="44" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_sitar_1a993d02fdf71bc6b0a51cc82a71bc4a88" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Sitar::setFrequency</definition>
        <argsstring>(StkFloat frequency)</argsstring>
        <name>setFrequency</name>
        <reimplements refid="class_nyq_1_1_instrmnt_1adf75819c0dc509c66fd850a39c052a21">setFrequency</reimplements>
        <param>
          <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>frequency</declname>
        </param>
        <briefdescription>
<para>Set instrument parameters for a particular frequency. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" line="45" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Sitar.cpp" bodystart="50" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_sitar_1ae51cc63d5cb224d72f4e6e8c164aa060" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Sitar::pluck</definition>
        <argsstring>(StkFloat amplitude)</argsstring>
        <name>pluck</name>
        <param>
          <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>amplitude</declname>
        </param>
        <briefdescription>
<para>Pluck the string with the given amplitude using the current frequency. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" line="48" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Sitar.cpp" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_sitar_1ae3e32e47a7afc3637521a564116a820e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Sitar::noteOn</definition>
        <argsstring>(StkFloat frequency, StkFloat amplitude)</argsstring>
        <name>noteOn</name>
        <reimplements refid="class_nyq_1_1_instrmnt_1a6e4522cf27022d191d7d2c66fa51b2c5">noteOn</reimplements>
        <param>
          <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>frequency</declname>
        </param>
        <param>
          <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>amplitude</declname>
        </param>
        <briefdescription>
<para>Start a note with the given frequency and amplitude. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" line="51" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Sitar.cpp" bodystart="71" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_sitar_1adb1495b1b68780cc1c039a9aa8bf023c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Sitar::noteOff</definition>
        <argsstring>(StkFloat amplitude)</argsstring>
        <name>noteOff</name>
        <reimplements refid="class_nyq_1_1_instrmnt_1a5190f029653fd24b138df6a71cab3ed4">noteOff</reimplements>
        <param>
          <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>amplitude</declname>
        </param>
        <briefdescription>
<para>Stop a note with the given amplitude (speed of decay). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" line="54" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Sitar.cpp" bodystart="83" bodyend="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_nyq_1_1_sitar_1ab2d2e8830ce30571dd789dee7a7ccb18" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
        <definition>StkFloat Sitar::computeSample</definition>
        <argsstring>(void)</argsstring>
        <name>computeSample</name>
        <reimplements refid="class_nyq_1_1_instrmnt_1a2c1ed783df6b199494cefd6054eb8e4b">computeSample</reimplements>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" line="58" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Sitar.cpp" bodystart="103" bodyend="117"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="10252">
        <label>Nyq::Stk</label>
        <link refid="class_nyq_1_1_stk"/>
      </node>
      <node id="10250">
        <label>Nyq::Sitar</label>
        <link refid="class_nyq_1_1_sitar"/>
        <childnode refid="10251" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10251">
        <label>Nyq::Instrmnt</label>
        <link refid="class_nyq_1_1_instrmnt"/>
        <childnode refid="10252" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10257">
        <label>Nyq::Generator</label>
        <link refid="class_nyq_1_1_generator"/>
        <childnode refid="10255" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10256">
        <label>Nyq::Noise</label>
        <link refid="class_nyq_1_1_noise"/>
        <childnode refid="10257" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10263">
        <label>Nyq::OneZero</label>
        <link refid="class_nyq_1_1_one_zero"/>
        <childnode refid="10260" relation="protected-inheritance">
        </childnode>
      </node>
      <node id="10255">
        <label>Nyq::Stk</label>
        <link refid="class_nyq_1_1_stk"/>
      </node>
      <node id="10253">
        <label>Nyq::Sitar</label>
        <link refid="class_nyq_1_1_sitar"/>
        <childnode refid="10254" relation="public-inheritance">
        </childnode>
        <childnode refid="10256" relation="usage">
          <edgelabel>noise_</edgelabel>
        </childnode>
        <childnode refid="10258" relation="usage">
          <edgelabel>delayLine_</edgelabel>
        </childnode>
        <childnode refid="10261" relation="usage">
          <edgelabel>envelope_</edgelabel>
        </childnode>
        <childnode refid="10263" relation="usage">
          <edgelabel>loopFilter_</edgelabel>
        </childnode>
      </node>
      <node id="10260">
        <label>Nyq::Filter</label>
        <link refid="class_nyq_1_1_filter"/>
        <childnode refid="10255" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10259">
        <label>Nyq::Delay</label>
        <link refid="class_nyq_1_1_delay"/>
        <childnode refid="10260" relation="protected-inheritance">
        </childnode>
      </node>
      <node id="10254">
        <label>Nyq::Instrmnt</label>
        <link refid="class_nyq_1_1_instrmnt"/>
        <childnode refid="10255" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10261">
        <label>Nyq::ADSR</label>
        <link refid="class_nyq_1_1_a_d_s_r"/>
        <childnode refid="10262" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10262">
        <label>Nyq::Envelope</label>
        <link refid="class_nyq_1_1_envelope"/>
        <childnode refid="10257" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10258">
        <label>Nyq::DelayA</label>
        <link refid="class_nyq_1_1_delay_a"/>
        <childnode refid="10259" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" line="33" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Sitar.h" bodystart="32" bodyend="70"/>
    <listofallmembers>
      <member refid="class_nyq_1_1_sitar_1aef5c3572a0588d617e8c68659d272b4e" prot="protected" virt="non-virtual"><scope>Nyq::Sitar</scope><name>amGain_</name></member>
      <member refid="class_nyq_1_1_sitar_1a7f0c83684744ce9e301149d0fab5a995" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>clear</name></member>
      <member refid="class_nyq_1_1_sitar_1ab2d2e8830ce30571dd789dee7a7ccb18" prot="protected" virt="virtual"><scope>Nyq::Sitar</scope><name>computeSample</name></member>
      <member refid="class_nyq_1_1_instrmnt_1a2f51ff6781de58c7af00608609a82704" prot="public" virt="virtual"><scope>Nyq::Sitar</scope><name>controlChange</name></member>
      <member refid="class_nyq_1_1_sitar_1a0eb324a14bdd7f544a273e5984197d6d" prot="protected" virt="non-virtual"><scope>Nyq::Sitar</scope><name>delay_</name></member>
      <member refid="class_nyq_1_1_sitar_1a32f19e1e08eee588ba905d80f51d3fbb" prot="protected" virt="non-virtual"><scope>Nyq::Sitar</scope><name>delayLine_</name></member>
      <member refid="class_nyq_1_1_sitar_1a0016f0999222bf430b84aa386d95c11d" prot="protected" virt="non-virtual"><scope>Nyq::Sitar</scope><name>envelope_</name></member>
      <member refid="class_nyq_1_1_stk_1a5ef3185686e3fdb17fe7ec095e6f666f" prot="protected" virt="non-virtual"><scope>Nyq::Sitar</scope><name>errorString_</name></member>
      <member refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>handleError</name></member>
      <member refid="class_nyq_1_1_stk_1a2f5c48d8e177d91b44ec4d3f882cb3f8" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>handleError</name></member>
      <member refid="class_nyq_1_1_stk_1abb5420cd69433c6b98a17c9b0dc88a79" prot="protected" virt="non-virtual"><scope>Nyq::Sitar</scope><name>handleError</name></member>
      <member refid="class_nyq_1_1_instrmnt_1ae51c552f09f0b24ebf314135e1b20af8" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>Instrmnt</name></member>
      <member refid="class_nyq_1_1_instrmnt_1a7d46c2f8bfd2aa3f97dea909853cbd67" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>lastOut</name></member>
      <member refid="class_nyq_1_1_instrmnt_1a70a4fa6080b836b34690cc15abffa2e0" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>lastOutLeft</name></member>
      <member refid="class_nyq_1_1_instrmnt_1acc11ca0329a4cc57faeb8c331ad0340b" prot="protected" virt="non-virtual"><scope>Nyq::Sitar</scope><name>lastOutput_</name></member>
      <member refid="class_nyq_1_1_instrmnt_1ab6253dc27031f98bf7e1c4af6f99b0b9" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>lastOutRight</name></member>
      <member refid="class_nyq_1_1_sitar_1a80fc83b557930d1d96fc0f286bb6d7c3" prot="protected" virt="non-virtual"><scope>Nyq::Sitar</scope><name>loopFilter_</name></member>
      <member refid="class_nyq_1_1_sitar_1a966ff4d5349640aff398fa5af4635811" prot="protected" virt="non-virtual"><scope>Nyq::Sitar</scope><name>loopGain_</name></member>
      <member refid="class_nyq_1_1_sitar_1ae2f9f4955a6facfce935efc75128f599" prot="protected" virt="non-virtual"><scope>Nyq::Sitar</scope><name>noise_</name></member>
      <member refid="class_nyq_1_1_sitar_1adb1495b1b68780cc1c039a9aa8bf023c" prot="public" virt="virtual"><scope>Nyq::Sitar</scope><name>noteOff</name></member>
      <member refid="class_nyq_1_1_sitar_1ae3e32e47a7afc3637521a564116a820e" prot="public" virt="virtual"><scope>Nyq::Sitar</scope><name>noteOn</name></member>
      <member refid="class_nyq_1_1_sitar_1ae51cc63d5cb224d72f4e6e8c164aa060" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>pluck</name></member>
      <member refid="class_nyq_1_1_stk_1ae2c5d0906c856ce8e0a3c1e3b898bf7e" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>printErrors</name></member>
      <member refid="class_nyq_1_1_stk_1a97ee0bb2086a47109c27ea524bd5dbd4" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>rawwavePath</name></member>
      <member refid="class_nyq_1_1_stk_1a5f60154b24fa1317cf79ac0ef11c30c0" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>sampleRate</name></member>
      <member refid="class_nyq_1_1_sitar_1a993d02fdf71bc6b0a51cc82a71bc4a88" prot="public" virt="virtual"><scope>Nyq::Sitar</scope><name>setFrequency</name></member>
      <member refid="class_nyq_1_1_stk_1aedb8a47be994bff926bd6caea4ff23ca" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>setRawwavePath</name></member>
      <member refid="class_nyq_1_1_stk_1a4a22b5faa4bf01ed8a667bf3d120dcc1" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>setSampleRate</name></member>
      <member refid="class_nyq_1_1_stk_1ae9d0da2ed11e2ec410993499250585e2" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>showWarnings</name></member>
      <member refid="class_nyq_1_1_sitar_1a8432a087a602a0dce715045d670c11a9" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>Sitar</name></member>
      <member refid="class_nyq_1_1_stk_1a6a9d618318d99d01d23bf904e6b03e5b" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>sleep</name></member>
      <member refid="class_nyq_1_1_stk_1a432702f3d61bdbd5691ec1fe83e95e63" prot="protected" virt="non-virtual"><scope>Nyq::Sitar</scope><name>Stk</name></member>
      <member refid="class_nyq_1_1_stk_1a63c3942bca00afc51c38e6c2c99f72db" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>STK_FLOAT32</name></member>
      <member refid="class_nyq_1_1_stk_1a7c6c1932fcab4d5adacd9ae4c3d36054" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>STK_FLOAT64</name></member>
      <member refid="class_nyq_1_1_stk_1a74923e12da75c2b13fac753ae381fbe3" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>STK_SINT16</name></member>
      <member refid="class_nyq_1_1_stk_1a02d5a1c8e8d98868a158053727ef4315" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>STK_SINT24</name></member>
      <member refid="class_nyq_1_1_stk_1acf8717472230415ff11bf499fc079bc5" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>STK_SINT32</name></member>
      <member refid="class_nyq_1_1_stk_1a5534403dfce86091451c6f23f48e39b3" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>STK_SINT8</name></member>
      <member refid="class_nyq_1_1_stk_1aa6d484c1fa51ab651997a158cdc42526" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>StkFormat</name></member>
      <member refid="class_nyq_1_1_stk_1ae4167fa5875df140c384043c856254bd" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>swap16</name></member>
      <member refid="class_nyq_1_1_stk_1a03313811aab6c24b39f1041fe961a54f" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>swap32</name></member>
      <member refid="class_nyq_1_1_stk_1ab6f7bdf875fe733f732619be3aa89603" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>swap64</name></member>
      <member refid="class_nyq_1_1_sitar_1ac60d88700b8e542affd3b9a106d2ce5a" prot="protected" virt="non-virtual"><scope>Nyq::Sitar</scope><name>targetDelay_</name></member>
      <member refid="class_nyq_1_1_instrmnt_1a9f774ea648767c7f00c3acf9d1cd4c33" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>tick</name></member>
      <member refid="class_nyq_1_1_instrmnt_1a9098b45b45fdc4733e1f201b206692a7" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>tick</name></member>
      <member refid="class_nyq_1_1_instrmnt_1a44eee031e24dc71cbd0d01e295477a2a" prot="public" virt="virtual"><scope>Nyq::Sitar</scope><name>~Instrmnt</name></member>
      <member refid="class_nyq_1_1_sitar_1ae249d9a9ddc73ecadd1475f3142b5c2b" prot="public" virt="non-virtual"><scope>Nyq::Sitar</scope><name>~Sitar</name></member>
      <member refid="class_nyq_1_1_stk_1a2d2e37fc5ff97bf8538ff92b12e54069" prot="protected" virt="virtual"><scope>Nyq::Sitar</scope><name>~Stk</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
