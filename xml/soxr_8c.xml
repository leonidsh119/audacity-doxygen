<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="soxr_8c" kind="file" language="C++">
    <compoundname>soxr.c</compoundname>
    <includes local="no">math.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">time.h</includes>
    <includes refid="soxr_8h" local="yes">soxr.h</includes>
    <includes refid="data-io_8h" local="yes">data-io.h</includes>
    <includes refid="libsoxr_2src_2internal_8h" local="yes">internal.h</includes>
    <incdepgraph>
      <node id="21394">
        <label>stdarg.h</label>
      </node>
      <node id="21392">
        <label>internal.h</label>
        <link refid="libsoxr_2src_2internal_8h"/>
        <childnode refid="21393" relation="include">
        </childnode>
        <childnode refid="21394" relation="include">
        </childnode>
        <childnode refid="21395" relation="include">
        </childnode>
      </node>
      <node id="21386">
        <label>stdlib.h</label>
      </node>
      <node id="21390">
        <label>stddef.h</label>
      </node>
      <node id="21393">
        <label>soxr-config.h</label>
      </node>
      <node id="21387">
        <label>string.h</label>
      </node>
      <node id="21388">
        <label>time.h</label>
      </node>
      <node id="21385">
        <label>math.h</label>
      </node>
      <node id="21391">
        <label>data-io.h</label>
        <link refid="data-io_8h"/>
        <childnode refid="21389" relation="include">
        </childnode>
      </node>
      <node id="21384">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c</label>
        <link refid="soxr.c"/>
        <childnode refid="21385" relation="include">
        </childnode>
        <childnode refid="21386" relation="include">
        </childnode>
        <childnode refid="21387" relation="include">
        </childnode>
        <childnode refid="21388" relation="include">
        </childnode>
        <childnode refid="21389" relation="include">
        </childnode>
        <childnode refid="21391" relation="include">
        </childnode>
        <childnode refid="21392" relation="include">
        </childnode>
      </node>
      <node id="21389">
        <label>soxr.h</label>
        <link refid="soxr_8h"/>
        <childnode refid="21390" relation="include">
        </childnode>
      </node>
      <node id="21395">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structsoxr" prot="public">soxr</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="soxr_8c_1afa5cac6ba29701a454642a51a238c9da" prot="public" static="no">
        <name>resampler_input</name>
        <initializer>(*(<ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref> * (*)(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *, <ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref> * <ref refid="test__w__saw8_8c_1a54185623a5a093f671a73e5fba6197a1" kindref="member">samples</ref>, size_t   n))<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>-&gt;control_block[0])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="26" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="soxr_8c_1a632e91ff7c6f16d543b57a95b40d9380" prot="public" static="no">
        <name>resampler_process</name>
        <initializer>(*(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> (*)(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *, size_t))<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>-&gt;control_block[1])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="27" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="soxr_8c_1ad4dbd71b22b73f0827ece52413dd8c73" prot="public" static="no">
        <name>resampler_output</name>
        <initializer>(*(<ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> * (*)(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *, <ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref> * <ref refid="test__w__saw8_8c_1a54185623a5a093f671a73e5fba6197a1" kindref="member">samples</ref>, size_t * n))<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>-&gt;control_block[2])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="28" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="soxr_8c_1a824d53a54a6a4ee420451a75472bafd9" prot="public" static="no">
        <name>resampler_flush</name>
        <initializer>(*(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> (*)(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *))<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>-&gt;control_block[3])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="29" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="soxr_8c_1a0c05d68e7b68abdc988b222ed96e7d33" prot="public" static="no">
        <name>resampler_close</name>
        <initializer>(*(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> (*)(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *))<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>-&gt;control_block[4])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="30" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="soxr_8c_1a514599a3dcaa2655d59ca36871481bab" prot="public" static="no">
        <name>resampler_delay</name>
        <initializer>(*(double (*)(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *))<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>-&gt;control_block[5])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="31" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="soxr_8c_1a4ef16efe1f2a6506f2ea87e4007711fb" prot="public" static="no">
        <name>resampler_sizes</name>
        <initializer>(*(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> (*)(size_t * shared, size_t * channel))<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>-&gt;control_block[6])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="32" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="soxr_8c_1a55fc3f7436507650d75a8e043f1b90b8" prot="public" static="no">
        <name>resampler_create</name>
        <initializer>(*(char <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> * (*)(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> * channel, <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> * shared, double io_ratio, <ref refid="soxr_8h_1afe5d91d1e46d7d7f9aff9a87f62e6665" kindref="member">soxr_quality_spec_t</ref> * q_spec, <ref refid="soxr_8h_1afcbbf76969491ce9a1f5e26f2ae54231" kindref="member">soxr_runtime_spec_t</ref> * r_spec, double <ref refid="seqread_8h_1a26a42c039941e1d6aa8616c6d7b32541" kindref="member">scale</ref>))<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>-&gt;control_block[7])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="33" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="soxr_8c_1a5150a43e6a46a92a5802f6c2649ade85" prot="public" static="no">
        <name>resampler_set_io_ratio</name>
        <initializer>(*(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> (*)(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *, double io_ratio, size_t <ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>))<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>-&gt;control_block[8])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="34" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="soxr_8c_1a014948fba02133dd843740455a1d1d4d" prot="public" static="no">
        <name>resampler_id</name>
        <initializer>(*(char <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> * (*)(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>))<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>-&gt;control_block[9])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="35" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="soxr_8c_1aee1b99901113e8fbc4866fc090301a35" prot="public" static="no">
        <name>TO_3dB</name>
        <param><defname>a</defname></param>
        <initializer>((1.6e-6*a-7.5e-4)*a+.646)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="71" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="soxr_8c_1a94d12e404c90386f2df999c65b73e447" prot="public" static="no">
        <name>LOW_Q_BW0</name>
        <initializer>(1385 / 2048.) /* 0.67625 rounded to be <ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref> FP exact. */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="72" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" prot="public" static="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>typedef void sample_t</definition>
        <argsstring></argsstring>
        <name>sample_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="22" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="soxr_8c_1afc8fa388a84372fc7153206dfbf24374" prot="public" static="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>(*</type>
        <definition>typedef void(*  fn_t) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>fn_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="23" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="soxr_8c_1a6346f09fcfe44916a78c94321ed37c5d" prot="public" static="no">
        <type><ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref></type>
        <definition>typedef fn_t control_block_t[10]</definition>
        <argsstring>[10]</argsstring>
        <name>control_block_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="24" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="soxr_8c_1a335a7d30bcecb11f27d6406c643ee21e" prot="public" static="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>typedef void* resampler_t</definition>
        <argsstring></argsstring>
        <name>resampler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="37" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="soxr_8c_1a0a9be7db2b8063b74a6ef2366ccccbdb" prot="public" static="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>typedef void* resampler_shared_t</definition>
        <argsstring></argsstring>
        <name>resampler_shared_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="38" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="soxr_8c_1ae38d1593aaf4055ec74e7908e15f941a" prot="public" static="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>(*</type>
        <definition>typedef void(*  deinterleave_t) (sample_t **dest, soxr_datatype_t data_type, void const **src0, size_t n, unsigned ch)</definition>
        <argsstring>)(sample_t **dest, soxr_datatype_t data_type, void const **src0, size_t n, unsigned ch)</argsstring>
        <name>deinterleave_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="39" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="soxr_8c_1a5a5f4f8a0be6b57c9c9d4104728499e4" prot="public" static="no">
        <type>size_t(*</type>
        <definition>typedef size_t(*  interleave_t) (soxr_datatype_t data_type, void **dest, sample_t const *const *src, size_t, unsigned, unsigned long *)</definition>
        <argsstring>)(soxr_datatype_t data_type, void **dest, sample_t const *const *src, size_t, unsigned, unsigned long *)</argsstring>
        <name>interleave_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="41" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="soxr_8c_1a7ba90cccbefe4a1695fa104e0d17c7c5" prot="public" static="no" mutable="no">
        <type><ref refid="soxr_8c_1a6346f09fcfe44916a78c94321ed37c5d" kindref="member">control_block_t</ref></type>
        <definition>control_block_t _soxr_rate32s_cb</definition>
        <argsstring></argsstring>
        <name>_soxr_rate32s_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="195" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="soxr_8c_1a07bb449874c0e728be4787affb67079c" prot="public" static="no" mutable="no">
        <type><ref refid="soxr_8c_1a6346f09fcfe44916a78c94321ed37c5d" kindref="member">control_block_t</ref></type>
        <definition>control_block_t _soxr_rate32_cb</definition>
        <argsstring></argsstring>
        <name>_soxr_rate32_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="195" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="soxr_8c_1a717ce91cf6d0933c0e429d1fa5ae5c9a" prot="public" static="no" mutable="no">
        <type><ref refid="soxr_8c_1a6346f09fcfe44916a78c94321ed37c5d" kindref="member">control_block_t</ref></type>
        <definition>control_block_t _soxr_rate64_cb</definition>
        <argsstring></argsstring>
        <name>_soxr_rate64_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="195" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="soxr_8c_1a93c4b9a07d5c5658da02b2eda7721a6e" prot="public" static="no" mutable="no">
        <type><ref refid="soxr_8c_1a6346f09fcfe44916a78c94321ed37c5d" kindref="member">control_block_t</ref></type>
        <definition>control_block_t _soxr_vr32_cb</definition>
        <argsstring></argsstring>
        <name>_soxr_vr32_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="195" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="760" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="soxr_8c_1a720fb029d3c0845c3a3aba9bcf2b16e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
        <definition>char const* soxr_version</definition>
        <argsstring>(void)</argsstring>
        <name>soxr_version</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="15" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="15" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1a8bc34e71491e5ab698dcccdfc06c7ad8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8h_1afe5d91d1e46d7d7f9aff9a87f62e6665" kindref="member">soxr_quality_spec_t</ref></type>
        <definition>soxr_quality_spec_t soxr_quality_spec</definition>
        <argsstring>(unsigned long recipe, unsigned long flags)</argsstring>
        <name>soxr_quality_spec</name>
        <param>
          <type>unsigned long</type>
          <declname>recipe</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="74" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="74" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1a5ac330f45c7b1f4a5d327227455bd961" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
        <definition>char const* soxr_engine</definition>
        <argsstring>(soxr_t p)</argsstring>
        <name>soxr_engine</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="111" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1ab2ae956aeb86e03efb5c068a6bb52955" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t *</type>
        <definition>size_t* soxr_num_clips</definition>
        <argsstring>(soxr_t p)</argsstring>
        <name>soxr_num_clips</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="118" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1a51a9c751bbd6d122e55f7aad7b31ccea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref></type>
        <definition>soxr_error_t soxr_error</definition>
        <argsstring>(soxr_t p)</argsstring>
        <name>soxr_error</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="125" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1adef2594d0bbe957075423c9450477fc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8h_1afcbbf76969491ce9a1f5e26f2ae54231" kindref="member">soxr_runtime_spec_t</ref></type>
        <definition>soxr_runtime_spec_t soxr_runtime_spec</definition>
        <argsstring>(unsigned num_threads)</argsstring>
        <name>soxr_runtime_spec</name>
        <param>
          <type>unsigned</type>
          <declname>num_threads</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="132" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="132" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1a6003249f89c7705eef58d69f0afae011" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8h_1a9a3982afc7db355cc4b40b4ff31ffb30" kindref="member">soxr_io_spec_t</ref></type>
        <definition>soxr_io_spec_t soxr_io_spec</definition>
        <argsstring>(soxr_datatype_t itype, soxr_datatype_t otype)</argsstring>
        <name>soxr_io_spec</name>
        <param>
          <type><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66d" kindref="member">soxr_datatype_t</ref></type>
          <declname>itype</declname>
        </param>
        <param>
          <type><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66d" kindref="member">soxr_datatype_t</ref></type>
          <declname>otype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="145" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="145" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1a763983e4a1f00869383ba22421b768e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
        <definition>soxr_t soxr_create</definition>
        <argsstring>(double input_rate, double output_rate, unsigned num_channels, soxr_error_t *error0, soxr_io_spec_t const *io_spec, soxr_quality_spec_t const *q_spec, soxr_runtime_spec_t const *runtime_spec)</argsstring>
        <name>soxr_create</name>
        <param>
          <type>double</type>
          <declname>input_rate</declname>
        </param>
        <param>
          <type>double</type>
          <declname>output_rate</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>num_channels</declname>
        </param>
        <param>
          <type><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref> *</type>
          <declname>error0</declname>
        </param>
        <param>
          <type><ref refid="soxr_8h_1a9a3982afc7db355cc4b40b4ff31ffb30" kindref="member">soxr_io_spec_t</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>io_spec</declname>
        </param>
        <param>
          <type><ref refid="soxr_8h_1afe5d91d1e46d7d7f9aff9a87f62e6665" kindref="member">soxr_quality_spec_t</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>q_spec</declname>
        </param>
        <param>
          <type><ref refid="soxr_8h_1afcbbf76969491ce9a1f5e26f2ae54231" kindref="member">soxr_runtime_spec_t</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>runtime_spec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="199" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="199" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1a5ef8012f6d313a2887c135359af035f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref></type>
        <definition>soxr_error_t soxr_set_input_fn</definition>
        <argsstring>(soxr_t p, soxr_input_fn_t input_fn, void *input_fn_state, size_t max_ilen)</argsstring>
        <name>soxr_set_input_fn</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="soxr_8h_1a75de274660354270e1e92a4b66a6e915" kindref="member">soxr_input_fn_t</ref></type>
          <declname>input_fn</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>input_fn_state</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_ilen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="276" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="276" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1a5c59cb048ae287aeab5c5a734069bf8b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void soxr_delete0</definition>
        <argsstring>(soxr_t p)</argsstring>
        <name>soxr_delete0</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="287" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="287" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1a96f18f5a39a878e97b127f2913b5eb13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double soxr_delay</definition>
        <argsstring>(soxr_t p)</argsstring>
        <name>soxr_delay</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="305" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="305" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1a47e8331e1ec115fcb34d148bcd83f524" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref></type>
        <definition>static soxr_error_t fatal_error</definition>
        <argsstring>(soxr_t p, soxr_error_t error)</argsstring>
        <name>fatal_error</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref></type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="312" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="312" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1a34570f1d6cf5662023c0bfc0fdf8f44c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref></type>
        <definition>static soxr_error_t initialise</definition>
        <argsstring>(soxr_t p)</argsstring>
        <name>initialise</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="320" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="320" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1a68673f0a61b55e749aa7c6fcef3638f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref></type>
        <definition>soxr_error_t soxr_set_num_channels</definition>
        <argsstring>(soxr_t p, unsigned num_channels)</argsstring>
        <name>soxr_set_num_channels</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>num_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="351" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="351" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1ab9cd1051c49c8a0fa8cc8957d1a7186e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref></type>
        <definition>soxr_error_t soxr_set_io_ratio</definition>
        <argsstring>(soxr_t p, double io_ratio, size_t slew_len)</argsstring>
        <name>soxr_set_io_ratio</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>io_ratio</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>slew_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="363" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="363" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1af3bff5e9b256197fd02730fea110a5ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void soxr_delete</definition>
        <argsstring>(soxr_t p)</argsstring>
        <name>soxr_delete</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="386" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="386" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1afecae2e5d944a6e4ba9eccd18f5584e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref></type>
        <definition>soxr_error_t soxr_clear</definition>
        <argsstring>(soxr_t p)</argsstring>
        <name>soxr_clear</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="394" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="394" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1adc5aba9a0257541e2c98de355fb5e9e9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void soxr_input_1ch</definition>
        <argsstring>(soxr_t p, unsigned i, soxr_cbuf_t src, size_t len)</argsstring>
        <name>soxr_input_1ch</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="soxr_8h_1a6a4a582225738aaea35a30c77b9d55a5" kindref="member">soxr_cbuf_t</ref></type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="416" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="416" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1ac3fd8dbcb2628a432574d894f4ef2e3d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t soxr_input</definition>
        <argsstring>(soxr_t p, void const *in, size_t len)</argsstring>
        <name>soxr_input</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="424" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="424" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1ae096177a106272fa70098ad3b73ffc24" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t soxr_output_1ch</definition>
        <argsstring>(soxr_t p, unsigned i, soxr_buf_t dest, size_t len, bool separated)</argsstring>
        <name>soxr_output_1ch</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="soxr_8h_1a4a2c5d941a40ae917d106ee6e513cc99" kindref="member">soxr_buf_t</ref></type>
          <declname>dest</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>separated</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="448" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="448" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1ae3aa28bbb1b396cc953a2841f2b5379b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t soxr_output_no_callback</definition>
        <argsstring>(soxr_t p, soxr_buf_t out, size_t len)</argsstring>
        <name>soxr_output_no_callback</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="soxr_8h_1a4a2c5d941a40ae917d106ee6e513cc99" kindref="member">soxr_buf_t</ref></type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="464" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="464" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1ae01b0184f5952309aa868d2d3dbd92d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t soxr_output</definition>
        <argsstring>(soxr_t p, void *out, size_t len0)</argsstring>
        <name>soxr_output</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="491" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="491" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1ad925469c9d8d1e36313d01e8ce095a47" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t soxr_i_for_o</definition>
        <argsstring>(soxr_t p, size_t olen, size_t ilen)</argsstring>
        <name>soxr_i_for_o</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>olen</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ilen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="521" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="521" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1a853769187cb96f9e89aadcfe8a0deb10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref></type>
        <definition>soxr_error_t soxr_process</definition>
        <argsstring>(soxr_t p, void const *in, size_t ilen0, size_t *idone0, void *out, size_t olen, size_t *odone0)</argsstring>
        <name>soxr_process</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ilen0</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>idone0</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>olen</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>odone0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="545" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="545" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1aca5d92f0da0d2dab566516564ab69e28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref></type>
        <definition>soxr_error_t soxr_oneshot</definition>
        <argsstring>(double irate, double orate, unsigned num_channels, void const *in, size_t ilen, size_t *idone, void *out, size_t olen, size_t *odone, soxr_io_spec_t const *io_spec, soxr_quality_spec_t const *q_spec, soxr_runtime_spec_t const *runtime_spec)</argsstring>
        <name>soxr_oneshot</name>
        <param>
          <type>double</type>
          <declname>irate</declname>
        </param>
        <param>
          <type>double</type>
          <declname>orate</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>num_channels</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ilen</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>idone</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>olen</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>odone</declname>
        </param>
        <param>
          <type><ref refid="soxr_8h_1a9a3982afc7db355cc4b40b4ff31ffb30" kindref="member">soxr_io_spec_t</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>io_spec</declname>
        </param>
        <param>
          <type><ref refid="soxr_8h_1afe5d91d1e46d7d7f9aff9a87f62e6665" kindref="member">soxr_quality_spec_t</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>q_spec</declname>
        </param>
        <param>
          <type><ref refid="soxr_8h_1afcbbf76969491ce9a1f5e26f2ae54231" kindref="member">soxr_runtime_spec_t</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>runtime_spec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="601" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="601" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="soxr_8c_1a02c27ecbb519f99e44db7e61800db57c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref></type>
        <definition>soxr_error_t soxr_set_error</definition>
        <argsstring>(soxr_t p, soxr_error_t error)</argsstring>
        <name>soxr_set_error</name>
        <param>
          <type><ref refid="soxr_8h_1a44df675bac08abcd8abba9ac40758929" kindref="member">soxr_t</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref></type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" line="628" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c" bodystart="628" bodyend="634"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>SoX<sp/>Resampler<sp/>Library<sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2007-13<sp/>robs@users.sourceforge.net</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licence<sp/>for<sp/>this<sp/>file:<sp/>LGPL<sp/>v2.1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>See<sp/>LICENCE<sp/>for<sp/>details.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="soxr_8h" kindref="compound">soxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="data-io_8h" kindref="compound">data-io.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libsoxr_2src_2internal_8h" kindref="compound">internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="soxr_8h_1afdb09488db1811b5f4bca90145e39049" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="soxr_8c_1a720fb029d3c0845c3a3aba9bcf2b16e4" kindref="member">soxr_version</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;libsoxr-&quot;</highlight><highlight class="normal"><sp/><ref refid="soxr_8h_1a9ff03906366c0510c71fce7ff49e9715" kindref="member">SOXR_THIS_VERSION_STR</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref>;<sp/></highlight><highlight class="comment">/*<sp/>float<sp/>or<sp/>double<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="soxr_8c_1afc8fa388a84372fc7153206dfbf24374" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref><sp/>(*<sp/><ref refid="soxr_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>);</highlight></codeline>
<codeline lineno="24" refid="soxr_8c_1a6346f09fcfe44916a78c94321ed37c5d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="soxr_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref><sp/><ref refid="soxr_8c_1a6346f09fcfe44916a78c94321ed37c5d" kindref="member">control_block_t</ref>[10];</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="soxr_8c_1afa5cac6ba29701a454642a51a238c9da" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>resampler_input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(sample_t<sp/>*<sp/>(*)(void<sp/>*,<sp/>sample_t<sp/>*<sp/>samples,<sp/>size_t<sp/><sp/><sp/>n))p-&gt;control_block[0])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="soxr_8c_1a632e91ff7c6f16d543b57a95b40d9380" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>resampler_process<sp/><sp/><sp/><sp/><sp/><sp/>(*(void<sp/>(*)(void<sp/>*,<sp/>size_t))p-&gt;control_block[1])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="soxr_8c_1ad4dbd71b22b73f0827ece52413dd8c73" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>resampler_output<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(sample_t<sp/>const<sp/>*<sp/>(*)(void<sp/>*,<sp/>sample_t<sp/>*<sp/>samples,<sp/>size_t<sp/>*<sp/>n))p-&gt;control_block[2])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="soxr_8c_1a824d53a54a6a4ee420451a75472bafd9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>resampler_flush<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(void<sp/>(*)(void<sp/>*))p-&gt;control_block[3])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="soxr_8c_1a0c05d68e7b68abdc988b222ed96e7d33" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>resampler_close<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(void<sp/>(*)(void<sp/>*))p-&gt;control_block[4])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="soxr_8c_1a514599a3dcaa2655d59ca36871481bab" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>resampler_delay<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(double<sp/>(*)(void<sp/>*))p-&gt;control_block[5])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="soxr_8c_1a4ef16efe1f2a6506f2ea87e4007711fb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>resampler_sizes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(void<sp/>(*)(size_t<sp/>*<sp/>shared,<sp/>size_t<sp/>*<sp/>channel))p-&gt;control_block[6])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="soxr_8c_1a55fc3f7436507650d75a8e043f1b90b8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>resampler_create<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(char<sp/>const<sp/>*<sp/>(*)(void<sp/>*<sp/>channel,<sp/>void<sp/>*<sp/>shared,<sp/>double<sp/>io_ratio,<sp/>soxr_quality_spec_t<sp/>*<sp/>q_spec,<sp/>soxr_runtime_spec_t<sp/>*<sp/>r_spec,<sp/>double<sp/>scale))p-&gt;control_block[7])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="soxr_8c_1a5150a43e6a46a92a5802f6c2649ade85" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>resampler_set_io_ratio<sp/>(*(void<sp/>(*)(void<sp/>*,<sp/>double<sp/>io_ratio,<sp/>size_t<sp/>len))p-&gt;control_block[8])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="soxr_8c_1a014948fba02133dd843740455a1d1d4d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>resampler_id<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(char<sp/>const<sp/>*<sp/>(*)(void))p-&gt;control_block[9])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="soxr_8c_1a335a7d30bcecb11f27d6406c643ee21e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="soxr_8c_1a335a7d30bcecb11f27d6406c643ee21e" kindref="member">resampler_t</ref>;<sp/></highlight><highlight class="comment">/*<sp/>For<sp/>one<sp/>channel.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="soxr_8c_1a0a9be7db2b8063b74a6ef2366ccccbdb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="soxr_8c_1a0a9be7db2b8063b74a6ef2366ccccbdb" kindref="member">resampler_shared_t</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Between<sp/>channels.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="soxr_8c_1ae38d1593aaf4055ec74e7908e15f941a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref><sp/>(*<sp/><ref refid="soxr_8c_1ae38d1593aaf4055ec74e7908e15f941a" kindref="member">deinterleave_t</ref>)(<ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/>*<sp/>*<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66d" kindref="member">soxr_datatype_t</ref><sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>*<sp/>src0,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ch);</highlight></codeline>
<codeline lineno="41" refid="soxr_8c_1a5a5f4f8a0be6b57c9c9d4104728499e4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>size_t<sp/>(*<sp/><ref refid="soxr_8c_1a5a5f4f8a0be6b57c9c9d4104728499e4" kindref="member">interleave_t</ref>)(<ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66d" kindref="member">soxr_datatype_t</ref><sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>*<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>src,<sp/>size_t,<sp/>unsigned,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="structsoxr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsoxr" kindref="compound">soxr</ref><sp/>{</highlight></codeline>
<codeline lineno="45" refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref>;</highlight></codeline>
<codeline lineno="46" refid="structsoxr_1a285e9db9b8b56e49f5899acc810ada80" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structsoxr_1a285e9db9b8b56e49f5899acc810ada80" kindref="member">io_ratio</ref>;</highlight></codeline>
<codeline lineno="47" refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="48" refid="structsoxr_1ad86308d2e768fb9f67ec488772e73d5c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structsoxr__quality__spec" kindref="compound">soxr_quality_spec_t</ref><sp/><ref refid="structsoxr_1ad86308d2e768fb9f67ec488772e73d5c" kindref="member">q_spec</ref>;</highlight></codeline>
<codeline lineno="49" refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structsoxr__io__spec" kindref="compound">soxr_io_spec_t</ref><sp/><ref refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" kindref="member">io_spec</ref>;</highlight></codeline>
<codeline lineno="50" refid="structsoxr_1a2ba74dd0f08cbb5fa88fdef8abcf0ad6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structsoxr__runtime__spec" kindref="compound">soxr_runtime_spec_t</ref><sp/><ref refid="structsoxr_1a2ba74dd0f08cbb5fa88fdef8abcf0ad6" kindref="member">runtime_spec</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="structsoxr_1af9c48aab4c71a7e277f4ec3c3a9d5f2c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="structsoxr_1af9c48aab4c71a7e277f4ec3c3a9d5f2c" kindref="member">input_fn_state</ref>;</highlight></codeline>
<codeline lineno="53" refid="structsoxr_1a8c0b5ebae0139a0e5ed5b4f95a355cb6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="soxr_8h_1a75de274660354270e1e92a4b66a6e915" kindref="member">soxr_input_fn_t</ref><sp/><ref refid="structsoxr_1a8c0b5ebae0139a0e5ed5b4f95a355cb6" kindref="member">input_fn</ref>;</highlight></codeline>
<codeline lineno="54" refid="structsoxr_1aef67b4a20e64992d21b55411ac82863f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structsoxr_1aef67b4a20e64992d21b55411ac82863f" kindref="member">max_ilen</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="structsoxr_1a7a11d730c8daa76d2367fd94b2384bf9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="soxr_8c_1a0a9be7db2b8063b74a6ef2366ccccbdb" kindref="member">resampler_shared_t</ref><sp/><ref refid="structsoxr_1a7a11d730c8daa76d2367fd94b2384bf9" kindref="member">shared</ref>;</highlight></codeline>
<codeline lineno="57" refid="structsoxr_1a0a7572ca0ce1d351fdf4c2a72ec48657" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="soxr_8c_1a335a7d30bcecb11f27d6406c643ee21e" kindref="member">resampler_t</ref><sp/>*<sp/><ref refid="structsoxr_1a0a7572ca0ce1d351fdf4c2a72ec48657" kindref="member">resamplers</ref>;</highlight></codeline>
<codeline lineno="58" refid="structsoxr_1a89d093b499c528f01c5e53f282d68310" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="soxr_8c_1a6346f09fcfe44916a78c94321ed37c5d" kindref="member">control_block_t</ref><sp/><ref refid="structsoxr_1a89d093b499c528f01c5e53f282d68310" kindref="member">control_block</ref>;</highlight></codeline>
<codeline lineno="59" refid="structsoxr_1a5628a132543e83108ce76ac059f85a9f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="soxr_8c_1ae38d1593aaf4055ec74e7908e15f941a" kindref="member">deinterleave_t</ref><sp/><ref refid="structsoxr_1a5628a132543e83108ce76ac059f85a9f" kindref="member">deinterleave</ref>;</highlight></codeline>
<codeline lineno="60" refid="structsoxr_1ac359ffb418677833569b7c8faeea8e62" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="soxr_8c_1a5a5f4f8a0be6b57c9c9d4104728499e4" kindref="member">interleave_t</ref><sp/><ref refid="structsoxr_1ac359ffb418677833569b7c8faeea8e62" kindref="member">interleave</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="structsoxr_1ace64c1784e42f0efbd1afdc2eab6b095" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>*<sp/><ref refid="structsoxr_1ace64c1784e42f0efbd1afdc2eab6b095" kindref="member">channel_ptrs</ref>;</highlight></codeline>
<codeline lineno="63" refid="structsoxr_1ab60ab840ebac4faebf2cb2f30b10818b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structsoxr_1ab60ab840ebac4faebf2cb2f30b10818b" kindref="member">clips</ref>;</highlight></codeline>
<codeline lineno="64" refid="structsoxr_1ab8b3d69d3f6c62f18cb464594b19d078" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structsoxr_1ab8b3d69d3f6c62f18cb464594b19d078" kindref="member">seed</ref>;</highlight></codeline>
<codeline lineno="65" refid="structsoxr_1af68d052dcfcdb459b273fdf8e6b234a4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structsoxr_1af68d052dcfcdb459b273fdf8e6b234a4" kindref="member">flushing</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>TODO:<sp/>these<sp/>should<sp/>not<sp/>be<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="soxr_8c_1aee1b99901113e8fbc4866fc090301a35" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TO_3dB(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((1.6e-6*a-7.5e-4)*a+.646)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="soxr_8c_1a94d12e404c90386f2df999c65b73e447" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOW_Q_BW0<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1385<sp/>/<sp/>2048.)<sp/></highlight><highlight class="comment">/*<sp/>0.67625<sp/>rounded<sp/>to<sp/>be<sp/>a<sp/>FP<sp/>exact.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="soxr_8h_1a6e3adb5d3cea568c31513d97dcf86916" refkind="member"><highlight class="normal"><ref refid="structsoxr__quality__spec" kindref="compound">soxr_quality_spec_t</ref><sp/><ref refid="soxr_8c_1a8bc34e71491e5ab698dcccdfc06c7ad8" kindref="member">soxr_quality_spec</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>recipe,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="structsoxr__quality__spec" kindref="compound">soxr_quality_spec_t</ref><sp/>spec,<sp/>*<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/>&amp;spec;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>quality<sp/>=<sp/>recipe<sp/>&amp;<sp/>0xf;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rej;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>memset(p,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(quality<sp/>&gt;<sp/>13)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr__quality__spec_1adbcdd5300a723d1614e2cc35e571efdc" kindref="member">e</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>quality<sp/>type&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>spec;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(quality<sp/>==<sp/>13)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>quality<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(quality<sp/>&gt;<sp/>10)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>quality<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structsoxr__quality__spec_1ad600c30fb76a8faf3ac1709d3ab08595" kindref="member">phase_response</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\62\31\144&quot;</highlight><highlight class="normal">[(recipe<sp/>&amp;<sp/>0x30)&gt;&gt;8];</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structsoxr__quality__spec_1a87bce61f87f57da23f63d9634a89975e" kindref="member">stopband_begin</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structsoxr__quality__spec_1a06805b7bfc9d7f273489e2bad228bcc8" kindref="member">precision</ref><sp/>=<sp/>!quality?<sp/>0:<sp/>quality<sp/>&lt;<sp/>3?<sp/>16<sp/>:<sp/>quality<sp/>&lt;<sp/>8?<sp/>4<sp/>+<sp/>quality<sp/>*<sp/>4<sp/>:<sp/>55<sp/>-<sp/>quality<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>rej<sp/>=<sp/>p-&gt;<ref refid="structsoxr__quality__spec_1a06805b7bfc9d7f273489e2bad228bcc8" kindref="member">precision</ref><sp/>*<sp/><ref refid="libsoxr_2src_2internal_8h_1a888002bec95c28d80a9b158401baef85" kindref="member">linear_to_dB</ref>(2.);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structsoxr__quality__spec_1a98847fe09120e95915753fa31363698e" kindref="member">flags</ref><sp/>=<sp/>flags;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(quality<sp/>&lt;<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr__quality__spec_1aac468916caf37b279bffc2f30d004fa8" kindref="member">passband_end</ref><sp/>=<sp/>quality<sp/>==<sp/>1?<sp/><ref refid="soxr_8c_1a94d12e404c90386f2df999c65b73e447" kindref="member">LOW_Q_BW0</ref><sp/>:<sp/>1<sp/>-<sp/>.05<sp/>/<sp/><ref refid="soxr_8c_1aee1b99901113e8fbc4866fc090301a35" kindref="member">TO_3dB</ref>(rej);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(quality<sp/>&lt;=<sp/>2)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr__quality__spec_1a98847fe09120e95915753fa31363698e" kindref="member">flags</ref><sp/>&amp;=<sp/>~<ref refid="soxr_8h_1a1613acee3f3533f05f56a0fb43171584" kindref="member">SOXR_ROLLOFF_NONE</ref>,<sp/>p-&gt;<ref refid="structsoxr__quality__spec_1a98847fe09120e95915753fa31363698e" kindref="member">flags</ref><sp/>|=<sp/><ref refid="soxr_8h_1a6e1d6389718b708fd0c188cf701f52ee" kindref="member">SOXR_ROLLOFF_MEDIUM</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bw[]<sp/>=<sp/>{.931f,<sp/>.832f,<sp/>.663f};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr__quality__spec_1aac468916caf37b279bffc2f30d004fa8" kindref="member">passband_end</ref><sp/>=<sp/>bw[quality<sp/>-<sp/>8];</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(quality<sp/>-<sp/>8<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr__quality__spec_1a98847fe09120e95915753fa31363698e" kindref="member">flags</ref><sp/>&amp;=<sp/>~<ref refid="soxr_8h_1a1613acee3f3533f05f56a0fb43171584" kindref="member">SOXR_ROLLOFF_NONE</ref>,<sp/>p-&gt;<ref refid="structsoxr__quality__spec_1a98847fe09120e95915753fa31363698e" kindref="member">flags</ref><sp/>|=<sp/><ref refid="soxr_8h_1a6e1d6389718b708fd0c188cf701f52ee" kindref="member">SOXR_ROLLOFF_MEDIUM</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recipe<sp/>&amp;<sp/><ref refid="soxr_8h_1a1b544cb4708b37bc941b0e35aecd0788" kindref="member">SOXR_STEEP_FILTER</ref>)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr__quality__spec_1aac468916caf37b279bffc2f30d004fa8" kindref="member">passband_end</ref><sp/>=<sp/>1<sp/>-<sp/>.01<sp/>/<sp/><ref refid="soxr_8c_1aee1b99901113e8fbc4866fc090301a35" kindref="member">TO_3dB</ref>(rej);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>spec;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="soxr_8h_1ac565e40a7bd4961eb38f580f17c6539c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="soxr_8c_1a5ac330f45c7b1f4a5d327227455bd961" kindref="member">soxr_engine</ref>(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="soxr_8c_1a014948fba02133dd843740455a1d1d4d" kindref="member">resampler_id</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="soxr_8h_1af0587e88c86bf728624e91a6ea30b492" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*<sp/><ref refid="soxr_8c_1ab2ae956aeb86e03efb5c068a6bb52955" kindref="member">soxr_num_clips</ref>(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;p-&gt;<ref refid="structsoxr_1ab60ab840ebac4faebf2cb2f30b10818b" kindref="member">clips</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="soxr_8h_1ad921720d7e819ea48cd83ce666827a4f" refkind="member"><highlight class="normal"><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="soxr_8c_1a51a9c751bbd6d122e55f7aad7b31ccea" kindref="member">soxr_error</ref>(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;<ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="soxr_8h_1abe91cc6c3973f7288a025bf9775c3ccf" refkind="member"><highlight class="normal"><ref refid="structsoxr__runtime__spec" kindref="compound">soxr_runtime_spec_t</ref><sp/><ref refid="soxr_8c_1adef2594d0bbe957075423c9450477fc2" kindref="member">soxr_runtime_spec</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>num_threads)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="structsoxr__runtime__spec" kindref="compound">soxr_runtime_spec_t</ref><sp/>spec,<sp/>*<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/>&amp;spec;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>memset(p,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structsoxr__runtime__spec_1a6e1d0c0e5099f2f575d5029a0aae121d" kindref="member">log2_min_dft_size</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structsoxr__runtime__spec_1ad9fd2490deceec50026bfc54b6486cb2" kindref="member">log2_large_dft_size</ref><sp/>=<sp/>17;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structsoxr__runtime__spec_1ab54d2119bf00a8060aec27c6fe09a125" kindref="member">coef_size_kbytes</ref><sp/>=<sp/>400;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structsoxr__runtime__spec_1a2347bb798d0890828e2f03d165e80dd1" kindref="member">num_threads</ref><sp/>=<sp/>num_threads;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>spec;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="soxr_8h_1a3bfced044db7fd905ffbdb1d92365d7e" refkind="member"><highlight class="normal"><ref refid="structsoxr__io__spec" kindref="compound">soxr_io_spec_t</ref><sp/><ref refid="soxr_8c_1a6003249f89c7705eef58d69f0afae011" kindref="member">soxr_io_spec</ref>(</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66d" kindref="member">soxr_datatype_t</ref><sp/>itype,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66d" kindref="member">soxr_datatype_t</ref><sp/>otype)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="structsoxr__io__spec" kindref="compound">soxr_io_spec_t</ref><sp/>spec,<sp/>*<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/>&amp;spec;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>memset(p,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((itype<sp/>|<sp/>otype)<sp/>&gt;=<sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66dab990a97e8f13eecb9886d91af4e2a67c" kindref="member">SOXR_SPLIT</ref><sp/>*<sp/>2)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr__io__spec_1af5a0e17c589dde9ac16c77b8ce68ea98" kindref="member">e</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>io<sp/>datatype(s)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr__io__spec_1a9d98ffac1d4103593adeff47fd84eded" kindref="member">itype</ref><sp/>=<sp/>itype;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr__io__spec_1ac8e5ca279ab7ab0a86ee63a1dcd2a2f7" kindref="member">otype</ref><sp/>=<sp/>otype;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr__io__spec_1a7e7adcf5254eace48979ba959babb5db" kindref="member">scale</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>spec;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_SIMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cpu_has_simd(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>__x86_64__<sp/>||<sp/>defined<sp/>_M_X64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>__GNUC__<sp/>&amp;&amp;<sp/>defined<sp/>i386</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/>eax,<sp/>ebx,<sp/>ecx,<sp/>edx;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>__asm__<sp/>__volatile__<sp/>(</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;pushl<sp/>%%ebx<sp/><sp/><sp/>\n\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;cpuid<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;movl<sp/>%%ebx,<sp/>%1\n\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;popl<sp/>%%ebx<sp/><sp/><sp/><sp/>\n\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;=a&quot;</highlight><highlight class="normal">(eax),<sp/></highlight><highlight class="stringliteral">&quot;=r&quot;</highlight><highlight class="normal">(ebx),<sp/></highlight><highlight class="stringliteral">&quot;=c&quot;</highlight><highlight class="normal">(ecx),<sp/></highlight><highlight class="stringliteral">&quot;=d&quot;</highlight><highlight class="normal">(edx)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">(1)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;cc&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!!(edx<sp/>&amp;<sp/>0x06000000);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>_MSC_VER<sp/>&amp;&amp;<sp/>defined<sp/>_M_IX86</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>__asm<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>xor<sp/><sp/><sp/><sp/><sp/>eax,<sp/>eax</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>inc<sp/><sp/><sp/><sp/><sp/>eax</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="allegrosmfwr_8cpp_1a2df2d43b6c4997f2374557345009f887" kindref="member">push</ref><sp/><sp/><sp/><sp/>ebx</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>cpuid</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>pop<sp/><sp/><sp/><sp/><sp/>ebx</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>mov<sp/><sp/><sp/><sp/><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>,<sp/>edx</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!!(d<sp/>&amp;<sp/>0x06000000);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="soxr_8c_1a6346f09fcfe44916a78c94321ed37c5d" kindref="member">control_block_t</ref><sp/><ref refid="soxr_8c_1a7ba90cccbefe4a1695fa104e0d17c7c5" kindref="member">_soxr_rate32s_cb</ref>,<sp/><ref refid="soxr_8c_1a07bb449874c0e728be4787affb67079c" kindref="member">_soxr_rate32_cb</ref>,<sp/><ref refid="soxr_8c_1a717ce91cf6d0933c0e429d1fa5ae5c9a" kindref="member">_soxr_rate64_cb</ref>,<sp/><ref refid="soxr_8c_1a93c4b9a07d5c5658da02b2eda7721a6e" kindref="member">_soxr_vr32_cb</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="soxr_8h_1abd0a3f943d68e5055821451580a83109" refkind="member"><highlight class="normal"><ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/><ref refid="soxr_8c_1a763983e4a1f00869383ba22421b768e5" kindref="member">soxr_create</ref>(</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>input_rate,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>output_rate,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref>,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/>*<sp/>error0,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><ref refid="structsoxr__io__spec" kindref="compound">soxr_io_spec_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" kindref="member">io_spec</ref>,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="structsoxr__quality__spec" kindref="compound">soxr_quality_spec_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="structsoxr_1ad86308d2e768fb9f67ec488772e73d5c" kindref="member">q_spec</ref>,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="structsoxr__runtime__spec" kindref="compound">soxr_runtime_spec_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="structsoxr_1a2ba74dd0f08cbb5fa88fdef8abcf0ad6" kindref="member">runtime_spec</ref>)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structsoxr_1a285e9db9b8b56e49f5899acc810ada80" kindref="member">io_ratio</ref><sp/>=<sp/>output_rate?<sp/>input_rate?<sp/>input_rate<sp/>/<sp/>output_rate<sp/>:<sp/>-1<sp/>:<sp/>input_rate?<sp/>-1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>datatype_full_scale[]<sp/>=<sp/>{1,<sp/>1,<sp/>65536.*32768,<sp/>32768};</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q_spec<sp/>&amp;&amp;<sp/>q_spec-&gt;<ref refid="structsoxr__quality__spec_1adbcdd5300a723d1614e2cc35e571efdc" kindref="member">e</ref>)<sp/><sp/>error<sp/>=<sp/>q_spec-&gt;<ref refid="structsoxr__quality__spec_1adbcdd5300a723d1614e2cc35e571efdc" kindref="member">e</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io_spec<sp/>&amp;&amp;<sp/>(io_spec-&gt;<ref refid="structsoxr__io__spec_1a9d98ffac1d4103593adeff47fd84eded" kindref="member">itype</ref><sp/>|<sp/>io_spec-&gt;<ref refid="structsoxr__io__spec_1ac8e5ca279ab7ab0a86ee63a1dcd2a2f7" kindref="member">otype</ref>)<sp/>&gt;=<sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66dab990a97e8f13eecb9886d91af4e2a67c" kindref="member">SOXR_SPLIT</ref><sp/>*<sp/>2)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>io<sp/>datatype(s)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!error<sp/>&amp;&amp;<sp/>!(p<sp/>=<sp/>calloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p),<sp/>1)))<sp/>error<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;malloc<sp/>failed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1ad86308d2e768fb9f67ec488772e73d5c" kindref="member">q_spec</ref><sp/>=<sp/>q_spec?<sp/>*q_spec<sp/>:<sp/><ref refid="soxr_8c_1a8bc34e71491e5ab698dcccdfc06c7ad8" kindref="member">soxr_quality_spec</ref>(<ref refid="soxr_8h_1aea42ded9f1863b84c90e95de3b250a9b" kindref="member">SOXR_HQ</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q_spec)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Backwards<sp/>compatibility<sp/>with<sp/>original<sp/>API:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structsoxr_1ad86308d2e768fb9f67ec488772e73d5c" kindref="member">q_spec</ref>.<ref refid="structsoxr__quality__spec_1aac468916caf37b279bffc2f30d004fa8" kindref="member">passband_end</ref><sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1ad86308d2e768fb9f67ec488772e73d5c" kindref="member">q_spec</ref>.<ref refid="structsoxr__quality__spec_1aac468916caf37b279bffc2f30d004fa8" kindref="member">passband_end</ref><sp/>/=<sp/>100;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structsoxr_1ad86308d2e768fb9f67ec488772e73d5c" kindref="member">q_spec</ref>.<ref refid="structsoxr__quality__spec_1a87bce61f87f57da23f63d9634a89975e" kindref="member">stopband_begin</ref><sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1ad86308d2e768fb9f67ec488772e73d5c" kindref="member">q_spec</ref>.<ref refid="structsoxr__quality__spec_1a87bce61f87f57da23f63d9634a89975e" kindref="member">stopband_begin</ref><sp/>=<sp/>2<sp/>-<sp/>p-&gt;<ref refid="structsoxr_1ad86308d2e768fb9f67ec488772e73d5c" kindref="member">q_spec</ref>.<ref refid="structsoxr__quality__spec_1a87bce61f87f57da23f63d9634a89975e" kindref="member">stopband_begin</ref><sp/>/<sp/>100;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1a285e9db9b8b56e49f5899acc810ada80" kindref="member">io_ratio</ref><sp/>=<sp/><ref refid="structsoxr_1a285e9db9b8b56e49f5899acc810ada80" kindref="member">io_ratio</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref><sp/>=<sp/><ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io_spec)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" kindref="member">io_spec</ref><sp/>=<sp/>*<ref refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" kindref="member">io_spec</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" kindref="member">io_spec</ref>.<ref refid="structsoxr__io__spec_1a7e7adcf5254eace48979ba959babb5db" kindref="member">scale</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1a2ba74dd0f08cbb5fa88fdef8abcf0ad6" kindref="member">runtime_spec</ref><sp/>=<sp/>runtime_spec?<sp/>*runtime_spec<sp/>:<sp/><ref refid="soxr_8c_1adef2594d0bbe957075423c9450477fc2" kindref="member">soxr_runtime_spec</ref>(1);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" kindref="member">io_spec</ref>.<ref refid="structsoxr__io__spec_1a7e7adcf5254eace48979ba959babb5db" kindref="member">scale</ref><sp/>*=<sp/>datatype_full_scale[p-&gt;<ref refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" kindref="member">io_spec</ref>.<ref refid="structsoxr__io__spec_1ac8e5ca279ab7ab0a86ee63a1dcd2a2f7" kindref="member">otype</ref><sp/>&amp;<sp/>3]<sp/>/</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datatype_full_scale[p-&gt;<ref refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" kindref="member">io_spec</ref>.<ref refid="structsoxr__io__spec_1a9d98ffac1d4103593adeff47fd84eded" kindref="member">itype</ref><sp/>&amp;<sp/>3];</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1ab8b3d69d3f6c62f18cb464594b19d078" kindref="member">seed</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)<ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref>(0)<sp/>^<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_SINGLE_PRECISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="lib-src_2libsoxr_2msvc_2soxr-config_8h_1a95431831c0c6db38c5cff6de1850b117" kindref="member">HAVE_DOUBLE_PRECISION</ref><sp/>||<sp/>(p-&gt;<ref refid="structsoxr_1ad86308d2e768fb9f67ec488772e73d5c" kindref="member">q_spec</ref>.<ref refid="structsoxr__quality__spec_1a06805b7bfc9d7f273489e2bad228bcc8" kindref="member">precision</ref><sp/>&lt;=<sp/>20<sp/>&amp;&amp;<sp/>!(p-&gt;<ref refid="structsoxr_1ad86308d2e768fb9f67ec488772e73d5c" kindref="member">q_spec</ref>.<ref refid="structsoxr__quality__spec_1a98847fe09120e95915753fa31363698e" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="soxr_8h_1a9d80b486e0a02239f0d3811598466cf6" kindref="member">SOXR_DOUBLE_PRECISION</ref>))</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(p-&gt;<ref refid="structsoxr_1ad86308d2e768fb9f67ec488772e73d5c" kindref="member">q_spec</ref>.<ref refid="structsoxr__quality__spec_1a98847fe09120e95915753fa31363698e" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="soxr_8h_1a440abac0b888ff41c337d0a86cda2b09" kindref="member">SOXR_VR</ref>))<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1a5628a132543e83108ce76ac059f85a9f" kindref="member">deinterleave</ref><sp/>=<sp/>(<ref refid="soxr_8c_1ae38d1593aaf4055ec74e7908e15f941a" kindref="member">deinterleave_t</ref>)<ref refid="data-io_8h_1ae52e823e505bcd1b46a7a5e1888b3e16" kindref="member">_soxr_deinterleave_f</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1ac359ffb418677833569b7c8faeea8e62" kindref="member">interleave</ref><sp/>=<sp/>(<ref refid="soxr_8c_1a5a5f4f8a0be6b57c9c9d4104728499e4" kindref="member">interleave_t</ref>)<ref refid="data-io_8h_1aa94e9c0f89c276eb61d6abc0207ff3f3" kindref="member">_soxr_interleave_f</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;p-&gt;<ref refid="structsoxr_1a89d093b499c528f01c5e53f282d68310" kindref="member">control_block</ref>,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p-&gt;<ref refid="structsoxr_1ad86308d2e768fb9f67ec488772e73d5c" kindref="member">q_spec</ref>.<ref refid="structsoxr__quality__spec_1a98847fe09120e95915753fa31363698e" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="soxr_8h_1a440abac0b888ff41c337d0a86cda2b09" kindref="member">SOXR_VR</ref>)?<sp/>&amp;<ref refid="soxr_8c_1a93c4b9a07d5c5658da02b2eda7721a6e" kindref="member">_soxr_vr32_cb</ref><sp/>:</highlight></codeline>
<codeline lineno="247"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="lib-src_2libsoxr_2msvc_2soxr-config_8h_1a0b8fb21213538acb85ca7075fbc8cea3" kindref="member">HAVE_SIMD</ref></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpu_has_simd()?<sp/>&amp;<ref refid="soxr_8c_1a7ba90cccbefe4a1695fa104e0d17c7c5" kindref="member">_soxr_rate32s_cb</ref><sp/>:</highlight></codeline>
<codeline lineno="249"><highlight class="normal">#<ref refid="sndfile__play_8m_1a74c64864f5283ae06d4a981642a59af9" kindref="member">endif</ref></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="soxr_8c_1a07bb449874c0e728be4787affb67079c" kindref="member">_soxr_rate32_cb</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p-&gt;<ref refid="structsoxr_1a89d093b499c528f01c5e53f282d68310" kindref="member">control_block</ref>));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_DOUBLE_PRECISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_DOUBLE_PRECISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1a5628a132543e83108ce76ac059f85a9f" kindref="member">deinterleave</ref><sp/>=<sp/>(<ref refid="soxr_8c_1ae38d1593aaf4055ec74e7908e15f941a" kindref="member">deinterleave_t</ref>)<ref refid="data-io_8h_1a3e2562473faf84d3a9210f5ec4922fb2" kindref="member">_soxr_deinterleave</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1ac359ffb418677833569b7c8faeea8e62" kindref="member">interleave</ref><sp/>=<sp/>(<ref refid="soxr_8c_1a5a5f4f8a0be6b57c9c9d4104728499e4" kindref="member">interleave_t</ref>)<ref refid="data-io_8h_1a8cf548e4d094401e15dd78380be62644" kindref="member">_soxr_interleave</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;p-&gt;<ref refid="structsoxr_1a89d093b499c528f01c5e53f282d68310" kindref="member">control_block</ref>,<sp/>&amp;<ref refid="soxr_8c_1a717ce91cf6d0933c0e429d1fa5ae5c9a" kindref="member">_soxr_rate64_cb</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p-&gt;<ref refid="structsoxr_1a89d093b499c528f01c5e53f282d68310" kindref="member">control_block</ref>));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref><sp/>&amp;&amp;<sp/>io_ratio)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="soxr_8c_1ab9cd1051c49c8a0fa8cc8957d1a7186e" kindref="member">soxr_set_io_ratio</ref>(p,<sp/>io_ratio,<sp/>0);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="soxr_8c_1af3bff5e9b256197fd02730fea110a5ea" kindref="member">soxr_delete</ref>(p),<sp/>p<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error0)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>*error0<sp/>=<sp/><ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="soxr_8h_1a64b660ad393b3c6b6e605d105a3b228d" refkind="member"><highlight class="normal"><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="soxr_8c_1a5ef8012f6d313a2887c135359af035f6" kindref="member">soxr_set_input_fn</ref>(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="soxr_8h_1a75de274660354270e1e92a4b66a6e915" kindref="member">soxr_input_fn_t</ref><sp/><ref refid="structsoxr_1a8c0b5ebae0139a0e5ed5b4f95a355cb6" kindref="member">input_fn</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="structsoxr_1af9c48aab4c71a7e277f4ec3c3a9d5f2c" kindref="member">input_fn_state</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structsoxr_1aef67b4a20e64992d21b55411ac82863f" kindref="member">max_ilen</ref>)</highlight></codeline>
<codeline lineno="278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structsoxr_1af9c48aab4c71a7e277f4ec3c3a9d5f2c" kindref="member">input_fn_state</ref><sp/>=<sp/><ref refid="structsoxr_1af9c48aab4c71a7e277f4ec3c3a9d5f2c" kindref="member">input_fn_state</ref>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structsoxr_1a8c0b5ebae0139a0e5ed5b4f95a355cb6" kindref="member">input_fn</ref><sp/>=<sp/><ref refid="structsoxr_1a8c0b5ebae0139a0e5ed5b4f95a355cb6" kindref="member">input_fn</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structsoxr_1aef67b4a20e64992d21b55411ac82863f" kindref="member">max_ilen</ref><sp/>=<sp/>max_ilen?<sp/>max_ilen<sp/>:<sp/>(size_t)-1;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>soxr_delete0(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structsoxr_1a0a7572ca0ce1d351fdf4c2a72ec48657" kindref="member">resamplers</ref>)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>p-&gt;<ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structsoxr_1a0a7572ca0ce1d351fdf4c2a72ec48657" kindref="member">resamplers</ref>[i])</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="soxr_8c_1a0c05d68e7b68abdc988b222ed96e7d33" kindref="member">resampler_close</ref>(p-&gt;<ref refid="structsoxr_1a0a7572ca0ce1d351fdf4c2a72ec48657" kindref="member">resamplers</ref>[i]);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>free(p-&gt;<ref refid="structsoxr_1a0a7572ca0ce1d351fdf4c2a72ec48657" kindref="member">resamplers</ref>[i]);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>free(p-&gt;<ref refid="structsoxr_1a0a7572ca0ce1d351fdf4c2a72ec48657" kindref="member">resamplers</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>free(p-&gt;<ref refid="structsoxr_1ace64c1784e42f0efbd1afdc2eab6b095" kindref="member">channel_ptrs</ref>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>free(p-&gt;<ref refid="structsoxr_1a7a11d730c8daa76d2367fd94b2384bf9" kindref="member">shared</ref>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>memset(p,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p));</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="soxr_8h_1af4acdfa38568efaf63e41af72bca6440" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="soxr_8c_1a96f18f5a39a878e97b127f2913b5eb13" kindref="member">soxr_delay</ref>(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/>p)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p<sp/>&amp;&amp;<sp/>!p-&gt;<ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref><sp/>&amp;&amp;<sp/>p-&gt;<ref refid="structsoxr_1a0a7572ca0ce1d351fdf4c2a72ec48657" kindref="member">resamplers</ref>)?<sp/><ref refid="soxr_8c_1a514599a3dcaa2655d59ca36871481bab" kindref="member">resampler_delay</ref>(p-&gt;<ref refid="structsoxr_1a0a7572ca0ce1d351fdf4c2a72ec48657" kindref="member">resamplers</ref>[0])<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/>fatal_error(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/>p,<sp/><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref>)</highlight></codeline>
<codeline lineno="313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>soxr_delete0(p);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;<ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref><sp/>=<sp/><ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/>initialise(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/>p)</highlight></codeline>
<codeline lineno="321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>shared_size,<sp/>channel_size;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><ref refid="soxr_8c_1a4ef16efe1f2a6506f2ea87e4007711fb" kindref="member">resampler_sizes</ref>(&amp;shared_size,<sp/>&amp;channel_size);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structsoxr_1ace64c1784e42f0efbd1afdc2eab6b095" kindref="member">channel_ptrs</ref><sp/>=<sp/>calloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p-&gt;<ref refid="structsoxr_1ace64c1784e42f0efbd1afdc2eab6b095" kindref="member">channel_ptrs</ref>),<sp/>p-&gt;<ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structsoxr_1a7a11d730c8daa76d2367fd94b2384bf9" kindref="member">shared</ref><sp/>=<sp/>calloc(shared_size,<sp/>1);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structsoxr_1a0a7572ca0ce1d351fdf4c2a72ec48657" kindref="member">resamplers</ref><sp/>=<sp/>calloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p-&gt;<ref refid="structsoxr_1a0a7572ca0ce1d351fdf4c2a72ec48657" kindref="member">resamplers</ref>),<sp/>p-&gt;<ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p-&gt;<ref refid="structsoxr_1a7a11d730c8daa76d2367fd94b2384bf9" kindref="member">shared</ref><sp/>||<sp/>!p-&gt;<ref refid="structsoxr_1ace64c1784e42f0efbd1afdc2eab6b095" kindref="member">channel_ptrs</ref><sp/>||<sp/>!p-&gt;<ref refid="structsoxr_1a0a7572ca0ce1d351fdf4c2a72ec48657" kindref="member">resamplers</ref>)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fatal_error(p,<sp/></highlight><highlight class="stringliteral">&quot;malloc<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>p-&gt;<ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(p-&gt;<ref refid="structsoxr_1a0a7572ca0ce1d351fdf4c2a72ec48657" kindref="member">resamplers</ref>[i]<sp/>=<sp/>calloc(channel_size,<sp/>1)))</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fatal_error(p,<sp/></highlight><highlight class="stringliteral">&quot;malloc<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="soxr_8c_1a55fc3f7436507650d75a8e043f1b90b8" kindref="member">resampler_create</ref>(</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1a0a7572ca0ce1d351fdf4c2a72ec48657" kindref="member">resamplers</ref>[i],</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1a7a11d730c8daa76d2367fd94b2384bf9" kindref="member">shared</ref>,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1a285e9db9b8b56e49f5899acc810ada80" kindref="member">io_ratio</ref>,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;p-&gt;<ref refid="structsoxr_1ad86308d2e768fb9f67ec488772e73d5c" kindref="member">q_spec</ref>,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;p-&gt;<ref refid="structsoxr_1a2ba74dd0f08cbb5fa88fdef8abcf0ad6" kindref="member">runtime_spec</ref>,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" kindref="member">io_spec</ref>.<ref refid="structsoxr__io__spec_1a7e7adcf5254eace48979ba959babb5db" kindref="member">scale</ref>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fatal_error(p,<sp/>error);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="soxr_8h_1a5cc5a9056d6a2dbc568326b1fa12a5f0" refkind="member"><highlight class="normal"><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="soxr_8c_1a68673f0a61b55e749aa7c6fcef3638f2" kindref="member">soxr_set_num_channels</ref>(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/>p,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref>)</highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>soxr_t<sp/>pointer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_channels<sp/>==<sp/>p-&gt;<ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;<ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!num_channels)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>#<sp/>of<sp/>channels&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structsoxr_1a0a7572ca0ce1d351fdf4c2a72ec48657" kindref="member">resamplers</ref>)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;#<sp/>of<sp/>channels<sp/>can&apos;t<sp/>be<sp/>changed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref><sp/>=<sp/><ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="soxr_8c_1ab9cd1051c49c8a0fa8cc8957d1a7186e" kindref="member">soxr_set_io_ratio</ref>(p,<sp/>p-&gt;<ref refid="structsoxr_1a285e9db9b8b56e49f5899acc810ada80" kindref="member">io_ratio</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="soxr_8h_1a8f0ddd0c4c1943451f1da68692b0f639" refkind="member"><highlight class="normal"><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="soxr_8c_1ab9cd1051c49c8a0fa8cc8957d1a7186e" kindref="member">soxr_set_io_ratio</ref>(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/>p,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structsoxr_1a285e9db9b8b56e49f5899acc810ada80" kindref="member">io_ratio</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slew_len)</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>soxr_t<sp/>pointer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((error<sp/>=<sp/>p-&gt;<ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p-&gt;<ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref>)<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;must<sp/>set<sp/>#<sp/>channels<sp/>before<sp/>O/I<sp/>ratio&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io_ratio<sp/>&lt;=<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;I/O<sp/>ratio<sp/>out-of-range&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p-&gt;<ref refid="structsoxr_1ace64c1784e42f0efbd1afdc2eab6b095" kindref="member">channel_ptrs</ref>)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1a285e9db9b8b56e49f5899acc810ada80" kindref="member">io_ratio</ref><sp/>=<sp/><ref refid="structsoxr_1a285e9db9b8b56e49f5899acc810ada80" kindref="member">io_ratio</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>initialise(p);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structsoxr_1a89d093b499c528f01c5e53f282d68310" kindref="member">control_block</ref>[8])<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>!error<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>p-&gt;<ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="soxr_8c_1a5150a43e6a46a92a5802f6c2649ade85" kindref="member">resampler_set_io_ratio</ref>(p-&gt;<ref refid="structsoxr_1a0a7572ca0ce1d351fdf4c2a72ec48657" kindref="member">resamplers</ref>[i],<sp/>io_ratio,<sp/>slew_len);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fabs(p-&gt;<ref refid="structsoxr_1a285e9db9b8b56e49f5899acc810ada80" kindref="member">io_ratio</ref><sp/>-<sp/>io_ratio)<sp/>&lt;<sp/>1<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>-15?<sp/>0<sp/>:</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Varying<sp/>O/I<sp/>ratio<sp/>is<sp/>not<sp/>supported<sp/>with<sp/>this<sp/>quality<sp/>level&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="soxr_8h_1ae17441e0f8325f786df26786295a7585" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="soxr_8c_1af3bff5e9b256197fd02730fea110a5ea" kindref="member">soxr_delete</ref>(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/>p)</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>soxr_delete0(p),<sp/>free(p);</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394" refid="soxr_8h_1a673b2b97242e8030ab2733b9434e5639" refkind="member"><highlight class="normal"><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="soxr_8c_1afecae2e5d944a6e4ba9eccd18f5584e2" kindref="member">soxr_clear</ref>(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/>p)<sp/></highlight><highlight class="comment">/*<sp/>TODO:<sp/>this,<sp/>properly.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsoxr" kindref="compound">soxr</ref><sp/>tmp<sp/>=<sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>soxr_delete0(p);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(p,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p));</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1a8c0b5ebae0139a0e5ed5b4f95a355cb6" kindref="member">input_fn</ref><sp/>=<sp/>tmp.<ref refid="structsoxr_1a8c0b5ebae0139a0e5ed5b4f95a355cb6" kindref="member">input_fn</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1a2ba74dd0f08cbb5fa88fdef8abcf0ad6" kindref="member">runtime_spec</ref><sp/>=<sp/>tmp.<ref refid="structsoxr_1a2ba74dd0f08cbb5fa88fdef8abcf0ad6" kindref="member">runtime_spec</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1ad86308d2e768fb9f67ec488772e73d5c" kindref="member">q_spec</ref><sp/>=<sp/>tmp.<ref refid="structsoxr_1ad86308d2e768fb9f67ec488772e73d5c" kindref="member">q_spec</ref>;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" kindref="member">io_spec</ref><sp/>=<sp/>tmp.<ref refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" kindref="member">io_spec</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref><sp/>=<sp/>tmp.<ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1af9c48aab4c71a7e277f4ec3c3a9d5f2c" kindref="member">input_fn_state</ref><sp/>=<sp/>tmp.<ref refid="structsoxr_1af9c48aab4c71a7e277f4ec3c3a9d5f2c" kindref="member">input_fn_state</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(p-&gt;<ref refid="structsoxr_1a89d093b499c528f01c5e53f282d68310" kindref="member">control_block</ref>,<sp/>tmp.<ref refid="structsoxr_1a89d093b499c528f01c5e53f282d68310" kindref="member">control_block</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p-&gt;<ref refid="structsoxr_1a89d093b499c528f01c5e53f282d68310" kindref="member">control_block</ref>));</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1a5628a132543e83108ce76ac059f85a9f" kindref="member">deinterleave</ref><sp/>=<sp/>tmp.<ref refid="structsoxr_1a5628a132543e83108ce76ac059f85a9f" kindref="member">deinterleave</ref>;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1ac359ffb418677833569b7c8faeea8e62" kindref="member">interleave</ref><sp/>=<sp/>tmp.<ref refid="structsoxr_1ac359ffb418677833569b7c8faeea8e62" kindref="member">interleave</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>soxr_t<sp/>pointer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>soxr_input_1ch(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/>p,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="soxr_8h_1a6a4a582225738aaea35a30c77b9d55a5" kindref="member">soxr_cbuf_t</ref><sp/>src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/>*<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref><sp/>=<sp/><ref refid="soxr_8c_1afa5cac6ba29701a454642a51a238c9da" kindref="member">resampler_input</ref>(p-&gt;<ref refid="structsoxr_1a0a7572ca0ce1d351fdf4c2a72ec48657" kindref="member">resamplers</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>len);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>(*p-&gt;<ref refid="structsoxr_1a5628a132543e83108ce76ac059f85a9f" kindref="member">deinterleave</ref>)(&amp;dest,<sp/>p-&gt;<ref refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" kindref="member">io_spec</ref>.<ref refid="structsoxr__io__spec_1a9d98ffac1d4103593adeff47fd84eded" kindref="member">itype</ref>,<sp/>&amp;src,<sp/>len,<sp/>1);</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>soxr_input(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/>p,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>separated<sp/>=<sp/>!!(p-&gt;<ref refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" kindref="member">io_spec</ref>.<ref refid="structsoxr__io__spec_1a9d98ffac1d4103593adeff47fd84eded" kindref="member">itype</ref><sp/>&amp;<sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66dab990a97e8f13eecb9886d91af4e2a67c" kindref="member">SOXR_SPLIT</ref>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p<sp/>||<sp/>p-&gt;<ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/>&amp;&amp;<sp/>len)<sp/>{p-&gt;<ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>input<sp/>buffer<sp/>pointer&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!len)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1af68d052dcfcdb459b273fdf8e6b234a4" kindref="member">flushing</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(separated)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>p-&gt;<ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>soxr_input_1ch(p,<sp/>i,<sp/>((<ref refid="soxr_8h_1ae8d86fb7a40f0fa830274bf66d62e8b4" kindref="member">soxr_cbufs_t</ref>)<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>)[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>p-&gt;<ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1ace64c1784e42f0efbd1afdc2eab6b095" kindref="member">channel_ptrs</ref>[i]<sp/>=<sp/><ref refid="soxr_8c_1afa5cac6ba29701a454642a51a238c9da" kindref="member">resampler_input</ref>(p-&gt;<ref refid="structsoxr_1a0a7572ca0ce1d351fdf4c2a72ec48657" kindref="member">resamplers</ref>[i],<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>len);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>(*p-&gt;<ref refid="structsoxr_1a5628a132543e83108ce76ac059f85a9f" kindref="member">deinterleave</ref>)(</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/>**)p-&gt;<ref refid="structsoxr_1ace64c1784e42f0efbd1afdc2eab6b095" kindref="member">channel_ptrs</ref>,<sp/>p-&gt;<ref refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" kindref="member">io_spec</ref>.<ref refid="structsoxr__io__spec_1a9d98ffac1d4103593adeff47fd84eded" kindref="member">itype</ref>,<sp/>&amp;<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/>p-&gt;<ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>soxr_output_1ch(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/>p,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="soxr_8h_1a4a2c5d941a40ae917d106ee6e513cc99" kindref="member">soxr_buf_t</ref><sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>separated)</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>src;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structsoxr_1af68d052dcfcdb459b273fdf8e6b234a4" kindref="member">flushing</ref>)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="soxr_8c_1a824d53a54a6a4ee420451a75472bafd9" kindref="member">resampler_flush</ref>(p-&gt;<ref refid="structsoxr_1a0a7572ca0ce1d351fdf4c2a72ec48657" kindref="member">resamplers</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><ref refid="soxr_8c_1a632e91ff7c6f16d543b57a95b40d9380" kindref="member">resampler_process</ref>(p-&gt;<ref refid="structsoxr_1a0a7572ca0ce1d351fdf4c2a72ec48657" kindref="member">resamplers</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>src<sp/>=<sp/><ref refid="soxr_8c_1ad4dbd71b22b73f0827ece52413dd8c73" kindref="member">resampler_output</ref>(p-&gt;<ref refid="structsoxr_1a0a7572ca0ce1d351fdf4c2a72ec48657" kindref="member">resamplers</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(separated)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1ab60ab840ebac4faebf2cb2f30b10818b" kindref="member">clips</ref><sp/>+=<sp/>(p-&gt;<ref refid="structsoxr_1ac359ffb418677833569b7c8faeea8e62" kindref="member">interleave</ref>)(p-&gt;<ref refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" kindref="member">io_spec</ref>.<ref refid="structsoxr__io__spec_1ac8e5ca279ab7ab0a86ee63a1dcd2a2f7" kindref="member">otype</ref>,<sp/>&amp;<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/>&amp;src,</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/>1,<sp/>(p-&gt;<ref refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" kindref="member">io_spec</ref>.<ref refid="structsoxr__io__spec_1a69aa73bb10ef8eb5d5da797d96c8268a" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="soxr_8h_1a80dc762ae0465180ddc175163da19aa9" kindref="member">SOXR_NO_DITHER</ref>)?<sp/>0<sp/>:<sp/>&amp;p-&gt;<ref refid="structsoxr_1ab8b3d69d3f6c62f18cb464594b19d078" kindref="member">seed</ref>);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>p-&gt;<ref refid="structsoxr_1ace64c1784e42f0efbd1afdc2eab6b095" kindref="member">channel_ptrs</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>const<sp/>*/</highlight><highlight class="normal"><sp/>*)src;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>soxr_output_no_callback(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/>p,<sp/><ref refid="soxr_8h_1a4a2c5d941a40ae917d106ee6e513cc99" kindref="member">soxr_buf_t</ref><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>u;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="midiclock_8c_1a5f689029e53f12e337967312e0a17717" kindref="member">done</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>separated<sp/>=<sp/>!!(p-&gt;<ref refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" kindref="member">io_spec</ref>.<ref refid="structsoxr__io__spec_1ac8e5ca279ab7ab0a86ee63a1dcd2a2f7" kindref="member">otype</ref><sp/>&amp;<sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66dab990a97e8f13eecb9886d91af4e2a67c" kindref="member">SOXR_SPLIT</ref>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p-&gt;<ref refid="structsoxr_1a2ba74dd0f08cbb5fa88fdef8abcf0ad6" kindref="member">runtime_spec</ref>.<ref refid="structsoxr__runtime__spec_1a2347bb798d0890828e2f03d165e80dd1" kindref="member">num_threads</ref><sp/>&amp;&amp;<sp/>p-&gt;<ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref><sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)p-&gt;<ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>done1;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>done1<sp/>=<sp/>soxr_output_1ch(p,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)i,<sp/>((<ref refid="soxr_8h_1a41249908bae858e9b4dbf016888fc17c" kindref="member">soxr_bufs_t</ref>)<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>)[i],<sp/>len,<sp/>separated);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!i)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/>done1;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(u<sp/>=<sp/>0;<sp/>u<sp/>&lt;<sp/>p-&gt;<ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref>;<sp/>++u)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>done<sp/>=<sp/>soxr_output_1ch(p,<sp/>u,<sp/>((<ref refid="soxr_8h_1a41249908bae858e9b4dbf016888fc17c" kindref="member">soxr_bufs_t</ref>)<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>)[u],<sp/>len,<sp/>separated);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!separated)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1ab60ab840ebac4faebf2cb2f30b10818b" kindref="member">clips</ref><sp/>+=<sp/>(p-&gt;<ref refid="structsoxr_1ac359ffb418677833569b7c8faeea8e62" kindref="member">interleave</ref>)(p-&gt;<ref refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" kindref="member">io_spec</ref>.<ref refid="structsoxr__io__spec_1ac8e5ca279ab7ab0a86ee63a1dcd2a2f7" kindref="member">otype</ref>,<sp/>&amp;out,<sp/>(<ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)p-&gt;<ref refid="structsoxr_1ace64c1784e42f0efbd1afdc2eab6b095" kindref="member">channel_ptrs</ref>,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="midiclock_8c_1a5f689029e53f12e337967312e0a17717" kindref="member">done</ref>,<sp/>p-&gt;<ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref>,<sp/>(p-&gt;<ref refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" kindref="member">io_spec</ref>.<ref refid="structsoxr__io__spec_1a69aa73bb10ef8eb5d5da797d96c8268a" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="soxr_8h_1a80dc762ae0465180ddc175163da19aa9" kindref="member">SOXR_NO_DITHER</ref>)?<sp/>0<sp/>:<sp/>&amp;p-&gt;<ref refid="structsoxr_1ab8b3d69d3f6c62f18cb464594b19d078" kindref="member">seed</ref>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="midiclock_8c_1a5f689029e53f12e337967312e0a17717" kindref="member">done</ref>;</highlight></codeline>
<codeline lineno="487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491" refid="soxr_8h_1a09c29a59708b91fdb1b322c0a28a504f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="soxr_8c_1ae01b0184f5952309aa868d2d3dbd92d7" kindref="member">soxr_output</ref>(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/>p,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len0)</highlight></codeline>
<codeline lineno="492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>odone,<sp/>odone0<sp/>=<sp/>0,<sp/>olen<sp/>=<sp/>len0,<sp/>osize,<sp/>idone;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ilen<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(p-&gt;<ref refid="structsoxr_1aef67b4a20e64992d21b55411ac82863f" kindref="member">max_ilen</ref>,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)ceil((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)olen<sp/>*p-&gt;<ref refid="structsoxr_1a285e9db9b8b56e49f5899acc810ada80" kindref="member">io_ratio</ref>));</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/>=<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>to<sp/>!=0,<sp/>so<sp/>that<sp/>caller<sp/>may<sp/>leave<sp/>unset.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>was_flushing;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p<sp/>||<sp/>p-&gt;<ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!out<sp/>&amp;&amp;<sp/>len0)<sp/>{p-&gt;<ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>output<sp/>buffer<sp/>pointer&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>odone<sp/>=<sp/>soxr_output_no_callback(p,<sp/>out,<sp/>olen);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>odone0<sp/>+=<sp/>odone;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(odone0<sp/>==<sp/>len0<sp/>||<sp/>!p-&gt;<ref refid="structsoxr_1a8c0b5ebae0139a0e5ed5b4f95a355cb6" kindref="member">input_fn</ref><sp/>||<sp/>p-&gt;<ref refid="structsoxr_1af68d052dcfcdb459b273fdf8e6b234a4" kindref="member">flushing</ref>)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>osize<sp/>=<sp/><ref refid="soxr_8h_1ace5ac3572ab64ec7d335f5e278a446e4" kindref="member">soxr_datatype_size</ref>(p-&gt;<ref refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" kindref="member">io_spec</ref>.<ref refid="structsoxr__io__spec_1ac8e5ca279ab7ab0a86ee63a1dcd2a2f7" kindref="member">otype</ref>)<sp/>*<sp/>p-&gt;<ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref>;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)out<sp/>+<sp/>osize<sp/>*<sp/>odone;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>olen<sp/>-=<sp/>odone;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>idone<sp/>=<sp/>p-&gt;<ref refid="structsoxr_1a8c0b5ebae0139a0e5ed5b4f95a355cb6" kindref="member">input_fn</ref>(p-&gt;<ref refid="structsoxr_1af9c48aab4c71a7e277f4ec3c3a9d5f2c" kindref="member">input_fn_state</ref>,<sp/>&amp;in,<sp/>ilen);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>was_flushing<sp/>=<sp/>p-&gt;<ref refid="structsoxr_1af68d052dcfcdb459b273fdf8e6b234a4" kindref="member">flushing</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!in)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;input<sp/>function<sp/>reported<sp/>failure&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>soxr_input(p,<sp/>in,<sp/>idone);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(odone<sp/>||<sp/>idone<sp/>||<sp/>(!was_flushing<sp/>&amp;&amp;<sp/>p-&gt;<ref refid="structsoxr_1af68d052dcfcdb459b273fdf8e6b234a4" kindref="member">flushing</ref>));</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>odone0;</highlight></codeline>
<codeline lineno="517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>soxr_i_for_o(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/>p,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>olen,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ilen)</highlight></codeline>
<codeline lineno="522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structsoxr_1a2ba74dd0f08cbb5fa88fdef8abcf0ad6" kindref="member">runtime_spec</ref>.<ref refid="structsoxr__runtime__spec_1a35b619aa4322f91fa5a2c06b148c9f2a" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="soxr_8h_1a08c267503b941aa075b40ebbca71e8d1" kindref="member">SOXR_STRICT_BUFFERING</ref>)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>rate_i_for_o(p-&gt;<ref refid="structsoxr_1a0a7572ca0ce1d351fdf4c2a72ec48657" kindref="member">resamplers</ref>[0],<sp/>olen);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(size_t)ceil((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)olen<sp/>*<sp/>p-&gt;<ref refid="structsoxr_1a285e9db9b8b56e49f5899acc810ada80" kindref="member">io_ratio</ref>);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(result,<sp/>ilen);</highlight></codeline>
<codeline lineno="531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>soxr_o_for_i(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/>p,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ilen,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>olen)</highlight></codeline>
<codeline lineno="537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>(size_t)ceil((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)ilen<sp/>/<sp/>p-&gt;<ref refid="structsoxr_1a285e9db9b8b56e49f5899acc810ada80" kindref="member">io_ratio</ref>);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(result,<sp/>olen);</highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="soxr_8c_1a853769187cb96f9e89aadcfe8a0deb10" refkind="member"><highlight class="normal"><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="soxr_8c_1a853769187cb96f9e89aadcfe8a0deb10" kindref="member">soxr_process</ref>(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/>p,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ilen0,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*<sp/>idone0,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>olen<sp/>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*<sp/>odone0)</highlight></codeline>
<codeline lineno="548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ilen,<sp/>idone,<sp/>odone<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>u;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flush_requested<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;null<sp/>pointer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!in)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>flush_requested<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>ilen<sp/>=<sp/>ilen0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ptrdiff_t)ilen0<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flush_requested<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>ilen0<sp/>=<sp/>~ilen0;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idone0<sp/>&amp;&amp;<sp/>(1<sp/>||<sp/>flush_requested))</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ilen<sp/>=<sp/>soxr_i_for_o(p,<sp/>olen,<sp/>ilen0);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ilen<sp/>=<sp/>ilen0</highlight><highlight class="comment">/*,<sp/>olen<sp/>=<sp/>soxr_o_for_i(p,<sp/>ilen,<sp/>olen)*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structsoxr_1af68d052dcfcdb459b273fdf8e6b234a4" kindref="member">flushing</ref><sp/>|=<sp/>ilen<sp/>==<sp/>ilen0<sp/>&amp;&amp;<sp/>flush_requested;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!out<sp/>&amp;&amp;<sp/>!in)</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>idone<sp/>=<sp/>ilen;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" kindref="member">io_spec</ref>.<ref refid="structsoxr__io__spec_1a9d98ffac1d4103593adeff47fd84eded" kindref="member">itype</ref><sp/>&amp;<sp/>p-&gt;<ref refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" kindref="member">io_spec</ref>.<ref refid="structsoxr__io__spec_1ac8e5ca279ab7ab0a86ee63a1dcd2a2f7" kindref="member">otype</ref><sp/>&amp;<sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66dab990a97e8f13eecb9886d91af4e2a67c" kindref="member">SOXR_SPLIT</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Both<sp/>i<sp/>&amp;<sp/>o<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p-&gt;<ref refid="structsoxr_1a2ba74dd0f08cbb5fa88fdef8abcf0ad6" kindref="member">runtime_spec</ref>.<ref refid="structsoxr__runtime__spec_1a2347bb798d0890828e2f03d165e80dd1" kindref="member">num_threads</ref><sp/>&amp;&amp;<sp/>p-&gt;<ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref><sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)p-&gt;<ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="midiclock_8c_1a5f689029e53f12e337967312e0a17717" kindref="member">done</ref>;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>soxr_input_1ch(p,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)i,<sp/>((<ref refid="soxr_8h_1ae8d86fb7a40f0fa830274bf66d62e8b4" kindref="member">soxr_cbufs_t</ref>)in)[i],<sp/>ilen);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/>soxr_output_1ch(p,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)i,<sp/>((<ref refid="soxr_8h_1a41249908bae858e9b4dbf016888fc17c" kindref="member">soxr_bufs_t</ref>)out)[i],<sp/>olen,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!i)</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odone<sp/>=<sp/><ref refid="midiclock_8c_1a5f689029e53f12e337967312e0a17717" kindref="member">done</ref>;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(u<sp/>=<sp/>0;<sp/>u<sp/>&lt;<sp/>p-&gt;<ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref>;<sp/>++u)<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in)</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>soxr_input_1ch(p,<sp/>u,<sp/>((<ref refid="soxr_8h_1ae8d86fb7a40f0fa830274bf66d62e8b4" kindref="member">soxr_cbufs_t</ref>)in)[u],<sp/>ilen);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odone<sp/>=<sp/>soxr_output_1ch(p,<sp/>u,<sp/>((<ref refid="soxr_8h_1a41249908bae858e9b4dbf016888fc17c" kindref="member">soxr_bufs_t</ref>)out)[u],<sp/>olen,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>idone<sp/>=<sp/>ilen;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>idone<sp/>=<sp/>ilen?<sp/>soxr_input<sp/>(p,<sp/>in<sp/>,<sp/>ilen)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>odone<sp/>=<sp/><ref refid="soxr_8c_1ae01b0184f5952309aa868d2d3dbd92d7" kindref="member">soxr_output</ref>(p,<sp/>out,<sp/>olen);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idone0)<sp/>*idone0<sp/>=<sp/>idone;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(odone0)<sp/>*odone0<sp/>=<sp/>odone;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;<ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601" refid="soxr_8c_1aca5d92f0da0d2dab566516564ab69e28" refkind="member"><highlight class="normal"><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="soxr_8c_1aca5d92f0da0d2dab566516564ab69e28" kindref="member">soxr_oneshot</ref>(</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>irate,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>orate,</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structsoxr_1a778913150a0ebcbe2f8f918bea261b1f" kindref="member">num_channels</ref>,</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ilen,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*<sp/>idone,</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>olen,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*<sp/>odone,</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsoxr__io__spec" kindref="compound">soxr_io_spec_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="structsoxr_1a77198536bdb21d6f27b96d404753ba14" kindref="member">io_spec</ref>,</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsoxr__quality__spec" kindref="compound">soxr_quality_spec_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="structsoxr_1ad86308d2e768fb9f67ec488772e73d5c" kindref="member">q_spec</ref>,</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsoxr__runtime__spec" kindref="compound">soxr_runtime_spec_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="structsoxr_1a2ba74dd0f08cbb5fa88fdef8abcf0ad6" kindref="member">runtime_spec</ref>)</highlight></codeline>
<codeline lineno="609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/>resampler;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref><sp/>=<sp/>q_spec?<sp/>q_spec-&gt;<ref refid="structsoxr__quality__spec_1adbcdd5300a723d1614e2cc35e571efdc" kindref="member">e</ref><sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!error)<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsoxr__quality__spec" kindref="compound">soxr_quality_spec_t</ref><sp/>q_spec1;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!q_spec)</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q_spec1<sp/>=<sp/><ref refid="soxr_8c_1a8bc34e71491e5ab698dcccdfc06c7ad8" kindref="member">soxr_quality_spec</ref>(<ref refid="soxr_8h_1ad606d0d54ddd31bbf399771f19dd61cf" kindref="member">SOXR_LQ</ref>,<sp/>0),<sp/>q_spec<sp/>=<sp/>&amp;q_spec1;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>resampler<sp/>=<sp/><ref refid="soxr_8c_1a763983e4a1f00869383ba22421b768e5" kindref="member">soxr_create</ref>(irate,<sp/>orate,<sp/>num_channels,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;error,<sp/>io_spec,<sp/>q_spec,<sp/>runtime_spec);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!error)<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="soxr_8c_1a853769187cb96f9e89aadcfe8a0deb10" kindref="member">soxr_process</ref>(resampler,<sp/>in,<sp/>~ilen,<sp/>idone,<sp/>out,<sp/>olen,<sp/>odone);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="soxr_8c_1af3bff5e9b256197fd02730fea110a5ea" kindref="member">soxr_delete</ref>(resampler);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628" refid="soxr_8h_1a39c57ebf8d93c601f24bf409889377e7" refkind="member"><highlight class="normal"><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="soxr_8c_1a02c27ecbb519f99e44db7e61800db57c" kindref="member">soxr_set_error</ref>(<ref refid="structsoxr" kindref="compound">soxr_t</ref><sp/>p,<sp/><ref refid="soxr_8h_1a9c0f6f8249a04c1ccb71881e2b0b6937" kindref="member">soxr_error_t</ref><sp/><ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref>)</highlight></codeline>
<codeline lineno="629"><highlight class="normal">{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;null<sp/>pointer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p-&gt;<ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref><sp/>&amp;&amp;<sp/>p-&gt;<ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref><sp/>!=<sp/>error)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;<ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref><sp/>=<sp/><ref refid="structsoxr_1a67c1c91e4377ab564c67acde95822038" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr.c"/>
  </compounddef>
</doxygen>
