<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_track_artist_8cpp" kind="file" language="C++">
    <compoundname>TrackArtist.cpp</compoundname>
    <includes refid="_audacity_8h" local="yes">Audacity.h</includes>
    <includes refid="_track_artist_8h" local="yes">TrackArtist.h</includes>
    <includes refid="_audacity_app_8h" local="yes">AudacityApp.h</includes>
    <includes refid="float__cast_8h" local="yes">float_cast.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="float_8h" local="no">float.h</includes>
    <includes local="no">limits</includes>
    <includes local="no">wx/brush.h</includes>
    <includes local="no">wx/colour.h</includes>
    <includes local="no">wx/dc.h</includes>
    <includes local="no">wx/dcmemory.h</includes>
    <includes local="no">wx/gdicmn.h</includes>
    <includes local="no">wx/graphics.h</includes>
    <includes local="no">wx/image.h</includes>
    <includes local="no">wx/pen.h</includes>
    <includes local="no">wx/log.h</includes>
    <includes local="no">wx/datetime.h</includes>
    <includes refid="_a_color_8h" local="yes">AColor.h</includes>
    <includes refid="_block_file_8h" local="yes">BlockFile.h</includes>
    <includes refid="src_2_envelope_8h" local="yes">Envelope.h</includes>
    <includes refid="_number_scale_8h" local="yes">NumberScale.h</includes>
    <includes refid="_wave_track_8h" local="yes">WaveTrack.h</includes>
    <includes refid="_label_track_8h" local="yes">LabelTrack.h</includes>
    <includes refid="_time_track_8h" local="yes">TimeTrack.h</includes>
    <includes refid="_prefs_8h" local="yes">Prefs.h</includes>
    <includes refid="_g_u_i_settings_8h" local="yes">prefs/GUISettings.h</includes>
    <includes refid="_spectrogram_settings_8h" local="yes">prefs/SpectrogramSettings.h</includes>
    <includes refid="_waveform_settings_8h" local="yes">prefs/WaveformSettings.h</includes>
    <includes refid="_spectrum_8h" local="yes">Spectrum.h</includes>
    <includes refid="_view_info_8h" local="yes">ViewInfo.h</includes>
    <includes refid="_ruler_8h" local="yes">widgets/Ruler.h</includes>
    <includes refid="_theme_8h" local="yes">Theme.h</includes>
    <includes refid="_all_theme_resources_8h" local="yes">AllThemeResources.h</includes>
    <includes refid="_experimental_8h" local="yes">Experimental.h</includes>
    <incdepgraph>
      <node id="56937">
        <label>wx/dir.h</label>
      </node>
      <node id="56946">
        <label>wx/choice.h</label>
      </node>
      <node id="56986">
        <label>WaveClip.h</label>
        <link refid="_wave_clip_8h"/>
        <childnode refid="56925" relation="include">
        </childnode>
        <childnode refid="56972" relation="include">
        </childnode>
        <childnode refid="56987" relation="include">
        </childnode>
        <childnode refid="56950" relation="include">
        </childnode>
        <childnode refid="56969" relation="include">
        </childnode>
        <childnode refid="56929" relation="include">
        </childnode>
        <childnode refid="56993" relation="include">
        </childnode>
        <childnode refid="56961" relation="include">
        </childnode>
        <childnode refid="56978" relation="include">
        </childnode>
        <childnode refid="56994" relation="include">
        </childnode>
        <childnode refid="56995" relation="include">
        </childnode>
        <childnode refid="56976" relation="include">
        </childnode>
      </node>
      <node id="56957">
        <label>limits</label>
      </node>
      <node id="56990">
        <label>wx/gauge.h</label>
      </node>
      <node id="56967">
        <label>wx/ffile.h</label>
      </node>
      <node id="56938">
        <label>wx/event.h</label>
      </node>
      <node id="57000">
        <label>wx/font.h</label>
      </node>
      <node id="56936">
        <label>wx/cmdline.h</label>
      </node>
      <node id="56955">
        <label>FLAC/ordinals.h</label>
        <link refid="ordinals_8h"/>
        <childnode refid="56956" relation="include">
        </childnode>
      </node>
      <node id="56997">
        <label>LabelTrack.h</label>
        <link refid="_label_track_8h"/>
        <childnode refid="56998" relation="include">
        </childnode>
        <childnode refid="56983" relation="include">
        </childnode>
        <childnode refid="56927" relation="include">
        </childnode>
        <childnode refid="56938" relation="include">
        </childnode>
        <childnode refid="57000" relation="include">
        </childnode>
        <childnode refid="56928" relation="include">
        </childnode>
        <childnode refid="56947" relation="include">
        </childnode>
        <childnode refid="56932" relation="include">
        </childnode>
        <childnode refid="57001" relation="include">
        </childnode>
      </node>
      <node id="57010">
        <label>FFT.h</label>
        <link refid="src_2fft_8h"/>
        <childnode refid="56930" relation="include">
        </childnode>
        <childnode refid="56999" relation="include">
        </childnode>
        <childnode refid="56929" relation="include">
        </childnode>
      </node>
      <node id="56962">
        <label>wx/graphics.h</label>
      </node>
      <node id="57008">
        <label>prefs/WaveformSettings.h</label>
        <link refid="_waveform_settings_8h"/>
      </node>
      <node id="56977">
        <label>Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="56933" relation="include">
        </childnode>
        <childnode refid="56932" relation="include">
        </childnode>
        <childnode refid="56978" relation="include">
        </childnode>
      </node>
      <node id="56969">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="56925" relation="include">
        </childnode>
        <childnode refid="56932" relation="include">
        </childnode>
        <childnode refid="56970" relation="include">
        </childnode>
        <childnode refid="56971" relation="include">
        </childnode>
      </node>
      <node id="56956">
        <label>stdint.h</label>
      </node>
      <node id="56974">
        <label>stdlib.h</label>
      </node>
      <node id="56999">
        <label>wx/wxchar.h</label>
      </node>
      <node id="56963">
        <label>wx/image.h</label>
      </node>
      <node id="56928">
        <label>wx/pen.h</label>
      </node>
      <node id="56950">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="56951" relation="include">
        </childnode>
        <childnode refid="56925" relation="include">
        </childnode>
      </node>
      <node id="56992">
        <label>wx/utils.h</label>
      </node>
      <node id="56980">
        <label>cmath</label>
      </node>
      <node id="56989">
        <label>wx/evtloop.h</label>
      </node>
      <node id="56929">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="56930" relation="include">
        </childnode>
      </node>
      <node id="56944">
        <label>wx/timer.h</label>
      </node>
      <node id="56961">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="56979">
        <label>NumberScale.h</label>
        <link refid="_number_scale_8h"/>
        <childnode refid="56975" relation="include">
        </childnode>
        <childnode refid="56980" relation="include">
        </childnode>
        <childnode refid="56930" relation="include">
        </childnode>
        <childnode refid="56981" relation="include">
        </childnode>
      </node>
      <node id="57011">
        <label>ViewInfo.h</label>
        <link refid="_view_info_8h"/>
        <childnode refid="56976" relation="include">
        </childnode>
        <childnode refid="56998" relation="include">
        </childnode>
      </node>
      <node id="57005">
        <label>wx/fileconf.h</label>
      </node>
      <node id="57017">
        <label>MacroMagic.h</label>
        <link refid="_macro_magic_8h"/>
        <childnode refid="57015" relation="include">
        </childnode>
      </node>
      <node id="56996">
        <label>WaveTrackLocation.h</label>
        <link refid="_wave_track_location_8h"/>
      </node>
      <node id="56959">
        <label>wx/dc.h</label>
      </node>
      <node id="56993">
        <label>RealFFTf.h</label>
        <link refid="_real_f_f_tf_8h"/>
        <childnode refid="56929" relation="include">
        </childnode>
      </node>
      <node id="56991">
        <label>wx/stattext.h</label>
      </node>
      <node id="56943">
        <label>wx/socket.h</label>
      </node>
      <node id="57016">
        <label>AllThemeResources.h</label>
        <link refid="_all_theme_resources_8h"/>
        <childnode refid="56929" relation="include">
        </childnode>
        <childnode refid="57017" relation="include">
        </childnode>
      </node>
      <node id="56994">
        <label>wx/list.h</label>
      </node>
      <node id="56930">
        <label>wx/defs.h</label>
      </node>
      <node id="56949">
        <label>wx/window.h</label>
      </node>
      <node id="56940">
        <label>wx/intl.h</label>
      </node>
      <node id="56987">
        <label>widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="56925" relation="include">
        </childnode>
        <childnode refid="56930" relation="include">
        </childnode>
        <childnode refid="56988" relation="include">
        </childnode>
        <childnode refid="56989" relation="include">
        </childnode>
        <childnode refid="56990" relation="include">
        </childnode>
        <childnode refid="56991" relation="include">
        </childnode>
        <childnode refid="56992" relation="include">
        </childnode>
      </node>
      <node id="56931">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="56932" relation="include">
        </childnode>
        <childnode refid="56933" relation="include">
        </childnode>
      </node>
      <node id="56966">
        <label>BlockFile.h</label>
        <link refid="_block_file_8h"/>
        <childnode refid="56932" relation="include">
        </childnode>
        <childnode refid="56967" relation="include">
        </childnode>
        <childnode refid="56968" relation="include">
        </childnode>
        <childnode refid="56969" relation="include">
        </childnode>
        <childnode refid="56971" relation="include">
        </childnode>
        <childnode refid="56972" relation="include">
        </childnode>
      </node>
      <node id="56988">
        <label>wx/dialog.h</label>
      </node>
      <node id="56968">
        <label>wx/filename.h</label>
      </node>
      <node id="56958">
        <label>wx/colour.h</label>
      </node>
      <node id="57003">
        <label>Prefs.h</label>
        <link refid="_prefs_8h"/>
        <childnode refid="56925" relation="include">
        </childnode>
        <childnode refid="57004" relation="include">
        </childnode>
        <childnode refid="57005" relation="include">
        </childnode>
      </node>
      <node id="56927">
        <label>wx/brush.h</label>
      </node>
      <node id="56981">
        <label>wx/debug.h</label>
      </node>
      <node id="57006">
        <label>prefs/GUISettings.h</label>
        <link refid="_g_u_i_settings_8h"/>
      </node>
      <node id="56964">
        <label>wx/datetime.h</label>
      </node>
      <node id="56925">
        <label>Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="56948">
        <label>wx/grid.h</label>
      </node>
      <node id="56954">
        <label>float.h</label>
        <link refid="float_8h"/>
        <childnode refid="56955" relation="include">
        </childnode>
      </node>
      <node id="56976">
        <label>vector</label>
      </node>
      <node id="56947">
        <label>wx/dynarray.h</label>
      </node>
      <node id="57015">
        <label>Theme.h</label>
        <link refid="_theme_8h"/>
        <childnode refid="56925" relation="include">
        </childnode>
        <childnode refid="57013" relation="include">
        </childnode>
        <childnode refid="56958" relation="include">
        </childnode>
        <childnode refid="56930" relation="include">
        </childnode>
        <childnode refid="56947" relation="include">
        </childnode>
        <childnode refid="57000" relation="include">
        </childnode>
        <childnode refid="56963" relation="include">
        </childnode>
      </node>
      <node id="56965">
        <label>AColor.h</label>
        <link refid="_a_color_8h"/>
        <childnode refid="56927" relation="include">
        </childnode>
        <childnode refid="56928" relation="include">
        </childnode>
      </node>
      <node id="56932">
        <label>wx/string.h</label>
      </node>
      <node id="56934">
        <label>AudacityApp.h</label>
        <link refid="_audacity_app_8h"/>
        <childnode refid="56925" relation="include">
        </childnode>
        <childnode refid="56935" relation="include">
        </childnode>
        <childnode refid="56936" relation="include">
        </childnode>
        <childnode refid="56937" relation="include">
        </childnode>
        <childnode refid="56938" relation="include">
        </childnode>
        <childnode refid="56939" relation="include">
        </childnode>
        <childnode refid="56940" relation="include">
        </childnode>
        <childnode refid="56941" relation="include">
        </childnode>
        <childnode refid="56942" relation="include">
        </childnode>
        <childnode refid="56943" relation="include">
        </childnode>
        <childnode refid="56944" relation="include">
        </childnode>
        <childnode refid="56945" relation="include">
        </childnode>
        <childnode refid="56950" relation="include">
        </childnode>
        <childnode refid="56929" relation="include">
        </childnode>
      </node>
      <node id="56995">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="56973">
        <label>Envelope.h</label>
        <link refid="src_2_envelope_8h"/>
        <childnode refid="56974" relation="include">
        </childnode>
        <childnode refid="56975" relation="include">
        </childnode>
        <childnode refid="56976" relation="include">
        </childnode>
        <childnode refid="56947" relation="include">
        </childnode>
        <childnode refid="56927" relation="include">
        </childnode>
        <childnode refid="56928" relation="include">
        </childnode>
        <childnode refid="56969" relation="include">
        </childnode>
        <childnode refid="56977" relation="include">
        </childnode>
      </node>
      <node id="56942">
        <label>wx/log.h</label>
      </node>
      <node id="56953">
        <label>math.h</label>
      </node>
      <node id="56998">
        <label>SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="56925" relation="include">
        </childnode>
        <childnode refid="56929" relation="include">
        </childnode>
        <childnode refid="56930" relation="include">
        </childnode>
        <childnode refid="56999" relation="include">
        </childnode>
        <childnode refid="56953" relation="include">
        </childnode>
      </node>
      <node id="56933">
        <label>wx/arrstr.h</label>
      </node>
      <node id="57004">
        <label>wx/config.h</label>
      </node>
      <node id="56924">
        <label>C:/_dev/OpenU/Audacity/audacity/src/TrackArtist.cpp</label>
        <link refid="TrackArtist.cpp"/>
        <childnode refid="56925" relation="include">
        </childnode>
        <childnode refid="56926" relation="include">
        </childnode>
        <childnode refid="56934" relation="include">
        </childnode>
        <childnode refid="56952" relation="include">
        </childnode>
        <childnode refid="56953" relation="include">
        </childnode>
        <childnode refid="56954" relation="include">
        </childnode>
        <childnode refid="56957" relation="include">
        </childnode>
        <childnode refid="56927" relation="include">
        </childnode>
        <childnode refid="56958" relation="include">
        </childnode>
        <childnode refid="56959" relation="include">
        </childnode>
        <childnode refid="56960" relation="include">
        </childnode>
        <childnode refid="56961" relation="include">
        </childnode>
        <childnode refid="56962" relation="include">
        </childnode>
        <childnode refid="56963" relation="include">
        </childnode>
        <childnode refid="56928" relation="include">
        </childnode>
        <childnode refid="56942" relation="include">
        </childnode>
        <childnode refid="56964" relation="include">
        </childnode>
        <childnode refid="56965" relation="include">
        </childnode>
        <childnode refid="56966" relation="include">
        </childnode>
        <childnode refid="56973" relation="include">
        </childnode>
        <childnode refid="56979" relation="include">
        </childnode>
        <childnode refid="56982" relation="include">
        </childnode>
        <childnode refid="56997" relation="include">
        </childnode>
        <childnode refid="57002" relation="include">
        </childnode>
        <childnode refid="57003" relation="include">
        </childnode>
        <childnode refid="57006" relation="include">
        </childnode>
        <childnode refid="57007" relation="include">
        </childnode>
        <childnode refid="57008" relation="include">
        </childnode>
        <childnode refid="57009" relation="include">
        </childnode>
        <childnode refid="57011" relation="include">
        </childnode>
        <childnode refid="57012" relation="include">
        </childnode>
        <childnode refid="57015" relation="include">
        </childnode>
        <childnode refid="57016" relation="include">
        </childnode>
        <childnode refid="56929" relation="include">
        </childnode>
      </node>
      <node id="56941">
        <label>wx/snglinst.h</label>
      </node>
      <node id="57002">
        <label>TimeTrack.h</label>
        <link refid="_time_track_8h"/>
        <childnode refid="56983" relation="include">
        </childnode>
        <childnode refid="56927" relation="include">
        </childnode>
        <childnode refid="56928" relation="include">
        </childnode>
        <childnode refid="56975" relation="include">
        </childnode>
      </node>
      <node id="56952">
        <label>float_cast.h</label>
        <link refid="float__cast_8h"/>
        <childnode refid="56925" relation="include">
        </childnode>
        <childnode refid="56953" relation="include">
        </childnode>
      </node>
      <node id="56983">
        <label>Track.h</label>
        <link refid="src_2track_8h"/>
        <childnode refid="56925" relation="include">
        </childnode>
        <childnode refid="56984" relation="include">
        </childnode>
        <childnode refid="56976" relation="include">
        </childnode>
        <childnode refid="56947" relation="include">
        </childnode>
        <childnode refid="56938" relation="include">
        </childnode>
        <childnode refid="56961" relation="include">
        </childnode>
        <childnode refid="56978" relation="include">
        </childnode>
        <childnode refid="56932" relation="include">
        </childnode>
        <childnode refid="56929" relation="include">
        </childnode>
        <childnode refid="56972" relation="include">
        </childnode>
        <childnode refid="56969" relation="include">
        </childnode>
      </node>
      <node id="56951">
        <label>wx/thread.h</label>
      </node>
      <node id="57007">
        <label>prefs/SpectrogramSettings.h</label>
        <link refid="_spectrogram_settings_8h"/>
        <childnode refid="56929" relation="include">
        </childnode>
      </node>
      <node id="57001">
        <label>wx/clipbrd.h</label>
      </node>
      <node id="56926">
        <label>TrackArtist.h</label>
        <link refid="_track_artist_8h"/>
        <childnode refid="56927" relation="include">
        </childnode>
        <childnode refid="56928" relation="include">
        </childnode>
        <childnode refid="56929" relation="include">
        </childnode>
        <childnode refid="56931" relation="include">
        </childnode>
      </node>
      <node id="56984">
        <label>MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="56985" relation="include">
        </childnode>
      </node>
      <node id="56945">
        <label>widgets/FileHistory.h</label>
        <link refid="_file_history_8h"/>
        <childnode refid="56930" relation="include">
        </childnode>
        <childnode refid="56946" relation="include">
        </childnode>
        <childnode refid="56947" relation="include">
        </childnode>
        <childnode refid="56938" relation="include">
        </childnode>
        <childnode refid="56948" relation="include">
        </childnode>
        <childnode refid="56932" relation="include">
        </childnode>
        <childnode refid="56949" relation="include">
        </childnode>
      </node>
      <node id="56935">
        <label>wx/app.h</label>
        <link refid="app_8h"/>
      </node>
      <node id="56978">
        <label>wx/longlong.h</label>
      </node>
      <node id="57014">
        <label>wx/panel.h</label>
      </node>
      <node id="56982">
        <label>WaveTrack.h</label>
        <link refid="_wave_track_8h"/>
        <childnode refid="56983" relation="include">
        </childnode>
        <childnode refid="56972" relation="include">
        </childnode>
        <childnode refid="56986" relation="include">
        </childnode>
        <childnode refid="56929" relation="include">
        </childnode>
        <childnode refid="56987" relation="include">
        </childnode>
        <childnode refid="56976" relation="include">
        </childnode>
        <childnode refid="56961" relation="include">
        </childnode>
        <childnode refid="56978" relation="include">
        </childnode>
        <childnode refid="56951" relation="include">
        </childnode>
        <childnode refid="56996" relation="include">
        </childnode>
      </node>
      <node id="57013">
        <label>wx/bitmap.h</label>
      </node>
      <node id="57009">
        <label>Spectrum.h</label>
        <link refid="_spectrum_8h"/>
        <childnode refid="57010" relation="include">
        </childnode>
      </node>
      <node id="56975">
        <label>algorithm</label>
      </node>
      <node id="56970">
        <label>stdio.h</label>
      </node>
      <node id="56972">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="56925" relation="include">
        </childnode>
        <childnode refid="56930" relation="include">
        </childnode>
        <childnode refid="56931" relation="include">
        </childnode>
      </node>
      <node id="56939">
        <label>wx/docview.h</label>
      </node>
      <node id="56960">
        <label>wx/dcmemory.h</label>
      </node>
      <node id="57012">
        <label>widgets/Ruler.h</label>
        <link refid="_ruler_8h"/>
        <childnode refid="57013" relation="include">
        </childnode>
        <childnode refid="56959" relation="include">
        </childnode>
        <childnode refid="56960" relation="include">
        </childnode>
        <childnode refid="56938" relation="include">
        </childnode>
        <childnode refid="57000" relation="include">
        </childnode>
        <childnode refid="57014" relation="include">
        </childnode>
        <childnode refid="56949" relation="include">
        </childnode>
        <childnode refid="56929" relation="include">
        </childnode>
      </node>
      <node id="56985">
        <label>memory</label>
      </node>
      <node id="56971">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="56933" relation="include">
        </childnode>
        <childnode refid="56947" relation="include">
        </childnode>
        <childnode refid="56967" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_track_artist_8cpp_1a0535b2c11fb2d31bddd10dd8f33ed2e8" prot="public" static="no">
        <name>ZOOMLIMIT</name>
        <initializer>0.001f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/TrackArtist.cpp" line="783" column="9"/>
      </memberdef>
      <memberdef kind="define" id="_track_artist_8cpp_1a0c33b494a68ce28497e7ce8e5e95feff" prot="public" static="no">
        <name>CONST</name>
        <initializer><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/TrackArtist.cpp" line="1678" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/TrackArtist.cpp" bodystart="1678" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_track_artist_8cpp_1a00fc87b63f1436536d3090852d57f810" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int GetWaveYPos</definition>
        <argsstring>(float value, float min, float max, int height, bool dB, bool outer, float dBr, bool clip)</argsstring>
        <name>GetWaveYPos</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>float</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float</type>
          <declname>max</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>dB</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>outer</declname>
        </param>
        <param>
          <type>float</type>
          <declname>dBr</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>clip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Takes a value between min and max and returns a value between height and 0 <xrefsect id="todo_1_todo000051"><xreftitle>Todo</xreftitle><xrefdescription><para>Should this function move int GuiWaveTrack where it can then use the zoomMin, zoomMax and height values without having to have them passed in to it?? </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/TrackArtist.cpp" line="922" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/TrackArtist.cpp" bodystart="922" bodyend="967"/>
      </memberdef>
      <memberdef kind="function" id="_track_artist_8cpp_1a0d34e48dcb47d4a36c7bca106d510fd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float FromDB</definition>
        <argsstring>(float value, double dBRange)</argsstring>
        <name>FromDB</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dBRange</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/TrackArtist.cpp" line="969" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/TrackArtist.cpp" bodystart="969" bodyend="976"/>
      </memberdef>
      <memberdef kind="function" id="_track_artist_8cpp_1ae9fe7afff0bfbea92663e8a2c0ecf0cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float ValueOfPixel</definition>
        <argsstring>(int yy, int height, bool offset, bool dB, double dBRange, float zoomMin, float zoomMax)</argsstring>
        <name>ValueOfPixel</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>yy</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>dB</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dBRange</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zoomMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zoomMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/TrackArtist.cpp" line="978" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/TrackArtist.cpp" bodystart="978" bodyend="997"/>
      </memberdef>
      <memberdef kind="function" id="_track_artist_8cpp_1a38d029890b82b8b926c4e0472207fed7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float findValue</definition>
        <argsstring>(const float *spectrum, float bin0, float bin1, int half, bool autocorrelation, int gain, int range)</argsstring>
        <name>findValue</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float *</type>
          <declname>spectrum</declname>
        </param>
        <param>
          <type>float</type>
          <declname>bin0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>bin1</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>half</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>autocorrelation</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>gain</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/TrackArtist.cpp" line="2021" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/TrackArtist.cpp" bodystart="2022" bodyend="2078"/>
      </memberdef>
      <memberdef kind="function" id="_track_artist_8cpp_1a9061a778a820c92e76932a871a267877" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_a_color_1a3a1a5b4ab4055f09810d58a166f61bfe" kindref="member">AColor::ColorGradientChoice</ref></type>
        <definition>AColor::ColorGradientChoice ChooseColorSet</definition>
        <argsstring>(float bin0, float bin1, float selBinLo, float selBinCenter, float selBinHi, int dashCount, bool isSpectral)</argsstring>
        <name>ChooseColorSet</name>
        <param>
          <type>float</type>
          <declname>bin0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>bin1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>selBinLo</declname>
        </param>
        <param>
          <type>float</type>
          <declname>selBinCenter</declname>
        </param>
        <param>
          <type>float</type>
          <declname>selBinHi</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>dashCount</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>isSpectral</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/TrackArtist.cpp" line="2084" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/TrackArtist.cpp" bodystart="2084" bodyend="2100"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>TrackArtist.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">*******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_audacity_8h" kindref="compound">Audacity.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_track_artist_8h" kindref="compound">TrackArtist.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_audacity_app_8h" kindref="compound">AudacityApp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="float__cast_8h" kindref="compound">float_cast.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="float_8h" kindref="compound">float.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/brush.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/colour.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dcmemory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/gdicmn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/graphics.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/image.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/pen.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/datetime.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_note_track_8h" kindref="compound">NoteTrack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_a_color_8h" kindref="compound">AColor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_block_file_8h" kindref="compound">BlockFile.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="src_2_envelope_8h" kindref="compound">Envelope.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_number_scale_8h" kindref="compound">NumberScale.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_wave_track_8h" kindref="compound">WaveTrack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_label_track_8h" kindref="compound">LabelTrack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_time_track_8h" kindref="compound">TimeTrack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_prefs_8h" kindref="compound">Prefs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_g_u_i_settings_8h" kindref="compound">prefs/GUISettings.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_spectrogram_settings_8h" kindref="compound">prefs/SpectrogramSettings.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_waveform_settings_8h" kindref="compound">prefs/WaveformSettings.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_spectrum_8h" kindref="compound">Spectrum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_view_info_8h" kindref="compound">ViewInfo.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_ruler_8h" kindref="compound">widgets/Ruler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_theme_8h" kindref="compound">Theme.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_all_theme_resources_8h" kindref="compound">AllThemeResources.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_experimental_8h" kindref="compound">Experimental.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>PROFILE_WAVEFORM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PROFILE_WAVEFORM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>__WXMSW__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#include<sp/>&lt;<ref refid="win_2_projects_2libsndfile_2sys_2time_8h" kindref="compound">sys/time.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gWaveformTimeTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gWaveformTimeCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="class_profiler" kindref="compound">Profiler</ref><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_profiler_1a675ebc9207b9aeace1d967c085abeacf" kindref="member">Profiler</ref>()</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>__WXMSW__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_time64(&amp;tv0);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gettimeofday(&amp;tv0,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_profiler_1a1e6dd8f6cfb15cd5237b971d8f49c749" kindref="member">~Profiler</ref>()</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>__WXMSW__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_time64(&amp;tv1);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>elapsed<sp/>=<sp/>_difftime64(tv1,<sp/>tv0);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gettimeofday(&amp;tv1,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>elapsed<sp/>=</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tv1.tv_sec<sp/>+<sp/>tv1.tv_usec*0.000001)<sp/>-</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tv0.tv_sec<sp/>+<sp/>tv0.tv_usec*0.000001);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gWaveformTimeTotal<sp/>+=<sp/>elapsed;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gWaveformTimeCount++;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxPrintf(wxT(</highlight><highlight class="stringliteral">&quot;Avg<sp/>waveform<sp/>drawing<sp/>time:<sp/>%f\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gWaveformTimeTotal<sp/>/<sp/>gWaveformTimeCount);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>__WXMSW__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__time64_t<sp/>tv0,<sp/>tv1;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tv0,<sp/>tv1;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="237"><highlight class="comment">const<sp/>int<sp/>octaveHeight<sp/>=<sp/>62;</highlight></codeline>
<codeline lineno="238"><highlight class="comment">const<sp/>int<sp/>blackPos[5]<sp/>=<sp/>{<sp/>6,<sp/>16,<sp/>32,<sp/>42,<sp/>52<sp/>};</highlight></codeline>
<codeline lineno="239"><highlight class="comment">const<sp/>int<sp/>whitePos[7]<sp/>=<sp/>{<sp/>0,<sp/>9,<sp/>17,<sp/>26,<sp/>35,<sp/>44,<sp/>53<sp/>};</highlight></codeline>
<codeline lineno="240"><highlight class="comment">const<sp/>int<sp/>notePos[12]<sp/>=<sp/>{<sp/>1,<sp/>6,<sp/>11,<sp/>16,<sp/>21,<sp/>27,</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32,<sp/>37,<sp/>42,<sp/>47,<sp/>52,<sp/>57<sp/>};</highlight></codeline>
<codeline lineno="242"><highlight class="comment"></highlight></codeline>
<codeline lineno="243"><highlight class="comment">//<sp/>map<sp/>pitch<sp/>number<sp/>to<sp/>window<sp/>coordinate<sp/>of<sp/>the<sp/>*top*<sp/>of<sp/>the<sp/>note</highlight></codeline>
<codeline lineno="244"><highlight class="comment">//<sp/>Note<sp/>the<sp/>&quot;free&quot;<sp/>variable<sp/>bottom,<sp/>which<sp/>is<sp/>assumed<sp/>to<sp/>be<sp/>a<sp/>local</highlight></codeline>
<codeline lineno="245"><highlight class="comment">//<sp/>variable<sp/>set<sp/>to<sp/>the<sp/>offset<sp/>of<sp/>pitch<sp/>0<sp/>relative<sp/>to<sp/>the<sp/>window</highlight></codeline>
<codeline lineno="246"><highlight class="comment">#define<sp/>IPITCH_TO_Y(t,<sp/>p)<sp/>(bottom<sp/>-<sp/>((p)<sp/>/<sp/>12)<sp/>*<sp/>octaveHeight<sp/>-<sp/>\</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notePos[(p)<sp/>%<sp/>12]<sp/>-<sp/>(t)-&gt;GetPitchHeight())</highlight></codeline>
<codeline lineno="248"><highlight class="comment"></highlight></codeline>
<codeline lineno="249"><highlight class="comment">//<sp/>GetBottom<sp/>is<sp/>called<sp/>from<sp/>a<sp/>couple<sp/>of<sp/>places<sp/>to<sp/>compute<sp/>the<sp/>hypothetical</highlight></codeline>
<codeline lineno="250"><highlight class="comment">//<sp/>coordinate<sp/>of<sp/>the<sp/>bottom<sp/>of<sp/>pitch<sp/>0<sp/>in<sp/>window<sp/>coordinates.<sp/>See</highlight></codeline>
<codeline lineno="251"><highlight class="comment">//<sp/>IPITCH_TO_Y<sp/>above,<sp/>which<sp/>computes<sp/>coordinates<sp/>relative<sp/>to<sp/>GetBottom()</highlight></codeline>
<codeline lineno="252"><highlight class="comment">//<sp/>Note<sp/>the<sp/>-NOTE_MARGIN,<sp/>which<sp/>leaves<sp/>a<sp/>little<sp/>margin<sp/>to<sp/>draw<sp/>notes<sp/>that</highlight></codeline>
<codeline lineno="253"><highlight class="comment">//<sp/>are<sp/>out<sp/>of<sp/>bounds.<sp/>I&apos;m<sp/>not<sp/>sure<sp/>why<sp/>the<sp/>-2<sp/>is<sp/>necessary.</highlight></codeline>
<codeline lineno="254"><highlight class="comment">int<sp/>TrackArtist::GetBottom(NoteTrack<sp/>*t,<sp/>const<sp/>wxRect<sp/>&amp;rect)</highlight></codeline>
<codeline lineno="255"><highlight class="comment">{</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/>int<sp/>bottomNote<sp/>=<sp/>t-&gt;GetBottomNote();</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/>int<sp/>bottom<sp/>=<sp/>rect.y<sp/>+<sp/>rect.height<sp/>-<sp/>2<sp/>-<sp/>t-&gt;GetNoteMargin()<sp/>+</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((bottomNote<sp/>/<sp/>12)<sp/>*<sp/>octaveHeight<sp/>+<sp/>notePos[bottomNote<sp/>%<sp/>12]);</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/>return<sp/>bottom;</highlight></codeline>
<codeline lineno="260"><highlight class="comment"></highlight></codeline>
<codeline lineno="261"><highlight class="comment">}</highlight></codeline>
<codeline lineno="262"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="class_track_artist_1a1523a85e9f5d5400bde1cd3e3fbf3413" refkind="member"><highlight class="normal"><ref refid="class_track_artist_1a1523a85e9f5d5400bde1cd3e3fbf3413" kindref="member">TrackArtist::TrackArtist</ref>()</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/>mInsetLeft<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/>mInsetTop<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/>mInsetRight<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/>mInsetBottom<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/>mdBrange<sp/>=<sp/><ref refid="_g_u_i_settings_8h_1aa2147fdb6d75c564f0569bc513b022af" kindref="member">ENV_DB_RANGE</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/>mShowClipping<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/>UpdatePrefs();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/>SetColours();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/>vruler<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ruler" kindref="compound">Ruler</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="class_track_artist_1a5e33cdb8a68a1cd9a7381c6b93f4422f" refkind="member"><highlight class="normal"><ref refid="class_track_artist_1a5e33cdb8a68a1cd9a7381c6b93f4422f" kindref="member">TrackArtist::~TrackArtist</ref>()</highlight></codeline>
<codeline lineno="281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>vruler;</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="class_track_artist_1add49089e256d22507061e90e71841d0c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_artist_1add49089e256d22507061e90e71841d0c" kindref="member">TrackArtist::SetColours</ref>()</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a16e679bc4836ef0ecde4edc6bbd4c7c0" kindref="member">SetBrushColour</ref>(<sp/>blankBrush,<sp/><sp/><sp/><sp/><sp/><sp/>clrBlank<sp/>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a16e679bc4836ef0ecde4edc6bbd4c7c0" kindref="member">SetBrushColour</ref>(<sp/>unselectedBrush,<sp/>clrUnselected);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a16e679bc4836ef0ecde4edc6bbd4c7c0" kindref="member">SetBrushColour</ref>(<sp/>selectedBrush,<sp/><sp/><sp/>clrSelected);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a16e679bc4836ef0ecde4edc6bbd4c7c0" kindref="member">SetBrushColour</ref>(<sp/>sampleBrush,<sp/><sp/><sp/><sp/><sp/>clrSample);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a16e679bc4836ef0ecde4edc6bbd4c7c0" kindref="member">SetBrushColour</ref>(<sp/>selsampleBrush,<sp/><sp/>clrSelSample);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a16e679bc4836ef0ecde4edc6bbd4c7c0" kindref="member">SetBrushColour</ref>(<sp/>dragsampleBrush,<sp/>clrDragSample);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a16e679bc4836ef0ecde4edc6bbd4c7c0" kindref="member">SetBrushColour</ref>(<sp/>blankSelectedBrush,<sp/>clrBlankSelected);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a935ffd1bb1fcdd5b7c0ff7ef507c60b7" kindref="member">SetPenColour</ref>(<sp/><sp/><sp/>blankPen,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clrBlank);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a935ffd1bb1fcdd5b7c0ff7ef507c60b7" kindref="member">SetPenColour</ref>(<sp/><sp/><sp/>unselectedPen,<sp/><sp/><sp/>clrUnselected);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a935ffd1bb1fcdd5b7c0ff7ef507c60b7" kindref="member">SetPenColour</ref>(<sp/><sp/><sp/>selectedPen,<sp/><sp/><sp/><sp/><sp/>clrSelected);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a935ffd1bb1fcdd5b7c0ff7ef507c60b7" kindref="member">SetPenColour</ref>(<sp/><sp/><sp/>samplePen,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>clrSample);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a935ffd1bb1fcdd5b7c0ff7ef507c60b7" kindref="member">SetPenColour</ref>(<sp/><sp/><sp/>selsamplePen,<sp/><sp/><sp/><sp/>clrSelSample);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a935ffd1bb1fcdd5b7c0ff7ef507c60b7" kindref="member">SetPenColour</ref>(<sp/><sp/><sp/>muteSamplePen,<sp/><sp/><sp/>clrMuteSample);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a935ffd1bb1fcdd5b7c0ff7ef507c60b7" kindref="member">SetPenColour</ref>(<sp/><sp/><sp/>odProgressDonePen,<sp/>clrProgressDone);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a935ffd1bb1fcdd5b7c0ff7ef507c60b7" kindref="member">SetPenColour</ref>(<sp/><sp/><sp/>odProgressNotYetPen,<sp/>clrProgressNotYet);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a935ffd1bb1fcdd5b7c0ff7ef507c60b7" kindref="member">SetPenColour</ref>(<sp/><sp/><sp/>rmsPen,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clrRms);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a935ffd1bb1fcdd5b7c0ff7ef507c60b7" kindref="member">SetPenColour</ref>(<sp/><sp/><sp/>muteRmsPen,<sp/><sp/><sp/><sp/><sp/><sp/>clrMuteRms);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a935ffd1bb1fcdd5b7c0ff7ef507c60b7" kindref="member">SetPenColour</ref>(<sp/><sp/><sp/>shadowPen,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>clrShadow);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a935ffd1bb1fcdd5b7c0ff7ef507c60b7" kindref="member">SetPenColour</ref>(<sp/><sp/><sp/>clippedPen,<sp/><sp/><sp/><sp/><sp/><sp/>clrClipped);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a935ffd1bb1fcdd5b7c0ff7ef507c60b7" kindref="member">SetPenColour</ref>(<sp/><sp/><sp/>muteClippedPen,<sp/><sp/>clrMuteClipped);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a935ffd1bb1fcdd5b7c0ff7ef507c60b7" kindref="member">SetPenColour</ref>(<sp/><sp/><sp/>blankSelectedPen,clrBlankSelected);</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="class_track_artist_1a7f6b12455815aebb388d9731a85f5740" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_artist_1a7f6b12455815aebb388d9731a85f5740" kindref="member">TrackArtist::SetInset</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom)</highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/>mInsetLeft<sp/><sp/><sp/>=<sp/>left;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/>mInsetTop<sp/><sp/><sp/><sp/>=<sp/>top;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/>mInsetRight<sp/><sp/>=<sp/>right;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/>mInsetBottom<sp/>=<sp/>bottom;</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="class_track_artist_1aecb43569c2de2e9e2cae4584ffd80a5f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_artist_1aecb43569c2de2e9e2cae4584ffd80a5f" kindref="member">TrackArtist::DrawTracks</ref>(<ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*<sp/>tracks,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxDC<sp/>&amp;<sp/>dc,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxRegion<sp/>&amp;<sp/>reg,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>&amp;<sp/>rect,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>&amp;<sp/>clip,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>&amp;selectedRegion,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>drawEnvelope,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bigPoints,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>drawSliders)</highlight></codeline>
<codeline lineno="330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>trackRect<sp/>=<sp/>rect;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>stereoTrackRect;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(tracks);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasSolo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(t<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;<sp/>t<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>())<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1acd2518a3c8c5b82f2a5bd45ce074d781" kindref="member">GetSolo</ref>())<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasSolo<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DEBUG_CLIENT_AREA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>+0<sp/>to<sp/>+1<sp/>or<sp/>+2<sp/>to<sp/>see<sp/>the<sp/>bounding<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/>mInsetLeft<sp/>=<sp/>1+0;<sp/>mInsetTop<sp/>=<sp/>5+0;<sp/>mInsetRight<sp/>=<sp/>6+0;<sp/>mInsetBottom<sp/>=<sp/>2+0;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>just<sp/>shows<sp/>what<sp/>the<sp/>passed<sp/>in<sp/>rectangles<sp/>enclose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/>dc.SetPen(wxColour(*wxGREEN));</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/>dc.SetBrush(*wxTRANSPARENT_BRUSH);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/>dc.DrawRectangle(rect);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/>dc.SetPen(wxColour(*wxBLUE));</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/>dc.SetBrush(*wxTRANSPARENT_BRUSH);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/>dc.DrawRectangle(clip);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/GUI/ShowTrackNameInWaveform&quot;</highlight><highlight class="normal">),<sp/>&amp;mbShowTrackNameInWaveform,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/>t<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a4eea44fac9add00ff978213df1652441" kindref="member">StartWith</ref>(start);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>trackRect.y<sp/>=<sp/>t-&gt;<ref refid="class_track_1adefbd93c6cbde70d082a64729cfc74d8" kindref="member">GetY</ref>()<sp/>-<sp/>zoomInfo.<ref refid="class_zoom_info_1ae96b54cadf85fe96e933a6af9edbd660" kindref="member">vpos</ref>;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>trackRect.height<sp/>=<sp/>t-&gt;<ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">GetHeight</ref>();</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trackRect.y<sp/>&gt;<sp/>clip.GetBottom()<sp/>&amp;&amp;<sp/>!t-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>())<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DEBUG_CLIENT_AREA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Filled<sp/>rectangle<sp/>to<sp/>show<sp/>the<sp/>interior<sp/>of<sp/>the<sp/>client<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>zr<sp/>=<sp/>trackRect;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zr.x+=1;<sp/>zr.y+=5;<sp/>zr.width-=7;<sp/>zr.height-=7;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(*wxCYAN_PEN);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetBrush(*wxRED_BRUSH);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(zr);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stereoTrackRect<sp/>=<sp/>trackRect;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>various<sp/>reasons,<sp/>the<sp/>code<sp/>will<sp/>break<sp/>if<sp/>we<sp/>display<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>a<sp/>stereo<sp/>pair<sp/>of<sp/>tracks<sp/>but<sp/>not<sp/>the<sp/>other<sp/>-<sp/>for<sp/>example,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>you<sp/>try<sp/>to<sp/>edit<sp/>the<sp/>envelope<sp/>of<sp/>one<sp/>track<sp/>when<sp/>its<sp/>linked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pair<sp/>is<sp/>off<sp/>the<sp/>screen,<sp/>then<sp/>it<sp/>won&apos;t<sp/>be<sp/>able<sp/>to<sp/>edit<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>offscreen<sp/>envelope.<sp/><sp/>So<sp/>we<sp/>compute<sp/>the<sp/>rect<sp/>of<sp/>the<sp/>track<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>its<sp/>linked<sp/>partner,<sp/>and<sp/>see<sp/>if<sp/>any<sp/>part<sp/>of<sp/>that<sp/>rect<sp/>is<sp/>on-screen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>so,<sp/>we<sp/>draw<sp/>both.<sp/><sp/>Otherwise,<sp/>we<sp/>can<sp/>safely<sp/>draw<sp/>neither.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*link<sp/>=<sp/>t-&gt;<ref refid="class_track_1afafc93348a2d442bf956fa072d3d769b" kindref="member">GetLink</ref>();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(link)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>())<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;re<sp/>the<sp/>first<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stereoTrackRect.height<sp/>+=<sp/>link-&gt;<ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">GetHeight</ref>();</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;re<sp/>the<sp/>second<sp/>of<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stereoTrackRect.y<sp/>-=<sp/>link-&gt;<ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">GetHeight</ref>();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stereoTrackRect.height<sp/>+=<sp/>link-&gt;<ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">GetHeight</ref>();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(MONO_WAVE_PAN(t)){</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stereoTrackRect.height<sp/>+=<sp/>t-&gt;<ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">GetHeight</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;SetVirtualStereo(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stereoTrackRect.Intersects(clip)<sp/>&amp;&amp;<sp/>reg.Contains(stereoTrackRect))<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>rr<sp/>=<sp/>trackRect;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rr.x<sp/>+=<sp/>mInsetLeft;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rr.y<sp/>+=<sp/>mInsetTop;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rr.width<sp/>-=<sp/>(mInsetLeft<sp/>+<sp/>mInsetRight);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rr.height<sp/>-=<sp/>(mInsetTop<sp/>+<sp/>mInsetBottom);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawTrack(t,<sp/>dc,<sp/>rr,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selectedRegion,<sp/>zoomInfo,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawEnvelope,<sp/>bigPoints,<sp/>drawSliders,<sp/>hasSolo);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(MONO_WAVE_PAN(t)){</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trackRect.y<sp/>=<sp/>t-&gt;<ref refid="class_track_1adefbd93c6cbde70d082a64729cfc74d8" kindref="member">GetY</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>-<sp/>zoomInfo.<ref refid="class_zoom_info_1ae96b54cadf85fe96e933a6af9edbd660" kindref="member">vpos</ref>;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trackRect.height<sp/>=<sp/>t-&gt;<ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">GetHeight</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stereoTrackRect<sp/>=<sp/>trackRect;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stereoTrackRect.y<sp/>-=<sp/>t-&gt;<ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">GetHeight</ref>();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stereoTrackRect.height<sp/>+=<sp/>t-&gt;<ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">GetHeight</ref>();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;SetVirtualStereo(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stereoTrackRect.Intersects(clip)<sp/>&amp;&amp;<sp/>reg.Contains(stereoTrackRect))<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>rr<sp/>=<sp/>trackRect;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rr.x<sp/>+=<sp/>mInsetLeft;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rr.y<sp/>+=<sp/>mInsetTop;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rr.width<sp/>-=<sp/>(mInsetLeft<sp/>+<sp/>mInsetRight);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rr.height<sp/>-=<sp/>(mInsetTop<sp/>+<sp/>mInsetBottom);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawTrack(t,<sp/>dc,<sp/>rr,<sp/>zoomInfo,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawEnvelope,<sp/>bigPoints,<sp/>drawSliders,<sp/>hasSolo);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="class_track_artist_1a2dc63db7d889371b5f00be926b05c387" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_artist_1a2dc63db7d889371b5f00be926b05c387" kindref="member">TrackArtist::DrawTrack</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxDC<sp/>&amp;<sp/>dc,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;<sp/>rect,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>&amp;selectedRegion,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>drawEnvelope,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bigPoints,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>drawSliders,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasSolo)</highlight></codeline>
<codeline lineno="450"><highlight class="normal">{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>())<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>:</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>wt<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)t;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=wt-&gt;<ref refid="class_wave_track_1a40a351c828128e85e2ba993107b96ef3" kindref="member">GetClipIterator</ref>();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData()-&gt;ClearDisplayRect();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>muted<sp/>=<sp/>(hasSolo<sp/>||<sp/>t-&gt;<ref refid="class_track_1aebabe796d0b3222ef7d23ae13a62769b" kindref="member">GetMute</ref>())<sp/>&amp;&amp;<sp/>!t-&gt;<ref refid="class_track_1acd2518a3c8c5b82f2a5bd45ce074d781" kindref="member">GetSolo</ref>();</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMAC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxAntialiasMode<sp/>aamode<sp/>=<sp/>dc.GetGraphicsContext()-&gt;GetAntialiasMode();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.GetGraphicsContext()-&gt;SetAntialiasMode(wxANTIALIAS_NONE);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(wt-&gt;<ref refid="class_wave_track_1a93e8da76e3495f28b5e17518016f9c9f" kindref="member">GetDisplay</ref>())<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5aeef9a24216b729762bfd38161b5b2a83" kindref="member">WaveTrack::Waveform</ref>:</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawWaveform(wt,<sp/>dc,<sp/>rect,<sp/>selectedRegion,<sp/>zoomInfo,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawEnvelope,<sp/><sp/>bigPoints,<sp/>drawSliders,<sp/>muted);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5ac0941a4c239c9e4a1d487f31786fbbc9" kindref="member">WaveTrack::Spectrum</ref>:</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawSpectrum(wt,<sp/>dc,<sp/>rect,<sp/>selectedRegion,<sp/>zoomInfo);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMAC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.GetGraphicsContext()-&gt;SetAntialiasMode(aamode);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mbShowTrackNameInWaveform<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Exclude<sp/>right<sp/>channel<sp/>of<sp/>stereo<sp/>track<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(!wt-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>()<sp/>&amp;&amp;<sp/>wt-&gt;<ref refid="class_track_1afafc93348a2d442bf956fa072d3d769b" kindref="member">GetLink</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxFont<sp/>labelFont(12,<sp/>wxSWISS,<sp/>wxNORMAL,<sp/>wxNORMAL);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetFont(labelFont);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetTextForeground(wxColour(255,<sp/>255,<sp/>0));</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawText<sp/>(wt-&gt;<ref refid="class_track_1a670b88686f99e151d6a305a709f130b1" kindref="member">GetName</ref>(),<sp/>rect.x+10,<sp/>rect.y);<sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>right<sp/>10<sp/>pixels<sp/>to<sp/>avoid<sp/>overwriting<sp/>&lt;-<sp/>symbol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>Wave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Track::Note:</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>muted<sp/>=<sp/>(hasSolo<sp/>||<sp/>t-&gt;<ref refid="class_track_1aebabe796d0b3222ef7d23ae13a62769b" kindref="member">GetMute</ref>())<sp/>&amp;&amp;<sp/>!t-&gt;<ref refid="class_track_1acd2518a3c8c5b82f2a5bd45ce074d781" kindref="member">GetSolo</ref>();</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DrawNoteTrack((<ref refid="class_note_track" kindref="compound">NoteTrack</ref><sp/>*)t,<sp/>dc,<sp/>rect,<sp/>selectedRegion,<sp/>zoomInfo,<sp/>muted);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif<sp/>//<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" kindref="member">Track::Label</ref>:</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DrawLabelTrack((<ref refid="class_label_track" kindref="compound">LabelTrack</ref><sp/>*)t,<sp/>dc,<sp/>rect,<sp/>selectedRegion,<sp/>zoomInfo);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efa2348e03ba06177fe4dbcf87e27d82e33" kindref="member">Track::Time</ref>:</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DrawTimeTrack((<ref refid="class_time_track" kindref="compound">TimeTrack</ref><sp/>*)t,<sp/>dc,<sp/>rect,<sp/>zoomInfo);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="class_track_artist_1aa5b19d1f05fa5297ed4a97c179a3b658" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_artist_1aa5b19d1f05fa5297ed4a97c179a3b658" kindref="member">TrackArtist::DrawVRuler</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/>wxDC<sp/>*<sp/>dc,<sp/>wxRect<sp/>&amp;<sp/>rect)</highlight></codeline>
<codeline lineno="510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kind<sp/>=<sp/>t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>();</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Label<sp/>and<sp/>Time<sp/>tracks<sp/>do<sp/>not<sp/>have<sp/>a<sp/>vruler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>give<sp/>it<sp/>a<sp/>beveled<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kind<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" kindref="member">Track::Label</ref>)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>bev<sp/>=<sp/>rect;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bev.Inflate(-1,<sp/>0);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bev.width<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a9113deb34fdd4021fefe975070b6d2e1" kindref="member">AColor::BevelTrackInfo</ref>(*dc,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Time<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kind<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efa2348e03ba06177fe4dbcf87e27d82e33" kindref="member">Track::Time</ref>)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>bev<sp/>=<sp/>rect;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bev.Inflate(-1,<sp/>0);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bev.width<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a9113deb34fdd4021fefe975070b6d2e1" kindref="member">AColor::BevelTrackInfo</ref>(*dc,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Right<sp/>align<sp/>the<sp/>ruler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>rr<sp/>=<sp/>rect;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rr.width--;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1a798c2a7bb95cde4d9873f09aa08645bd" kindref="member">vrulerSize</ref>.GetWidth()<sp/>&lt;<sp/>rect.GetWidth())<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>adj<sp/>=<sp/>rr.GetWidth()<sp/>-<sp/>t-&gt;<ref refid="class_track_1a798c2a7bb95cde4d9873f09aa08645bd" kindref="member">vrulerSize</ref>.GetWidth();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rr.x<sp/>+=<sp/>adj;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rr.width<sp/>-=<sp/>adj;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UpdateVRuler(t,<sp/>rr);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;Draw(*dc);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>waves<sp/>have<sp/>a<sp/>ruler<sp/>in<sp/>the<sp/>info<sp/>panel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>ruler<sp/>needs<sp/>a<sp/>bevelled<sp/>surround.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kind<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>bev<sp/>=<sp/>rect;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bev.Inflate(-1,<sp/>0);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bev.width<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a9113deb34fdd4021fefe975070b6d2e1" kindref="member">AColor::BevelTrackInfo</ref>(*dc,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Right<sp/>align<sp/>the<sp/>ruler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>rr<sp/>=<sp/>rect;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rr.width--;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1a798c2a7bb95cde4d9873f09aa08645bd" kindref="member">vrulerSize</ref>.GetWidth()<sp/>&lt;<sp/>rect.GetWidth())<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>adj<sp/>=<sp/>rr.GetWidth()<sp/>-<sp/>t-&gt;<ref refid="class_track_1a798c2a7bb95cde4d9873f09aa08645bd" kindref="member">vrulerSize</ref>.GetWidth();</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rr.x<sp/>+=<sp/>adj;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rr.width<sp/>-=<sp/>adj;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UpdateVRuler(t,<sp/>rr);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;Draw(*dc);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>note<sp/>track<sp/>draws<sp/>a<sp/>vertical<sp/>keyboard<sp/>to<sp/>label<sp/>pitches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kind<sp/>==<sp/>Track::Note)<sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UpdateVRuler(t,<sp/>rect);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;SetPen(*wxTRANSPARENT_PEN);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;SetBrush(*wxWHITE_BRUSH);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>bev<sp/>=<sp/>rect;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bev.x++;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bev.width--;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;DrawRectangle(bev);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rect.y<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rect.height<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>bottom<sp/>=<sp/>GetBottom((NoteTrack<sp/>*)<sp/>t,<sp/>rect);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_note_track" kindref="compound">NoteTrack</ref><sp/>*track<sp/>=<sp/>(<ref refid="class_note_track" kindref="compound">NoteTrack</ref><sp/>*)<sp/>t;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>track-&gt;PrepareIPitchToY(rect);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxPen<sp/>hilitePen;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hilitePen.SetColour(120,<sp/>120,<sp/>120);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxBrush<sp/>blackKeyBrush;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blackKeyBrush.SetColour(70,<sp/>70,<sp/>70);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;SetBrush(blackKeyBrush);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fontSize<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__WXMSW__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fontSize<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxFont<sp/>labelFont(fontSize,<sp/>wxSWISS,<sp/>wxNORMAL,<sp/>wxNORMAL);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;SetFont(labelFont);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>octave<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>obottom<sp/>=<sp/>track-&gt;GetOctaveBottom(octave);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>marg<sp/>=<sp/>track-&gt;GetNoteMargin();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//IPITCH_TO_Y(octave<sp/>*<sp/>12)<sp/>+<sp/>PITCH_HEIGHT<sp/>+<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(obottom<sp/>&gt;=<sp/>rect.y)<sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;SetPen(*wxBLACK_PEN);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>white<sp/>=<sp/>0;<sp/>white<sp/>&lt;<sp/>7;<sp/>white++)<sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>track-&gt;GetWhitePos(white);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obottom<sp/>-<sp/>pos<sp/>&gt;<sp/>rect.y<sp/>+<sp/>marg<sp/>+<sp/>1<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>draw<sp/>too<sp/>close<sp/>to<sp/>margin<sp/>line<sp/>--<sp/>it&apos;s<sp/>annoying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obottom<sp/>-<sp/>pos<sp/>&lt;<sp/>rect.y<sp/>+<sp/>rect.height<sp/>-<sp/>marg<sp/>-<sp/>3)</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(*dc,<sp/>rect.x,<sp/>obottom<sp/>-<sp/>pos,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.x<sp/>+<sp/>rect.width,<sp/>obottom<sp/>-<sp/>pos);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>br<sp/>=<sp/>rect;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br.height<sp/>=<sp/>track-&gt;GetPitchHeight();</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br.x++;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br.width<sp/>=<sp/>17;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>black<sp/>=<sp/>0;<sp/>black<sp/>&lt;<sp/>5;<sp/>black++)<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br.y<sp/>=<sp/>obottom<sp/>-<sp/>track-&gt;GetBlackPos(black);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(br.y<sp/>&gt;<sp/>rect.y<sp/>+<sp/>marg<sp/>-<sp/>2<sp/>&amp;&amp;<sp/>br.y<sp/>+<sp/>br.height<sp/>&lt;<sp/>rect.y<sp/>+<sp/>rect.height<sp/>-<sp/>marg)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;SetPen(hilitePen);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;DrawRectangle(br);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;SetPen(*wxBLACK_PEN);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(*dc,</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br.x<sp/>+<sp/>1,<sp/>br.y<sp/>+<sp/>br.height<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br.x<sp/>+<sp/>br.width<sp/>-<sp/>1,<sp/>br.y<sp/>+<sp/>br.height<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(*dc,</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br.x<sp/>+<sp/>br.width<sp/>-<sp/>1,<sp/>br.y<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br.x<sp/>+<sp/>br.width<sp/>-<sp/>1,<sp/>br.y<sp/>+<sp/>br.height<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(octave<sp/>&gt;=<sp/>1<sp/>&amp;&amp;<sp/>octave<sp/>&lt;=<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ISO<sp/>standard:<sp/>A440<sp/>is<sp/>in<sp/>the<sp/>4th<sp/>octave,<sp/>denoted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A4<sp/>&lt;-<sp/>the<sp/>&quot;4&quot;<sp/>should<sp/>be<sp/>a<sp/>subscript.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.Printf(wxT(</highlight><highlight class="stringliteral">&quot;C%d&quot;</highlight><highlight class="normal">),<sp/>octave<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxCoord<sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;GetTextExtent(s,<sp/>&amp;width,<sp/>&amp;height);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obottom<sp/>-<sp/>height<sp/>+<sp/>4<sp/>&gt;<sp/>rect.y<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obottom<sp/>+<sp/>4<sp/>&lt;<sp/>rect.y<sp/>+<sp/>rect.height)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;SetTextForeground(wxColour(60,<sp/>60,<sp/>255));</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;DrawText(s,<sp/>rect.x<sp/>+<sp/>rect.width<sp/>-<sp/>width,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obottom<sp/>-<sp/>height<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obottom<sp/>=<sp/>track-&gt;GetOctaveBottom(++octave);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>lines<sp/>delineating<sp/>the<sp/>out-of-bounds<sp/>margins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;SetPen(*wxBLACK_PEN);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>would<sp/>think<sp/>the<sp/>-1<sp/>offset<sp/>here<sp/>should<sp/>be<sp/>-2<sp/>to<sp/>match<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adjustment<sp/>to<sp/>rect.y<sp/>(see<sp/>above),<sp/>but<sp/>-1<sp/>produces<sp/>correct<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(*dc,<sp/>rect.x,<sp/>rect.y<sp/>+<sp/>marg<sp/>-<sp/>1,<sp/>rect.x<sp/>+<sp/>rect.width,<sp/>rect.y<sp/>+<sp/>marg<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>the<sp/>margin<sp/>gives<sp/>us<sp/>the<sp/>bottom<sp/>of<sp/>the<sp/>line,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>extra<sp/>-1<sp/>gets<sp/>us<sp/>to<sp/>the<sp/>top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(*dc,<sp/>rect.x,<sp/>rect.y<sp/>+<sp/>rect.height<sp/>-<sp/>marg<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.x<sp/>+<sp/>rect.width,<sp/>rect.y<sp/>+<sp/>rect.height<sp/>-<sp/>marg<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669" refid="class_track_artist_1a12b902fc290c08e21ce0646f21dae146" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_artist_1a12b902fc290c08e21ce0646f21dae146" kindref="member">TrackArtist::UpdateVRuler</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/>wxRect<sp/>&amp;<sp/>rect)</highlight></codeline>
<codeline lineno="670"><highlight class="normal">{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Label<sp/>tracks<sp/>do<sp/>not<sp/>have<sp/>a<sp/>vruler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" kindref="member">Track::Label</ref>)<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Time<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efa2348e03ba06177fe4dbcf87e27d82e33" kindref="member">Track::Time</ref>)<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_time_track" kindref="compound">TimeTrack</ref><sp/>*tt<sp/>=<sp/>(<ref refid="class_time_track" kindref="compound">TimeTrack</ref><sp/>*)t;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>tt-&gt;<ref refid="class_time_track_1a4b1f56611ba90a95691a0b47107e4d22" kindref="member">GetRangeLower</ref>()<sp/>*<sp/>100.0;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>tt-&gt;<ref refid="class_time_track_1a8d16c30d6a49657b1e3125ba16a3fae8" kindref="member">GetRangeUpper</ref>()<sp/>*<sp/>100.0;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetBounds(rect.x,<sp/>rect.y,<sp/>rect.x<sp/>+<sp/>rect.width,<sp/>rect.y<sp/>+<sp/>rect.height-1);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetOrientation(wxVERTICAL);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetRange(max,<sp/>min);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetFormat((tt-&gt;<ref refid="class_time_track_1abae5d14db9f5a3f3ffc6c6c99278ed3a" kindref="member">GetDisplayLog</ref>())<sp/>?<sp/><ref refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198ae827b2a3942fcd4e249908e9661e40c7" kindref="member">Ruler::RealLogFormat</ref><sp/>:<sp/><ref refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198aad1375df5e28b7c8146f9f6cfb1c25c6" kindref="member">Ruler::RealFormat</ref>);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetUnits(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetLabelEdges(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetLog(tt-&gt;<ref refid="class_time_track_1abae5d14db9f5a3f3ffc6c6c99278ed3a" kindref="member">GetDisplayLog</ref>());</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>waves<sp/>have<sp/>a<sp/>ruler<sp/>in<sp/>the<sp/>info<sp/>panel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>ruler<sp/>needs<sp/>a<sp/>bevelled<sp/>surround.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*wt<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dBRange<sp/>=</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1a10c50123dc26cba66469b011c1852047" kindref="member">GetWaveformSettings</ref>().<ref refid="class_waveform_settings_1a97217e305f6eb7ead4452924fec4029d" kindref="member">dBRange</ref>;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>display<sp/>=<sp/>wt-&gt;<ref refid="class_wave_track_1a93e8da76e3495f28b5e17518016f9c9f" kindref="member">GetDisplay</ref>();</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(display<sp/>==<sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5aeef9a24216b729762bfd38161b5b2a83" kindref="member">WaveTrack::Waveform</ref>)<sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_waveform_settings_1a62e3323b180e270201c4bd5bcf52b4e4" kindref="member">WaveformSettings::ScaleType</ref><sp/>scaleType<sp/>=</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1a10c50123dc26cba66469b011c1852047" kindref="member">GetWaveformSettings</ref>().<ref refid="class_waveform_settings_1a6866a0a302099ef5fcd4fb60cba946cd" kindref="member">scaleType</ref>;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scaleType<sp/>==<sp/><ref refid="class_waveform_settings_1a62e3323b180e270201c4bd5bcf52b4e4a54fba21bb1212c84ffd56a4f510bc8dc" kindref="member">WaveformSettings::stLinear</ref>)<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Waveform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1aebb4cac69620ce02b4f396fb37d23f82" kindref="member">GetDisplayBounds</ref>(&amp;min,<sp/>&amp;max);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wt-&gt;<ref refid="class_wave_track_1ab82fb513c3fba956467adc8a8d55b4b8" kindref="member">GetLastScaleType</ref>()<sp/>!=<sp/>scaleType<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1ab82fb513c3fba956467adc8a8d55b4b8" kindref="member">GetLastScaleType</ref>()<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>a<sp/>translation<sp/>into<sp/>the<sp/>linear<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1a0692506243ea687501faddd0e767124e" kindref="member">SetLastScaleType</ref>();</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1a9223604210ecf46c9238f43a715ab5f3" kindref="member">SetLastdBRange</ref>();</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sign<sp/>=<sp/>(min<sp/>&gt;=<sp/>0<sp/>?<sp/>1<sp/>:<sp/>-1);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min<sp/>!=<sp/>0.)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/><ref refid="_audacity_8h_1ae65fedb390ed942548ca02213e6a2813" kindref="member">DB_TO_LINEAR</ref>(fabs(min)<sp/>*<sp/>dBRange<sp/>-<sp/>dBRange);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min<sp/>&lt;<sp/>0.0)</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>*=<sp/>sign;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign<sp/>=<sp/>(max<sp/>&gt;=<sp/>0<sp/>?<sp/>1<sp/>:<sp/>-1);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max<sp/>!=<sp/>0.)<sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/><ref refid="_audacity_8h_1ae65fedb390ed942548ca02213e6a2813" kindref="member">DB_TO_LINEAR</ref>(fabs(max)<sp/>*<sp/>dBRange<sp/>-<sp/>dBRange);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max<sp/>&lt;<sp/>0.0)</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>*=<sp/>sign;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1aaf6f597255538feaf1017d046993445c" kindref="member">SetDisplayBounds</ref>(min,<sp/>max);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetBounds(rect.x,<sp/>rect.y,<sp/>rect.x<sp/>+<sp/>rect.width,<sp/>rect.y<sp/>+<sp/>rect.height<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetOrientation(wxVERTICAL);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetRange(max,<sp/>min);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetFormat(<ref refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198aad1375df5e28b7c8146f9f6cfb1c25c6" kindref="member">Ruler::RealFormat</ref>);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetUnits(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetLabelEdges(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetLog(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(scaleType<sp/>==<sp/><ref refid="class_waveform_settings_1a62e3323b180e270201c4bd5bcf52b4e4a2e6fe9dffc2c1d6bbcfaaee36df90f68" kindref="member">WaveformSettings::stLogarithmic</ref>);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaleType<sp/>=<sp/><ref refid="class_waveform_settings_1a62e3323b180e270201c4bd5bcf52b4e4a2e6fe9dffc2c1d6bbcfaaee36df90f68" kindref="member">WaveformSettings::stLogarithmic</ref>;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetUnits(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1aebb4cac69620ce02b4f396fb37d23f82" kindref="member">GetDisplayBounds</ref>(&amp;min,<sp/>&amp;max);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lastdBRange;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wt-&gt;<ref refid="class_wave_track_1ab82fb513c3fba956467adc8a8d55b4b8" kindref="member">GetLastScaleType</ref>()<sp/>!=<sp/>scaleType<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1ab82fb513c3fba956467adc8a8d55b4b8" kindref="member">GetLastScaleType</ref>()<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>a<sp/>translation<sp/>into<sp/>the<sp/>dB<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1a0692506243ea687501faddd0e767124e" kindref="member">SetLastScaleType</ref>();</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1a9223604210ecf46c9238f43a715ab5f3" kindref="member">SetLastdBRange</ref>();</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sign<sp/>=<sp/>(min<sp/>&gt;=<sp/>0<sp/>?<sp/>1<sp/>:<sp/>-1);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min<sp/>!=<sp/>0.)<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>(<ref refid="_audacity_8h_1a6dfdc8f6b4fa2e8f244f18cedb607b8e" kindref="member">LINEAR_TO_DB</ref>(fabs(min))<sp/>+<sp/>dBRange)<sp/>/<sp/>dBRange;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min<sp/>&lt;<sp/>0.0)</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>*=<sp/>sign;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign<sp/>=<sp/>(max<sp/>&gt;=<sp/>0<sp/>?<sp/>1<sp/>:<sp/>-1);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max<sp/>!=<sp/>0.)<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>(<ref refid="_audacity_8h_1a6dfdc8f6b4fa2e8f244f18cedb607b8e" kindref="member">LINEAR_TO_DB</ref>(fabs(max))<sp/>+<sp/>dBRange)<sp/>/<sp/>dBRange;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max<sp/>&lt;<sp/>0.0)</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>*=<sp/>sign;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1aaf6f597255538feaf1017d046993445c" kindref="member">SetDisplayBounds</ref>(min,<sp/>max);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dBRange<sp/>!=<sp/>(lastdBRange<sp/>=<sp/>wt-&gt;<ref refid="class_wave_track_1a3b73b4b1c0c422cc1b3363757f4ecb07" kindref="member">GetLastdBRange</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1a9223604210ecf46c9238f43a715ab5f3" kindref="member">SetLastdBRange</ref>();</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remap<sp/>the<sp/>max<sp/>of<sp/>the<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sign<sp/>=<sp/>(max<sp/>&gt;=<sp/>0<sp/>?<sp/>1<sp/>:<sp/>-1);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newMax<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max<sp/>!=<sp/>0.)<sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Ugh,<sp/>duplicating<sp/>from<sp/>TrackPanel.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZOOMLIMIT<sp/>0.001f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>extreme<sp/>=<sp/><ref refid="_audacity_8h_1a6dfdc8f6b4fa2e8f244f18cedb607b8e" kindref="member">LINEAR_TO_DB</ref>(2);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>recover<sp/>dB<sp/>value<sp/>of<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dB<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(extreme,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(fabs(max))<sp/>*<sp/>lastdBRange<sp/>-<sp/>lastdBRange));</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>NEW<sp/>scale<sp/>position,<sp/>but<sp/>old<sp/>max<sp/>may<sp/>get<sp/>trimmed<sp/>if<sp/>the<sp/>db<sp/>limit<sp/>rises</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>trim<sp/>it<sp/>to<sp/>zero<sp/>though,<sp/>but<sp/>leave<sp/>max<sp/>and<sp/>limit<sp/>distinct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newMax<sp/>=<sp/>sign<sp/>*<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(<ref refid="_track_artist_8cpp_1a0535b2c11fb2d31bddd10dd8f33ed2e8" kindref="member">ZOOMLIMIT</ref>,<sp/>(dBRange<sp/>+<sp/>dB)<sp/>/<sp/>dBRange);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>the<sp/>min<sp/>of<sp/>the<sp/>scale<sp/>if<sp/>we<sp/>can,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>the<sp/>db<sp/>Limit<sp/>remains<sp/>where<sp/>it<sp/>was<sp/>on<sp/>screen,<sp/>but<sp/>don&apos;t<sp/>violate<sp/>extremes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min<sp/>!=<sp/>0.)</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(-extreme,<sp/>newMax<sp/>*<sp/>min<sp/>/<sp/>max);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1aaf6f597255538feaf1017d046993445c" kindref="member">SetDisplayBounds</ref>(min,<sp/>newMax);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>topval<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bot<sp/>=<sp/>rect.height;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>botval<sp/>=<sp/>-dBRange;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bot<sp/>=<sp/>top<sp/>+<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)((max<sp/>/<sp/>(max<sp/>-<sp/>min))*(bot<sp/>-<sp/>top));</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top<sp/>+=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)((max<sp/>-<sp/>1)<sp/>/<sp/>(max<sp/>-<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>)<sp/>*<sp/>(bot<sp/>-<sp/>top));</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max<sp/>&lt;<sp/>1<sp/>&amp;&amp;<sp/>max<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topval<sp/>=<sp/>-((1<sp/>-<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>)<sp/>*<sp/>dBRange);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>botval<sp/>=<sp/>-((1<sp/>-<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>)<sp/>*<sp/>dBRange);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetBounds(rect.x,<sp/>rect.y<sp/>+<sp/>top,<sp/>rect.x<sp/>+<sp/>rect.width,<sp/>rect.y<sp/>+<sp/>bot<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetOrientation(wxVERTICAL);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetRange(topval,<sp/>botval);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetBounds(0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0);<sp/></highlight><highlight class="comment">//<sp/>A.C.H<sp/>I<sp/>couldn&apos;t<sp/>find<sp/>a<sp/>way<sp/>to<sp/>just<sp/>disable<sp/>it?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetFormat(<ref refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198ae827b2a3942fcd4e249908e9661e40c7" kindref="member">Ruler::RealLogFormat</ref>);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetLabelEdges(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetLog(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(display<sp/>==<sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5ac0941a4c239c9e4a1d487f31786fbbc9" kindref="member">WaveTrack::Spectrum</ref>);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_spectrogram_settings" kindref="compound">SpectrogramSettings</ref><sp/>&amp;settings<sp/>=<sp/>wt-&gt;<ref refid="class_wave_track_1a54f8ed0c9c1d1fae0241867565b33512" kindref="member">GetSpectrogramSettings</ref>();</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minFreq,<sp/>maxFreq;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1a6c31cef06f382857502ce036b2dc795b" kindref="member">GetSpectrumBounds</ref>(&amp;minFreq,<sp/>&amp;maxFreq);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(settings.<ref refid="class_spectrogram_settings_1a8c6871ffc9d2f3f645e9d14c24920e04" kindref="member">scaleType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_spectrogram_settings_1ad80cc088bcf7afb4176fd7195d4691fca409b06214bb9e020d4252d6981947acf" kindref="member">SpectrogramSettings::stLinear</ref>:</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.height<sp/>&lt;<sp/>60)</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="851"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw<sp/>the<sp/>ruler</highlight></codeline>
<codeline lineno="852"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>we<sp/>will<sp/>use<sp/>Hz<sp/>if<sp/>maxFreq<sp/>is<sp/>&lt;<sp/>2000,<sp/>otherwise<sp/>we<sp/>represent<sp/>kHz,</highlight></codeline>
<codeline lineno="853"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>append<sp/>to<sp/>the<sp/>numbers<sp/>a<sp/>&quot;k&quot;</highlight></codeline>
<codeline lineno="854"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetBounds(rect.x,<sp/>rect.y,<sp/>rect.x<sp/>+<sp/>rect.width,<sp/>rect.y<sp/>+<sp/>rect.height<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetOrientation(wxVERTICAL);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetFormat(<ref refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198aad1375df5e28b7c8146f9f6cfb1c25c6" kindref="member">Ruler::RealFormat</ref>);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetLabelEdges(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>kHz<sp/>in<sp/>scale,<sp/>if<sp/>appropriate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxFreq<sp/>&gt;=<sp/>2000)<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetRange((maxFreq<sp/>/<sp/>1000.),<sp/>(minFreq<sp/>/<sp/>1000.));</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetUnits(wxT(</highlight><highlight class="stringliteral">&quot;k&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetRange(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(maxFreq),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(minFreq));</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetUnits(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetLog(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_spectrogram_settings_1ad80cc088bcf7afb4176fd7195d4691fca5c62f4c050d024a9d5651292713dc49d" kindref="member">SpectrogramSettings::stLogarithmic</ref>:</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_spectrogram_settings_1ad80cc088bcf7afb4176fd7195d4691fca5a24e86be9af1c36d900f07be7a14354" kindref="member">SpectrogramSettings::stMel</ref>:</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_spectrogram_settings_1ad80cc088bcf7afb4176fd7195d4691fca05863539deaa0612d40abbca4f3c4cc6" kindref="member">SpectrogramSettings::stBark</ref>:</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_spectrogram_settings_1ad80cc088bcf7afb4176fd7195d4691fca413649f9f64d50a2b56f44743d22f8cc" kindref="member">SpectrogramSettings::stErb</ref>:</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_spectrogram_settings_1ad80cc088bcf7afb4176fd7195d4691fcaee4c3c5d4de31bbe5faa2a7b62d73260" kindref="member">SpectrogramSettings::stPeriod</ref>:</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SpectrumLog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.height<sp/>&lt;<sp/>10)</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="884"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw<sp/>the<sp/>ruler</highlight></codeline>
<codeline lineno="885"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>we<sp/>will<sp/>use<sp/>Hz<sp/>if<sp/>maxFreq<sp/>is<sp/>&lt;<sp/>2000,<sp/>otherwise<sp/>we<sp/>represent<sp/>kHz,</highlight></codeline>
<codeline lineno="886"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>append<sp/>to<sp/>the<sp/>numbers<sp/>a<sp/>&quot;k&quot;</highlight></codeline>
<codeline lineno="887"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetBounds(rect.x,<sp/>rect.y,<sp/>rect.x<sp/>+<sp/>rect.width,<sp/>rect.y<sp/>+<sp/>rect.height<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetOrientation(wxVERTICAL);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetFormat(<ref refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198aba68a1adce860f0e30519cfc2b280272" kindref="member">Ruler::IntFormat</ref>);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetLabelEdges(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetRange(maxFreq,<sp/>minFreq);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetUnits(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetLog(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_number_scale" kindref="compound">NumberScale</ref><sp/><ref refid="seqread_8c_1aa2a8c6fbe5ed24f9523eb4e01368e4bc" kindref="member">scale</ref></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(wt-&gt;<ref refid="class_wave_track_1a54f8ed0c9c1d1fae0241867565b33512" kindref="member">GetSpectrogramSettings</ref>().<ref refid="class_spectrogram_settings_1aa0c8fbbe53db1ede59a834438a3ee375" kindref="member">GetScale</ref></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(minFreq,<sp/>maxFreq,<sp/>wt-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">).Reversal());</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetNumberScale(&amp;<ref refid="seqread_8c_1aa2a8c6fbe5ed24f9523eb4e01368e4bc" kindref="member">scale</ref>);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>note<sp/>track<sp/>isn&apos;t<sp/>drawing<sp/>a<sp/>ruler<sp/>at<sp/>all!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>it<sp/>needs<sp/>to!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/>Track::Note)<sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetBounds(rect.x,<sp/>rect.y,<sp/>rect.x<sp/>+<sp/>1,<sp/>rect.y<sp/>+<sp/>rect.height-1);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vruler-&gt;SetOrientation(wxVERTICAL);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/>vruler-&gt;GetMaxSize(&amp;t-&gt;<ref refid="class_track_1a798c2a7bb95cde4d9873f09aa08645bd" kindref="member">vrulerSize</ref>.x,<sp/>&amp;t-&gt;<ref refid="class_track_1a798c2a7bb95cde4d9873f09aa08645bd" kindref="member">vrulerSize</ref>.y);</highlight></codeline>
<codeline lineno="915"><highlight class="normal">}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="922" refid="_track_artist_8h_1a00fc87b63f1436536d3090852d57f810" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_track_artist_8cpp_1a00fc87b63f1436536d3090852d57f810" kindref="member">GetWaveYPos</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>,</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dB,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>outer,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dBr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clip)</highlight></codeline>
<codeline lineno="925"><highlight class="normal">{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dB)<sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(height<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sign<sp/>=<sp/>(value<sp/>&gt;=<sp/>0<sp/>?<sp/>1<sp/>:<sp/>-1);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>!=<sp/>0.)<sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>db<sp/>=<sp/><ref refid="_audacity_8h_1a6dfdc8f6b4fa2e8f244f18cedb607b8e" kindref="member">LINEAR_TO_DB</ref>(fabs(value));</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>(db<sp/>+<sp/>dBr)<sp/>/<sp/>dBr;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!outer)<sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>-=<sp/>0.5;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&lt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>*=<sp/>sign;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!outer)<sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&gt;=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>-=<sp/>0.5;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>+=<sp/>0.5;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip)<sp/>{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&lt;<sp/>min)<sp/>{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&gt;<sp/>max)<sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/>value<sp/>=<sp/>(max<sp/>-<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>)<sp/>/<sp/>(max<sp/>-<sp/>min);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(value<sp/>*<sp/>(height<sp/>-<sp/>1)<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="967"><highlight class="normal">}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969" refid="_track_artist_8h_1a0d34e48dcb47d4a36c7bca106d510fd7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_track_artist_8cpp_1a0d34e48dcb47d4a36c7bca106d510fd7" kindref="member">FromDB</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dBRange)</highlight></codeline>
<codeline lineno="970"><highlight class="normal">{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sign<sp/>=<sp/>(value<sp/>&gt;=<sp/>0<sp/>?<sp/>1<sp/>:<sp/>-1);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_audacity_8h_1ae65fedb390ed942548ca02213e6a2813" kindref="member">DB_TO_LINEAR</ref>((fabs(value)<sp/>*<sp/>dBRange)<sp/>-<sp/>dBRange)<sp/>*<sp/>sign;</highlight></codeline>
<codeline lineno="976"><highlight class="normal">}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978" refid="_track_artist_8h_1ae9fe7afff0bfbea92663e8a2c0ecf0cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_track_artist_8cpp_1ae9fe7afff0bfbea92663e8a2c0ecf0cb" kindref="member">ValueOfPixel</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>,</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dB,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dBRange,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomMin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomMax)</highlight></codeline>
<codeline lineno="980"><highlight class="normal">{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(height<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Map<sp/>0<sp/>to<sp/>max<sp/>and<sp/>height<sp/>-<sp/>1<sp/>(not<sp/>height)<sp/>to<sp/>min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v<sp/>=</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>==<sp/>1<sp/>?<sp/>(zoomMin<sp/>+<sp/>zoomMax)<sp/>/<sp/>2<sp/>:</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zoomMax<sp/>-<sp/>(yy<sp/>/<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(height<sp/>-<sp/>1))<sp/>*<sp/>(zoomMax<sp/>-<sp/>zoomMin);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset)<sp/>{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>+=<sp/>.5;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>-=<sp/>.5;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dB)</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="_track_artist_8cpp_1a0d34e48dcb47d4a36c7bca106d510fd7" kindref="member">FromDB</ref>(v,<sp/>dBRange);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="997"><highlight class="normal">}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrackArtist::DrawNegativeOffsetTrackArrows(wxDC<sp/>&amp;dc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;rect)</highlight></codeline>
<codeline lineno="1000"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draws<sp/>two<sp/>black<sp/>arrows<sp/>on<sp/>the<sp/>left<sp/>side<sp/>of<sp/>the<sp/>track<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>indicate<sp/>the<sp/>user<sp/>that<sp/>the<sp/>track<sp/>has<sp/>been<sp/>time-shifted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>left<sp/>beyond<sp/>t=0.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/>dc.SetPen(*wxBLACK_PEN);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.x<sp/>+<sp/>2,<sp/>rect.y<sp/>+<sp/>6,</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.x<sp/>+<sp/>8,<sp/>rect.y<sp/>+<sp/>6);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.x<sp/>+<sp/>2,<sp/>rect.y<sp/>+<sp/>6,</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.x<sp/>+<sp/>6,<sp/>rect.y<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.x<sp/>+<sp/>2,<sp/>rect.y<sp/>+<sp/>6,</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.x<sp/>+<sp/>6,<sp/>rect.y<sp/>+<sp/>10);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.x<sp/>+<sp/>2,<sp/>rect.y<sp/>+<sp/>rect.height<sp/>-<sp/>8,</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.x<sp/>+<sp/>8,<sp/>rect.y<sp/>+<sp/>rect.height<sp/>-<sp/>8);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.x<sp/>+<sp/>2,<sp/>rect.y<sp/>+<sp/>rect.height<sp/>-<sp/>8,</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.x<sp/>+<sp/>6,<sp/>rect.y<sp/>+<sp/>rect.height<sp/>-<sp/>4);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.x<sp/>+<sp/>2,<sp/>rect.y<sp/>+<sp/>rect.height<sp/>-<sp/>8,</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.x<sp/>+<sp/>6,<sp/>rect.y<sp/>+<sp/>rect.height<sp/>-<sp/>12);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrackArtist::DrawWaveformBackground(wxDC<sp/>&amp;dc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leftOffset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;rect,</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>env[],</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomMin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomMax,</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dB,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dBRange,</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo,</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>drawEnvelope,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bIsSyncLockSelected)</highlight></codeline>
<codeline lineno="1033"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Visually<sp/>(one<sp/>vertical<sp/>slice<sp/>of<sp/>the<sp/>waveform<sp/>background,<sp/>on<sp/>its<sp/>side;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>&quot;*&quot;<sp/>is<sp/>the<sp/>actual<sp/>waveform<sp/>background<sp/>we&apos;re<sp/>drawing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>|--------------------------------|--------------------------------|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>***************<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>***************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>maxtop<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxbot<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mintop<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minbot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>rect.height;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>halfHeight<sp/>=<sp/>wxMax(h<sp/>/<sp/>2,<sp/>1);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxtop,<sp/>lmaxtop<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mintop,<sp/>lmintop<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxbot,<sp/>lmaxbot<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minbot,<sp/>lminbot<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sel,<sp/>lsel<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xx,<sp/>lx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>,<sp/>w;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/>dc.SetPen(*wxTRANSPARENT_PEN);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/>dc.SetBrush(blankBrush);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/>dc.DrawRectangle(rect);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref><sp/>=<sp/>zoomInfo.<ref refid="class_zoom_info_1aa7e0fefa3365826150c253c1ba6e4339" kindref="member">PositionToTime</ref>(0,<sp/>-leftOffset),<sp/>nextTime;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(xx<sp/>=<sp/>0;<sp/>xx<sp/>&lt;<sp/>rect.width;<sp/>++xx,<sp/>time<sp/>=<sp/>nextTime)<sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nextTime<sp/>=<sp/>zoomInfo.<ref refid="class_zoom_info_1aa7e0fefa3365826150c253c1ba6e4339" kindref="member">PositionToTime</ref>(xx<sp/>+<sp/>1,<sp/>-leftOffset);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>we<sp/>compute<sp/>the<sp/>truncated<sp/>shape<sp/>of<sp/>the<sp/>waveform<sp/>background.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>drawEnvelope<sp/>is<sp/>true,<sp/>then<sp/>we<sp/>compute<sp/>the<sp/>lower<sp/>border<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>envelope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maxtop<sp/>=<sp/><ref refid="_track_artist_8cpp_1a00fc87b63f1436536d3090852d57f810" kindref="member">GetWaveYPos</ref>(env[xx],<sp/>zoomMin,<sp/>zoomMax,</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h,<sp/>dB,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>dBRange,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maxbot<sp/>=<sp/><ref refid="_track_artist_8cpp_1a00fc87b63f1436536d3090852d57f810" kindref="member">GetWaveYPos</ref>(env[xx],<sp/>zoomMin,<sp/>zoomMax,</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h,<sp/>dB,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>dBRange,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mintop<sp/>=<sp/><ref refid="_track_artist_8cpp_1a00fc87b63f1436536d3090852d57f810" kindref="member">GetWaveYPos</ref>(-env[xx],<sp/>zoomMin,<sp/>zoomMax,</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h,<sp/>dB,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>dBRange,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minbot<sp/>=<sp/><ref refid="_track_artist_8cpp_1a00fc87b63f1436536d3090852d57f810" kindref="member">GetWaveYPos</ref>(-env[xx],<sp/>zoomMin,<sp/>zoomMax,</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h,<sp/>dB,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>dBRange,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>it&apos;s<sp/>odd<sp/>so<sp/>that<sp/>a<sp/>that<sp/>max<sp/>and<sp/>min<sp/>mirror<sp/>each<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mintop<sp/>+=1;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minbot<sp/>+=1;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!drawEnvelope<sp/>||<sp/>maxbot<sp/>&gt;<sp/>mintop)<sp/>{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxbot<sp/>=<sp/>halfHeight;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mintop<sp/>=<sp/>halfHeight;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>draw<sp/>selection<sp/>color<sp/>for<sp/>sync-lock<sp/>selected<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sel<sp/>=<sp/>(t0<sp/>&lt;=<sp/>time<sp/>&amp;&amp;<sp/>nextTime<sp/>&lt;<sp/>t1)<sp/>&amp;&amp;<sp/>!bIsSyncLockSelected;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lmaxtop<sp/>==<sp/>maxtop<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmintop<sp/>==<sp/>mintop<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmaxbot<sp/>==<sp/>maxbot<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lminbot<sp/>==<sp/>minbot<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsel<sp/>==<sp/>sel)<sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetBrush(lsel<sp/>?<sp/>selectedBrush<sp/>:<sp/>unselectedBrush);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>rect.x<sp/>+<sp/>lx;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>xx<sp/>-<sp/>lx;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lmaxbot<sp/>&lt;<sp/>lmintop<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(l,<sp/>rect.y<sp/>+<sp/>lmaxtop,<sp/>w,<sp/>lmaxbot<sp/>-<sp/>lmaxtop);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(l,<sp/>rect.y<sp/>+<sp/>lmintop,<sp/>w,<sp/>lminbot<sp/>-<sp/>lmintop);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(l,<sp/>rect.y<sp/>+<sp/>lmaxtop,<sp/>w,<sp/>lminbot<sp/>-<sp/>lmaxtop);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lmaxtop<sp/>=<sp/>maxtop;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lmintop<sp/>=<sp/>mintop;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lmaxbot<sp/>=<sp/>maxbot;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lminbot<sp/>=<sp/>minbot;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lsel<sp/>=<sp/>sel;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lx<sp/>=<sp/>xx;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/>dc.SetBrush(lsel<sp/>?<sp/>selectedBrush<sp/>:<sp/>unselectedBrush);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/>l<sp/>=<sp/>rect.x<sp/>+<sp/>lx;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/>w<sp/>=<sp/>xx<sp/>-<sp/>lx;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lmaxbot<sp/>&lt;<sp/>lmintop<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(l,<sp/>rect.y<sp/>+<sp/>lmaxtop,<sp/>w,<sp/>lmaxbot<sp/>-<sp/>lmaxtop);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(l,<sp/>rect.y<sp/>+<sp/>lmintop,<sp/>w,<sp/>lminbot<sp/>-<sp/>lmintop);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(l,<sp/>rect.y<sp/>+<sp/>lmaxtop,<sp/>w,<sp/>lminbot<sp/>-<sp/>lmaxtop);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>sync-lock<sp/>selected,<sp/>draw<sp/>in<sp/>linked<sp/>graphics.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bIsSyncLockSelected<sp/>&amp;&amp;<sp/>t0<sp/>&lt;<sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>begin<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(0,<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(rect.width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(zoomInfo.<ref refid="class_zoom_info_1af5b3ea2d31e53b203a06d13d4afd7f90" kindref="member">TimeToPosition</ref>(t0,<sp/>-leftOffset))));</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref><sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(0,<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(rect.width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(zoomInfo.<ref refid="class_zoom_info_1af5b3ea2d31e53b203a06d13d4afd7f90" kindref="member">TimeToPosition</ref>(t1,<sp/>-leftOffset))));</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DrawSyncLockTiles(&amp;dc,<sp/>wxRect(rect.x<sp/>+<sp/>begin,<sp/>rect.y,<sp/>end<sp/>-<sp/>1<sp/>-<sp/>begin,<sp/>rect.height));</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//OK,<sp/>the<sp/>display<sp/>bounds<sp/>are<sp/>between<sp/>min<sp/>and<sp/>max,<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>spread<sp/>across<sp/>rect.height.<sp/><sp/>Draw<sp/>the<sp/>line<sp/>at<sp/>the<sp/>proper<sp/>place.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zoomMin<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>zoomMax<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>half<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)((zoomMax<sp/>/<sp/>(zoomMax<sp/>-<sp/>zoomMin))<sp/>*<sp/>h);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(*wxBLACK_PEN);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>rect.x,<sp/>rect.y<sp/>+<sp/>half,<sp/>rect.x<sp/>+<sp/>rect.width,<sp/>rect.y<sp/>+<sp/>half);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrackArtist::DrawMinMaxRMS(wxDC<sp/>&amp;dc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;<sp/>rect,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>env[],</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomMin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomMax,</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dB,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dBRange,</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*rms,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*bl,</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>showProgress<sp/>*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>muted</highlight></codeline>
<codeline lineno="1149"><highlight class="normal">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gain</highlight></codeline>
<codeline lineno="1151"><highlight class="normal">#<ref refid="sndfile__play_8m_1a74c64864f5283ae06d4a981642a59af9" kindref="member">endif</ref></highlight></codeline>
<codeline lineno="1152"><highlight class="normal">)</highlight></codeline>
<codeline lineno="1153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>a<sp/>line<sp/>representing<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>min<sp/>and<sp/>max<sp/>of<sp/>the<sp/>samples<sp/>in<sp/>this<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lasth1<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::numeric_limits&lt;int&gt;::max</ref>();</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lasth2<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::numeric_limits&lt;int&gt;::min</ref>();</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h1;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h2;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="namespacewaflib_1_1fixpy2_1a721a8f58a4734bba827b4f6d985f98ff" kindref="member">r1</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[rect.width];</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*r2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[rect.width];</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*clipped<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clipcnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mShowClipping)<sp/>{</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clipped<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[rect.width];</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>pixAnimOffset<sp/>=<sp/>(long)fabs((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(wxDateTime::Now().GetTicks()<sp/>*<sp/>-10))<sp/>+</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxDateTime::Now().GetMillisecond()<sp/>/<sp/>100;<sp/></highlight><highlight class="comment">//10<sp/>pixels<sp/>a<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>drawStripes<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>drawWaveform<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/>dc.SetPen(muted<sp/>?<sp/>muteSamplePen<sp/>:<sp/>samplePen);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0<sp/>=<sp/>0;<sp/>x0<sp/>&lt;<sp/>rect.width;<sp/>++x0)<sp/>{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xx<sp/>=<sp/>rect.x<sp/>+<sp/>x0;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//JWA:<sp/>&quot;gain&quot;<sp/>variable<sp/>passed<sp/>to<sp/>function<sp/>includes<sp/>the<sp/>pan<sp/>value<sp/>and<sp/>is<sp/>used<sp/>below<sp/>4/14/13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>min[x0]<sp/>*<sp/>env[x0]<sp/>*<sp/>gain;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>min[x0]<sp/>*<sp/>env[x0];</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipped<sp/>&amp;&amp;<sp/>mShowClipping<sp/>&amp;&amp;<sp/>(v<sp/>&lt;=<sp/>-<ref refid="_audacity_app_8h_1a0e6f61adcdaa4d07f59bf2fccafe233c" kindref="member">MAX_AUDIO</ref>))</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipcnt<sp/>==<sp/>0<sp/>||<sp/>clipped[clipcnt<sp/>-<sp/>1]<sp/>!=<sp/>xx)<sp/>{</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipped[clipcnt++]<sp/>=<sp/>xx;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h1<sp/>=<sp/><ref refid="_track_artist_8cpp_1a00fc87b63f1436536d3090852d57f810" kindref="member">GetWaveYPos</ref>(v,<sp/>zoomMin,<sp/>zoomMax,</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.height,<sp/>dB,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>dBRange,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>max[x0]<sp/>*<sp/>env[x0]<sp/>*<sp/>gain;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>max[x0]<sp/>*<sp/>env[x0];</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipped<sp/>&amp;&amp;<sp/>mShowClipping<sp/>&amp;&amp;<sp/>(v<sp/>&gt;=<sp/><ref refid="_audacity_app_8h_1a0e6f61adcdaa4d07f59bf2fccafe233c" kindref="member">MAX_AUDIO</ref>))</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipcnt<sp/>==<sp/>0<sp/>||<sp/>clipped[clipcnt<sp/>-<sp/>1]<sp/>!=<sp/>xx)<sp/>{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipped[clipcnt++]<sp/>=<sp/>xx;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h2<sp/>=<sp/><ref refid="_track_artist_8cpp_1a00fc87b63f1436536d3090852d57f810" kindref="member">GetWaveYPos</ref>(v,<sp/>zoomMin,<sp/>zoomMax,</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.height,<sp/>dB,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>dBRange,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>JKC:<sp/>This<sp/>adjustment<sp/>to<sp/>h1<sp/>and<sp/>h2<sp/>ensures<sp/>that<sp/>the<sp/>drawn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>waveform<sp/>is<sp/>continuous.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h1<sp/>&lt;<sp/>lasth2)<sp/>{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h1<sp/>=<sp/>lasth2<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h2<sp/>&gt;<sp/>lasth1)<sp/>{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h2<sp/>=<sp/>lasth1<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lasth1<sp/>=<sp/>h1;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lasth2<sp/>=<sp/>h2;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r1[x0]<sp/>=<sp/><ref refid="_track_artist_8cpp_1a00fc87b63f1436536d3090852d57f810" kindref="member">GetWaveYPos</ref>(-rms[x0]<sp/>*<sp/>env[x0]*gain,<sp/>zoomMin,<sp/>zoomMax,</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.height,<sp/>dB,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>dBRange,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r2[x0]<sp/>=<sp/><ref refid="_track_artist_8cpp_1a00fc87b63f1436536d3090852d57f810" kindref="member">GetWaveYPos</ref>(rms[xx0<sp/>*<sp/>env[x0]*gain,<sp/>zoomMin,<sp/>zoomMax,</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.height,<sp/>dB,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>dBRange,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r1[x0]<sp/>=<sp/><ref refid="_track_artist_8cpp_1a00fc87b63f1436536d3090852d57f810" kindref="member">GetWaveYPos</ref>(-rms[x0]<sp/>*<sp/>env[x0],<sp/>zoomMin,<sp/>zoomMax,</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.height,<sp/>dB,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>dBRange,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r2[x0]<sp/>=<sp/><ref refid="_track_artist_8cpp_1a00fc87b63f1436536d3090852d57f810" kindref="member">GetWaveYPos</ref>(rms[x0]<sp/>*<sp/>env[x0],<sp/>zoomMin,<sp/>zoomMax,</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.height,<sp/>dB,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>dBRange,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>rms<sp/>isn&apos;t<sp/>larger<sp/>than<sp/>the<sp/>waveform<sp/>min/max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r1[x0]<sp/>&gt;<sp/>h1<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r1[x0]<sp/>=<sp/>h1<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r2[x0]<sp/>&lt;<sp/>h2<sp/>+<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r2[x0]<sp/>=<sp/>h2<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r2[x0]<sp/>&gt;<sp/>r1[x0])<sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r2[x0]<sp/>=<sp/>r1[x0];</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bl[x0]<sp/>&lt;=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(drawStripes)<sp/>{</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:unify<sp/>with<sp/>buffer<sp/>drawing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen((bl[x0]<sp/>%<sp/>2)<sp/>?<sp/>muteSamplePen<sp/>:<sp/>samplePen);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy<sp/>=<sp/>0;<sp/>yy<sp/>&lt;<sp/>rect.height<sp/>/<sp/>25<sp/>+<sp/>1;<sp/>++yy)<sp/>{</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>are<sp/>drawing<sp/>over<sp/>the<sp/>buffer,<sp/>but<sp/>I<sp/>think<sp/>DrawLine<sp/>takes<sp/>care<sp/>of<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xx,</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.y<sp/>+<sp/>25<sp/>*<sp/>yy<sp/>+<sp/>(x0<sp/></highlight><highlight class="comment">/*+pixAnimOffset*/</highlight><highlight class="normal">)<sp/>%<sp/>25,</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xx,</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.y<sp/>+<sp/>25<sp/>*<sp/>yy<sp/>+<sp/>(x0<sp/></highlight><highlight class="comment">/*+pixAnimOffset*/</highlight><highlight class="normal">)<sp/>%<sp/>25<sp/>+<sp/>6);<sp/></highlight><highlight class="comment">//take<sp/>the<sp/>min<sp/>so<sp/>we<sp/>don&apos;t<sp/>draw<sp/>past<sp/>the<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>a<sp/>dummy<sp/>waveform<sp/>-<sp/>some<sp/>kind<sp/>of<sp/>sinusoid.<sp/><sp/>We<sp/>want<sp/>to<sp/>animate<sp/>it<sp/>so<sp/>the<sp/>user<sp/>knows<sp/>it&apos;s<sp/>a<sp/>dummy.<sp/><sp/>Use<sp/>the<sp/>second&apos;s<sp/>unit<sp/>of<sp/>a<sp/>get<sp/>time<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lets<sp/>use<sp/>a<sp/>triangle<sp/>wave<sp/>for<sp/>now<sp/>since<sp/>it&apos;s<sp/>easier<sp/>-<sp/>I<sp/>don&apos;t<sp/>want<sp/>to<sp/>use<sp/>sin()<sp/>or<sp/>make<sp/>a<sp/>wavetable<sp/>just<sp/>for<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(drawWaveform)<sp/>{</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>triX;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(samplePen);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>triX<sp/>=<sp/>fabs((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)((x0<sp/>+<sp/>pixAnimOffset)<sp/>%<sp/>(2<sp/>*<sp/>rect.height))<sp/>-<sp/>rect.height)<sp/>+<sp/>rect.height;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy<sp/>=<sp/>0;<sp/>yy<sp/>&lt;<sp/>rect.height;<sp/>++yy)<sp/>{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((yy<sp/>+<sp/>triX)<sp/>%<sp/>rect.height<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawPoint(xx,<sp/>rect.y<sp/>+<sp/>yy);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>the<sp/>pen<sp/>for<sp/>remaining<sp/>pixel<sp/>columns!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(muted<sp/>?<sp/>muteSamplePen<sp/>:<sp/>samplePen);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>xx,<sp/>rect.y<sp/>+<sp/>h2,<sp/>xx,<sp/>rect.y<sp/>+<sp/>h1);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stroke<sp/>rms<sp/>over<sp/>the<sp/>min-max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/>dc.SetPen(muted<sp/>?<sp/>muteRmsPen<sp/>:<sp/>rmsPen);</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0<sp/>=<sp/>0;<sp/>x0<sp/>&lt;<sp/>rect.width;<sp/>++x0)<sp/>{</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xx<sp/>=<sp/>rect.x<sp/>+<sp/>x0;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bl[x0]<sp/>&lt;=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r1[x0]<sp/>!=<sp/>r2[x0])<sp/>{</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>xx,<sp/>rect.y<sp/>+<sp/>r2[x0],<sp/>xx,<sp/>rect.y<sp/>+<sp/>r1[x0]);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>clipping<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipcnt)<sp/>{</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(muted<sp/>?<sp/>muteClippedPen<sp/>:<sp/>clippedPen);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--clipcnt<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xx<sp/>=<sp/>clipped[clipcnt];</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>xx,<sp/>rect.y,<sp/>xx,<sp/>rect.y<sp/>+<sp/>rect.height);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mShowClipping)<sp/>{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>clipped;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="namespacewaflib_1_1fixpy2_1a721a8f58a4734bba827b4f6d985f98ff" kindref="member">r1</ref>;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>r2;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrackArtist::DrawIndividualSamples(wxDC<sp/>&amp;dc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leftOffset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;rect,</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomMin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomMax,</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dB,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dBRange,</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip,</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo,</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bigPoints,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>showPoints,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>muted)</highlight></codeline>
<codeline lineno="1312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>toffset<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a070d7b2328a78c6ddaecc2f60ad4567f" kindref="member">GetOffset</ref>();</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref><sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a04d1806de89e39538576880a8dd43c11" kindref="member">GetRate</ref>();</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(0.0,<sp/>zoomInfo.<ref refid="class_zoom_info_1aa7e0fefa3365826150c253c1ba6e4339" kindref="member">PositionToTime</ref>(0,<sp/>-leftOffset)<sp/>-<sp/>toffset);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>s0<sp/>=<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>(floor(t0<sp/>*<sp/>rate));</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>snSamples<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a6cd003778b510cad742feaa5763c6ac2" kindref="member">GetNumSamples</ref>();</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s0<sp/>&gt;<sp/>snSamples)</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/>zoomInfo.<ref refid="class_zoom_info_1aa7e0fefa3365826150c253c1ba6e4339" kindref="member">PositionToTime</ref>(rect.width<sp/>-<sp/>1,<sp/>-leftOffset)<sp/>-<sp/>toffset;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>s1<sp/>=<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>(ceil(t1<sp/>*<sp/>rate));</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>slen<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(snSamples<sp/>-<sp/>s0,<sp/>s1<sp/>-<sp/>s0<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slen<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[slen];</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a7909b8a8e1bac5eea9e4bc422b021a59" kindref="member">GetSamples</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)buffer,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>s0,<sp/>slen);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xpos<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[slen];</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ypos<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[slen];</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*clipped<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clipcnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mShowClipping)</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clipped<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[slen];</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/>dc.SetPen(muted<sp/>?<sp/>muteSamplePen<sp/>:<sp/>samplePen);</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>slen;<sp/>s++)<sp/>{</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref><sp/>=<sp/>toffset<sp/>+<sp/>(s<sp/>+<sp/>s0)<sp/>/<sp/>rate;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xx<sp/>=<sp/></highlight><highlight class="comment">//<sp/>An<sp/>offset<sp/>into<sp/>the<sp/>rectangle<sp/>rect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(-10000,<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(10000,</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(zoomInfo.<ref refid="class_zoom_info_1af5b3ea2d31e53b203a06d13d4afd7f90" kindref="member">TimeToPosition</ref>(time,<sp/>-leftOffset))));</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xpos[<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>]<sp/>=<sp/>xx;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tt<sp/>=<sp/>buffer[<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>]<sp/>*<sp/>clip-&gt;<ref refid="class_wave_clip_1a89df7eef9147be5868fe247c6239e5c8" kindref="member">GetEnvelope</ref>()-&gt;<ref refid="class_envelope_1ac5729053c923e47b43f0f063845c2ce9" kindref="member">GetValue</ref>(time);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipped<sp/>&amp;&amp;<sp/>mShowClipping<sp/>&amp;&amp;<sp/>((tt<sp/>&lt;=<sp/>-<ref refid="_audacity_app_8h_1a0e6f61adcdaa4d07f59bf2fccafe233c" kindref="member">MAX_AUDIO</ref>)<sp/>||<sp/>(tt<sp/>&gt;=<sp/><ref refid="_audacity_app_8h_1a0e6f61adcdaa4d07f59bf2fccafe233c" kindref="member">MAX_AUDIO</ref>)))</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipped[clipcnt++]<sp/>=<sp/>xx;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ypos[<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>]<sp/>=</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(-1,</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(rect.height,</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_track_artist_8cpp_1a00fc87b63f1436536d3090852d57f810" kindref="member">GetWaveYPos</ref>(tt,<sp/>zoomMin,<sp/>zoomMax,</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.height,<sp/>dB,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>dBRange,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>slen<sp/>-<sp/>1;<sp/>s++)<sp/>{</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.x<sp/>+<sp/>xpos[s],<sp/>rect.y<sp/>+<sp/>ypos[s],</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.x<sp/>+<sp/>xpos[s<sp/>+<sp/>1],<sp/>rect.y<sp/>+<sp/>ypos[s<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(showPoints)</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>points<sp/>where<sp/>spacing<sp/>is<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tickSize<sp/>=<sp/>bigPoints<sp/>?<sp/>4<sp/>:<sp/>3;</highlight><highlight class="comment">//<sp/>Bigger<sp/>ellipses<sp/>when<sp/>draggable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>pr;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pr.width<sp/>=<sp/>tickSize;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pr.height<sp/>=<sp/>tickSize;</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//different<sp/>colour<sp/>when<sp/>draggable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetBrush(<sp/>bigPoints<sp/>?<sp/>dragsampleBrush<sp/>:<sp/>sampleBrush);</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>slen;<sp/>s++)<sp/>{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ypos[s]<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>ypos[s]<sp/>&lt;<sp/>rect.height)<sp/>{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr.x<sp/>=<sp/>rect.x<sp/>+<sp/>xpos[<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>]<sp/>-<sp/>tickSize/2;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr.y<sp/>=<sp/>rect.y<sp/>+<sp/>ypos[<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>]<sp/>-<sp/>tickSize/2;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawEllipse(pr);</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>clipping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipcnt)<sp/>{</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(muted<sp/>?<sp/>muteClippedPen<sp/>:<sp/>clippedPen);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--clipcnt<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>clipped[clipcnt];</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>rect.x<sp/>+<sp/>s,<sp/>rect.y,<sp/>rect.x<sp/>+<sp/>s,<sp/>rect.y<sp/>+<sp/>rect.height);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mShowClipping)<sp/>{</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>clipped;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]xpos;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]ypos;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrackArtist::DrawEnvelope(wxDC<sp/>&amp;dc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;rect,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>env[],</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomMin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomMax,</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dB,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dBRange)</highlight></codeline>
<codeline lineno="1405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>rect.height;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/>dc.SetPen(<ref refid="class_a_color_1a9706bc519ec6f6b7f93ddc6371331f07" kindref="member">AColor::envelopePen</ref>);</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0<sp/>=<sp/>0;<sp/>x0<sp/>&lt;<sp/>rect.width;<sp/>++x0)<sp/>{</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cenvTop<sp/>=<sp/><ref refid="_track_artist_8cpp_1a00fc87b63f1436536d3090852d57f810" kindref="member">GetWaveYPos</ref>(env[x0],<sp/>zoomMin,<sp/>zoomMax,</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h,<sp/>dB,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>dBRange,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cenvBot<sp/>=<sp/><ref refid="_track_artist_8cpp_1a00fc87b63f1436536d3090852d57f810" kindref="member">GetWaveYPos</ref>(-env[x0],<sp/>zoomMin,<sp/>zoomMax,</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h,<sp/>dB,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>dBRange,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>envTop<sp/>=<sp/><ref refid="_track_artist_8cpp_1a00fc87b63f1436536d3090852d57f810" kindref="member">GetWaveYPos</ref>(env[x0],<sp/>zoomMin,<sp/>zoomMax,</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h,<sp/>dB,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>dBRange,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>envBot<sp/>=<sp/><ref refid="_track_artist_8cpp_1a00fc87b63f1436536d3090852d57f810" kindref="member">GetWaveYPos</ref>(-env[x0],<sp/>zoomMin,<sp/>zoomMax,</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h,<sp/>dB,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>dBRange,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>the<sp/>collision<sp/>at<sp/>zero<sp/>actually<sp/>look<sp/>solid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cenvBot<sp/>-<sp/>cenvTop<sp/>&lt;<sp/>9)<sp/>{</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)((zoomMax<sp/>/<sp/>(zoomMax<sp/>-<sp/>zoomMin))<sp/>*<sp/>h);</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cenvTop<sp/>=<sp/>value<sp/>-<sp/>4;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cenvBot<sp/>=<sp/>value<sp/>+<sp/>4;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DrawEnvLine(dc,<sp/>rect,<sp/>x0,<sp/>envTop,<sp/>cenvTop,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DrawEnvLine(dc,<sp/>rect,<sp/>x0,<sp/>envBot,<sp/>cenvBot,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrackArtist::DrawEnvLine(wxDC<sp/>&amp;dc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;rect,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cy,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>top)</highlight></codeline>
<codeline lineno="1436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xx<sp/>=<sp/>rect.x<sp/>+<sp/>x0;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy<sp/>=<sp/>rect.y<sp/>+<sp/>cy;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>%<sp/>4<sp/>!=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>xx,<sp/>yy,<sp/>xx,<sp/>yy<sp/>+<sp/>3);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0<sp/>&gt;<sp/>rect.height)<sp/>{</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>%<sp/>4<sp/>!=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>xx,<sp/>yy<sp/>-<sp/>3,<sp/>xx,<sp/>yy);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(top)<sp/>{</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>xx,<sp/>yy,<sp/>xx,<sp/>yy<sp/>+<sp/>3);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>xx,<sp/>yy<sp/>-<sp/>3,<sp/>xx,<sp/>yy);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrackArtist::DrawWaveform(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*track,</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxDC<sp/>&amp;<sp/>dc,</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;<sp/>rect,</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>&amp;selectedRegion,</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo,</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>drawEnvelope,</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bigPoints,</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>drawSliders,</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>muted)</highlight></codeline>
<codeline lineno="1469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dB<sp/>=<sp/>!track-&gt;<ref refid="class_wave_track_1a10c50123dc26cba66469b011c1852047" kindref="member">GetWaveformSettings</ref>().<ref refid="class_waveform_settings_1ae4f07aa847f89f72a127ba5e357f1e78" kindref="member">isLinear</ref>();</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/>DrawBackgroundWithSelection(&amp;dc,<sp/>rect,<sp/>track,<sp/>blankSelectedBrush,<sp/>blankBrush,</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selectedRegion,<sp/>zoomInfo);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>const_cast&lt;WaveTrack*&gt;(track)-&gt;GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DrawClipWaveform(track,<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData(),<sp/>dc,<sp/>rect,<sp/>selectedRegion,<sp/>zoomInfo,</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawEnvelope,<sp/>bigPoints,</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dB,<sp/>muted);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>cache<sp/>for<sp/>locations,<sp/>e.g.<sp/>cutlines<sp/>and<sp/>merge<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/>track-&gt;<ref refid="class_wave_track_1a00b8ff13124c65a9b937e546cbcff466" kindref="member">UpdateLocationsCache</ref>();</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>loc<sp/>:<sp/>track-&gt;<ref refid="class_wave_track_1aed472b80250f8a6a759d8c43970c6b99" kindref="member">GetCachedLocations</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xx<sp/>=<sp/>zoomInfo.TimeToPosition(loc.pos);</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xx<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>xx<sp/>&lt;<sp/>rect.width)<sp/>{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(*wxGREY_PEN);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(rect.x<sp/>+<sp/>xx<sp/>-<sp/>1),<sp/>rect.y,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(rect.x<sp/>+<sp/>xx<sp/>-<sp/>1),<sp/>rect.y<sp/>+<sp/>rect.height);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loc.typ<sp/>==<sp/><ref refid="struct_wave_track_location_1a0a54a8fbcc73dfe63879bcff10a75c6da399879306fdea1e62201b1045d682e78" kindref="member">WaveTrackLocation::locationCutLine</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(*wxRED_PEN);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(*wxBLACK_PEN);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(rect.x<sp/>+<sp/>xx),<sp/>rect.y,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(rect.x<sp/>+<sp/>xx),<sp/>rect.y<sp/>+<sp/>rect.height);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(*wxGREY_PEN);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(rect.x<sp/>+<sp/>xx<sp/>+<sp/>1),<sp/>rect.y,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(rect.x<sp/>+<sp/>xx<sp/>+<sp/>1),<sp/>rect.y<sp/>+<sp/>rect.height);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(drawSliders)<sp/>{</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DrawTimeSlider(dc,<sp/>rect,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>directed<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DrawTimeSlider(dc,<sp/>rect,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>directed<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ClipParameters</highlight></codeline>
<codeline lineno="1510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>a<sp/>bunch<sp/>of<sp/>calculations<sp/>common<sp/>to<sp/>waveform<sp/>and<sp/>spectrum<sp/>drawing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/>ClipParameters</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>spectrum,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*track,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;rect,</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>&amp;selectedRegion,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo)</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tOffset<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a070d7b2328a78c6ddaecc2f60ad4567f" kindref="member">GetOffset</ref>();</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref><sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a04d1806de89e39538576880a8dd43c11" kindref="member">GetRate</ref>();</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>zoomInfo.<ref refid="class_zoom_info_1aa7e0fefa3365826150c253c1ba6e4339" kindref="member">PositionToTime</ref>(0,<sp/>0</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h1<sp/>=<sp/>zoomInfo.<ref refid="class_zoom_info_1aa7e0fefa3365826150c253c1ba6e4339" kindref="member">PositionToTime</ref>(rect.width,<sp/>0</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sel0<sp/>=<sp/>selectedRegion.<ref refid="class_selected_region_1a699851ec9e5a209be86f552f0826687d" kindref="member">t0</ref>();<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//left<sp/>selection<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sel1<sp/>=<sp/>selectedRegion.<ref refid="class_selected_region_1aec8e1688714de8fb218d0cf0188360d6" kindref="member">t1</ref>();<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//right<sp/>selection<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>track<sp/>isn&apos;t<sp/>selected,<sp/>make<sp/>the<sp/>selection<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!track-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(spectrum<sp/>||<sp/>!track-&gt;<ref refid="class_track_1a4b9d8ec8baa8ce94f9b9b999e324a59f" kindref="member">IsSyncLockSelected</ref>()))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>PRL:<sp/>why<sp/>was<sp/>there<sp/>a<sp/>difference<sp/>for<sp/>spectrum?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sel0<sp/>=<sp/>sel1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trackLen<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>()<sp/>-<sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>();</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tpre<sp/>=<sp/>h<sp/>-<sp/>tOffset;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>offset<sp/>corrected<sp/>time<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>left<sp/>edge<sp/>of<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tpost<sp/>=<sp/>h1<sp/>-<sp/>tOffset;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>offset<sp/>corrected<sp/>time<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>right<sp/>edge<sp/>of<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sps<sp/>=<sp/>1.<sp/>/<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//seconds-per-sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>whether<sp/>we<sp/>should<sp/>show<sp/>individual<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>draw<sp/>circular<sp/>points<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>averagePixelsPerSample<sp/>=<sp/>rect.width<sp/>/<sp/>(<ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref><sp/>*<sp/>(h1<sp/>-<sp/>h));</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>showIndividualSamples<sp/>=<sp/>averagePixelsPerSample<sp/>&gt;<sp/>0.5;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>actual<sp/>selection<sp/>bounds<sp/>so<sp/>that<sp/>t0<sp/>&gt;<sp/>0<sp/>and<sp/>t1<sp/>&lt;<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>the<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>(tpre<sp/>&gt;=<sp/>0.0<sp/>?<sp/>tpre<sp/>:<sp/>0.0);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>(tpost<sp/>&lt;<sp/>trackLen<sp/>-<sp/>sps<sp/>*<sp/>.99<sp/>?<sp/>tpost<sp/>:<sp/>trackLen<sp/>-<sp/>sps<sp/>*<sp/>.99);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(showIndividualSamples)<sp/>{</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adjustment<sp/>so<sp/>that<sp/>the<sp/>last<sp/>circular<sp/>point<sp/>doesn&apos;t<sp/>appear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>hanging<sp/>off<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>+=<sp/>2.<sp/>/<sp/>(averagePixelsPerSample<sp/>*<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>t1<sp/>(the<sp/>right<sp/>bound)<sp/>is<sp/>greater<sp/>than<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&lt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>t1<sp/>is<sp/>greater<sp/>than<sp/>t0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/>&gt;<sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>WaveTrack<sp/>method<sp/>to<sp/>show<sp/>what<sp/>is<sp/>selected<sp/>and<sp/>&apos;should&apos;<sp/>be<sp/>copied,<sp/>pasted<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ssel0<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>(0),<sp/>spectrum</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>((sel0<sp/>-<sp/>tOffset)<sp/>*<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref><sp/>+<sp/>.99)<sp/></highlight><highlight class="comment">//<sp/>PRL:<sp/>why?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>track-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(sel0<sp/>-<sp/>tOffset)</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ssel1<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>(0),<sp/>spectrum</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>((sel1<sp/>-<sp/>tOffset)<sp/>*<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref><sp/>+<sp/>.99)<sp/></highlight><highlight class="comment">//<sp/>PRL:<sp/>why?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>track-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(sel1<sp/>-<sp/>tOffset)</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//trim<sp/>selection<sp/>so<sp/>that<sp/>it<sp/>only<sp/>contains<sp/>the<sp/>actual<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ssel0<sp/>!=<sp/>ssel1<sp/>&amp;&amp;<sp/>ssel1<sp/>&gt;<sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)(0.5<sp/>+<sp/>trackLen<sp/>*<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssel1<sp/>=<sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)(0.5<sp/>+<sp/>trackLen<sp/>*<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>);</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>variable<sp/>&quot;hiddenMid&quot;<sp/>will<sp/>be<sp/>the<sp/>rectangle<sp/>containing<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>actual<sp/>waveform,<sp/>as<sp/>opposed<sp/>to<sp/>any<sp/>blank<sp/>area<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>after<sp/>the<sp/>track,<sp/>as<sp/>it<sp/>would<sp/>appear<sp/>without<sp/>the<sp/>fisheye.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hiddenMid<sp/>=<sp/>rect;</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>left<sp/>edge<sp/>of<sp/>the<sp/>track<sp/>is<sp/>to<sp/>the<sp/>right<sp/>of<sp/>the<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>edge<sp/>of<sp/>the<sp/>display,<sp/>then<sp/>there&apos;s<sp/>some<sp/>unused<sp/>area<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>left<sp/>of<sp/>the<sp/>track.<sp/><sp/>Reduce<sp/>the<sp/>&quot;hiddenMid&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hiddenLeftOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tpre<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fix<sp/>Bug<sp/>#1296<sp/>caused<sp/>by<sp/>premature<sp/>conversion<sp/>to<sp/>(int).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxInt64<sp/>time64<sp/>=<sp/>zoomInfo.<ref refid="class_zoom_info_1af5b3ea2d31e53b203a06d13d4afd7f90" kindref="member">TimeToPosition</ref>(tOffset,<sp/>0<sp/>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>time64<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time64<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hiddenLeftOffset<sp/>=<sp/>(time64<sp/>&lt;<sp/>rect.width)<sp/>?<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)time64<sp/>:<sp/>rect.width;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hiddenMid.x<sp/>+=<sp/>hiddenLeftOffset;</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hiddenMid.width<sp/>-=<sp/>hiddenLeftOffset;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>right<sp/>edge<sp/>of<sp/>the<sp/>track<sp/>is<sp/>to<sp/>the<sp/>left<sp/>of<sp/>the<sp/>the<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>edge<sp/>of<sp/>the<sp/>display,<sp/>then<sp/>there&apos;s<sp/>some<sp/>unused<sp/>area<sp/>to<sp/>the<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>track.<sp/><sp/>Reduce<sp/>the<sp/>&quot;hiddenMid&quot;<sp/>rect<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>the<sp/>blank<sp/>area.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tpost<sp/>&gt;<sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxInt64<sp/>time64<sp/>=<sp/>zoomInfo.<ref refid="class_zoom_info_1af5b3ea2d31e53b203a06d13d4afd7f90" kindref="member">TimeToPosition</ref>(tOffset+t1,<sp/>0<sp/>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>time64<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time64<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hiddenRightOffset<sp/>=<sp/>(time64<sp/>&lt;<sp/>rect.width)<sp/>?<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)time64<sp/>:<sp/>rect.width;</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hiddenMid.width<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(0,<sp/>hiddenRightOffset<sp/>-<sp/>hiddenLeftOffset);</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>variable<sp/>&quot;mid&quot;<sp/>will<sp/>be<sp/>the<sp/>rectangle<sp/>containing<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>actual<sp/>waveform,<sp/>as<sp/>distorted<sp/>by<sp/>the<sp/>fisheye,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>opposed<sp/>to<sp/>any<sp/>blank<sp/>area<sp/>before<sp/>or<sp/>after<sp/>the<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mid<sp/>=<sp/>rect;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>left<sp/>edge<sp/>of<sp/>the<sp/>track<sp/>is<sp/>to<sp/>the<sp/>right<sp/>of<sp/>the<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>edge<sp/>of<sp/>the<sp/>display,<sp/>then<sp/>there&apos;s<sp/>some<sp/>unused<sp/>area<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>left<sp/>of<sp/>the<sp/>track.<sp/><sp/>Reduce<sp/>the<sp/>&quot;mid&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>leftOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tpre<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxInt64<sp/>time64<sp/>=<sp/>zoomInfo.<ref refid="class_zoom_info_1af5b3ea2d31e53b203a06d13d4afd7f90" kindref="member">TimeToPosition</ref>(tOffset,<sp/>0<sp/>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>time64<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time64<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftOffset<sp/>=<sp/>(time64<sp/>&lt;<sp/>rect.width)<sp/>?<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)time64<sp/>:<sp/>rect.width;</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mid.x<sp/>+=<sp/>leftOffset;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mid.width<sp/>-=<sp/>leftOffset;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>right<sp/>edge<sp/>of<sp/>the<sp/>track<sp/>is<sp/>to<sp/>the<sp/>left<sp/>of<sp/>the<sp/>the<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>edge<sp/>of<sp/>the<sp/>display,<sp/>then<sp/>there&apos;s<sp/>some<sp/>unused<sp/>area<sp/>to<sp/>the<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>track.<sp/><sp/>Reduce<sp/>the<sp/>&quot;mid&quot;<sp/>rect<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>the<sp/>blank<sp/>area.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tpost<sp/>&gt;<sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxInt64<sp/>time64<sp/>=<sp/>zoomInfo.<ref refid="class_zoom_info_1af5b3ea2d31e53b203a06d13d4afd7f90" kindref="member">TimeToPosition</ref>(tOffset+t1,<sp/>0<sp/>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>time64<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time64<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>distortedRightOffset<sp/>=<sp/>(time64<sp/>&lt;<sp/>rect.width)<sp/>?<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)time64<sp/>:<sp/>rect.width;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mid.width<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(0,<sp/>distortedRightOffset<sp/>-<sp/>leftOffset);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tOffset;</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>;</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>h;<sp/></highlight><highlight class="comment">//<sp/>absolute<sp/>time<sp/>of<sp/>left<sp/>edge<sp/>of<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tpre;<sp/></highlight><highlight class="comment">//<sp/>offset<sp/>corrected<sp/>time<sp/>of<sp/>left<sp/>edge<sp/>of<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>h1;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tpost;<sp/></highlight><highlight class="comment">//<sp/>offset<sp/>corrected<sp/>time<sp/>of<sp/>right<sp/>edge<sp/>of<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>actual<sp/>selection<sp/>bounds<sp/>so<sp/>that<sp/>t0<sp/>&gt;<sp/>0<sp/>and<sp/>t1<sp/>&lt;<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>the<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>averagePixelsPerSample;</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>showIndividualSamples;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>ssel0;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>ssel1;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>hiddenMid;</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hiddenLeftOffset;</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>mid;</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leftOffset;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNUC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1678" refid="_track_artist_8cpp_1a0c33b494a68ce28497e7ce8e5e95feff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONST<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">WavePortion<sp/>{</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>rect;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><ref refid="_track_artist_8cpp_1a0c33b494a68ce28497e7ce8e5e95feff" kindref="member">CONST</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>averageZoom;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><ref refid="_track_artist_8cpp_1a0c33b494a68ce28497e7ce8e5e95feff" kindref="member">CONST</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inFisheye;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/>WavePortion(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zoom,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>rect(x,<sp/>y,<sp/>w,<sp/>h),<sp/>averageZoom(zoom),<sp/>inFisheye(i)</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1689"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FindWavePortions</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/>(std::vector&lt;WavePortion&gt;<sp/>&amp;portions,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;rect,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo,</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ClipParameters<sp/>&amp;<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>)</highlight></codeline>
<codeline lineno="1694"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>no<sp/>fisheye,<sp/>then<sp/>only<sp/>one<sp/>rectangle<sp/>has<sp/>nonzero<sp/>width.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>a<sp/>fisheye,<sp/>make<sp/>rectangles<sp/>for<sp/>before<sp/>and<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(except<sp/>when<sp/>they<sp/>are<sp/>squeezed<sp/>to<sp/>zero<sp/>width),<sp/>and<sp/>at<sp/>least<sp/>one<sp/>for<sp/>inside</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>fisheye.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_zoom_info_1a68d0856b5e64abd74f91ebeedac395d3" kindref="member">ZoomInfo::Intervals</ref><sp/>intervals;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/>zoomInfo.<ref refid="class_zoom_info_1aff75f3d72f5fef0e3472ac4c415e63f3" kindref="member">FindIntervals</ref>(params.rate,<sp/>intervals,<sp/>rect.width,<sp/>rect.x);</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/>ZoomInfo::Intervals::const_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/>intervals.begin(),<sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref><sp/>=<sp/>intervals.end(),<sp/>prev;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(it<sp/>!=<sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref><sp/>&amp;&amp;<sp/>it-&gt;position<sp/>==<sp/>rect.x);</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rightmost<sp/>=<sp/>rect.x<sp/>+<sp/>rect.width;</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>rect.x;<sp/>left<sp/>&lt;<sp/>rightmost;)<sp/>{</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref><sp/>&amp;&amp;<sp/>it-&gt;position<sp/>&lt;=<sp/>left)</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev<sp/>=<sp/>it++;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>)</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(left,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(it-&gt;position));</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>right<sp/>-<sp/>left;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>portions.push_back(</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WavePortion(left,<sp/>rect.y,<sp/>width,<sp/>rect.height,</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev-&gt;averageZoom,<sp/>prev-&gt;inFisheye)</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/>right;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrackArtist::DrawClipWaveform(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*track,</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip,</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxDC<sp/>&amp;<sp/>dc,</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;<sp/>rect,</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>&amp;selectedRegion,</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo,</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>drawEnvelope,</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bigPoints,</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dB,</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>muted)</highlight></codeline>
<codeline lineno="1732"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PROFILE_WAVEFORM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_profiler" kindref="compound">Profiler</ref><sp/>profiler;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ClipParameters<sp/><ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>track,<sp/>clip,<sp/>rect,<sp/>selectedRegion,<sp/>zoomInfo);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;hiddenMid<sp/>=<sp/>params.hiddenMid;</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;hiddenMid&quot;<sp/>rect<sp/>contains<sp/>the<sp/>part<sp/>of<sp/>the<sp/>display<sp/>actually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>containing<sp/>the<sp/>waveform,<sp/>as<sp/>it<sp/>appears<sp/>without<sp/>the<sp/>fisheye.<sp/><sp/>If<sp/>it&apos;s<sp/>empty,<sp/>we&apos;re<sp/>done.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hiddenMid.width<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;t0<sp/>=<sp/>params.t0;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;tOffset<sp/>=<sp/>params.tOffset;</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;h<sp/>=<sp/>params.h;</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;tpre<sp/>=<sp/>params.tpre;</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;tpost<sp/>=<sp/>params.tpost;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;t1<sp/>=<sp/>params.t1;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;averagePixelsPerSample<sp/>=<sp/>params.averagePixelsPerSample;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref><sp/>=<sp/>params.rate;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>leftOffset<sp/>=<sp/>params.leftOffset;</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;mid<sp/>=<sp/>params.mid;</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dBRange<sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1a10c50123dc26cba66469b011c1852047" kindref="member">GetWaveformSettings</ref>().<ref refid="class_waveform_settings_1a97217e305f6eb7ead4452924fec4029d" kindref="member">dBRange</ref>;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/>dc.SetPen(*wxTRANSPARENT_PEN);</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>get<sp/>to<sp/>this<sp/>point,<sp/>the<sp/>clip<sp/>is<sp/>actually<sp/>visible<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>screen,<sp/>so<sp/>remember<sp/>the<sp/>display<sp/>rectangle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1ac42da9000a368776ef8beb582723fb29" kindref="member">SetDisplayRect</ref>(hiddenMid);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>bounds<sp/>(controlled<sp/>by<sp/>vertical<sp/>zooming;<sp/>-1.0...1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>default)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomMin,<sp/>zoomMax;</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/>track-&gt;<ref refid="class_wave_track_1aebb4cac69620ce02b4f396fb37d23f82" kindref="member">GetDisplayBounds</ref>(&amp;zoomMin,<sp/>&amp;zoomMax);</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>vEnv(mid.width);</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>env<sp/>=<sp/>&amp;vEnv[0];</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a89df7eef9147be5868fe247c6239e5c8" kindref="member">GetEnvelope</ref>()-&gt;<ref refid="class_envelope_1a5daec75b3aa3b0da7919fc986014e1db" kindref="member">GetValues</ref>(env,<sp/>mid.width,<sp/>leftOffset,<sp/>zoomInfo);</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>background<sp/>of<sp/>the<sp/>track,<sp/>outlining<sp/>the<sp/>shape<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>envelope<sp/>and<sp/>using<sp/>a<sp/>colored<sp/>pen<sp/>for<sp/>the<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>part<sp/>of<sp/>the<sp/>waveform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/>t1;</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(track-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>()<sp/>||<sp/>track-&gt;<ref refid="class_track_1a4b9d8ec8baa8ce94f9b9b999e324a59f" kindref="member">IsSyncLockSelected</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" kindref="member">LongSamplesToTime</ref>(track-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(selectedRegion.<ref refid="class_selected_region_1a699851ec9e5a209be86f552f0826687d" kindref="member">t0</ref>())),</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" kindref="member">LongSamplesToTime</ref>(track-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(selectedRegion.<ref refid="class_selected_region_1aec8e1688714de8fb218d0cf0188360d6" kindref="member">t1</ref>()));</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>t1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DrawWaveformBackground(dc,<sp/>leftOffset,<sp/>mid,</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env,</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zoomMin,<sp/>zoomMax,</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dB,<sp/>dBRange,</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0,<sp/>t1,<sp/>zoomInfo,<sp/>drawEnvelope,</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!track-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>());</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_display" kindref="compound">WaveDisplay</ref><sp/>display(hiddenMid.width);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLoadingOD<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight><highlight class="comment">//true<sp/>if<sp/>loading<sp/>on<sp/>demand<sp/>block<sp/>in<sp/>sequence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pps<sp/>=</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>averagePixelsPerSample<sp/>*<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>;</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>portion<sp/>separately,<sp/>we<sp/>will<sp/>decide<sp/>to<sp/>draw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>as<sp/>min/max/rms<sp/>or<sp/>as<sp/>individual<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;WavePortion&gt;<sp/>portions;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/>FindWavePortions(portions,<sp/>rect,<sp/>zoomInfo,<sp/>params);</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nPortions<sp/>=<sp/>portions.size();</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Require<sp/>at<sp/>least<sp/>1/2<sp/>pixel<sp/>per<sp/>sample<sp/>for<sp/>drawing<sp/>individual<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold1<sp/>=<sp/>0.5<sp/>*<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>;</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Require<sp/>at<sp/>least<sp/>3<sp/>pixels<sp/>per<sp/>sample<sp/>for<sp/>drawing<sp/>the<sp/>draggable<sp/>points.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold2<sp/>=<sp/>3<sp/>*<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>;</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>showIndividualSamples<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>!showIndividualSamples<sp/>&amp;&amp;<sp/>ii<sp/>&lt;<sp/>nPortions;<sp/>++ii)<sp/>{</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>WavePortion<sp/>&amp;portion<sp/>=<sp/>portions[ii];</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showIndividualSamples<sp/>=</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!portion.inFisheye<sp/>&amp;&amp;<sp/>portion.averageZoom<sp/>&gt;<sp/>threshold1;</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!showIndividualSamples)<sp/>{</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>WaveClip<sp/>class<sp/>handles<sp/>the<sp/>details<sp/>of<sp/>computing<sp/>the<sp/>shape</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>waveform.<sp/><sp/>The<sp/>only<sp/>way<sp/>GetWaveDisplay<sp/>will<sp/>fail<sp/>is<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there&apos;s<sp/>a<sp/>serious<sp/>error,<sp/>like<sp/>some<sp/>of<sp/>the<sp/>waveform<sp/>data<sp/>can&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>loaded.<sp/><sp/>So<sp/>if<sp/>the<sp/>function<sp/>returns<sp/>false,<sp/>we<sp/>can<sp/>just<sp/>exit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>we<sp/>compute<sp/>the<sp/>full<sp/>width<sp/>display<sp/>even<sp/>if<sp/>there<sp/>is<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fisheye<sp/>hiding<sp/>part<sp/>of<sp/>it,<sp/>because<sp/>of<sp/>the<sp/>caching.<sp/><sp/>If<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fisheye<sp/>moves<sp/>over<sp/>the<sp/>background,<sp/>there<sp/>is<sp/>then<sp/>less<sp/>to<sp/>do<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>redrawing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!clip-&gt;<ref refid="class_wave_clip_1ac28044d7d312e53024f7b4fbe38e711f" kindref="member">GetWaveDisplay</ref>(display,</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0,<sp/>pps,<sp/>isLoadingOD))</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>nPortions;<sp/>++ii)<sp/>{</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WavePortion<sp/>&amp;portion<sp/>=<sp/>portions[ii];</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>showIndividualSamples<sp/>=<sp/>portion.averageZoom<sp/>&gt;<sp/>threshold1;</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>showPoints<sp/>=<sp/>portion.averageZoom<sp/>&gt;<sp/>threshold2;</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxRect&amp;<sp/>rect<sp/>=<sp/>portion.rect;</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rect.Intersect(mid);</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(rect.width<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*useMin<sp/>=<sp/>0,<sp/>*useMax<sp/>=<sp/>0,<sp/>*useRms<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*useBl<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_display" kindref="compound">WaveDisplay</ref><sp/>fisheyeDisplay(rect.width);</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools_1_1c__preproc_1a631381b6890985ef083f6544eedbd3e1" kindref="member">skipped</ref><sp/>=<sp/>0,<sp/>skippedLeft<sp/>=<sp/>0,<sp/>skippedRight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(portion.inFisheye)<sp/>{</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!showIndividualSamples)<sp/>{</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fisheyeDisplay.<ref refid="class_wave_display_1ab8b228309a2699299e591641ccfebcb7" kindref="member">Allocate</ref>();</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>numSamples<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a6cd003778b510cad742feaa5763c6ac2" kindref="member">GetNumSamples</ref>();</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>wave<sp/>display<sp/>data<sp/>for<sp/>different<sp/>magnification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>jj<sp/>&lt;<sp/>rect.width;<sp/>++jj)<sp/>{</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref><sp/>=</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zoomInfo.<ref refid="class_zoom_info_1aa7e0fefa3365826150c253c1ba6e4339" kindref="member">PositionToTime</ref>(jj,<sp/>-leftOffset)<sp/>-<sp/>tOffset;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>sample<sp/>=<sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)floor(time<sp/>*<sp/>rate<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sample<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++rect.x;</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++skippedLeft;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sample<sp/>&gt;=<sp/>numSamples)</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fisheyeDisplay.<ref refid="class_wave_display_1a7e072e884092ea939899822b0d92b8be" kindref="member">where</ref>[jj<sp/>-<sp/>skippedLeft]<sp/>=<sp/>sample;</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skippedRight<sp/>=<sp/>rect.width<sp/>-<sp/>jj;</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skipped<sp/>=<sp/>skippedRight<sp/>+<sp/>skippedLeft;</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.width<sp/>-=<sp/><ref refid="namespacewaflib_1_1_tools_1_1c__preproc_1a631381b6890985ef083f6544eedbd3e1" kindref="member">skipped</ref>;</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>where<sp/>needs<sp/>a<sp/>sentinel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jj<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fisheyeDisplay.<ref refid="class_wave_display_1a7e072e884092ea939899822b0d92b8be" kindref="member">where</ref>[jj<sp/>-<sp/>skippedLeft]<sp/>=</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>+<sp/>fisheyeDisplay.<ref refid="class_wave_display_1a7e072e884092ea939899822b0d92b8be" kindref="member">where</ref>[jj<sp/>-<sp/>skippedLeft<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fisheyeDisplay.<ref refid="class_wave_display_1aab0a13074ebb8ed5ba1da2bceaddd407" kindref="member">width</ref><sp/>-=<sp/><ref refid="namespacewaflib_1_1_tools_1_1c__preproc_1a631381b6890985ef083f6544eedbd3e1" kindref="member">skipped</ref>;</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>a<sp/>wave<sp/>display<sp/>for<sp/>the<sp/>fisheye,<sp/>uncached.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.width<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!clip-&gt;<ref refid="class_wave_clip_1ac28044d7d312e53024f7b4fbe38e711f" kindref="member">GetWaveDisplay</ref>(</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fisheyeDisplay,<sp/>t0,<sp/>-1.0,<sp/></highlight><highlight class="comment">//<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isLoadingOD))</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>serious<sp/>error.<sp/><sp/>just<sp/>don&apos;t<sp/>draw??</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useMin<sp/>=<sp/>fisheyeDisplay.<ref refid="class_wave_display_1a9ff4ca6d4c9be28c6f3cb3f806c41913" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useMax<sp/>=<sp/>fisheyeDisplay.<ref refid="class_wave_display_1ab2a1f71c47f052041fbcbdac889be828" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useRms<sp/>=<sp/>fisheyeDisplay.<ref refid="class_wave_display_1a75d667998a5aa1ec03d1ec86b80f1392" kindref="member">rms</ref>;</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useBl<sp/>=<sp/>fisheyeDisplay.<ref refid="class_wave_display_1a607b91b920b3688ea7eeb01bf302debf" kindref="member">bl</ref>;</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>leftOffset<sp/>-<sp/>params.hiddenLeftOffset;</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useMin<sp/>=<sp/>display.min<sp/>+<sp/>pos;</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useMax<sp/>=<sp/>display.max<sp/>+<sp/>pos;</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useRms<sp/>=<sp/>display.rms<sp/>+<sp/>pos;</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useBl<sp/>=<sp/>display.bl<sp/>+<sp/>pos;</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>leftOffset<sp/>+=<sp/>skippedLeft;</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.width<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!showIndividualSamples)<sp/>{</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>vEnv2(rect.width);</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>env2<sp/>=<sp/>&amp;vEnv2[0];</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a89df7eef9147be5868fe247c6239e5c8" kindref="member">GetEnvelope</ref>()-&gt;<ref refid="class_envelope_1a5daec75b3aa3b0da7919fc986014e1db" kindref="member">GetValues</ref>(env2,<sp/>rect.width,<sp/>leftOffset,<sp/>zoomInfo);</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawMinMaxRMS(dc,<sp/>rect,<sp/>env2,</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zoomMin,<sp/>zoomMax,</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dB,<sp/>dBRange,</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useMin,<sp/>useMax,<sp/>useRms,<sp/>useBl,</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isLoadingOD,<sp/>muted</highlight></codeline>
<codeline lineno="1907"><highlight class="normal">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>track-&gt;<ref refid="class_wave_track_1a93d35f717c7120f01d93ccb0e1d18db4" kindref="member">GetChannelGain</ref>(track-&gt;<ref refid="class_track_1a9c988f7695a546bf52ee2dc859db0345" kindref="member">GetChannel</ref>())</highlight></codeline>
<codeline lineno="1909"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawIndividualSamples(dc,<sp/>leftOffset,<sp/>rect,<sp/>zoomMin,<sp/>zoomMax,</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dB,<sp/>dBRange,</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip,<sp/>zoomInfo,</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bigPoints,<sp/>showPoints,<sp/>muted);</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>leftOffset<sp/>+=<sp/>rect.width<sp/>+<sp/>skippedRight;</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(drawEnvelope)<sp/>{</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DrawEnvelope(dc,<sp/>mid,<sp/>env,<sp/>zoomMin,<sp/>zoomMax,<sp/>dB,<sp/>dBRange);</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a89df7eef9147be5868fe247c6239e5c8" kindref="member">GetEnvelope</ref>()-&gt;<ref refid="class_envelope_1a4463f20563902ef78367735ea25440f4" kindref="member">DrawPoints</ref>(dc,<sp/>rect,<sp/>zoomInfo,<sp/>dB,<sp/>dBRange,<sp/>zoomMin,<sp/>zoomMax);</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>arrows<sp/>on<sp/>the<sp/>left<sp/>side<sp/>if<sp/>the<sp/>track<sp/>extends<sp/>to<sp/>the<sp/>left<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>beginning<sp/>of<sp/>time.<sp/><sp/>:)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>tOffset<sp/>&lt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DrawNegativeOffsetTrackArrows(dc,<sp/>rect);</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>clip<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/>dc.SetPen(*wxGREY_PEN);</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tpre<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mid.x<sp/>-<sp/>1,<sp/>mid.y,</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mid.x<sp/>-<sp/>1,<sp/>mid.y<sp/>+<sp/>rect.height);</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tpost<sp/>&gt;<sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mid.x<sp/>+<sp/>mid.width,<sp/>mid.y,</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mid.x<sp/>+<sp/>mid.width,<sp/>mid.y<sp/>+<sp/>rect.height);</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrackArtist::DrawTimeSlider(wxDC<sp/>&amp;<sp/>dc,</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;<sp/>rect,</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rightwards)</highlight></codeline>
<codeline lineno="1951"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>border<sp/>=<sp/>3;<sp/></highlight><highlight class="comment">//<sp/>3<sp/>pixels<sp/>all<sp/>round.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>6;<sp/></highlight><highlight class="comment">//<sp/>width<sp/>of<sp/>the<sp/>drag<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taper<sp/>=<sp/>6;<sp/></highlight><highlight class="comment">//<sp/>how<sp/>much<sp/>the<sp/>box<sp/>tapers<sp/>by.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>barSpacing<sp/>=<sp/>4;<sp/></highlight><highlight class="comment">//<sp/>how<sp/>far<sp/>apart<sp/>the<sp/>bars<sp/>are.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>barWidth<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xFlat<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Enough<sp/>space<sp/>to<sp/>draw<sp/>in?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.height<sp/>&lt;=<sp/>((taper+border<sp/>+<sp/>barSpacing)<sp/>*<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.width<sp/>&lt;=<sp/>(width<sp/>*<sp/>2<sp/>+<sp/>border<sp/>*<sp/>3))<sp/>{</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>draggable<sp/>box<sp/>is<sp/>tapered<sp/>towards<sp/>the<sp/>direction<sp/>you<sp/>drag<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leftTaper<sp/><sp/>=<sp/>rightwards<sp/>?<sp/>0<sp/>:<sp/>6;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rightTaper<sp/>=<sp/>rightwards<sp/>?<sp/>6<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xLeft<sp/>=<sp/>rightwards<sp/>?<sp/>(rect.x<sp/>+<sp/>border<sp/>-<sp/>2)</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(rect.x<sp/>+<sp/>rect.width<sp/>+<sp/>1<sp/>-<sp/>(border<sp/>+<sp/>width));</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yTop<sp/><sp/>=<sp/>rect.y<sp/>+<sp/>border;</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yBot<sp/><sp/>=<sp/>rect.y<sp/>+<sp/>rect.height<sp/>-<sp/>border<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a3d6f7afabbb757c3630619df34761e1b" kindref="member">AColor::Light</ref>(&amp;dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>xLeft,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yBot<sp/>-<sp/>leftTaper,<sp/>xLeft,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yTop<sp/>+<sp/>leftTaper);</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>xLeft,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yTop<sp/>+<sp/>leftTaper,<sp/>xLeft<sp/>+<sp/>xFlat,<sp/>yTop);</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>xLeft<sp/>+<sp/>xFlat,<sp/>yTop,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xLeft<sp/>+<sp/>width,<sp/>yTop<sp/>+<sp/>rightTaper);</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a34d81236a6bff41ebf8cf2b1183c847a" kindref="member">AColor::Dark</ref>(&amp;dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>xLeft<sp/>+<sp/>width,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yTop<sp/>+<sp/>rightTaper,<sp/>xLeft<sp/>+<sp/>width,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>yBot<sp/>-<sp/>rightTaper);</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>xLeft<sp/>+<sp/>width,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yBot<sp/>-<sp/>rightTaper,<sp/>xLeft<sp/>+<sp/>width-xFlat,<sp/>yBot);</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>xLeft<sp/>+<sp/>width<sp/>-<sp/>xFlat,<sp/>yBot,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xLeft,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yBot<sp/>-<sp/>leftTaper);</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstBar<sp/>=<sp/>yTop<sp/>+<sp/>taper<sp/>+<sp/>taper<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBars<sp/><sp/><sp/><sp/>=<sp/>(yBot<sp/>-<sp/>yTop<sp/>-<sp/>taper<sp/>*<sp/>3)<sp/>/<sp/>barSpacing<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/>xLeft<sp/>+=<sp/>(width<sp/>-<sp/>barWidth<sp/>+<sp/>1)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a3d6f7afabbb757c3630619df34761e1b" kindref="member">AColor::Light</ref>(&amp;dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;i<sp/>&lt;<sp/>nBars;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yy<sp/>=<sp/>firstBar<sp/>+<sp/>barSpacing<sp/>*<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>xLeft,<sp/>yy,<sp/>xLeft<sp/>+<sp/>barWidth,<sp/>yy);</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a34d81236a6bff41ebf8cf2b1183c847a" kindref="member">AColor::Dark</ref>(&amp;dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;i<sp/>&lt;<sp/>nBars;<sp/>i++){</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yy<sp/>=<sp/>firstBar<sp/>+<sp/>barSpacing<sp/>*<sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>xLeft,<sp/>yy,<sp/>xLeft<sp/>+<sp/>barWidth,<sp/>yy);</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2002"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrackArtist::DrawSpectrum(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*track,</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxDC<sp/>&amp;<sp/>dc,</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;<sp/>rect,</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>&amp;selectedRegion,</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo)</highlight></codeline>
<codeline lineno="2010"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/>DrawBackgroundWithSelection(&amp;dc,<sp/>rect,<sp/>track,<sp/>blankSelectedBrush,<sp/>blankBrush,</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selectedRegion,<sp/>zoomInfo);</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track_cache" kindref="compound">WaveTrackCache</ref><sp/>cache(track);</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>const_cast&lt;WaveTrack*&gt;(track)-&gt;GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())<sp/>{</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DrawClipSpectrum(cache,<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData(),<sp/>dc,<sp/>rect,<sp/>selectedRegion,<sp/>zoomInfo);</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2019"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>findValue</highlight></codeline>
<codeline lineno="2022"><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*spectrum,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bin0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bin1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>half,</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>autocorrelation,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gain,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>range)</highlight></codeline>
<codeline lineno="2024"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Averaging<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(bin1)<sp/>==<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(bin0))<sp/>{</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>spectrum[<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>(bin0)];</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>binwidth=<sp/>bin1<sp/>-<sp/>bin0;</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>spectrum[<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>(bin0)]<sp/>*<sp/>(1.f<sp/>-<sp/>bin0<sp/>+<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)bin0);</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bin0<sp/>=<sp/>1<sp/>+<sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(bin0);</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bin0<sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(bin1))<sp/>{</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>+=<sp/>spectrum[<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>(bin0)];</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bin0<sp/>+=<sp/>1.0;</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>reference<sp/>past<sp/>end<sp/>of<sp/>freq<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(bin1)<sp/>&gt;=<sp/>half)<sp/>{</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bin1<sp/>-=<sp/>1.0;</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>+=<sp/>spectrum[<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>(bin1)]<sp/>*<sp/>(bin1<sp/>-<sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>(bin1));</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>/=<sp/>binwidth;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/>wxUnusedVar(half);</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>method,<sp/>and<sp/>no<sp/>apportionment<sp/>of<sp/>any<sp/>single<sp/>bins<sp/>over<sp/>multiple<sp/>pixel<sp/>rows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>Bug971</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/>limitIndex;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(autocorrelation)<sp/>{</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bin<sp/>=<sp/>2<sp/>*<sp/>half<sp/>/<sp/>(half<sp/>-<sp/>1<sp/>-<sp/>array_index);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Solve<sp/>for<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(half<sp/>-<sp/>1),</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(half<sp/>-<sp/>1)<sp/>-<sp/>(2<sp/>*<sp/>half)<sp/>/<sp/>(<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(1.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>bin0))</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>limitIndex<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(half<sp/>-<sp/>1),</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(half<sp/>-<sp/>1)<sp/>-<sp/>(2<sp/>*<sp/>half)<sp/>/<sp/>(<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(1.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>bin1))</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(half<sp/>-<sp/>1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(floor(0.5<sp/>+<sp/>bin0)));</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>limitIndex<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(half,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(floor(0.5<sp/>+<sp/>bin1)));</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/>value<sp/>=<sp/>spectrum[index];</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(++index<sp/>&lt;<sp/>limitIndex)</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(value,<sp/>spectrum[index]);</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!autocorrelation)<sp/>{</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>step<sp/>converts<sp/>dB<sp/>to<sp/>a<sp/>0.0-1.0<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>(value<sp/>+<sp/>range<sp/>+<sp/>gain)<sp/>/<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)range;</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/>value<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(1.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>value));</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="2078"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>decide<sp/>on<sp/>which<sp/>color<sp/>set<sp/>to<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"></highlight><highlight class="comment">//<sp/>dashCount<sp/>counts<sp/>both<sp/>dashes<sp/>and<sp/>the<sp/>spaces<sp/>between<sp/>them.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2084" refid="_track_artist_8cpp_1a9061a778a820c92e76932a871a267877" refkind="member"><highlight class="normal"><ref refid="class_a_color_1a3a1a5b4ab4055f09810d58a166f61bfe" kindref="member">AColor::ColorGradientChoice</ref><sp/><ref refid="_track_artist_8cpp_1a9061a778a820c92e76932a871a267877" kindref="member">ChooseColorSet</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bin0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bin1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>selBinLo,<sp/></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>selBinCenter,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>selBinHi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dashCount,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSpectral<sp/>)</highlight></codeline>
<codeline lineno="2086"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isSpectral)</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="class_a_color_1a3a1a5b4ab4055f09810d58a166f61bfeaf8b5b6cc1c291340c167ed73787e70e2" kindref="member">AColor::ColorGradientTimeSelected</ref>;</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((selBinCenter<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(bin0<sp/>&lt;=<sp/>selBinCenter)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(selBinCenter<sp/>&lt;<sp/>bin1))</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_a_color_1a3a1a5b4ab4055f09810d58a166f61bfeabdd31fd590dccaefd1f2ab6df45f85aa" kindref="member">AColor::ColorGradientEdge</ref>;</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((0<sp/>==<sp/>dashCount<sp/>%<sp/>2)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((selBinLo<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(bin0<sp/>&lt;=<sp/>selBinLo)<sp/>&amp;&amp;<sp/>(<sp/>selBinLo<sp/>&lt;<sp/>bin1))<sp/><sp/>||</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((selBinHi<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(bin0<sp/>&lt;=<sp/>selBinHi)<sp/>&amp;&amp;<sp/>(<sp/>selBinHi<sp/>&lt;<sp/>bin1))))</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_a_color_1a3a1a5b4ab4055f09810d58a166f61bfeabdd31fd590dccaefd1f2ab6df45f85aa" kindref="member">AColor::ColorGradientEdge</ref>;</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((selBinLo<sp/>&lt;<sp/>0<sp/>||<sp/>selBinLo<sp/>&lt;<sp/>bin1)<sp/>&amp;&amp;<sp/>(selBinHi<sp/>&lt;<sp/>0<sp/>||<sp/>selBinHi<sp/>&gt;<sp/>bin0))</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="class_a_color_1a3a1a5b4ab4055f09810d58a166f61bfea994bbd5ca3c5a1e50383f71482576ca9" kindref="member">AColor::ColorGradientTimeAndFrequencySelected</ref>;</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"></highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="class_a_color_1a3a1a5b4ab4055f09810d58a166f61bfeaf8b5b6cc1c291340c167ed73787e70e2" kindref="member">AColor::ColorGradientTimeSelected</ref>;</highlight></codeline>
<codeline lineno="2100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrackArtist::DrawClipSpectrum(<ref refid="class_wave_track_cache" kindref="compound">WaveTrackCache</ref><sp/>&amp;waveTrackCache,</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip,</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxDC<sp/>&amp;<sp/>dc,</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;<sp/>rect,</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>&amp;selectedRegion,</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo)</highlight></codeline>
<codeline lineno="2109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PROFILE_WAVEFORM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_profiler" kindref="compound">Profiler</ref><sp/>profiler;</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>track<sp/>=<sp/>waveTrackCache.<ref refid="class_wave_track_cache_1a7f431e21835e425e61bfd52f5f310a1f" kindref="member">GetTrack</ref>();</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_spectrogram_settings" kindref="compound">SpectrogramSettings</ref><sp/>&amp;settings<sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1a54f8ed0c9c1d1fae0241867565b33512" kindref="member">GetSpectrogramSettings</ref>();</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>autocorrelation<sp/>=<sp/>(settings.<ref refid="class_spectrogram_settings_1a9e426ccf5b4ab8210e05c0ead16f4dd0" kindref="member">algorithm</ref><sp/>==<sp/><ref refid="class_spectrogram_settings_1a6b0d17f8056ff543b9e57060a6c6aabaaab944000f92a5f63a9ff5468ef4b5dc2" kindref="member">SpectrogramSettings::algPitchEAC</ref>);</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>DASH_LENGTH<sp/>=<sp/>10<sp/></highlight><highlight class="comment">/*<sp/>pixels<sp/>*/</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ClipParameters<sp/><ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>track,<sp/>clip,<sp/>rect,<sp/>selectedRegion,<sp/>zoomInfo);</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;hiddenMid<sp/>=<sp/>params.hiddenMid;</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;hiddenMid&quot;<sp/>rect<sp/>contains<sp/>the<sp/>part<sp/>of<sp/>the<sp/>display<sp/>actually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>containing<sp/>the<sp/>waveform,<sp/>as<sp/>it<sp/>appears<sp/>without<sp/>the<sp/>fisheye.<sp/><sp/>If<sp/>it&apos;s<sp/>empty,<sp/>we&apos;re<sp/>done.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hiddenMid.width<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;t0<sp/>=<sp/>params.t0;</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;tOffset<sp/>=<sp/>params.tOffset;</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;ssel0<sp/>=<sp/>params.ssel0;</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;ssel1<sp/>=<sp/>params.ssel1;</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;averagePixelsPerSample<sp/>=<sp/>params.averagePixelsPerSample;</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref><sp/>=<sp/>params.rate;</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;hiddenLeftOffset<sp/>=<sp/>params.hiddenLeftOffset;</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;leftOffset<sp/>=<sp/>params.leftOffset;</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;mid<sp/>=<sp/>params.mid;</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>get<sp/>to<sp/>this<sp/>point,<sp/>the<sp/>clip<sp/>is<sp/>actually<sp/>visible<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>screen,<sp/>so<sp/>remember<sp/>the<sp/>display<sp/>rectangle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1ac42da9000a368776ef8beb582723fb29" kindref="member">SetDisplayRect</ref>(hiddenMid);</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freqLo<sp/>=<sp/><ref refid="class_selected_region_1aeb44ed227fd0a3396dc40f57efe3d432" kindref="member">SelectedRegion::UndefinedFrequency</ref>;</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freqHi<sp/>=<sp/><ref refid="class_selected_region_1aeb44ed227fd0a3396dc40f57efe3d432" kindref="member">SelectedRegion::UndefinedFrequency</ref>;</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_SPECTRAL_EDITING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/>freqLo<sp/>=<sp/>selectedRegion.<ref refid="class_selected_region_1a04b91be00d5df7ef6fd08161dd6f1ec4" kindref="member">f0</ref>();</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/>freqHi<sp/>=<sp/>selectedRegion.<ref refid="class_selected_region_1a821c5a808c950dc3a4db33297c9e088c" kindref="member">f1</ref>();</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;isGrayscale<sp/>=<sp/>settings.<ref refid="class_spectrogram_settings_1a0d9fbcfd817862e3b021dfba3ff13ea0" kindref="member">isGrayscale</ref>;</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;range<sp/>=<sp/>settings.<ref refid="class_spectrogram_settings_1ab3c3d2f1f144d6751dacbb7b573726ef" kindref="member">range</ref>;</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;gain<sp/>=<sp/>settings.<ref refid="class_spectrogram_settings_1a7b3f6f14d24664c63cb888625c251f70" kindref="member">gain</ref>;</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_FIND_NOTES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;fftFindNotes<sp/>=<sp/>settings.fftFindNotes;</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;findNotesMinA<sp/>=<sp/>settings.findNotesMinA;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;numberOfMaxima<sp/>=<sp/>settings.numberOfMaxima;</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;findNotesQuantize<sp/>=<sp/>settings.findNotesQuantize;</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_FFT_Y_GRID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;fftYGrid<sp/>=<sp/>settings.fftYGrid;</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/>dc.SetPen(*wxTRANSPARENT_PEN);</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>draw<sp/>directly<sp/>to<sp/>a<sp/>bit<sp/>image<sp/>in<sp/>memory,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>then<sp/>paint<sp/>this<sp/>directly<sp/>to<sp/>our<sp/>offscreen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bitmap.<sp/><sp/>Note<sp/>that<sp/>this<sp/>could<sp/>be<sp/>optimized<sp/>even</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>more,<sp/>but<sp/>for<sp/>now<sp/>this<sp/>is<sp/>not<sp/>bad.<sp/><sp/>-dmazzoni</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/>wxImage<sp/>image((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)mid.width,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)mid.height);</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!image.IsOk())</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>=<sp/>image.GetData();</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>half<sp/>=<sp/>settings.<ref refid="class_spectrogram_settings_1a35321029bb4e809eedb8721db80c448e" kindref="member">GetFFTLength</ref>()<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>binUnit<sp/>=<sp/>rate<sp/>/<sp/>(2<sp/>*<sp/>half);</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*freq<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>*where<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>updated;</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pps<sp/>=<sp/>averagePixelsPerSample<sp/>*<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>;</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updated<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1ad59c0a252dbb49e98f74155b99777ad8" kindref="member">GetSpectrogram</ref>(waveTrackCache,<sp/>freq,<sp/>where,<sp/>hiddenMid.width,</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0,<sp/>pps);</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"></highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minFreq,<sp/>maxFreq;</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/>track-&gt;<ref refid="class_wave_track_1a6c31cef06f382857502ce036b2dc795b" kindref="member">GetSpectrumBounds</ref>(&amp;minFreq,<sp/>&amp;maxFreq);</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_spectrogram_settings_1ad80cc088bcf7afb4176fd7195d4691fc" kindref="member">SpectrogramSettings::ScaleType</ref><sp/>scaleType<sp/>=<sp/>settings.<ref refid="class_spectrogram_settings_1a8c6871ffc9d2f3f645e9d14c24920e04" kindref="member">scaleType</ref>;</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"></highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_number_scale" kindref="compound">NumberScale</ref><sp/>numberScale(settings.<ref refid="class_spectrogram_settings_1aa0c8fbbe53db1ede59a834438a3ee375" kindref="member">GetScale</ref>(minFreq,<sp/>maxFreq,<sp/>rate,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_FFT_Y_GRID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>log2<sp/>=<sp/>logf(2.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>),</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scale2<sp/>=<sp/>(lmax<sp/>-<sp/>lmin)<sp/>/<sp/>log2,</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lmin2<sp/>=<sp/>lmin<sp/>/<sp/>log2;</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*yGrid;</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/>yGrid<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">[mid.height];</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy<sp/>=<sp/>0;<sp/>yy<sp/>&lt;<sp/>mid.height;<sp/>++yy)<sp/>{</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>(float(yy)<sp/>/<sp/>mid.height*scale2<sp/>-<sp/>lmin2)<sp/>*<sp/>12;</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>n2<sp/>=<sp/>(float(yy<sp/>+<sp/>1)<sp/>/<sp/>mid.height*scale2<sp/>-<sp/>lmin2)<sp/>*<sp/>12;</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>=<sp/>float(minFreq)<sp/>/<sp/>(fftSkipPoints<sp/>+<sp/>1)*powf(2.0f,<sp/>n<sp/>/<sp/>12.0f<sp/>+<sp/>lmin2);</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f2<sp/>=<sp/>float(minFreq)<sp/>/<sp/>(fftSkipPoints<sp/>+<sp/>1)*powf(2.0f,<sp/>n2<sp/>/<sp/>12.0f<sp/>+<sp/>lmin2);</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>logf(f<sp/>/<sp/>440)<sp/>/<sp/>log2<sp/>*<sp/>12;</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>logf(f2<sp/>/<sp/>440)<sp/>/<sp/>log2<sp/>*<sp/>12;</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(floor(n)<sp/>&lt;<sp/>floor(n2))</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yGrid[yy]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yGrid[yy]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//EXPERIMENTAL_FFT_Y_GRID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2212"><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!updated<sp/>&amp;&amp;<sp/>clip-&gt;<ref refid="class_wave_clip_1abf840b95c4ee482e9077f274e329a0d2" kindref="member">mSpecPxCache</ref>-&gt;<ref refid="class_spec_px_cache_1a31c71c0f3307a1a81f44aa35d16ec042" kindref="member">valid</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(clip-&gt;<ref refid="class_wave_clip_1abf840b95c4ee482e9077f274e329a0d2" kindref="member">mSpecPxCache</ref>-&gt;<ref refid="class_spec_px_cache_1a35dfc2e3b2a17e94fb4c77847a5356ce" kindref="member">len</ref><sp/>==<sp/>hiddenMid.height<sp/>*<sp/>hiddenMid.width)</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>scaleType<sp/>==<sp/>clip-&gt;<ref refid="class_wave_clip_1abf840b95c4ee482e9077f274e329a0d2" kindref="member">mSpecPxCache</ref>-&gt;<ref refid="class_spec_px_cache_1a796e0079edd616e1651edd8a4b9aa212" kindref="member">scaleType</ref></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>gain<sp/>==<sp/>clip-&gt;<ref refid="class_wave_clip_1abf840b95c4ee482e9077f274e329a0d2" kindref="member">mSpecPxCache</ref>-&gt;<ref refid="class_spec_px_cache_1a544e859e9069386b5558b24dd2a23c9d" kindref="member">gain</ref></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>range<sp/>==<sp/>clip-&gt;<ref refid="class_wave_clip_1abf840b95c4ee482e9077f274e329a0d2" kindref="member">mSpecPxCache</ref>-&gt;<ref refid="class_spec_px_cache_1a96de1d4e8b6d77973de29c4b3584cfc4" kindref="member">range</ref></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>minFreq<sp/>==<sp/>clip-&gt;<ref refid="class_wave_clip_1abf840b95c4ee482e9077f274e329a0d2" kindref="member">mSpecPxCache</ref>-&gt;<ref refid="class_spec_px_cache_1a7a9ac3b5030ffe0f6dc83821126108aa" kindref="member">minFreq</ref></highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>maxFreq<sp/>==<sp/>clip-&gt;<ref refid="class_wave_clip_1abf840b95c4ee482e9077f274e329a0d2" kindref="member">mSpecPxCache</ref>-&gt;<ref refid="class_spec_px_cache_1a2a248bbe2e6090efba5eee5678849a38" kindref="member">maxFreq</ref></highlight></codeline>
<codeline lineno="2220"><highlight class="normal">#ifdef<sp/>EXPERIMENTAL_FFT_Y_GRID</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/>&amp;&amp;<sp/>fftYGrid==fftYGridOld</highlight></codeline>
<codeline lineno="2222"><highlight class="normal">#endif<sp/></highlight><highlight class="comment">//EXPERIMENTAL_FFT_Y_GRID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2223"><highlight class="normal">#ifdef<sp/>EXPERIMENTAL_FIND_NOTES</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/>&amp;&amp;<sp/>fftFindNotes==fftFindNotesOld</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/>&amp;&amp;<sp/>findNotesMinA==findNotesMinAOld</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/>&amp;&amp;<sp/>numberOfMaxima==findNotesNOld</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/>&amp;&amp;<sp/>findNotesQuantize==findNotesQuantizeOld</highlight></codeline>
<codeline lineno="2228"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wave<sp/>clip&apos;s<sp/>spectrum<sp/>cache<sp/>is<sp/>up<sp/>to<sp/>date,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>so<sp/>is<sp/>the<sp/>spectrum<sp/>pixel<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>spectrum<sp/>pixel<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>clip-&gt;<ref refid="class_wave_clip_1abf840b95c4ee482e9077f274e329a0d2" kindref="member">mSpecPxCache</ref>;</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1abf840b95c4ee482e9077f274e329a0d2" kindref="member">mSpecPxCache</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_spec_px_cache" kindref="compound">SpecPxCache</ref>(hiddenMid.width<sp/>*<sp/>hiddenMid.height);</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1abf840b95c4ee482e9077f274e329a0d2" kindref="member">mSpecPxCache</ref>-&gt;<ref refid="class_spec_px_cache_1a31c71c0f3307a1a81f44aa35d16ec042" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1abf840b95c4ee482e9077f274e329a0d2" kindref="member">mSpecPxCache</ref>-&gt;<ref refid="class_spec_px_cache_1a796e0079edd616e1651edd8a4b9aa212" kindref="member">scaleType</ref><sp/>=<sp/>scaleType;</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1abf840b95c4ee482e9077f274e329a0d2" kindref="member">mSpecPxCache</ref>-&gt;<ref refid="class_spec_px_cache_1a544e859e9069386b5558b24dd2a23c9d" kindref="member">gain</ref><sp/>=<sp/>gain;</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1abf840b95c4ee482e9077f274e329a0d2" kindref="member">mSpecPxCache</ref>-&gt;<ref refid="class_spec_px_cache_1a96de1d4e8b6d77973de29c4b3584cfc4" kindref="member">range</ref><sp/>=<sp/>range;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1abf840b95c4ee482e9077f274e329a0d2" kindref="member">mSpecPxCache</ref>-&gt;<ref refid="class_spec_px_cache_1a7a9ac3b5030ffe0f6dc83821126108aa" kindref="member">minFreq</ref><sp/>=<sp/>minFreq;</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1abf840b95c4ee482e9077f274e329a0d2" kindref="member">mSpecPxCache</ref>-&gt;<ref refid="class_spec_px_cache_1a2a248bbe2e6090efba5eee5678849a38" kindref="member">maxFreq</ref><sp/>=<sp/>maxFreq;</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_FIND_NOTES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fftFindNotesOld<sp/>=<sp/>fftFindNotes;</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>findNotesMinAOld<sp/>=<sp/>findNotesMinA;</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>findNotesNOld<sp/>=<sp/>numberOfMaxima;</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>findNotesQuantizeOld<sp/>=<sp/>findNotesQuantize;</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_FIND_NOTES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmins<sp/>=<sp/>lmin,</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmaxs<sp/>=<sp/>lmax</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//EXPERIMENTAL_FIND_NOTES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_FIND_NOTES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxima[128];</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxima0[128],<sp/>maxima1[128];</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f2bin<sp/>=<sp/>half<sp/>/<sp/>(rate<sp/>/<sp/>2.0f),</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bin2f<sp/>=<sp/>1.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>/<sp/>f2bin,</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minDistance<sp/>=<sp/>powf(2.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>2.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>/<sp/>12.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>),</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i0<sp/>=<sp/>expf(lmin)<sp/>/<sp/>binUnit,</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="convtest_8m_1aec25a56c89da9b37e346ecc7a8fc68e5" kindref="member">i1</ref><sp/>=<sp/>expf(<ref refid="seqread_8c_1aa2a8c6fbe5ed24f9523eb4e01368e4bc" kindref="member">scale</ref><sp/>+<sp/>lmin)<sp/>/<sp/>binUnit,</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minColor<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxTableSize<sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*indexes<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[maxTableSize];</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//EXPERIMENTAL_FIND_NOTES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"></highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xx<sp/>=<sp/>0;<sp/>xx<sp/>&lt;<sp/>hiddenMid.width;<sp/>++xx)<sp/>{</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_number_scale_1_1_iterator" kindref="compound">NumberScale::Iterator</ref><sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/>numberScale.begin(mid.height);</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nextBin<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(half<sp/>-<sp/>1),<sp/>*it));</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy<sp/>=<sp/>0;<sp/>yy<sp/>&lt;<sp/>hiddenMid.height;<sp/>++yy)<sp/>{</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>nextBin;</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextBin<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(half<sp/>-<sp/>1),<sp/>*++it));</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(settings.<ref refid="class_spectrogram_settings_1a8c6871ffc9d2f3f645e9d14c24920e04" kindref="member">scaleType</ref><sp/>!=<sp/><ref refid="class_spectrogram_settings_1ad80cc088bcf7afb4176fd7195d4691fca5c62f4c050d024a9d5651292713dc49d" kindref="member">SpectrogramSettings::stLogarithmic</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>findValue</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(freq<sp/>+<sp/>half<sp/>*<sp/>xx,<sp/>bin,<sp/>nextBin,<sp/>half,<sp/>autocorrelation,<sp/>gain,<sp/>range);</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1abf840b95c4ee482e9077f274e329a0d2" kindref="member">mSpecPxCache</ref>-&gt;<ref refid="class_spec_px_cache_1a0c3a4884f54b874887d4051c1917a8e8" kindref="member">values</ref>[xx<sp/>*<sp/>hiddenMid.height<sp/>+<sp/>yy]<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>we<sp/>need<sp/>this<sp/>legacy<sp/>experiment<sp/>still?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_FIND_NOTES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maximas<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0<sp/>=<sp/>half<sp/>*<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fftFindNotes)<sp/>{</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>maxTableSize<sp/>-<sp/>1;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&gt;=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>--)</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexes[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>a<sp/>table<sp/>of<sp/>(most)<sp/>values,<sp/>put<sp/>the<sp/>index<sp/>in<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(i0);<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>(i1);<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>freqi<sp/>=<sp/>freq[x0<sp/>+<sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)];</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>((freqi<sp/>+<sp/>gain<sp/>+<sp/>range)<sp/>/<sp/>range*(maxTableSize<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&gt;=<sp/>maxTableSize)</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>maxTableSize<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexes[<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>]<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>from<sp/>the<sp/>indices<sp/>an<sp/>array<sp/>of<sp/>maxima.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>maxTableSize<sp/>-<sp/>1;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&gt;=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>--)<sp/>{</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>indexes[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>freqi<sp/>=<sp/>freq[x0<sp/>+<sp/>index];</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(freqi<sp/>&lt;<sp/>findNotesMinA)</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref><sp/>=<sp/>0;<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref><sp/>&lt;<sp/>maximas;<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>to<sp/>store<sp/>very<sp/>close<sp/>maxima.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxm<sp/>=<sp/>maxima[<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>];</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxm<sp/>/<sp/>index<sp/>&lt;<sp/>minDistance<sp/>&amp;&amp;<sp/>index<sp/>/<sp/>maxm<sp/>&lt;<sp/>minDistance)<sp/>{</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok)<sp/>{</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxima[maximas++]<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maximas<sp/>&gt;=<sp/>numberOfMaxima)</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>f2pix<sp/>helper<sp/>macro<sp/>converts<sp/>a<sp/>frequency<sp/>into<sp/>a<sp/>pixel<sp/>coordinate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>f2pix(f)<sp/>(logf(f)-lmins)/(lmaxs-lmins)*hiddenMid.height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2328"><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Possibly<sp/>quantize<sp/>the<sp/>maxima<sp/>frequencies<sp/>and<sp/>create<sp/>the<sp/>pixel<sp/>block<sp/>limits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>maximas;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>maxima[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>=<sp/>float(index)*bin2f;</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(findNotesQuantize)</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>expf(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(log(f<sp/>/<sp/>440)<sp/>/<sp/>log2<sp/>*<sp/>12<sp/>-<sp/>0.5)<sp/>/<sp/>12.0f*log2)<sp/>*<sp/>440;</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxima[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>f*f2bin;</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f0<sp/>=<sp/>expf((log(f<sp/>/<sp/>440)<sp/>/<sp/>log2<sp/>*<sp/>24<sp/>-<sp/>1)<sp/>/<sp/>24.0f*log2)<sp/>*<sp/>440;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxima0[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>f2pix(f0);</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f1<sp/>=<sp/>expf((log(f<sp/>/<sp/>440)<sp/>/<sp/>log2<sp/>*<sp/>24<sp/>+<sp/>1)<sp/>/<sp/>24.0f*log2)<sp/>*<sp/>440;</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxima1[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>f2pix(f1);</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldBin0<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inMaximum<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//EXPERIMENTAL_FIND_NOTES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_FIND_NOTES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fftFindNotes)<sp/>{</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>&lt;<sp/>maximas)<sp/>{</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>i0<sp/>=<sp/>maxima0[<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>];</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yy<sp/>&gt;=<sp/>i0)</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inMaximum<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inMaximum)<sp/>{</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>i1<sp/>=<sp/>maxima1[<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>];</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yy<sp/>+<sp/>1<sp/>&lt;=<sp/>i1)<sp/>{</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>findValue(freq<sp/>+<sp/>x0,<sp/>bin,<sp/>nextBin,<sp/>half,<sp/>autocorrelation,<sp/>gain,<sp/>range);</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&lt;<sp/>findNotesMinA)</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>minColor;</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it++;</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inMaximum<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>minColor;</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>minColor;</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>minColor;</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//EXPERIMENTAL_FIND_NOTES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>findValue</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(freq<sp/>+<sp/>half<sp/>*<sp/>xx,<sp/>bin,<sp/>nextBin,<sp/>half,<sp/>autocorrelation,<sp/>gain,<sp/>range);</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1abf840b95c4ee482e9077f274e329a0d2" kindref="member">mSpecPxCache</ref>-&gt;<ref refid="class_spec_px_cache_1a0c3a4884f54b874887d4051c1917a8e8" kindref="member">values</ref>[xx<sp/>*<sp/>hiddenMid.height<sp/>+<sp/>yy]<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>logF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>each<sp/>yy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>each<sp/>xx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>updating<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>selBinLo<sp/>=<sp/>freqLo<sp/>/<sp/>binUnit;</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>selBinHi<sp/>=<sp/>freqHi<sp/>/<sp/>binUnit;</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>selBinCenter<sp/>=</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((freqLo<sp/>&lt;<sp/>0<sp/>||<sp/>freqHi<sp/>&lt;<sp/>0)<sp/>?<sp/>-1<sp/>:<sp/>sqrt(freqLo<sp/>*<sp/>freqHi))<sp/>/<sp/>binUnit;</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>w1(0.5<sp/>+<sp/>rate<sp/>*</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(zoomInfo.<ref refid="class_zoom_info_1aa7e0fefa3365826150c253c1ba6e4339" kindref="member">PositionToTime</ref>(0,<sp/>-leftOffset)<sp/>-<sp/>tOffset)</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"></highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSpectral<sp/>=<sp/>settings.<ref refid="class_spectrogram_settings_1a3da0925d9ef43e50e04df908923ae48b" kindref="member">SpectralSelectionEnabled</ref>();</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hidden<sp/>=<sp/>(<ref refid="class_zoom_info_1a21e3cd944a2c0241db3c32b2416ba7b6aac88e9f498c9306c26caffbeaa349a8e" kindref="member">ZoomInfo::HIDDEN</ref><sp/>==<sp/>zoomInfo.<ref refid="class_zoom_info_1a342ed72b12a2ff5663d22e93d9a3c44c" kindref="member">GetFisheyeState</ref>());</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>begin<sp/>=<sp/>hidden</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>0</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(zoomInfo.<ref refid="class_zoom_info_1aa762137abb7f349ee3ac25dfce0c3635" kindref="member">GetFisheyeLeftBoundary</ref>(-leftOffset)));</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref><sp/>=<sp/>hidden</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>0</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(mid.width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(zoomInfo.<ref refid="class_zoom_info_1ab565b4ba0354aa8b409f2e3096e55143" kindref="member">GetFisheyeRightBoundary</ref>(-leftOffset)));</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPixels<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(0,<sp/>end<sp/>-<sp/>begin);</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zeroPaddingFactor<sp/>=<sp/>autocorrelation<sp/>?<sp/>1<sp/>:<sp/>settings.<ref refid="class_spectrogram_settings_1ae627610702531c18a358f3df459027e8" kindref="member">zeroPaddingFactor</ref>;</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_spec_cache" kindref="compound">SpecCache</ref><sp/>specCache</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(numPixels,<sp/>settings.<ref refid="class_spectrogram_settings_1a9e426ccf5b4ab8210e05c0ead16f4dd0" kindref="member">algorithm</ref>,<sp/>-1,</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0,<sp/>settings.<ref refid="class_spectrogram_settings_1a7fbea69cb9478dd7d894d9399561c736" kindref="member">windowType</ref>,</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="class_spectrogram_settings_1afbb300bf82421e6d50cb81b7032f7529" kindref="member">windowSize</ref>,<sp/>zeroPaddingFactor,<sp/>settings.<ref refid="class_spectrogram_settings_1a14b8af717362fd3d5e176a5e9a81783d" kindref="member">frequencyGain</ref>);</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numPixels<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>begin;<sp/>ii<sp/>&lt;<sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;<sp/>++ii)<sp/>{</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref><sp/>=<sp/>zoomInfo.<ref refid="class_zoom_info_1aa7e0fefa3365826150c253c1ba6e4339" kindref="member">PositionToTime</ref>(ii,<sp/>-leftOffset)<sp/>-<sp/>tOffset;</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specCache.<ref refid="class_spec_cache_1ae2c827b1ffd882effd31281fe1d67fc0" kindref="member">where</ref>[ii<sp/>-<sp/>begin]<sp/>=<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>(0.5<sp/>+<sp/>rate<sp/>*<sp/>time);</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specCache.<ref refid="class_spec_cache_1a77eeba6191fe84d47a8a3053ece7ec0e" kindref="member">Populate</ref></highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(settings,<sp/>waveTrackCache,</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>numPixels,</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a6cd003778b510cad742feaa5763c6ac2" kindref="member">GetNumSamples</ref>(),</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tOffset,<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>,</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/></highlight><highlight class="comment">//FIXME<sp/>--<sp/>make<sp/>reassignment<sp/>work<sp/>with<sp/>fisheye</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>correctedX<sp/>=<sp/>leftOffset<sp/>-<sp/>hiddenLeftOffset;</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fisheyeColumn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xx<sp/>=<sp/>0;<sp/>xx<sp/>&lt;<sp/>mid.width;<sp/>++xx,<sp/>++correctedX)</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inFisheye<sp/>=<sp/>zoomInfo.<ref refid="class_zoom_info_1a58a0384edf7d035b5be58f6b0b25bdb5" kindref="member">InFisheye</ref>(xx,<sp/>-leftOffset);</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uncached<sp/>=</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inFisheye<sp/>?<sp/>&amp;specCache.<ref refid="class_spec_cache_1ad51fc14ddf41540e51b9c4f458218bfc" kindref="member">freq</ref>[(fisheyeColumn++)<sp/>*<sp/>half]<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"></highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>w0<sp/>=<sp/>w1;</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w1<sp/>=<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>(0.5<sp/>+<sp/>rate<sp/>*</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(zoomInfo.<ref refid="class_zoom_info_1aa7e0fefa3365826150c253c1ba6e4339" kindref="member">PositionToTime</ref>(xx<sp/>+<sp/>1,<sp/>-leftOffset)<sp/>-<sp/>tOffset)</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"></highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_number_scale_1_1_iterator" kindref="compound">NumberScale::Iterator</ref><sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/>numberScale.begin(mid.height);</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nextBin<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(half<sp/>-<sp/>1),<sp/>*it));</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy<sp/>=<sp/>0;<sp/>yy<sp/>&lt;<sp/>hiddenMid.height;<sp/>++yy)<sp/>{</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>nextBin;</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextBin<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(half<sp/>-<sp/>1),<sp/>*++it));</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"></highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>spectral<sp/>selection,<sp/>determine<sp/>what<sp/>colour</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>to<sp/>use.<sp/><sp/>We<sp/>use<sp/>a<sp/>darker<sp/>selection<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>both<sp/>spectral<sp/>range<sp/>and<sp/>time<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a3a1a5b4ab4055f09810d58a166f61bfe" kindref="member">AColor::ColorGradientChoice</ref><sp/>selected<sp/>=<sp/><ref refid="class_a_color_1a3a1a5b4ab4055f09810d58a166f61bfea341b5b9c96dc41728b34bd4cb7ecaf29" kindref="member">AColor::ColorGradientUnselected</ref>;</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>in<sp/>the<sp/>time<sp/>selected<sp/>range,<sp/>then<sp/>we<sp/>may<sp/>use<sp/>a<sp/>different<sp/>color<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ssel0<sp/>&lt;=<sp/>w0<sp/>&amp;&amp;<sp/>w1<sp/>&lt;<sp/>ssel1)</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected<sp/>=</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_track_artist_8cpp_1a9061a778a820c92e76932a871a267877" kindref="member">ChooseColorSet</ref>(bin,<sp/>nextBin,<sp/>selBinLo,<sp/>selBinCenter,<sp/>selBinHi,</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(xx<sp/>+<sp/>leftOffset<sp/>-<sp/>hiddenLeftOffset)<sp/>/<sp/>DASH_LENGTH,<sp/>isSpectral);</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>uncached</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>findValue(uncached,<sp/>bin,<sp/>nextBin,<sp/>half,<sp/>autocorrelation,<sp/>gain,<sp/>range)</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>clip-&gt;<ref refid="class_wave_clip_1abf840b95c4ee482e9077f274e329a0d2" kindref="member">mSpecPxCache</ref>-&gt;<ref refid="class_spec_px_cache_1a0c3a4884f54b874887d4051c1917a8e8" kindref="member">values</ref>[correctedX<sp/>*<sp/>hiddenMid.height<sp/>+<sp/>yy];</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>rv,<sp/>gv,<sp/>bv;</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_color_8h_1a0fe4b1a08d7994dfe1c28e972a3b2e2a" kindref="member">GetColorGradient</ref>(value,<sp/>selected,<sp/>isGrayscale,<sp/>&amp;rv,<sp/>&amp;gv,<sp/>&amp;bv);</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"></highlight></codeline>
<codeline lineno="2462"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_FFT_Y_GRID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fftYGrid<sp/>&amp;&amp;<sp/>yGrid[yy])<sp/>{</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>/=<sp/>1.1f;</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gv<sp/>/=<sp/>1.1f;</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bv<sp/>/=<sp/>1.1f;</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//EXPERIMENTAL_FFT_Y_GRID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2469"><highlight class="normal"></highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>px<sp/>=<sp/>((mid.height<sp/>-<sp/>1<sp/>-<sp/>yy)<sp/>*<sp/>mid.width<sp/>+<sp/>xx)<sp/>*<sp/>3;</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[px++]<sp/>=<sp/>rv;</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[px++]<sp/>=<sp/>gv;</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[px]<sp/>=<sp/>bv;</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>each<sp/>yy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>each<sp/>xx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2476"><highlight class="normal"></highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/>wxBitmap<sp/>converted<sp/>=<sp/>wxBitmap(image);</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"></highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/>wxMemoryDC<sp/>memDC;</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"></highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/>memDC.SelectObject(converted);</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"></highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/>dc.Blit(mid.x,<sp/>mid.y,<sp/>mid.width,<sp/>mid.height,<sp/>&amp;memDC,<sp/>0,<sp/>0,<sp/>wxCOPY,<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_FFT_Y_GRID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>yGrid;</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//EXPERIMENTAL_FFT_Y_GRID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2492"><highlight class="comment">Note:<sp/>recall<sp/>that<sp/>Allegro<sp/>attributes<sp/>end<sp/>in<sp/>a<sp/>type<sp/>identifying<sp/>letter.</highlight></codeline>
<codeline lineno="2493"><highlight class="comment"></highlight></codeline>
<codeline lineno="2494"><highlight class="comment">In<sp/>addition<sp/>to<sp/>standard<sp/>notes,<sp/>an<sp/>Allegro_Note<sp/>can<sp/>denote<sp/>a<sp/>graphic.</highlight></codeline>
<codeline lineno="2495"><highlight class="comment">A<sp/>graphic<sp/>is<sp/>a<sp/>note<sp/>with<sp/>a<sp/>loud<sp/>of<sp/>zero<sp/>(for<sp/>quick<sp/>testing)<sp/>and<sp/>an</highlight></codeline>
<codeline lineno="2496"><highlight class="comment">attribute<sp/>named<sp/>&quot;shapea&quot;<sp/>set<sp/>to<sp/>one<sp/>of<sp/>the<sp/>following<sp/>atoms:</highlight></codeline>
<codeline lineno="2497"><highlight class="comment"><sp/><sp/><sp/><sp/>line</highlight></codeline>
<codeline lineno="2498"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>(time,<sp/>pitch)<sp/>to<sp/>(time+dur,<sp/>y1r),<sp/>where<sp/>y1r<sp/>is<sp/>an</highlight></codeline>
<codeline lineno="2499"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribute</highlight></codeline>
<codeline lineno="2500"><highlight class="comment"><sp/><sp/><sp/><sp/>rectangle</highlight></codeline>
<codeline lineno="2501"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>(time,<sp/>pitch)<sp/>to<sp/>(time+dur,<sp/>y1r),<sp/>where<sp/>y1r<sp/>is<sp/>an</highlight></codeline>
<codeline lineno="2502"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribute</highlight></codeline>
<codeline lineno="2503"><highlight class="comment"><sp/><sp/><sp/><sp/>triangle</highlight></codeline>
<codeline lineno="2504"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coordinates<sp/>are<sp/>(time,<sp/>pitch),<sp/>(x1r,<sp/>y1r),<sp/>(x2r,<sp/>y2r)</highlight></codeline>
<codeline lineno="2505"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dur<sp/>must<sp/>be<sp/>the<sp/>max<sp/>of<sp/>x1r-time,<sp/>x2r-time</highlight></codeline>
<codeline lineno="2506"><highlight class="comment"><sp/><sp/><sp/><sp/>polygon</highlight></codeline>
<codeline lineno="2507"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coordinates<sp/>are<sp/>(time,<sp/>pitch),<sp/>(x1r,<sp/>y1r),<sp/>(x2r,<sp/>y2r),</highlight></codeline>
<codeline lineno="2508"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x3r,<sp/>y3r),<sp/>...<sp/>are<sp/>coordinates<sp/>(since<sp/>we<sp/>cannot<sp/>represent</highlight></codeline>
<codeline lineno="2509"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arrays<sp/>as<sp/>attribute<sp/>values,<sp/>we<sp/>just<sp/>generate<sp/>as<sp/>many</highlight></codeline>
<codeline lineno="2510"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribute<sp/>names<sp/>as<sp/>we<sp/>need)</highlight></codeline>
<codeline lineno="2511"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dur<sp/>must<sp/>be<sp/>the<sp/>max<sp/>of<sp/>xNr-time<sp/>for<sp/>all<sp/>N</highlight></codeline>
<codeline lineno="2512"><highlight class="comment"><sp/><sp/><sp/><sp/>oval</highlight></codeline>
<codeline lineno="2513"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>similar<sp/>to<sp/>rectangle</highlight></codeline>
<codeline lineno="2514"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Note:<sp/>this<sp/>oval<sp/>has<sp/>horizontal<sp/>and<sp/>vertical<sp/>axes<sp/>only</highlight></codeline>
<codeline lineno="2515"><highlight class="comment"><sp/><sp/><sp/><sp/>text</highlight></codeline>
<codeline lineno="2516"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawn<sp/>at<sp/>(time,<sp/>pitch)</highlight></codeline>
<codeline lineno="2517"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duration<sp/>should<sp/>be<sp/>zero<sp/>(text<sp/>is<sp/>clipped<sp/>based<sp/>on<sp/>time<sp/>and<sp/>duration,</highlight></codeline>
<codeline lineno="2518"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NOT<sp/>based<sp/>on<sp/>actual<sp/>coordinates)</highlight></codeline>
<codeline lineno="2519"><highlight class="comment"></highlight></codeline>
<codeline lineno="2520"><highlight class="comment">and<sp/>optional<sp/>attributes<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="2521"><highlight class="comment"><sp/><sp/><sp/><sp/>linecolori<sp/>is<sp/>0x00rrggbb<sp/>format<sp/>color<sp/>for<sp/>line<sp/>or<sp/>text<sp/>foreground</highlight></codeline>
<codeline lineno="2522"><highlight class="comment"><sp/><sp/><sp/><sp/>fillcolori<sp/>is<sp/>0x00rrggbb<sp/>format<sp/>color<sp/>for<sp/>fill<sp/>or<sp/>text<sp/>background</highlight></codeline>
<codeline lineno="2523"><highlight class="comment"><sp/><sp/><sp/><sp/>linethicki<sp/>is<sp/>line<sp/>thickness<sp/>in<sp/>pixels,<sp/>0<sp/>for<sp/>no<sp/>line</highlight></codeline>
<codeline lineno="2524"><highlight class="comment"><sp/><sp/><sp/><sp/>filll<sp/>is<sp/>true<sp/>to<sp/>fill<sp/>rectangle<sp/>or<sp/>draw<sp/>text<sp/>background<sp/>(default<sp/>is<sp/>false)</highlight></codeline>
<codeline lineno="2525"><highlight class="comment"><sp/><sp/><sp/><sp/>fonta<sp/>is<sp/>one<sp/>of<sp/>[&apos;roman&apos;,<sp/>&apos;swiss&apos;,<sp/>&apos;modern&apos;]<sp/>(font,<sp/>otherwise<sp/>use<sp/>default)</highlight></codeline>
<codeline lineno="2526"><highlight class="comment"><sp/><sp/><sp/><sp/>weighta<sp/>may<sp/>be<sp/>&apos;bold&apos;<sp/>(font)<sp/>(default<sp/>is<sp/>normal)</highlight></codeline>
<codeline lineno="2527"><highlight class="comment"><sp/><sp/><sp/><sp/>sizei<sp/>is<sp/>font<sp/>size<sp/>(default<sp/>is<sp/>8)</highlight></codeline>
<codeline lineno="2528"><highlight class="comment"><sp/><sp/><sp/><sp/>justifys<sp/>is<sp/>a<sp/>string<sp/>containing<sp/>two<sp/>letters,<sp/>a<sp/>horizontal<sp/>code<sp/>and<sp/>a</highlight></codeline>
<codeline lineno="2529"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>vertical<sp/>code.<sp/>The<sp/>horizontal<sp/>code<sp/>is<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="2530"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l:<sp/>the<sp/>coordinate<sp/>is<sp/>to<sp/>the<sp/>left<sp/>of<sp/>the<sp/>string<sp/>(default)</highlight></codeline>
<codeline lineno="2531"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c:<sp/>the<sp/>coordinate<sp/>is<sp/>at<sp/>the<sp/>center<sp/>of<sp/>the<sp/>string</highlight></codeline>
<codeline lineno="2532"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r:<sp/>the<sp/>coordinate<sp/>is<sp/>at<sp/>the<sp/>right<sp/>of<sp/>the<sp/>string</highlight></codeline>
<codeline lineno="2533"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>vertical<sp/>code<sp/>is<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="2534"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t:<sp/>the<sp/>coordinate<sp/>is<sp/>at<sp/>the<sp/>top<sp/>of<sp/>the<sp/>string</highlight></codeline>
<codeline lineno="2535"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c:<sp/>the<sp/>coordinate<sp/>is<sp/>at<sp/>the<sp/>center<sp/>of<sp/>the<sp/>string</highlight></codeline>
<codeline lineno="2536"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b:<sp/>the<sp/>coordinate<sp/>is<sp/>at<sp/>the<sp/>bottom<sp/>of<sp/>the<sp/>string</highlight></codeline>
<codeline lineno="2537"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d:<sp/>the<sp/>coordinate<sp/>is<sp/>at<sp/>the<sp/>baseline<sp/>of<sp/>the<sp/>string<sp/>(default)</highlight></codeline>
<codeline lineno="2538"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Thus,<sp/>-justifys:&quot;lt&quot;<sp/>places<sp/>the<sp/>left<sp/>top<sp/>of<sp/>the<sp/>string<sp/>at<sp/>the<sp/>point</highlight></codeline>
<codeline lineno="2539"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>given<sp/>by<sp/>(pitch,<sp/>time).<sp/>The<sp/>default<sp/>value<sp/>is<sp/>&quot;ld&quot;.</highlight></codeline>
<codeline lineno="2540"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2541"><highlight class="normal"></highlight></codeline>
<codeline lineno="2542"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Declare<sp/>Static<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2543"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*IsShape(<ref refid="class_alg__note" kindref="compound">Alg_note_ptr</ref><sp/><ref refid="handlers_8c_1a82c195c0687005edfeb733c7b5887c33" kindref="member">note</ref>);</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>LookupRealAttribute(<ref refid="class_alg__note" kindref="compound">Alg_note_ptr</ref><sp/>note,<sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>attr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>def);</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>LookupIntAttribute(<ref refid="class_alg__note" kindref="compound">Alg_note_ptr</ref><sp/>note,<sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>attr,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>def);</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>LookupLogicalAttribute(<ref refid="class_alg__note" kindref="compound">Alg_note_ptr</ref><sp/>note,<sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>attr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>def);</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*LookupStringAttribute(<ref refid="class_alg__note" kindref="compound">Alg_note_ptr</ref><sp/>note,<sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>attr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*def);</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*LookupAtomAttribute(<ref refid="class_alg__note" kindref="compound">Alg_note_ptr</ref><sp/>note,<sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>attr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*def);</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"></highlight><highlight class="comment">//static<sp/>int<sp/>PITCH_TO_Y(double<sp/>p,<sp/>int<sp/>bottom);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2550"><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>NULL<sp/>if<sp/>note<sp/>is<sp/>not<sp/>a<sp/>shape,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2552"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>atom<sp/>(string)<sp/>value<sp/>of<sp/>note<sp/>if<sp/>note<sp/>is<sp/>a<sp/>shape</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2553"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*IsShape(<ref refid="class_alg__note" kindref="compound">Alg_note_ptr</ref><sp/>note)</highlight></codeline>
<codeline lineno="2554"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><ref refid="allegro_8h_1a7367c3f1b2c307bcda6aed01bf8511fa" kindref="member">Alg_parameters_ptr</ref><sp/>parameters<sp/>=<sp/>note-&gt;<ref refid="class_alg__note_1ae70e47b4c5fb53e7f90a4fdc0f132d0e" kindref="member">parameters</ref>;</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(parameters)<sp/>{</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(parameters-&gt;parm.attr_name(),<sp/></highlight><highlight class="stringliteral">&quot;shapea&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parameters-&gt;parm.a;</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/>parameters<sp/>=<sp/>parameters-&gt;next;</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"></highlight></codeline>
<codeline lineno="2565"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>value<sp/>of<sp/>attr,<sp/>or<sp/>default<sp/>if<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2566"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>LookupRealAttribute(<ref refid="class_alg__note" kindref="compound">Alg_note_ptr</ref><sp/>note,<sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>attr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>def)</highlight></codeline>
<codeline lineno="2567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><ref refid="allegro_8h_1a7367c3f1b2c307bcda6aed01bf8511fa" kindref="member">Alg_parameters_ptr</ref><sp/>parameters<sp/>=<sp/>note-&gt;<ref refid="class_alg__note_1ae70e47b4c5fb53e7f90a4fdc0f132d0e" kindref="member">parameters</ref>;</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(parameters)<sp/>{</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parameters-&gt;parm.attr_name()<sp/>==<sp/>attr<sp/>+<sp/>1<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameters-&gt;parm.attr_type()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parameters-&gt;parm.r;</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/>parameters<sp/>=<sp/>parameters-&gt;next;</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>def;</highlight></codeline>
<codeline lineno="2577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"></highlight></codeline>
<codeline lineno="2579"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>value<sp/>of<sp/>attr,<sp/>or<sp/>default<sp/>if<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2580"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>LookupIntAttribute(<ref refid="class_alg__note" kindref="compound">Alg_note_ptr</ref><sp/>note,<sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>attr,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>def)</highlight></codeline>
<codeline lineno="2581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><ref refid="allegro_8h_1a7367c3f1b2c307bcda6aed01bf8511fa" kindref="member">Alg_parameters_ptr</ref><sp/>parameters<sp/>=<sp/>note-&gt;<ref refid="class_alg__note_1ae70e47b4c5fb53e7f90a4fdc0f132d0e" kindref="member">parameters</ref>;</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(parameters)<sp/>{</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parameters-&gt;parm.attr_name()<sp/>==<sp/>attr<sp/>+<sp/>1<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameters-&gt;parm.attr_type()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parameters-&gt;parm.i;</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/>parameters<sp/>=<sp/>parameters-&gt;next;</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>def;</highlight></codeline>
<codeline lineno="2591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>value<sp/>of<sp/>attr,<sp/>or<sp/>default<sp/>if<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2594"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>LookupLogicalAttribute(<ref refid="class_alg__note" kindref="compound">Alg_note_ptr</ref><sp/>note,<sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>attr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>def)</highlight></codeline>
<codeline lineno="2595"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><ref refid="allegro_8h_1a7367c3f1b2c307bcda6aed01bf8511fa" kindref="member">Alg_parameters_ptr</ref><sp/>parameters<sp/>=<sp/>note-&gt;<ref refid="class_alg__note_1ae70e47b4c5fb53e7f90a4fdc0f132d0e" kindref="member">parameters</ref>;</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(parameters)<sp/>{</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parameters-&gt;parm.attr_name()<sp/>==<sp/>attr<sp/>+<sp/>1<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameters-&gt;parm.attr_type()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parameters-&gt;parm.l;</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/>parameters<sp/>=<sp/>parameters-&gt;next;</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>def;</highlight></codeline>
<codeline lineno="2605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"></highlight></codeline>
<codeline lineno="2607"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>value<sp/>of<sp/>attr,<sp/>or<sp/>default<sp/>if<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*LookupStringAttribute(<ref refid="class_alg__note" kindref="compound">Alg_note_ptr</ref><sp/>note,<sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>attr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*def)</highlight></codeline>
<codeline lineno="2609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><ref refid="allegro_8h_1a7367c3f1b2c307bcda6aed01bf8511fa" kindref="member">Alg_parameters_ptr</ref><sp/>parameters<sp/>=<sp/>note-&gt;<ref refid="class_alg__note_1ae70e47b4c5fb53e7f90a4fdc0f132d0e" kindref="member">parameters</ref>;</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(parameters)<sp/>{</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parameters-&gt;parm.attr_name()<sp/>==<sp/>attr<sp/>+<sp/>1<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameters-&gt;parm.attr_type()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parameters-&gt;parm.s;</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/>parameters<sp/>=<sp/>parameters-&gt;next;</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>def;</highlight></codeline>
<codeline lineno="2619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"></highlight></codeline>
<codeline lineno="2621"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>value<sp/>of<sp/>attr,<sp/>or<sp/>default<sp/>if<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2622"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*LookupAtomAttribute(<ref refid="class_alg__note" kindref="compound">Alg_note_ptr</ref><sp/>note,<sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>attr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*def)</highlight></codeline>
<codeline lineno="2623"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><ref refid="allegro_8h_1a7367c3f1b2c307bcda6aed01bf8511fa" kindref="member">Alg_parameters_ptr</ref><sp/>parameters<sp/>=<sp/>note-&gt;<ref refid="class_alg__note_1ae70e47b4c5fb53e7f90a4fdc0f132d0e" kindref="member">parameters</ref>;</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(parameters)<sp/>{</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parameters-&gt;parm.attr_name()<sp/>==<sp/>attr<sp/>+<sp/>1<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameters-&gt;parm.attr_type()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parameters-&gt;parm.s;</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/>parameters<sp/>=<sp/>parameters-&gt;next;</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>def;</highlight></codeline>
<codeline lineno="2633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"></highlight></codeline>
<codeline lineno="2635"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TIME_TO_X(t)<sp/>(zoomInfo.TimeToPosition((t),<sp/>rect.x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2636"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X_TO_TIME(xx)<sp/>(zoomInfo.PositionToTime((xx),<sp/>rect.x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2637"><highlight class="normal"></highlight></codeline>
<codeline lineno="2638"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CLIP(x)<sp/>changes<sp/>x<sp/>to<sp/>lie<sp/>between<sp/>+/-<sp/>CLIP_MAX<sp/>due<sp/>to<sp/>graphics<sp/>display<sp/>problems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2639"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>with<sp/>very<sp/>large<sp/>coordinate<sp/>values<sp/>(this<sp/>happens<sp/>when<sp/>you<sp/>zoom<sp/>in<sp/>very<sp/>far)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2640"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>will<sp/>cause<sp/>incorrect<sp/>things<sp/>to<sp/>be<sp/>displayed,<sp/>but<sp/>at<sp/>these<sp/>levels<sp/>of<sp/>zoom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2641"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>you<sp/>will<sp/>only<sp/>see<sp/>a<sp/>small<sp/>fraction<sp/>of<sp/>the<sp/>overall<sp/>shape.<sp/>Note<sp/>that<sp/>rectangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2642"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>and<sp/>lines<sp/>are<sp/>clipped<sp/>in<sp/>a<sp/>way<sp/>that<sp/>preserves<sp/>correct<sp/>graphics,<sp/>so<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2643"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>particular,<sp/>line<sp/>plots<sp/>will<sp/>be<sp/>correct<sp/>at<sp/>any<sp/>zoom<sp/>(limited<sp/>by<sp/>floating<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2644"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>precision).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2645"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLIP_MAX<sp/>16000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLIP(xx)<sp/>{<sp/>long<sp/>c<sp/>=<sp/>(xx);<sp/>if<sp/>(c<sp/>&lt;<sp/>-CLIP_MAX)<sp/>c<sp/>=<sp/>-CLIP_MAX;<sp/>\</highlight></codeline>
<codeline lineno="2647"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(c<sp/>&gt;<sp/>CLIP_MAX)<sp/>c<sp/>=<sp/>CLIP_MAX;<sp/>(xx)<sp/>=<sp/>c;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2648"><highlight class="normal"></highlight></codeline>
<codeline lineno="2649"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RED(i)<sp/>(<sp/>unsigned<sp/>char<sp/>)(<sp/>(((i)<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xff)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2650"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GREEN(i)<sp/>(<sp/>unsigned<sp/>char<sp/>)(<sp/>(((i)<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2651"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BLUE(i)<sp/>(<sp/>unsigned<sp/>char<sp/>)(<sp/>((i)<sp/>&amp;<sp/>0xff)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2652"><highlight class="normal"></highlight></codeline>
<codeline lineno="2653"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>PITCH_TO_Y(p)<sp/>(rect.y<sp/>+<sp/>rect.height<sp/>-<sp/>int(pitchht<sp/>*<sp/>((p)<sp/>+<sp/>0.5<sp/>-<sp/>pitch0)<sp/>+<sp/>0.5))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2654"><highlight class="normal"></highlight></codeline>
<codeline lineno="2655"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2656"><highlight class="comment">int<sp/>PitchToY(double<sp/>p,<sp/>int<sp/>bottom)</highlight></codeline>
<codeline lineno="2657"><highlight class="comment">{</highlight></codeline>
<codeline lineno="2658"><highlight class="comment"><sp/><sp/><sp/>int<sp/>octave<sp/>=<sp/>(((int)<sp/>(p<sp/>+<sp/>0.5))<sp/>/<sp/>12);</highlight></codeline>
<codeline lineno="2659"><highlight class="comment"><sp/><sp/><sp/>int<sp/>n<sp/>=<sp/>((int)<sp/>(p<sp/>+<sp/>0.5))<sp/>%<sp/>12;</highlight></codeline>
<codeline lineno="2660"><highlight class="comment"></highlight></codeline>
<codeline lineno="2661"><highlight class="comment"><sp/><sp/><sp/>return<sp/>IPITCH_TO_Y((int)<sp/>(p<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="2662"><highlight class="comment"><sp/><sp/><sp/>//<sp/>was:<sp/>bottom<sp/>-<sp/>octave<sp/>*<sp/>octaveHeight<sp/>-<sp/>notePos[n]<sp/>-<sp/>4;</highlight></codeline>
<codeline lineno="2663"><highlight class="comment">}</highlight></codeline>
<codeline lineno="2664"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2665"><highlight class="normal"></highlight></codeline>
<codeline lineno="2666"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>DrawNoteBackground<sp/>is<sp/>called<sp/>by<sp/>DrawNoteTrack<sp/>twice:<sp/>once<sp/>to<sp/>draw</highlight></codeline>
<codeline lineno="2667"><highlight class="comment"><sp/><sp/><sp/>the<sp/>unselected<sp/>background,<sp/>and<sp/>once<sp/>to<sp/>draw<sp/>the<sp/>selected<sp/>background.</highlight></codeline>
<codeline lineno="2668"><highlight class="comment"><sp/><sp/><sp/>The<sp/>selected<sp/>background<sp/>is<sp/>the<sp/>same<sp/>except<sp/>for<sp/>the<sp/>horizontal<sp/>range</highlight></codeline>
<codeline lineno="2669"><highlight class="comment"><sp/><sp/><sp/>and<sp/>the<sp/>colors.<sp/>The<sp/>background<sp/>rectangle<sp/>region<sp/>is<sp/>given<sp/>by<sp/>rect;<sp/>the</highlight></codeline>
<codeline lineno="2670"><highlight class="comment"><sp/><sp/><sp/>selected<sp/>region<sp/>is<sp/>given<sp/>by<sp/>sel.<sp/>The<sp/>first<sp/>time<sp/>this<sp/>is<sp/>called,</highlight></codeline>
<codeline lineno="2671"><highlight class="comment"><sp/><sp/><sp/>sel<sp/>is<sp/>equal<sp/>to<sp/>rect,<sp/>and<sp/>the<sp/>entire<sp/>region<sp/>is<sp/>drawn<sp/>with<sp/>unselected</highlight></codeline>
<codeline lineno="2672"><highlight class="comment"><sp/><sp/><sp/>background<sp/>colors.</highlight></codeline>
<codeline lineno="2673"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2674"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrackArtist::DrawNoteBackground(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_note_track" kindref="compound">NoteTrack</ref><sp/>*track,<sp/>wxDC<sp/>&amp;dc,</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;rect,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;sel,</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo,</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxBrush<sp/>&amp;wb,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxPen<sp/>&amp;wp,</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxBrush<sp/>&amp;bb,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxPen<sp/>&amp;bp,</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxPen<sp/>&amp;mp)</highlight></codeline>
<codeline lineno="2680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/>dc.SetBrush(wb);</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/>dc.SetPen(wp);</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/>dc.DrawRectangle(sel);<sp/></highlight><highlight class="comment">//<sp/>fill<sp/>rectangle<sp/>with<sp/>white<sp/>keys<sp/>background</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2684"><highlight class="normal"></highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>TIME_TO_X(track-&gt;GetOffset());</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left<sp/>&lt;<sp/>sel.x)<sp/>left<sp/>=<sp/>sel.x;<sp/></highlight><highlight class="comment">//<sp/>clip<sp/>on<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2687"><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right<sp/>=<sp/>TIME_TO_X(track-&gt;GetOffset()<sp/>+<sp/>track-&gt;mSeq-&gt;get_real_dur());</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right<sp/>&gt;<sp/>sel.x<sp/>+<sp/>sel.width)<sp/>right<sp/>=<sp/>sel.x<sp/>+<sp/>sel.width;<sp/></highlight><highlight class="comment">//<sp/>clip<sp/>on<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"></highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>overlap<sp/>between<sp/>MIDI<sp/>data<sp/>and<sp/>the<sp/>background<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left<sp/>&gt;=<sp/>right)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"></highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/>dc.SetBrush(bb);</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>octave<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>obottom<sp/>is<sp/>the<sp/>window<sp/>coordinate<sp/>of<sp/>octave<sp/>divider<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>obottom<sp/>=<sp/>track-&gt;GetOctaveBottom(octave);</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eOffset<sp/>is<sp/>for<sp/>the<sp/>line<sp/>between<sp/>E<sp/>and<sp/>F;<sp/>there&apos;s<sp/>another<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>between<sp/>B<sp/>and<sp/>C,<sp/>hence<sp/>the<sp/>offset<sp/>of<sp/>2<sp/>for<sp/>two<sp/>line<sp/>thicknesses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eOffset<sp/>=<sp/>track-&gt;GetPitchHeight()<sp/>*<sp/>5<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(obottom<sp/>&gt;<sp/>rect.y<sp/>+<sp/>track-&gt;GetNoteMargin()<sp/>+<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>a<sp/>black<sp/>line<sp/>separating<sp/>octaves<sp/>if<sp/>this<sp/>octave<sp/>botton<sp/>is<sp/>visible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obottom<sp/>&lt;<sp/>rect.y<sp/>+<sp/>rect.height<sp/>-<sp/>track-&gt;GetNoteMargin())<sp/>{</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(*wxBLACK_PEN);</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>obottom<sp/>-<sp/>1<sp/>because<sp/>obottom<sp/>is<sp/>at<sp/>the<sp/>bottom<sp/>of<sp/>the<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>left,<sp/>obottom<sp/>-<sp/>1,<sp/>right,<sp/>obottom<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(bp);</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>a<sp/>black-key<sp/>stripe<sp/>colored<sp/>line<sp/>separating<sp/>E<sp/>and<sp/>F<sp/>if<sp/>visible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obottom<sp/>-<sp/>eOffset<sp/>&gt;<sp/>rect.y<sp/>&amp;&amp;<sp/>obottom<sp/>-<sp/>eOffset<sp/>&lt;<sp/>rect.y<sp/>+<sp/>rect.height)<sp/>{</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>left,<sp/>obottom<sp/>-<sp/>eOffset,</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right,<sp/>obottom<sp/>-<sp/>eOffset);</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"></highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>visible<sp/>black<sp/>key<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>br;</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>br.x<sp/>=<sp/>left;</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>br.width<sp/>=<sp/>right<sp/>-<sp/>left;</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>br.height<sp/>=<sp/>track-&gt;GetPitchHeight();</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>black<sp/>=<sp/>0;<sp/>black<sp/>&lt;<sp/>5;<sp/>black++)<sp/>{</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br.y<sp/>=<sp/>obottom<sp/>-<sp/>track-&gt;GetBlackPos(black);</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(br.y<sp/>&gt;<sp/>rect.y<sp/>&amp;&amp;<sp/>br.y<sp/>+<sp/>br.height<sp/>&lt;<sp/>rect.y<sp/>+<sp/>rect.height)<sp/>{</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(br);<sp/></highlight><highlight class="comment">//<sp/>draw<sp/>each<sp/>black<sp/>key<sp/>background<sp/>stripe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obottom<sp/>=<sp/>track-&gt;GetOctaveBottom(++octave);</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"></highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>bar<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1aad5a663237745add3ab7fec40d5f2c87" kindref="member">Alg_seq_ptr</ref><sp/>seq<sp/>=<sp/>track-&gt;mSeq;</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>assume<sp/>that<sp/>sliding<sp/>a<sp/>NoteTrack<sp/>around<sp/>slides<sp/>the<sp/>barlines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>along<sp/>with<sp/>the<sp/>notes.<sp/>This<sp/>means<sp/>that<sp/>when<sp/>we<sp/>write<sp/>out<sp/>a<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>Allegro<sp/>or<sp/>MIDI<sp/>without<sp/>the<sp/>offset,<sp/>we&apos;ll<sp/>need<sp/>to<sp/>insert<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>integer<sp/>number<sp/>of<sp/>measures<sp/>of<sp/>silence,<sp/>using<sp/>tempo<sp/>change<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>match<sp/>the<sp/>duration<sp/>to<sp/>the<sp/>offset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>all<sp/>time<sp/>signatures<sp/>to<sp/>generate<sp/>beat<sp/>positions<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bar<sp/>lines,<sp/>map<sp/>the<sp/>beats<sp/>to<sp/>times,<sp/>map<sp/>the<sp/>times<sp/>to<sp/>position,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>draw<sp/>the<sp/>bar<sp/>lines<sp/>that<sp/>fall<sp/>within<sp/>the<sp/>region<sp/>of<sp/>interest<sp/>(sel)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>seq-&gt;convert_to_beats();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/>dc.SetPen(mp);</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_alg__time__sigs" kindref="compound">Alg_time_sigs</ref><sp/>&amp;sigs<sp/>=<sp/>seq-&gt;time_sig;</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>index<sp/>into<sp/>ts[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>next_bar_beat<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beats_per_measure<sp/>=<sp/>4.0;</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>sigs.<ref refid="class_alg__time__sigs_1ab4caa20f4b1dc6f3c9d72d30a72ea1fa" kindref="member">length</ref>()<sp/>&amp;&amp;<sp/>sigs[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].beat<sp/>&lt;<sp/>next_bar_beat<sp/>+<sp/><ref refid="allegro_8h_1ad0b977172262373d5dc58a536e52f4b5" kindref="member">ALG_EPS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NEW<sp/>time<sp/>signature<sp/>takes<sp/>effect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alg__time__sig" kindref="compound">Alg_time_sig</ref><sp/>&amp;sig<sp/>=<sp/>sigs[i++];</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_bar_beat<sp/>=<sp/>sig.<ref refid="class_alg__time__sig_1a6934cb96babb7728fb421236186d7fc1" kindref="member">beat</ref>;</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beats_per_measure<sp/>=<sp/>(sig.<ref refid="class_alg__time__sig_1a79476aacf5e3138f24ee80f56d6fc580" kindref="member">num</ref><sp/>*<sp/>4.0)<sp/>/<sp/>sig.<ref refid="class_alg__time__sig_1aff9848a9e6b557a01048ca0cffb9edef" kindref="member">den</ref>;</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>map<sp/>beat<sp/>to<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>seq-&gt;get_time_map()-&gt;beat_to_time(next_bar_beat);</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>map<sp/>time<sp/>to<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xx<sp/>=<sp/>TIME_TO_X(t<sp/>+<sp/>track-&gt;GetOffset());</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xx<sp/>&gt;<sp/>right)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>xx,<sp/>sel.y,<sp/>xx,<sp/>sel.y<sp/>+<sp/>sel.height);</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next_bar_beat<sp/>+=<sp/>beats_per_measure;</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2760"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"></highlight></codeline>
<codeline lineno="2762"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>DrawNoteTrack:</highlight></codeline>
<codeline lineno="2763"><highlight class="comment">Draws<sp/>a<sp/>piano-roll<sp/>style<sp/>display<sp/>of<sp/>sequence<sp/>data<sp/>with<sp/>added</highlight></codeline>
<codeline lineno="2764"><highlight class="comment">graphics.<sp/>Since<sp/>there<sp/>may<sp/>be<sp/>notes<sp/>outside<sp/>of<sp/>the<sp/>display<sp/>region,</highlight></codeline>
<codeline lineno="2765"><highlight class="comment">reserve<sp/>a<sp/>half-note-height<sp/>margin<sp/>at<sp/>the<sp/>top<sp/>and<sp/>bottom<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="2766"><highlight class="comment">window<sp/>and<sp/>draw<sp/>out-of-bounds<sp/>notes<sp/>here<sp/>instead.</highlight></codeline>
<codeline lineno="2767"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2768"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrackArtist::DrawNoteTrack(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_note_track" kindref="compound">NoteTrack</ref><sp/>*track,</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxDC<sp/>&amp;<sp/>dc,</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;<sp/>rect,</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>&amp;selectedRegion,</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo,</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>muted)</highlight></codeline>
<codeline lineno="2774"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><ref refid="_note_track_8h_1a7af15a91cee17af51fbff3cdf6bafdee" kindref="member">SonifyBeginNoteBackground</ref>();</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sel0<sp/>=<sp/>selectedRegion.<ref refid="class_selected_region_1a699851ec9e5a209be86f552f0826687d" kindref="member">t0</ref>();</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sel1<sp/>=<sp/>selectedRegion.<ref refid="class_selected_region_1aec8e1688714de8fb218d0cf0188360d6" kindref="member">t1</ref>();</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"></highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>X_TO_TIME(rect.x);</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>h1<sp/>=<sp/>X_TO_TIME(rect.x<sp/>+<sp/>rect.width);</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"></highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1aad5a663237745add3ab7fec40d5f2c87" kindref="member">Alg_seq_ptr</ref><sp/>seq<sp/>=<sp/>track-&gt;mSeq;</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!seq)<sp/>{</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(track-&gt;mSerializationBuffer);</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>JKC:<sp/>Previously<sp/>this<sp/>indirected<sp/>via<sp/>seq-&gt;,<sp/>a<sp/>NULL<sp/>pointer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>was<sp/>actually<sp/>OK,<sp/>since<sp/>unserialize<sp/>is<sp/>a<sp/>static<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Alg_seq::<sp/>is<sp/>clearer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alg__track" kindref="compound">Alg_track_ptr</ref><sp/>alg_track<sp/>=<sp/><ref refid="class_alg__track_1a2917672177e913ffff409624792e52d4" kindref="member">Alg_seq::unserialize</ref>(track-&gt;mSerializationBuffer,</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>track-&gt;mSerializationLength);</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(alg_track-&gt;<ref refid="class_alg__event__list_1aed21c54de575437ce6a60625ac6a8cc2" kindref="member">get_type</ref>()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_note_track" kindref="compound">NoteTrack</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(track)-&gt;mSeq<sp/>=<sp/>seq<sp/>=<sp/>(<ref refid="allegro_8h_1aad5a663237745add3ab7fec40d5f2c87" kindref="member">Alg_seq_ptr</ref>)<sp/>alg_track;</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(track-&gt;mSerializationBuffer);</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>track-&gt;mSerializationBuffer<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(seq);</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>visibleChannels<sp/>=<sp/>track-&gt;mVisibleChannels;</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"></highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!track-&gt;GetSelected())</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sel0<sp/>=<sp/>sel1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reserve<sp/>1/2<sp/>note<sp/>height<sp/>at<sp/>top<sp/>and<sp/>bottom<sp/>of<sp/>track<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>out-of-bounds<sp/>notes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPitches<sp/>=<sp/>(rect.height)<sp/>/<sp/>track-&gt;GetPitchHeight();</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numPitches<sp/>&lt;<sp/>0)<sp/>numPitches<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>cannot<sp/>be<sp/>negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2805"><highlight class="normal"></highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bottom<sp/>is<sp/>the<sp/>hypothetical<sp/>location<sp/>of<sp/>the<sp/>bottom<sp/>of<sp/>pitch<sp/>0<sp/>relative<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>top<sp/>of<sp/>the<sp/>clipping<sp/>region<sp/>rect:<sp/>rect.height<sp/>-<sp/>PITCH_HEIGHT/2<sp/>is<sp/>where<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bottomNote<sp/>is<sp/>displayed,<sp/>and<sp/>to<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>add<sp/>the<sp/>height<sp/>of<sp/>bottomNote<sp/>from<sp/>the<sp/>position<sp/>of<sp/>pitch<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/>track-&gt;PrepareIPitchToY(rect);</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"></highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Background<sp/>comes<sp/>in<sp/>6<sp/>colors:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>214,<sp/>214,214<sp/>--<sp/>unselected<sp/>white<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>192,192,192<sp/>--<sp/>unselected<sp/>black<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>170,170,170<sp/>--<sp/>unselected<sp/>bar<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>165,165,190<sp/>--<sp/>selected<sp/>white<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>148,148,170<sp/>--<sp/>selected<sp/>black<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>131,131,150<sp/>--<sp/>selected<sp/>bar<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/>wxPen<sp/>blackStripePen;</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/>blackStripePen.SetColour(192,<sp/>192,<sp/>192);</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/>wxBrush<sp/>blackStripeBrush;</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/>blackStripeBrush.SetColour(192,<sp/>192,<sp/>192);</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/>wxPen<sp/>barLinePen;</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/>barLinePen.SetColour(170,<sp/>170,<sp/>170);</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"></highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/>DrawNoteBackground(track,<sp/>dc,<sp/>rect,<sp/>rect,<sp/>zoomInfo,<sp/>blankBrush,<sp/>blankPen,</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blackStripeBrush,<sp/>blackStripePen,<sp/>barLinePen);</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"></highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/>dc.SetClippingRegion(rect);</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"></highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>selection<sp/>background</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First,<sp/>the<sp/>white<sp/>keys,<sp/>as<sp/>a<sp/>single<sp/>rectangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>other<sp/>words<sp/>fill<sp/>the<sp/>selection<sp/>area<sp/>with<sp/>selectedWhiteKeyPen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>selBG;</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/>selBG.y<sp/>=<sp/>rect.y;</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/>selBG.height<sp/>=<sp/>rect.height;</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/>selBG.x<sp/>=<sp/>TIME_TO_X(sel0);</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/>selBG.width<sp/>=<sp/>TIME_TO_X(sel1)<sp/>-<sp/>TIME_TO_X(sel0);</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"></highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/>wxPen<sp/>selectedWhiteKeyPen;</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/>selectedWhiteKeyPen.SetColour(165,<sp/>165,<sp/>190);</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/>dc.SetPen(selectedWhiteKeyPen);</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"></highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/>wxBrush<sp/>selectedWhiteKeyBrush;</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/>selectedWhiteKeyBrush.SetColour(165,<sp/>165,<sp/>190);</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then,<sp/>the<sp/>black<sp/>keys<sp/>and<sp/>octave<sp/>stripes,<sp/>as<sp/>smaller<sp/>rectangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/>wxPen<sp/>selectedBlackKeyPen;</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/>selectedBlackKeyPen.SetColour(148,<sp/>148,<sp/>170);</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/>wxBrush<sp/>selectedBlackKeyBrush;</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/>selectedBlackKeyBrush.SetColour(148,<sp/>148,<sp/>170);</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/>wxPen<sp/>selectedBarLinePen;</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/>selectedBarLinePen.SetColour(131,<sp/>131,<sp/>150);</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"></highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/>DrawNoteBackground(track,<sp/>dc,<sp/>rect,<sp/>selBG,<sp/>zoomInfo,</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selectedWhiteKeyBrush,<sp/>selectedWhiteKeyPen,</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selectedBlackKeyBrush,<sp/>selectedBlackKeyPen,</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selectedBarLinePen);</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><ref refid="_note_track_8h_1a9786c3ef2b94eedc6fe66b64a5681f74" kindref="member">SonifyEndNoteBackground</ref>();</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><ref refid="_note_track_8h_1aa89494ee94299dead423eae180285079" kindref="member">SonifyBeginNoteForeground</ref>();</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>marg<sp/>=<sp/>track-&gt;GetNoteMargin();</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"></highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>it<sp/>would<sp/>be<sp/>better<sp/>to<sp/>put<sp/>this<sp/>in<sp/>some<sp/>global<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>function<sp/>rather<sp/>than<sp/>do<sp/>lookups<sp/>every<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/><ref refid="seqread_8c_1aad9ebcdde542d8b2075615388ff15a9c" kindref="member">line</ref><sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;line&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>rectangle<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;rectangle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>triangle<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;triangle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>polygon<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;polygon&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>oval<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;oval&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>text<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>texts<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;texts&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>x1r<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;x1r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>x2r<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;x2r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>y1r<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;y1r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>y2r<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;y2r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>linecolori<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;linecolori&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>fillcolori<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;fillcolori&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>linethicki<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;linethicki&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>filll<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;filll&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>fonta<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;fonta&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>roman<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;roman&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>swiss<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;swiss&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>modern<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;modern&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>weighta<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;weighta&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>bold<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;bold&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>sizei<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;sizei&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>justifys<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(</highlight><highlight class="stringliteral">&quot;justifys&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"></highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>want<sp/>to<sp/>draw<sp/>in<sp/>seconds,<sp/>so<sp/>we<sp/>need<sp/>to<sp/>convert<sp/>to<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/>seq-&gt;convert_to_seconds();</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"></highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_alg__iterator" kindref="compound">Alg_iterator</ref><sp/>iterator(seq,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/>iterator.<ref refid="class_alg__iterator_1a59c05da591cc008ff1be195335646046" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>every<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1aeb8db009b4ffadef2e7ca0e4936f0307" kindref="member">Alg_event_ptr</ref><sp/>evt;</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>(evt<sp/>=<sp/>iterator.<ref refid="class_alg__iterator_1af175a74563cdefc967e4b568763fa818" kindref="member">next</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evt-&gt;get_type()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>&apos;n&apos;<sp/>means<sp/>a<sp/>note</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alg__note" kindref="compound">Alg_note_ptr</ref><sp/>note<sp/>=<sp/>(<ref refid="allegro_8h_1a49bc03b187e4468a764d73df4c860206" kindref="member">Alg_note_ptr</ref>)<sp/>evt;</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>note&apos;s<sp/>channel<sp/>is<sp/>visible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visibleChannels<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>(evt-&gt;chan<sp/>&amp;<sp/>15)))<sp/>{</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xx<sp/>=<sp/>note-&gt;<ref refid="class_alg__event_1a7d31289f03b355f25e0ddd4657783a13" kindref="member">time</ref><sp/>+<sp/>track-&gt;GetOffset();</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>xx<sp/>+<sp/>note-&gt;<ref refid="class_alg__note_1ae15463f6b0deca3ac1a179683dd8e6ee" kindref="member">dur</ref>;</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xx<sp/>&lt;<sp/>h1<sp/>&amp;&amp;<sp/>x1<sp/>&gt;<sp/>h)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>omit<sp/>if<sp/>outside<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*shape<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(note-&gt;<ref refid="class_alg__note_1aefa0a5b76a5747b0e95f96bc8046e199" kindref="member">loud</ref><sp/>&gt;<sp/>0.0<sp/>||<sp/>0<sp/>==<sp/>(shape<sp/>=<sp/>IsShape(note)))<sp/>{</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>nr;<sp/></highlight><highlight class="comment">//<sp/>&quot;note<sp/>rectangle&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nr.y<sp/>=<sp/>track-&gt;PitchToY(note-&gt;<ref refid="class_alg__note_1a01dc46324d580898c16fe09d2e85c424" kindref="member">pitch</ref>);</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nr.height<sp/>=<sp/>track-&gt;GetPitchHeight();</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"></highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nr.x<sp/>=<sp/>TIME_TO_X(xx);</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nr.width<sp/>=<sp/>TIME_TO_X(x1)<sp/>-<sp/>nr.x;</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"></highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nr.x<sp/>+<sp/>nr.width<sp/>&gt;=<sp/>rect.x<sp/>&amp;&amp;<sp/>nr.x<sp/>&lt;<sp/>rect.x<sp/>+<sp/>rect.width)<sp/>{</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nr.x<sp/>&lt;<sp/>rect.x)<sp/>{</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nr.width<sp/>-=<sp/>(rect.x<sp/>-<sp/>nr.x);</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nr.x<sp/>=<sp/>rect.x;</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nr.x<sp/>+<sp/>nr.width<sp/>&gt;<sp/>rect.x<sp/>+<sp/>rect.width)<sp/></highlight><highlight class="comment">//<sp/>clip<sp/>on<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nr.width<sp/>=<sp/>rect.x<sp/>+<sp/>rect.width<sp/>-<sp/>nr.x;</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"></highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nr.y<sp/>+<sp/>nr.height<sp/>&lt;<sp/>rect.y<sp/>+<sp/>marg<sp/>+<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>too<sp/>high<sp/>for<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nr.y<sp/>=<sp/>rect.y;</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nr.height<sp/>=<sp/>marg;</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetBrush(*wxBLACK_BRUSH);</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(*wxBLACK_PEN);</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(nr);</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nr.y<sp/>&gt;=<sp/>rect.y<sp/>+<sp/>rect.height<sp/>-<sp/>marg<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>too<sp/>low<sp/>for<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nr.y<sp/>=<sp/>rect.y<sp/>+<sp/>rect.height<sp/>-<sp/>marg;</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nr.height<sp/>=<sp/>marg;</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetBrush(*wxBLACK_BRUSH);</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(*wxBLACK_PEN);</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(nr);</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nr.y<sp/>+<sp/>nr.height<sp/>&gt;<sp/>rect.y<sp/>+<sp/>rect.height<sp/>-<sp/>marg)</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nr.height<sp/>=<sp/>rect.y<sp/>+<sp/>rect.height<sp/>-<sp/>nr.y;</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nr.y<sp/>&lt;<sp/>rect.y<sp/>+<sp/>marg)<sp/>{</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref><sp/>=<sp/>rect.y<sp/>+<sp/>marg<sp/>-<sp/>nr.y;</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nr.height<sp/>-=<sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nr.y<sp/>+=<sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nr.y<sp/>+=<sp/>rect.y;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(muted)</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a5cb93580edc1c0b99f1664d270695e96" kindref="member">AColor::LightMIDIChannel</ref>(&amp;dc,<sp/>note-&gt;<ref refid="class_alg__event_1aad79cff0b92503c9ad4f6fc7a6425d74" kindref="member">chan</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a9d1ba34941443e99c15a240b5aed4343" kindref="member">AColor::MIDIChannel</ref>(&amp;dc,<sp/>note-&gt;<ref refid="class_alg__event_1aad79cff0b92503c9ad4f6fc7a6425d74" kindref="member">chan</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(nr);</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(track-&gt;GetPitchHeight()<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a5cb93580edc1c0b99f1664d270695e96" kindref="member">AColor::LightMIDIChannel</ref>(&amp;dc,<sp/>note-&gt;<ref refid="class_alg__event_1aad79cff0b92503c9ad4f6fc7a6425d74" kindref="member">chan</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>nr.x,<sp/>nr.y,<sp/>nr.x<sp/>+<sp/>nr.width-2,<sp/>nr.y);</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>nr.x,<sp/>nr.y,<sp/>nr.x,<sp/>nr.y<sp/>+<sp/>nr.height-2);</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1ae549f98f5f729285ccb884367fbb7e24" kindref="member">AColor::DarkMIDIChannel</ref>(&amp;dc,<sp/>note-&gt;<ref refid="class_alg__event_1aad79cff0b92503c9ad4f6fc7a6425d74" kindref="member">chan</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>nr.x+nr.width-1,<sp/>nr.y,</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nr.x+nr.width-1,<sp/>nr.y+nr.height-1);</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>nr.x,<sp/>nr.y+nr.height-1,</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nr.x+nr.width-1,<sp/>nr.y+nr.height-1);</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape)<sp/>{</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>a<sp/>shape<sp/>according<sp/>to<sp/>attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>0.5<sp/>to<sp/>pitch<sp/>because<sp/>pitches<sp/>are<sp/>plotted<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>height<sp/>=<sp/>PITCH_HEIGHT;<sp/>thus,<sp/>the<sp/>center<sp/>is<sp/>raised</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>PITCH_HEIGHT<sp/>*<sp/>0.5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy<sp/>=<sp/>track-&gt;PitchToY(note-&gt;<ref refid="class_alg__note_1a01dc46324d580898c16fe09d2e85c424" kindref="member">pitch</ref>);</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>linecolor<sp/>=<sp/>LookupIntAttribute(note,<sp/>linecolori,<sp/>-1);</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>linethick<sp/>=<sp/>LookupIntAttribute(note,<sp/>linethicki,<sp/>1);</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>fillcolor<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>fillflag<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"></highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>default<sp/>color<sp/>to<sp/>be<sp/>that<sp/>of<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a9d1ba34941443e99c15a240b5aed4343" kindref="member">AColor::MIDIChannel</ref>(&amp;dc,<sp/>note-&gt;<ref refid="class_alg__event_1aad79cff0b92503c9ad4f6fc7a6425d74" kindref="member">chan</ref>+1);</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape<sp/>!=<sp/>text)<sp/>{</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linecolor<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(wxPen(wxColour(RED(linecolor),</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GREEN(linecolor),</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLUE(linecolor)),</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linethick,<sp/>wxSOLID));</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape<sp/>!=<sp/>line)<sp/>{</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fillcolor<sp/>=<sp/>LookupIntAttribute(note,<sp/>fillcolori,<sp/>-1);</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fillflag<sp/>=<sp/>LookupLogicalAttribute(note,<sp/>filll,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"></highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fillcolor<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetBrush(wxBrush(wxColour(RED(fillcolor),</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GREEN(fillcolor),</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLUE(fillcolor)),</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxSOLID));</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fillflag)<sp/>dc.SetBrush(*wxTRANSPARENT_BRUSH);</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y1<sp/>=<sp/>track-&gt;PitchToY(LookupRealAttribute(note,<sp/>y1r,<sp/>note-&gt;<ref refid="class_alg__note_1a01dc46324d580898c16fe09d2e85c424" kindref="member">pitch</ref>));</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape<sp/>==<sp/>line)<sp/>{</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extreme<sp/>zooms<sp/>caues<sp/>problems<sp/>under<sp/>windows,<sp/>so<sp/>we<sp/>have<sp/>to<sp/>do<sp/>some</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clipping<sp/>before<sp/>calling<sp/>display<sp/>routine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xx<sp/>&lt;<sp/>h)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>clip<sp/>line<sp/>on<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy<sp/>=<sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>((yy<sp/>+<sp/>(y1<sp/>-<sp/>yy)<sp/>*<sp/>(h<sp/>-<sp/>xx)<sp/>/<sp/>(x1<sp/>-<sp/>xx))<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1<sp/>&gt;<sp/>h1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>clip<sp/>line<sp/>on<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>((yy<sp/>+<sp/>(y1<sp/>-<sp/>yy)<sp/>*<sp/>(h1<sp/>-<sp/>xx)<sp/>/<sp/>(x1<sp/>-<sp/>xx))<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>h1;</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>TIME_TO_X(xx),<sp/>yy,<sp/>TIME_TO_X(x1),<sp/>y1);</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape<sp/>==<sp/>rectangle)<sp/>{</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xx<sp/>&lt;<sp/>h)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>clip<sp/>on<sp/>left,<sp/>leave<sp/>10<sp/>pixels<sp/>to<sp/>spare</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>X_TO_TIME(rect.x<sp/>-<sp/>(linethick<sp/>+<sp/>10));</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1<sp/>&gt;<sp/>h1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>clip<sp/>on<sp/>right,<sp/>leave<sp/>10<sp/>pixels<sp/>to<sp/>spare</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>X_TO_TIME(rect.x<sp/>+<sp/>rect.width<sp/>+<sp/>linethick<sp/>+<sp/>10);</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(TIME_TO_X(xx),<sp/>yy,<sp/>TIME_TO_X(x1)<sp/>-<sp/>TIME_TO_X(xx),<sp/>y1<sp/>-<sp/>yy<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape<sp/>==<sp/>triangle)<sp/>{</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxPoint<sp/>points[3];</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points[0].x<sp/>=<sp/>TIME_TO_X(xx);</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLIP(points[0].<ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points[0].y<sp/>=<sp/>yy;</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points[1].x<sp/>=<sp/>TIME_TO_X(LookupRealAttribute(note,<sp/>x1r,<sp/>note-&gt;<ref refid="class_alg__note_1a01dc46324d580898c16fe09d2e85c424" kindref="member">pitch</ref>));</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLIP(points[1].x);</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points[1].y<sp/>=<sp/>y1;</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points[2].x<sp/>=<sp/>TIME_TO_X(LookupRealAttribute(note,<sp/>x2r,<sp/>xx));</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLIP(points[2].x);</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points[2].y<sp/>=<sp/>track-&gt;PitchToY(LookupRealAttribute(note,<sp/>y2r,<sp/>note-&gt;<ref refid="class_alg__note_1a01dc46324d580898c16fe09d2e85c424" kindref="member">pitch</ref>));</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawPolygon(3,<sp/>points);</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape<sp/>==<sp/>polygon)<sp/>{</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxPoint<sp/>points[20];<sp/></highlight><highlight class="comment">//<sp/>upper<sp/>bound<sp/>of<sp/>20<sp/>sides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points[0].x<sp/>=<sp/>TIME_TO_X(xx);</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLIP(points[0].<ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points[0].y<sp/>=<sp/>yy;</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points[1].x<sp/>=<sp/>TIME_TO_X(LookupRealAttribute(note,<sp/>x1r,<sp/>xx));</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLIP(points[1].x);</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points[1].y<sp/>=<sp/>y1;</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points[2].x<sp/>=<sp/>TIME_TO_X(LookupRealAttribute(note,<sp/>x2r,<sp/>xx));</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLIP(points[2].x);</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points[2].y<sp/>=<sp/>track-&gt;PitchToY(LookupRealAttribute(note,<sp/>y2r,<sp/>note-&gt;<ref refid="class_alg__note_1a01dc46324d580898c16fe09d2e85c424" kindref="member">pitch</ref>));</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>20)<sp/>{</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>[8];</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(name,<sp/></highlight><highlight class="stringliteral">&quot;x%dr&quot;</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allegro_8h_1a45c52ae87418a599d8196abd30aea3bd" kindref="member">Alg_attribute</ref><sp/>attr<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(name);</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xn<sp/>=<sp/>LookupRealAttribute(note,<sp/>attr,<sp/>-1000000.0);</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xn<sp/>==<sp/>-1000000.0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points[n].x<sp/>=<sp/>TIME_TO_X(xn);</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLIP(points[n].x);</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(name,<sp/></highlight><highlight class="stringliteral">&quot;y%dr&quot;</highlight><highlight class="normal">,<sp/>n<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="allegro_8cpp_1ab525402b4ddb5625f242bd7583667ea0" kindref="member">symbol_table</ref>.<ref refid="class_alg__atoms_1a8a6735a654aff877740b8fd1abab47cb" kindref="member">insert_string</ref>(name);</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yn<sp/>=<sp/>LookupRealAttribute(note,<sp/>attr,<sp/>-1000000.0);</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yn<sp/>==<sp/>-1000000.0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points[n].y<sp/>=<sp/>track-&gt;PitchToY(yn);</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawPolygon(n,<sp/>points);</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape<sp/>==<sp/>oval)<sp/>{</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>TIME_TO_X(xx);</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLIP(ix);</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix1<sp/>=<sp/>TIME_TO_X(x1)<sp/>-<sp/>TIME_TO_X(xx);</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ix1<sp/>&gt;<sp/>CLIP_MAX<sp/>*<sp/>2)<sp/>ix1<sp/>=<sp/>CLIP_MAX<sp/>*<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>CLIP<sp/>a<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawEllipse(ix,<sp/>yy,<sp/>ix1,<sp/>y1<sp/>-<sp/>yy<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape<sp/>==<sp/>text)<sp/>{</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linecolor<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetTextForeground(wxColour(RED(linecolor),</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GREEN(linecolor),</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLUE(linecolor)));</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>no<sp/>color<sp/>specified,<sp/>copy<sp/>color<sp/>from<sp/>brush</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>dc.SetTextForeground(dc.GetBrush().GetColour());</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"></highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>seems<sp/>to<sp/>have<sp/>no<sp/>effect,<sp/>so<sp/>I<sp/>commented<sp/>it<sp/>out.<sp/>-RBD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(fillcolor<sp/>!=<sp/>-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>dc.SetTextBackground(wxColour(RED(fillcolor),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GREEN(fillcolor),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLUE(fillcolor)));</highlight></codeline>
<codeline lineno="3073"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//else<sp/>dc.SetTextBackground(dc.GetPen().GetColour());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3074"><highlight class="normal"></highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*font<sp/>=<sp/>LookupAtomAttribute(note,<sp/>fonta,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lspdata_8c_1a188f5f4011d6169f76ee43763c198076" kindref="member">weight</ref><sp/>=<sp/>LookupAtomAttribute(note,<sp/>weighta,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>=<sp/>LookupIntAttribute(note,<sp/>sizei,<sp/>8);</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*justify<sp/>=<sp/>LookupStringAttribute(note,<sp/>justifys,<sp/></highlight><highlight class="stringliteral">&quot;ld&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxFont<sp/>wxfont;</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxfont.SetFamily(font<sp/>==<sp/>roman<sp/>?<sp/>wxROMAN<sp/>:</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(font<sp/>==<sp/>swiss<sp/>?<sp/>wxSWISS<sp/>:</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(font<sp/>==<sp/>modern<sp/>?<sp/>wxMODERN<sp/>:<sp/>wxDEFAULT)));</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxfont.SetStyle(wxNORMAL);</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxfont.SetWeight(weight<sp/>==<sp/>bold<sp/>?<sp/>wxBOLD<sp/>:<sp/>wxNORMAL);</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxfont.SetPointSize(size);</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetFont(wxfont);</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"></highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>do<sp/>justification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>LookupStringAttribute(note,<sp/>texts,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxCoord<sp/>textWidth,<sp/>textHeight;</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.GetTextExtent(wxString::FromUTF8(s),<sp/>&amp;textWidth,<sp/>&amp;textHeight);</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>hoffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>voffset<sp/>=<sp/>-textHeight;<sp/></highlight><highlight class="comment">//<sp/>default<sp/>should<sp/>be<sp/>baseline<sp/>of<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3094"><highlight class="normal"></highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(justify)<sp/>!=<sp/>2)<sp/>justify<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ld&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"></highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(justify[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">)<sp/>hoffset<sp/>=<sp/>-(textWidth/2);</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(justify[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">)<sp/>hoffset<sp/>=<sp/>-textWidth;</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"></highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(justify[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">)<sp/>voffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(justify[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">)<sp/>voffset<sp/>=<sp/>-(textHeight/2);</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(justify[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">)<sp/>voffset<sp/>=<sp/>-textHeight;</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fillflag)<sp/>{</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>should<sp/>be<sp/>possible<sp/>to<sp/>do<sp/>this<sp/>with<sp/>background<sp/>color,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>maybe<sp/>because<sp/>of<sp/>the<sp/>transfer<sp/>mode,<sp/>no<sp/>background<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drawn.<sp/>To<sp/>fix<sp/>this,<sp/>just<sp/>draw<sp/>a<sp/>rectangle:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(wxPen(wxColour(RED(fillcolor),</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GREEN(fillcolor),</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLUE(fillcolor)),</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>wxSOLID));</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(TIME_TO_X(xx)<sp/>+<sp/>hoffset,<sp/>yy<sp/>+<sp/>voffset,</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textWidth,<sp/>textHeight);</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawText(<ref refid="_internat_8h_1a5ed4c8747b1c367321f0494f01dd61fa" kindref="member">LAT1CTOWX</ref>(s),<sp/>TIME_TO_X(xx)<sp/>+<sp/>hoffset,<sp/>yy<sp/>+<sp/>voffset);</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/>iterator.<ref refid="class_alg__iterator_1a92b44e65fa07d97f7f41494b06201543" kindref="member">end</ref>();</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>black<sp/>line<sp/>between<sp/>top/bottom<sp/>margins<sp/>and<sp/>the<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/>dc.SetPen(*wxBLACK_PEN);</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>rect.x,<sp/>rect.y<sp/>+<sp/>marg,<sp/>rect.x<sp/>+<sp/>rect.width,<sp/>rect.y<sp/>+<sp/>marg);</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>rect.x,<sp/>rect.y<sp/>+<sp/>rect.height<sp/>-<sp/>marg<sp/>-<sp/>1,<sp/></highlight><highlight class="comment">//<sp/>subtract<sp/>1<sp/>to<sp/>get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.x<sp/>+<sp/>rect.width,<sp/>rect.y<sp/>+<sp/>rect.height<sp/>-<sp/>marg<sp/>-<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>top<sp/>of<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3127"><highlight class="normal"></highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>track-&gt;GetOffset()<sp/>&lt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DrawNegativeOffsetTrackArrows(dc,<sp/>rect);</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"></highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/>dc.DestroyClippingRegion();</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><ref refid="_note_track_8h_1adc24f51826c5389d0d9f0a09bf904ed6" kindref="member">SonifyEndNoteForeground</ref>();</highlight></codeline>
<codeline lineno="3134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3136"><highlight class="normal"></highlight></codeline>
<codeline lineno="3137"><highlight class="normal"></highlight></codeline>
<codeline lineno="3138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrackArtist::DrawLabelTrack(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_label_track" kindref="compound">LabelTrack</ref><sp/>*track,</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxDC<sp/>&amp;<sp/>dc,</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;<sp/>rect,</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>&amp;selectedRegion,</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo)</highlight></codeline>
<codeline lineno="3143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sel0<sp/>=<sp/>selectedRegion.<ref refid="class_selected_region_1a699851ec9e5a209be86f552f0826687d" kindref="member">t0</ref>();</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sel1<sp/>=<sp/>selectedRegion.<ref refid="class_selected_region_1aec8e1688714de8fb218d0cf0188360d6" kindref="member">t1</ref>();</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"></highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!track-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>()<sp/>&amp;&amp;<sp/>!track-&gt;<ref refid="class_track_1a4b9d8ec8baa8ce94f9b9b999e324a59f" kindref="member">IsSyncLockSelected</ref>())</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sel0<sp/>=<sp/>sel1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"></highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/>track-&gt;<ref refid="class_label_track_1a8ea914e523a578a392a99373bc803797" kindref="member">Draw</ref>(dc,<sp/>rect,<sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref>(sel0,<sp/>sel1),<sp/>zoomInfo);</highlight></codeline>
<codeline lineno="3151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"></highlight></codeline>
<codeline lineno="3153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrackArtist::DrawTimeTrack(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_time_track" kindref="compound">TimeTrack</ref><sp/>*track,</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxDC<sp/>&amp;<sp/>dc,</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;<sp/>rect,</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo)</highlight></codeline>
<codeline lineno="3157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/>track-&gt;<ref refid="class_time_track_1ac15664abc03b775de3581c9b52aa8f89" kindref="member">Draw</ref>(dc,<sp/>rect,<sp/>zoomInfo);</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>envRect<sp/>=<sp/>rect;</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/>envRect.height<sp/>-=<sp/>2;</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lower<sp/>=<sp/>track-&gt;<ref refid="class_time_track_1a4b1f56611ba90a95691a0b47107e4d22" kindref="member">GetRangeLower</ref>(),<sp/>upper<sp/>=<sp/>track-&gt;<ref refid="class_time_track_1a8d16c30d6a49657b1e3125ba16a3fae8" kindref="member">GetRangeUpper</ref>();</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(track-&gt;<ref refid="class_time_track_1abae5d14db9f5a3f3ffc6c6c99278ed3a" kindref="member">GetDisplayLog</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MB:<sp/>silly<sp/>way<sp/>to<sp/>undo<sp/>the<sp/>work<sp/>of<sp/>GetWaveYPos<sp/>while<sp/>still<sp/>getting<sp/>a<sp/>logarithmic<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lower<sp/>=<sp/><ref refid="_audacity_8h_1a6dfdc8f6b4fa2e8f244f18cedb607b8e" kindref="member">LINEAR_TO_DB</ref>(<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(1.0<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>-7,<sp/>lower))<sp/>/<sp/>mdBrange<sp/>+<sp/>1.0;</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>upper<sp/>=<sp/><ref refid="_audacity_8h_1a6dfdc8f6b4fa2e8f244f18cedb607b8e" kindref="member">LINEAR_TO_DB</ref>(<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(1.0<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>-7,<sp/>upper))<sp/>/<sp/>mdBrange<sp/>+<sp/>1.0;</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/>track-&gt;<ref refid="class_time_track_1abacec6fca980b03f0bf7a4f96310704a" kindref="member">GetEnvelope</ref>()-&gt;<ref refid="class_envelope_1a4463f20563902ef78367735ea25440f4" kindref="member">DrawPoints</ref>(dc,<sp/>envRect,<sp/>zoomInfo,</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>track-&gt;<ref refid="class_time_track_1abae5d14db9f5a3f3ffc6c6c99278ed3a" kindref="member">GetDisplayLog</ref>(),<sp/>mdBrange,<sp/>lower,<sp/>upper);</highlight></codeline>
<codeline lineno="3169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"></highlight></codeline>
<codeline lineno="3171" refid="class_track_artist_1a933ebde770fbf92ac754ea68b01c55b5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_artist_1a933ebde770fbf92ac754ea68b01c55b5" kindref="member">TrackArtist::UpdatePrefs</ref>()</highlight></codeline>
<codeline lineno="3172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/>mdBrange<sp/>=<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(<ref refid="_g_u_i_settings_8h_1a0b5338253ee8f40401844a51c4b81a1e" kindref="member">ENV_DB_KEY</ref>,<sp/>mdBrange);</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/>mShowClipping<sp/>=<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/GUI/ShowClipping&quot;</highlight><highlight class="normal">),<sp/>mShowClipping);</highlight></codeline>
<codeline lineno="3175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"></highlight></codeline>
<codeline lineno="3177"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draws<sp/>the<sp/>sync-lock<sp/>bitmap,<sp/>tiled;<sp/>always<sp/>draws<sp/>stationary<sp/>relative<sp/>to<sp/>the<sp/>DC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3178"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3179"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AWD:<sp/>now<sp/>that<sp/>the<sp/>tiles<sp/>don&apos;t<sp/>link<sp/>together,<sp/>we&apos;re<sp/>drawing<sp/>a<sp/>tilted<sp/>grid,<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3180"><highlight class="normal"></highlight><highlight class="comment">//<sp/>two<sp/>steps<sp/>down<sp/>for<sp/>every<sp/>one<sp/>across.<sp/>This<sp/>creates<sp/>a<sp/>pattern<sp/>that<sp/>repeats<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3181"><highlight class="normal"></highlight><highlight class="comment">//<sp/>5-step<sp/>by<sp/>5-step<sp/>boxes.<sp/>Because<sp/>we&apos;re<sp/>only<sp/>drawing<sp/>in<sp/>5/25<sp/>possible<sp/>positions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3182"><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>a<sp/>grid<sp/>spacing<sp/>somewhat<sp/>smaller<sp/>than<sp/>the<sp/>image<sp/>dimensions.<sp/>Thus<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3183"><highlight class="normal"></highlight><highlight class="comment">//<sp/>acheive<sp/>lower<sp/>density<sp/>than<sp/>with<sp/>a<sp/>square<sp/>grid<sp/>and<sp/>eliminate<sp/>edge<sp/>cases<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3184"><highlight class="normal"></highlight><highlight class="comment">//<sp/>no<sp/>tiles<sp/>are<sp/>displayed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3185"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3186"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>pattern<sp/>draws<sp/>in<sp/>tiles<sp/>at<sp/>(0,0),<sp/>(2,1),<sp/>(4,2),<sp/>(1,3),<sp/>and<sp/>(3,4)<sp/>in<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3187"><highlight class="normal"></highlight><highlight class="comment">//<sp/>5x5<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3188"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3189"><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>may<sp/>be<sp/>a<sp/>better<sp/>way<sp/>to<sp/>do<sp/>this,<sp/>or<sp/>a<sp/>more<sp/>appealing<sp/>pattern.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3190" refid="class_track_artist_1ac1ed1e63b3e8682855f002a6696324bd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_artist_1ac1ed1e63b3e8682855f002a6696324bd" kindref="member">TrackArtist::DrawSyncLockTiles</ref>(wxDC<sp/>*dc,<sp/>wxRect<sp/>rect)</highlight></codeline>
<codeline lineno="3191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/>wxBitmap<sp/>syncLockBitmap(<ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a2243773f651603c2855bd3562801d680" kindref="member">Image</ref>(bmpSyncLockSelTile));</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"></highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Grid<sp/>spacing<sp/>is<sp/>a<sp/>bit<sp/>smaller<sp/>than<sp/>actual<sp/>image<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gridW<sp/>=<sp/>syncLockBitmap.GetWidth()<sp/>-<sp/>6;</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gridH<sp/>=<sp/>syncLockBitmap.GetHeight()<sp/>-<sp/>8;</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"></highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Horizontal<sp/>position<sp/>within<sp/>the<sp/>grid,<sp/>modulo<sp/>its<sp/>period</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockX<sp/>=<sp/>(rect.x<sp/>/<sp/>gridW)<sp/>%<sp/>5;</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"></highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Amount<sp/>to<sp/>offset<sp/>drawing<sp/>of<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xOffset<sp/>=<sp/>rect.x<sp/>%<sp/>gridW;</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xOffset<sp/>&lt;<sp/>0)<sp/>xOffset<sp/>+=<sp/>gridW;</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"></highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>we&apos;re<sp/>missing<sp/>an<sp/>extra<sp/>column<sp/>to<sp/>the<sp/>left<sp/>(this<sp/>can<sp/>happen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>the<sp/>tiles<sp/>are<sp/>bigger<sp/>than<sp/>the<sp/>grid<sp/>spacing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>extraCol<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(syncLockBitmap.GetWidth()<sp/>-<sp/>gridW<sp/>&gt;<sp/>xOffset)<sp/>{</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>extraCol<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xOffset<sp/>+=<sp/>gridW;</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blockX<sp/>=<sp/>(blockX<sp/>-<sp/>1)<sp/>%<sp/>5;</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>blockX<sp/>is<sp/>non-negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockX<sp/>&lt;<sp/>0)<sp/>blockX<sp/>+=<sp/>5;</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"></highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(xx<sp/>&lt;<sp/>rect.width)<sp/>{</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>syncLockBitmap.GetWidth()<sp/>-<sp/>xOffset;</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xx<sp/>+<sp/>width<sp/>&gt;<sp/>rect.width)</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>rect.width<sp/>-<sp/>xx;</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"></highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>each<sp/>row<sp/>in<sp/>this<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3225"><highlight class="normal"></highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertical<sp/>position<sp/>in<sp/>the<sp/>grid,<sp/>modulo<sp/>its<sp/>period</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockY<sp/>=<sp/>(rect.y<sp/>/<sp/>gridH)<sp/>%<sp/>5;</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"></highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Amount<sp/>to<sp/>offset<sp/>drawing<sp/>of<sp/>first<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yOffset<sp/>=<sp/>rect.y<sp/>%<sp/>gridH;</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yOffset<sp/>&lt;<sp/>0)<sp/>yOffset<sp/>+=<sp/>gridH;</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"></highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>we&apos;re<sp/>missing<sp/>an<sp/>extra<sp/>row<sp/>on<sp/>top<sp/>(this<sp/>can<sp/>happen<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>tiles<sp/>are<sp/>bigger<sp/>than<sp/>the<sp/>grid<sp/>spacing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>extraRow<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(syncLockBitmap.GetHeight()<sp/>-<sp/>gridH<sp/>&gt;<sp/>yOffset)<sp/>{</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extraRow<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yOffset<sp/>+=<sp/>gridH;</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockY<sp/>=<sp/>(blockY<sp/>-<sp/>1)<sp/>%<sp/>5;</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>blockY<sp/>is<sp/>non-negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockY<sp/>&lt;<sp/>0)<sp/>blockY<sp/>+=<sp/>5;</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"></highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(yy<sp/>&lt;<sp/>rect.height)</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>syncLockBitmap.GetHeight()<sp/>-<sp/>yOffset;</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yy<sp/>+<sp/>height<sp/>&gt;<sp/>rect.height)</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>rect.height<sp/>-<sp/>yy;</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"></highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AWD:<sp/>draw<sp/>blocks<sp/>according<sp/>to<sp/>our<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((blockX<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>blockY<sp/>==<sp/>0)<sp/>||<sp/>(blockX<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>blockY<sp/>==<sp/>1)<sp/>||</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(blockX<sp/>==<sp/>4<sp/>&amp;&amp;<sp/>blockY<sp/>==<sp/>2)<sp/>||<sp/>(blockX<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>blockY<sp/>==<sp/>3)<sp/>||</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(blockX<sp/>==<sp/>3<sp/>&amp;&amp;<sp/>blockY<sp/>==<sp/>4))</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"></highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>we<sp/>need<sp/>to<sp/>get<sp/>a<sp/>sub-bitmap?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>!=<sp/>syncLockBitmap.GetWidth()<sp/>||<sp/>height<sp/>!=<sp/>syncLockBitmap.GetHeight())<sp/>{</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxBitmap<sp/>subSyncLockBitmap<sp/>=</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syncLockBitmap.GetSubBitmap(wxRect(xOffset,<sp/>yOffset,<sp/>width,<sp/>height));</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;DrawBitmap(subSyncLockBitmap,<sp/>rect.x<sp/>+<sp/>xx,<sp/>rect.y<sp/>+<sp/>yy,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;DrawBitmap(syncLockBitmap,<sp/>rect.x<sp/>+<sp/>xx,<sp/>rect.y<sp/>+<sp/>yy,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"></highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Updates<sp/>for<sp/>next<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extraRow)<sp/>{</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Second<sp/>offset<sp/>row,<sp/>still<sp/>at<sp/>y<sp/>=<sp/>0;<sp/>no<sp/>more<sp/>extra<sp/>rows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yOffset<sp/>-=<sp/>gridH;</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extraRow<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>on<sp/>in<sp/>y,<sp/>no<sp/>more<sp/>offset<sp/>rows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy<sp/>+=<sp/>gridH<sp/>-<sp/>yOffset;</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockY<sp/>=<sp/>(blockY<sp/>+<sp/>1)<sp/>%<sp/>5;</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"></highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Updates<sp/>for<sp/>next<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extraCol)<sp/>{</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Second<sp/>offset<sp/>column,<sp/>still<sp/>at<sp/>x<sp/>=<sp/>0;<sp/>no<sp/>more<sp/>extra<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xOffset<sp/>-=<sp/>gridW;</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extraCol<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>on<sp/>in<sp/>x,<sp/>no<sp/>more<sp/>offset<sp/>rows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xx<sp/>+=<sp/>gridW<sp/>-<sp/>xOffset;</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blockX<sp/>=<sp/>(blockX<sp/>+<sp/>1)<sp/>%<sp/>5;</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"></highlight></codeline>
<codeline lineno="3297" refid="class_track_artist_1aa39e383c6894d3a72cd1783399288a19" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_artist_1aa39e383c6894d3a72cd1783399288a19" kindref="member">TrackArtist::DrawBackgroundWithSelection</ref>(wxDC<sp/>*dc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;rect,</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*track,<sp/>wxBrush<sp/>&amp;selBrush,<sp/>wxBrush<sp/>&amp;unselBrush,</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>&amp;selectedRegion,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo)</highlight></codeline>
<codeline lineno="3300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//MM:<sp/>Draw<sp/>background.<sp/>We<sp/>should<sp/>optimize<sp/>that<sp/>a<sp/>bit<sp/>more.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//AWD:<sp/>&quot;+<sp/>1.5&quot;<sp/>and<sp/>&quot;+<sp/>2.5&quot;<sp/>throughout<sp/>match<sp/>code<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//AdornedRulerPanel::DoDrawSelection()<sp/>and<sp/>make<sp/>selection<sp/>line<sp/>up<sp/>with<sp/>ruler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//I<sp/>don&apos;t<sp/>know<sp/>if/why<sp/>this<sp/>is<sp/>correct.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3305"><highlight class="normal"></highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sel0<sp/>=<sp/>selectedRegion.<ref refid="class_selected_region_1a699851ec9e5a209be86f552f0826687d" kindref="member">t0</ref>();</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sel1<sp/>=<sp/>selectedRegion.<ref refid="class_selected_region_1aec8e1688714de8fb218d0cf0188360d6" kindref="member">t1</ref>();</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"></highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/>dc-&gt;SetPen(*wxTRANSPARENT_PEN);</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(track-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>()<sp/>||<sp/>track-&gt;<ref refid="class_track_1a4b9d8ec8baa8ce94f9b9b999e324a59f" kindref="member">IsSyncLockSelected</ref>())</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rectangles<sp/>before,<sp/>within,<sp/>after<sp/>the<sp/>selction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>before<sp/>=<sp/>rect;</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/><ref refid="allegro_8cpp_1ab5852cb274ff88cc258958579ab1bd71" kindref="member">within</ref><sp/>=<sp/>rect;</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>after<sp/>=<sp/>rect;</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"></highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>before.width<sp/>=<sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>(zoomInfo.<ref refid="class_zoom_info_1af5b3ea2d31e53b203a06d13d4afd7f90" kindref="member">TimeToPosition</ref>(sel0)<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(before.GetRight()<sp/>&gt;<sp/>rect.GetRight())<sp/>{</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>before.width<sp/>=<sp/>rect.width;</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"></highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(before.width<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;SetBrush(unselBrush);</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;DrawRectangle(before);</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"></highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>within.x<sp/>=<sp/>1<sp/>+<sp/>before.GetRight();</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>within.width<sp/>=<sp/>rect.x<sp/>+<sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>(zoomInfo.<ref refid="class_zoom_info_1af5b3ea2d31e53b203a06d13d4afd7f90" kindref="member">TimeToPosition</ref>(sel1)<sp/>+<sp/>2)<sp/>-<sp/>within.x;</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"></highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(within.GetRight()<sp/>&gt;<sp/>rect.GetRight())<sp/>{</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>within.width<sp/>=<sp/>1<sp/>+<sp/>rect.GetRight()<sp/>-<sp/>within.x;</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"></highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(within.width<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(track-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;SetBrush(selBrush);</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;DrawRectangle(within);</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Per<sp/>condition<sp/>above,<sp/>track<sp/>must<sp/>be<sp/>sync-lock<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;SetBrush(unselBrush);</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;DrawRectangle(within);</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawSyncLockTiles(dc,<sp/>within);</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"></highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>after.x<sp/>=<sp/>1<sp/>+<sp/>within.GetRight();</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>`within`<sp/>not<sp/>drawn;<sp/>start<sp/>where<sp/>it<sp/>would<sp/>have<sp/>gone</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>after.x<sp/>=<sp/>within.x;</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"></highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>after.width<sp/>=<sp/>1<sp/>+<sp/>rect.GetRight()<sp/>-<sp/>after.x;</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(after.width<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;SetBrush(unselBrush);</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;DrawRectangle(after);</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Track<sp/>not<sp/>selected;<sp/>just<sp/>draw<sp/>background</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;SetBrush(unselBrush);</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;DrawRectangle(rect);</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/TrackArtist.cpp"/>
  </compounddef>
</doxygen>
