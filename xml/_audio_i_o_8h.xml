<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_audio_i_o_8h" kind="file" language="C++">
    <compoundname>AudioIO.h</compoundname>
    <includes refid="portaudio_8h" local="yes">portaudio.h</includes>
    <includes refid="_audacity_8h" local="yes">Audacity.h</includes>
    <includes refid="_experimental_8h" local="yes">Experimental.h</includes>
    <includes local="no">wx/event.h</includes>
    <includes local="no">wx/string.h</includes>
    <includes local="no">wx/thread.h</includes>
    <includes refid="_sample_format_8h" local="yes">SampleFormat.h</includes>
    <includedby refid="_nyq_bench_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/mod-nyq-bench/NyqBench.cpp</includedby>
    <includedby refid="_audacity_app_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/AudacityApp.cpp</includedby>
    <includedby refid="_audacity_headers_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.h</includedby>
    <includedby refid="_audio_i_o_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/AudioIO.cpp</includedby>
    <includedby refid="_o_d_p_c_m_alias_block_file_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/blockfile/ODPCMAliasBlockFile.cpp</includedby>
    <includedby refid="_p_c_m_alias_block_file_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/blockfile/PCMAliasBlockFile.cpp</includedby>
    <includedby refid="_device_manager_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/DeviceManager.cpp</includedby>
    <includedby refid="src_2effects_2_effect_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/Effect.cpp</includedby>
    <includedby refid="_history_window_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/HistoryWindow.cpp</includedby>
    <includedby refid="_label_track_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/LabelTrack.cpp</includedby>
    <includedby refid="_lyrics_window_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/LyricsWindow.cpp</includedby>
    <includedby refid="_menus_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Menus.cpp</includedby>
    <includedby refid="_mixer_board_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp</includedby>
    <includedby refid="_device_prefs_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/prefs/DevicePrefs.cpp</includedby>
    <includedby refid="_prefs_dialog_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/prefs/PrefsDialog.cpp</includedby>
    <includedby refid="_quality_prefs_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/prefs/QualityPrefs.cpp</includedby>
    <includedby refid="_recording_prefs_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/prefs/RecordingPrefs.cpp</includedby>
    <includedby refid="_project_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Project.cpp</includedby>
    <includedby refid="_control_tool_bar_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/toolbars/ControlToolBar.cpp</includedby>
    <includedby refid="_device_tool_bar_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/toolbars/DeviceToolBar.cpp</includedby>
    <includedby refid="_edit_tool_bar_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/toolbars/EditToolBar.cpp</includedby>
    <includedby refid="_meter_tool_bar_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/toolbars/MeterToolBar.cpp</includedby>
    <includedby refid="_mixer_tool_bar_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/toolbars/MixerToolBar.cpp</includedby>
    <includedby refid="_selection_bar_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/toolbars/SelectionBar.cpp</includedby>
    <includedby refid="_tool_manager_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/toolbars/ToolManager.cpp</includedby>
    <includedby refid="_transcription_tool_bar_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/toolbars/TranscriptionToolBar.cpp</includedby>
    <includedby refid="_track_panel_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/TrackPanel.cpp</includedby>
    <includedby refid="_wave_track_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp</includedby>
    <includedby refid="_meter_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp</includedby>
    <includedby refid="_ruler_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/widgets/Ruler.cpp</includedby>
    <incdepgraph>
      <node id="34334">
        <label>wx/event.h</label>
      </node>
      <node id="34329">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudioIO.h</label>
        <link refid="AudioIO.h"/>
        <childnode refid="34330" relation="include">
        </childnode>
        <childnode refid="34331" relation="include">
        </childnode>
        <childnode refid="34332" relation="include">
        </childnode>
        <childnode refid="34334" relation="include">
        </childnode>
        <childnode refid="34335" relation="include">
        </childnode>
        <childnode refid="34336" relation="include">
        </childnode>
        <childnode refid="34337" relation="include">
        </childnode>
      </node>
      <node id="34332">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="34333" relation="include">
        </childnode>
      </node>
      <node id="34333">
        <label>wx/defs.h</label>
      </node>
      <node id="34338">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="34335" relation="include">
        </childnode>
        <childnode refid="34339" relation="include">
        </childnode>
      </node>
      <node id="34331">
        <label>Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="34335">
        <label>wx/string.h</label>
      </node>
      <node id="34330">
        <label>portaudio.h</label>
        <link refid="portaudio_8h"/>
      </node>
      <node id="34339">
        <label>wx/arrstr.h</label>
      </node>
      <node id="34336">
        <label>wx/thread.h</label>
      </node>
      <node id="34337">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="34331" relation="include">
        </childnode>
        <childnode refid="34333" relation="include">
        </childnode>
        <childnode refid="34338" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="34350">
        <label>C:/_dev/OpenU/Audacity/audacity/src/HistoryWindow.cpp</label>
        <link refid="_history_window_8cpp"/>
      </node>
      <node id="34354">
        <label>C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp</label>
        <link refid="_mixer_board_8cpp"/>
      </node>
      <node id="34340">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudioIO.h</label>
        <link refid="AudioIO.h"/>
        <childnode refid="34341" relation="include">
        </childnode>
        <childnode refid="34342" relation="include">
        </childnode>
        <childnode refid="34343" relation="include">
        </childnode>
        <childnode refid="34345" relation="include">
        </childnode>
        <childnode refid="34346" relation="include">
        </childnode>
        <childnode refid="34347" relation="include">
        </childnode>
        <childnode refid="34348" relation="include">
        </childnode>
        <childnode refid="34349" relation="include">
        </childnode>
        <childnode refid="34350" relation="include">
        </childnode>
        <childnode refid="34351" relation="include">
        </childnode>
        <childnode refid="34352" relation="include">
        </childnode>
        <childnode refid="34353" relation="include">
        </childnode>
        <childnode refid="34354" relation="include">
        </childnode>
        <childnode refid="34355" relation="include">
        </childnode>
        <childnode refid="34356" relation="include">
        </childnode>
        <childnode refid="34357" relation="include">
        </childnode>
        <childnode refid="34358" relation="include">
        </childnode>
        <childnode refid="34359" relation="include">
        </childnode>
        <childnode refid="34360" relation="include">
        </childnode>
        <childnode refid="34361" relation="include">
        </childnode>
        <childnode refid="34362" relation="include">
        </childnode>
        <childnode refid="34363" relation="include">
        </childnode>
        <childnode refid="34364" relation="include">
        </childnode>
        <childnode refid="34365" relation="include">
        </childnode>
        <childnode refid="34366" relation="include">
        </childnode>
        <childnode refid="34367" relation="include">
        </childnode>
        <childnode refid="34368" relation="include">
        </childnode>
        <childnode refid="34369" relation="include">
        </childnode>
        <childnode refid="34370" relation="include">
        </childnode>
        <childnode refid="34371" relation="include">
        </childnode>
      </node>
      <node id="34361">
        <label>C:/_dev/OpenU/Audacity/audacity/src/toolbars/DeviceToolBar.cpp</label>
        <link refid="_device_tool_bar_8cpp"/>
      </node>
      <node id="34341">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/mod-nyq-bench/NyqBench.cpp</label>
        <link refid="_nyq_bench_8cpp"/>
      </node>
      <node id="34348">
        <label>C:/_dev/OpenU/Audacity/audacity/src/DeviceManager.cpp</label>
        <link refid="_device_manager_8cpp"/>
      </node>
      <node id="34358">
        <label>C:/_dev/OpenU/Audacity/audacity/src/prefs/RecordingPrefs.cpp</label>
        <link refid="_recording_prefs_8cpp"/>
      </node>
      <node id="34367">
        <label>C:/_dev/OpenU/Audacity/audacity/src/toolbars/TranscriptionToolBar.cpp</label>
        <link refid="_transcription_tool_bar_8cpp"/>
      </node>
      <node id="34371">
        <label>C:/_dev/OpenU/Audacity/audacity/src/widgets/Ruler.cpp</label>
        <link refid="_ruler_8cpp"/>
      </node>
      <node id="34355">
        <label>C:/_dev/OpenU/Audacity/audacity/src/prefs/DevicePrefs.cpp</label>
        <link refid="_device_prefs_8cpp"/>
      </node>
      <node id="34360">
        <label>C:/_dev/OpenU/Audacity/audacity/src/toolbars/ControlToolBar.cpp</label>
        <link refid="_control_tool_bar_8cpp"/>
      </node>
      <node id="34366">
        <label>C:/_dev/OpenU/Audacity/audacity/src/toolbars/ToolManager.cpp</label>
        <link refid="_tool_manager_8cpp"/>
      </node>
      <node id="34351">
        <label>C:/_dev/OpenU/Audacity/audacity/src/LabelTrack.cpp</label>
        <link refid="_label_track_8cpp"/>
      </node>
      <node id="34352">
        <label>C:/_dev/OpenU/Audacity/audacity/src/LyricsWindow.cpp</label>
        <link refid="_lyrics_window_8cpp"/>
      </node>
      <node id="34349">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Effect.cpp</label>
        <link refid="src_2effects_2_effect_8cpp"/>
      </node>
      <node id="34343">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.h</label>
        <link refid="_audacity_headers_8h"/>
        <childnode refid="34344" relation="include">
        </childnode>
      </node>
      <node id="34357">
        <label>C:/_dev/OpenU/Audacity/audacity/src/prefs/QualityPrefs.cpp</label>
        <link refid="_quality_prefs_8cpp"/>
      </node>
      <node id="34365">
        <label>C:/_dev/OpenU/Audacity/audacity/src/toolbars/SelectionBar.cpp</label>
        <link refid="_selection_bar_8cpp"/>
      </node>
      <node id="34346">
        <label>C:/_dev/OpenU/Audacity/audacity/src/blockfile/ODPCMAliasBlockFile.cpp</label>
        <link refid="_o_d_p_c_m_alias_block_file_8cpp"/>
      </node>
      <node id="34353">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Menus.cpp</label>
        <link refid="_menus_8cpp"/>
      </node>
      <node id="34356">
        <label>C:/_dev/OpenU/Audacity/audacity/src/prefs/PrefsDialog.cpp</label>
        <link refid="_prefs_dialog_8cpp"/>
      </node>
      <node id="34347">
        <label>C:/_dev/OpenU/Audacity/audacity/src/blockfile/PCMAliasBlockFile.cpp</label>
        <link refid="_p_c_m_alias_block_file_8cpp"/>
      </node>
      <node id="34369">
        <label>C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp</label>
        <link refid="_wave_track_8cpp"/>
      </node>
      <node id="34359">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Project.cpp</label>
        <link refid="_project_8cpp"/>
      </node>
      <node id="34363">
        <label>C:/_dev/OpenU/Audacity/audacity/src/toolbars/MeterToolBar.cpp</label>
        <link refid="_meter_tool_bar_8cpp"/>
      </node>
      <node id="34368">
        <label>C:/_dev/OpenU/Audacity/audacity/src/TrackPanel.cpp</label>
        <link refid="_track_panel_8cpp"/>
      </node>
      <node id="34364">
        <label>C:/_dev/OpenU/Audacity/audacity/src/toolbars/MixerToolBar.cpp</label>
        <link refid="_mixer_tool_bar_8cpp"/>
      </node>
      <node id="34345">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudioIO.cpp</label>
        <link refid="_audio_i_o_8cpp"/>
      </node>
      <node id="34342">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityApp.cpp</label>
        <link refid="_audacity_app_8cpp"/>
      </node>
      <node id="34370">
        <label>C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp</label>
        <link refid="_meter_8cpp"/>
      </node>
      <node id="34362">
        <label>C:/_dev/OpenU/Audacity/audacity/src/toolbars/EditToolBar.cpp</label>
        <link refid="_edit_tool_bar_8cpp"/>
      </node>
      <node id="34344">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.cpp</label>
        <link refid="_audacity_headers_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_audio_i_o_start_stream_options" prot="public">AudioIOStartStreamOptions</innerclass>
    <innerclass refid="class_audio_i_o" prot="public">AudioIO</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_audio_i_o_8h_1a0fbe1353d40f1d79fd01271791cda3a6" prot="public" static="no">
        <name>BAD_STREAM_TIME</name>
        <initializer>-1000000000.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.h" line="62" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_audio_i_o_8h_1a255835246ff122feb234d863682ddc2e" prot="public" static="no">
        <name>MAX_MIDI_BUFFER_SIZE</name>
        <initializer>5000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.h" line="64" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_audio_i_o_8h_1a0742d0ae55e9a5a575af2feaf9a0554e" prot="public" static="no">
        <name>DEFAULT_SYNTH_LATENCY</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.h" line="65" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_audio_i_o_8h_1a06b8265d96a5807edc5e5ef55a7447c6" prot="public" static="no">
        <name>DEFAULT_LATENCY_DURATION</name>
        <initializer>100.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.h" line="67" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_audio_i_o_8h_1acf41a5bce3221873d14013c473e45326" prot="public" static="no">
        <name>DEFAULT_LATENCY_CORRECTION</name>
        <initializer>-130.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.h" line="68" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_audio_i_o_8h_1ab68eff10398d6347250dae363e08c3aa" prot="public" static="no" mutable="no">
        <type>AUDACITY_DLL_API <ref refid="class_audio_i_o" kindref="compound">AudioIO</ref> *</type>
        <definition>AUDACITY_DLL_API AudioIO* gAudioIO</definition>
        <argsstring></argsstring>
        <name>gAudioIO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.h" line="52" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.cpp" bodystart="329" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_audio_i_o_8h_1a5c082d9ef3612f42a4a78edffdf2a0db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void InitAudioIO</definition>
        <argsstring>()</argsstring>
        <name>InitAudioIO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.h" line="54" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.cpp" bodystart="795" bodyend="823"/>
      </memberdef>
      <memberdef kind="function" id="_audio_i_o_8h_1a362633315924afe19ab0fe0cf4bd32da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void DeinitAudioIO</definition>
        <argsstring>()</argsstring>
        <name>DeinitAudioIO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.h" line="55" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.cpp" bodystart="825" bodyend="828"/>
      </memberdef>
      <memberdef kind="function" id="_audio_i_o_8h_1a289724ea943616e20d183ab0e6481bf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxString</type>
        <definition>wxString DeviceName</definition>
        <argsstring>(const PaDeviceInfo *info)</argsstring>
        <name>DeviceName</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_device_info" kindref="compound">PaDeviceInfo</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.h" line="56" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.cpp" bodystart="830" bodyend="835"/>
      </memberdef>
      <memberdef kind="function" id="_audio_i_o_8h_1a953244abb4687d841dc666950d0c9a31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxString</type>
        <definition>wxString HostName</definition>
        <argsstring>(const PaDeviceInfo *info)</argsstring>
        <name>HostName</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_device_info" kindref="compound">PaDeviceInfo</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.h" line="57" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.cpp" bodystart="837" bodyend="842"/>
      </memberdef>
      <memberdef kind="function" id="_audio_i_o_8h_1a52869f87b7f433c8848a4f2e90f31dfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool ValidateDeviceNames</definition>
        <argsstring>()</argsstring>
        <name>ValidateDeviceNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_audio_i_o_8h_1a49ae247a9061356c0ed3445a9b7ae54d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_EXPORTED_EVENT_TYPE</definition>
        <argsstring>(AUDACITY_DLL_API, EVT_AUDIOIO_PLAYBACK,-1)</argsstring>
        <name>DECLARE_EXPORTED_EVENT_TYPE</name>
        <param>
          <type>AUDACITY_DLL_API</type>
        </param>
        <param>
          <type>EVT_AUDIOIO_PLAYBACK</type>
        </param>
        <param>
          <type>-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_audio_i_o_8h_1a14573159eefb8f46d80aaeedaa8a516d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_EXPORTED_EVENT_TYPE</definition>
        <argsstring>(AUDACITY_DLL_API, EVT_AUDIOIO_CAPTURE,-1)</argsstring>
        <name>DECLARE_EXPORTED_EVENT_TYPE</name>
        <param>
          <type>AUDACITY_DLL_API</type>
        </param>
        <param>
          <type>EVT_AUDIOIO_CAPTURE</type>
        </param>
        <param>
          <type>-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_audio_i_o_8h_1a7219c94fed8cb8e61b20c9eb8d199c62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_EXPORTED_EVENT_TYPE</definition>
        <argsstring>(AUDACITY_DLL_API, EVT_AUDIOIO_MONITOR,-1)</argsstring>
        <name>DECLARE_EXPORTED_EVENT_TYPE</name>
        <param>
          <type>AUDACITY_DLL_API</type>
        </param>
        <param>
          <type>EVT_AUDIOIO_MONITOR</type>
        </param>
        <param>
          <type>-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.h" line="79" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>AudioIO.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>Use<sp/>the<sp/>PortAudio<sp/>library<sp/>to<sp/>play<sp/>and<sp/>record<sp/>sound</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__AUDACITY_AUDIO_IO__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__AUDACITY_AUDIO_IO__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="portaudio_8h" kindref="compound">portaudio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_audacity_8h" kindref="compound">Audacity.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_experimental_8h" kindref="compound">Experimental.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="portmidi_8h" kindref="compound">portmidi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="porttime_8h" kindref="compound">porttime.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="allegro_8h" kindref="compound">allegro.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_PORTMIXER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="portmixer_8h" kindref="compound">portmixer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/event.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/thread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_sample_format_8h" kindref="compound">SampleFormat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_audio_i_o" kindref="compound">AudioIO</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ring_buffer" kindref="compound">RingBuffer</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_mixer" kindref="compound">Mixer</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_resample" kindref="compound">Resample</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_time_track" kindref="compound">TimeTrack</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_audio_thread" kindref="compound">AudioThread</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_meter" kindref="compound">Meter</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_time_track" kindref="compound">TimeTrack</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">wxDialog;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_wave_track_array" kindref="compound">WaveTrackArray</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>AUDACITY_DLL_API<sp/><ref refid="class_audio_i_o" kindref="compound">AudioIO</ref><sp/>*<ref refid="_audio_i_o_8h_1ab68eff10398d6347250dae363e08c3aa" kindref="member">gAudioIO</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_audio_i_o_8h_1a5c082d9ef3612f42a4a78edffdf2a0db" kindref="member">InitAudioIO</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_audio_i_o_8h_1a362633315924afe19ab0fe0cf4bd32da" kindref="member">DeinitAudioIO</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal">wxString<sp/><ref refid="_audio_i_o_8h_1a289724ea943616e20d183ab0e6481bf7" kindref="member">DeviceName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_device_info" kindref="compound">PaDeviceInfo</ref>*<sp/><ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">wxString<sp/><ref refid="_audio_i_o_8h_1a953244abb4687d841dc666950d0c9a31" kindref="member">HostName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_device_info" kindref="compound">PaDeviceInfo</ref>*<sp/><ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_audio_i_o_8h_1a52869f87b7f433c8848a4f2e90f31dfc" kindref="member">ValidateDeviceNames</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_audio_i_o_listener" kindref="compound">AudioIOListener</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="_audio_i_o_8h_1a0fbe1353d40f1d79fd01271791cda3a6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BAD_STREAM_TIME<sp/>-1000000000.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="_audio_i_o_8h_1a255835246ff122feb234d863682ddc2e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_MIDI_BUFFER_SIZE<sp/>5000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="_audio_i_o_8h_1a0742d0ae55e9a5a575af2feaf9a0554e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_SYNTH_LATENCY<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="_audio_i_o_8h_1a06b8265d96a5807edc5e5ef55a7447c6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_LATENCY_DURATION<sp/>100.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="_audio_i_o_8h_1acf41a5bce3221873d14013c473e45326" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_LATENCY_CORRECTION<sp/>-130.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_AUTOMATED_INPUT_LEVEL_ADJUSTMENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>AILA_DEF_TARGET_PEAK<sp/>92</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>AILA_DEF_DELTA_PEAK<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>AILA_DEF_ANALYSIS_TIME<sp/>1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>AILA_DEF_NUMBER_ANALYSIS<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><ref refid="_audio_i_o_8h_1a49ae247a9061356c0ed3445a9b7ae54d" kindref="member">DECLARE_EXPORTED_EVENT_TYPE</ref>(AUDACITY_DLL_API,<sp/>EVT_AUDIOIO_PLAYBACK,<sp/>-1);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="_audio_i_o_8h_1a49ae247a9061356c0ed3445a9b7ae54d" kindref="member">DECLARE_EXPORTED_EVENT_TYPE</ref>(AUDACITY_DLL_API,<sp/>EVT_AUDIOIO_CAPTURE,<sp/>-1);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="_audio_i_o_8h_1a49ae247a9061356c0ed3445a9b7ae54d" kindref="member">DECLARE_EXPORTED_EVENT_TYPE</ref>(AUDACITY_DLL_API,<sp/>EVT_AUDIOIO_MONITOR,<sp/>-1);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>avoid<sp/>growing<sp/>the<sp/>argument<sp/>list<sp/>of<sp/>StartStream,<sp/>add<sp/>fields<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="struct_audio_i_o_start_stream_options" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_audio_i_o_start_stream_options" kindref="compound">AudioIOStartStreamOptions</ref></highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84" refid="struct_audio_i_o_start_stream_options_1a033ef570923e73da96f6e11c7f1b8647" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_audio_i_o_start_stream_options_1a033ef570923e73da96f6e11c7f1b8647" kindref="member">AudioIOStartStreamOptions</ref>()</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="struct_audio_i_o_start_stream_options_1a3516f7c72546aa8a73fb25b2e628170f" kindref="member">timeTrack</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="struct_audio_i_o_start_stream_options_1a326a9c07ece9c6b6ad8be00acc504dac" kindref="member">listener</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="struct_audio_i_o_start_stream_options_1a51e6ebc52db021a9c18cdfa1e70c5ace" kindref="member">playLooped</ref>(<ref refid="ordinals_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="struct_audio_i_o_start_stream_options_1ae0b3e06a7234158e7f213302b71df8cb" kindref="member">cutPreviewGapStart</ref>(0.0)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="struct_audio_i_o_start_stream_options_1a3a56b01ea4c98d7236134e36ff1dc8c1" kindref="member">cutPreviewGapLen</ref>(0.0)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="struct_audio_i_o_start_stream_options_1a43d753f67299d5aa91402cf2a297536a" kindref="member">pStartTime</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">#ifdef<sp/><ref refid="_experimental_8h_1a7a374da131bc5cae94762f1f8df5fc46" kindref="member">EXPERIMENTAL_SCRUBBING_SUPPORT</ref></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="struct_audio_i_o_start_stream_options_1aaea9d52a5df057012e6e9570670022be" kindref="member">scrubDelay</ref>(0.0)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="struct_audio_i_o_start_stream_options_1ac44effeae42cfbcbef718f5737776082" kindref="member">maxScrubSpeed</ref>(1.0)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="struct_audio_i_o_start_stream_options_1a0f8bd5ad350f0a1739b173e9440fa0cd" kindref="member">minScrubStutter</ref>(0.0)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="struct_audio_i_o_start_stream_options_1a5df47acf7a90a322709000e4a2fc737a" kindref="member">scrubStartClockTimeMillis</ref>(-1)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="struct_audio_i_o_start_stream_options_1af3404830ea234ae73cf9a6a19b2f804c" kindref="member">maxScrubTime</ref>(0.0)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">#<ref refid="sndfile__play_8m_1a74c64864f5283ae06d4a981642a59af9" kindref="member">endif</ref></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="struct_audio_i_o_start_stream_options_1a3516f7c72546aa8a73fb25b2e628170f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_time_track" kindref="compound">TimeTrack</ref><sp/>*<ref refid="struct_audio_i_o_start_stream_options_1a3516f7c72546aa8a73fb25b2e628170f" kindref="member">timeTrack</ref>;</highlight></codeline>
<codeline lineno="101" refid="struct_audio_i_o_start_stream_options_1a326a9c07ece9c6b6ad8be00acc504dac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audio_i_o_listener" kindref="compound">AudioIOListener</ref>*<sp/><ref refid="struct_audio_i_o_start_stream_options_1a326a9c07ece9c6b6ad8be00acc504dac" kindref="member">listener</ref>;</highlight></codeline>
<codeline lineno="102" refid="struct_audio_i_o_start_stream_options_1a51e6ebc52db021a9c18cdfa1e70c5ace" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_audio_i_o_start_stream_options_1a51e6ebc52db021a9c18cdfa1e70c5ace" kindref="member">playLooped</ref>;</highlight></codeline>
<codeline lineno="103" refid="struct_audio_i_o_start_stream_options_1ae0b3e06a7234158e7f213302b71df8cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_audio_i_o_start_stream_options_1ae0b3e06a7234158e7f213302b71df8cb" kindref="member">cutPreviewGapStart</ref>;</highlight></codeline>
<codeline lineno="104" refid="struct_audio_i_o_start_stream_options_1a3a56b01ea4c98d7236134e36ff1dc8c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_audio_i_o_start_stream_options_1a3a56b01ea4c98d7236134e36ff1dc8c1" kindref="member">cutPreviewGapLen</ref>;</highlight></codeline>
<codeline lineno="105" refid="struct_audio_i_o_start_stream_options_1a43d753f67299d5aa91402cf2a297536a" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/><ref refid="struct_audio_i_o_start_stream_options_1a43d753f67299d5aa91402cf2a297536a" kindref="member">pStartTime</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_SCRUBBING_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Positive<sp/>value<sp/>indicates<sp/>that<sp/>scrubbing<sp/>will<sp/>happen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(do<sp/>not<sp/>specify<sp/>a<sp/>time<sp/>track,<sp/>looping,<sp/>or<sp/>recording,<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>are<sp/>all<sp/>incompatible<sp/>with<sp/>scrubbing):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="struct_audio_i_o_start_stream_options_1aaea9d52a5df057012e6e9570670022be" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_audio_i_o_start_stream_options_1aaea9d52a5df057012e6e9570670022be" kindref="member">scrubDelay</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>a<sp/>limiting<sp/>value<sp/>for<sp/>the<sp/>speed<sp/>of<sp/>the<sp/>first<sp/>scrub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>interval:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="struct_audio_i_o_start_stream_options_1ac44effeae42cfbcbef718f5737776082" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_audio_i_o_start_stream_options_1ac44effeae42cfbcbef718f5737776082" kindref="member">maxScrubSpeed</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>maximum<sp/>speed<sp/>scrubbing<sp/>skips<sp/>to<sp/>follow<sp/>the<sp/>mouse,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>the<sp/>minimum<sp/>amount<sp/>of<sp/>playback<sp/>at<sp/>the<sp/>maximum<sp/>speed:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="struct_audio_i_o_start_stream_options_1a0f8bd5ad350f0a1739b173e9440fa0cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_audio_i_o_start_stream_options_1a0f8bd5ad350f0a1739b173e9440fa0cd" kindref="member">minScrubStutter</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scrubbing<sp/>needs<sp/>the<sp/>time<sp/>of<sp/>start<sp/>of<sp/>the<sp/>mouse<sp/>movement<sp/>that<sp/>began</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>scrub:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="struct_audio_i_o_start_stream_options_1a5df47acf7a90a322709000e4a2fc737a" refkind="member"><highlight class="normal"><sp/><sp/><sp/>wxLongLong<sp/><ref refid="struct_audio_i_o_start_stream_options_1a5df47acf7a90a322709000e4a2fc737a" kindref="member">scrubStartClockTimeMillis</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>usually<sp/>from<sp/>TrackList::GetEndTime()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="struct_audio_i_o_start_stream_options_1af3404830ea234ae73cf9a6a19b2f804c" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_audio_i_o_start_stream_options_1af3404830ea234ae73cf9a6a19b2f804c" kindref="member">maxScrubTime</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="class_audio_i_o" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AUDACITY_DLL_API<sp/><ref refid="class_audio_i_o" kindref="compound">AudioIO</ref><sp/>final<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audio_i_o" kindref="compound">AudioIO</ref>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/>~<ref refid="class_audio_i_o" kindref="compound">AudioIO</ref>();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="class_audio_i_o_1a78477917ca8c9800ce6f5074a7044399" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audio_i_o_listener" kindref="compound">AudioIOListener</ref>*<sp/><ref refid="class_audio_i_o_1a78477917ca8c9800ce6f5074a7044399" kindref="member">GetListener</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mListener;<sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetListener(<ref refid="class_audio_i_o_listener" kindref="compound">AudioIOListener</ref>*<sp/><ref refid="struct_audio_i_o_start_stream_options_1a326a9c07ece9c6b6ad8be00acc504dac" kindref="member">listener</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StartMonitoring(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>StartStream(<ref refid="class_wave_track_array" kindref="compound">WaveTrackArray</ref><sp/>playbackTracks,<sp/><ref refid="class_wave_track_array" kindref="compound">WaveTrackArray</ref><sp/>captureTracks,</highlight></codeline>
<codeline lineno="156"><highlight class="normal">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NoteTrackArray<sp/>midiTracks,</highlight></codeline>
<codeline lineno="158"><highlight class="normal">#<ref refid="sndfile__play_8m_1a74c64864f5283ae06d4a981642a59af9" kindref="member">endif</ref></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sampleRate,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_audio_i_o_start_stream_options" kindref="compound">AudioIOStartStreamOptions</ref><sp/>&amp;<ref refid="namespacewaflib_1_1_options_1a59b9c00933a268d11c1c960cd109e113" kindref="member">options</ref><sp/>=</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_audio_i_o_start_stream_options_1a033ef570923e73da96f6e11c7f1b8647" kindref="member">AudioIOStartStreamOptions</ref>());</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StopStream();</highlight></codeline>
<codeline lineno="171" refid="class_audio_i_o_1a40488ff8506e6238963049844728a6c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audio_i_o_1a40488ff8506e6238963049844728a6c6" kindref="member">SeekStream</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>seconds)<sp/>{<sp/>mSeek<sp/>=<sp/>seconds;<sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_SCRUBBING_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="class_audio_i_o_1ada30edb1aa1b556aebb4ba0b9bbc697e" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_audio_i_o_1ada30edb1aa1b556aebb4ba0b9bbc697e" kindref="member">IsScrubbing</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IsBusy()<sp/>&amp;&amp;<sp/>mScrubQueue<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="class_audio_i_o_1a377107ccda3176965ac68d757ba517a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_audio_i_o_1a377107ccda3176965ac68d757ba517a7" kindref="member">GetMaxScrubSpeed</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>32.0;<sp/>}<sp/></highlight><highlight class="comment">//<sp/>Is<sp/>five<sp/>octaves<sp/>enough<sp/>for<sp/>your<sp/>amusement?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="class_audio_i_o_1a40f26467a7d142f0edea9b3ac893dddd" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_audio_i_o_1a40f26467a7d142f0edea9b3ac893dddd" kindref="member">GetMinScrubSpeed</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.01;<sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EnqueueScrubByPosition(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>endTime,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxSpeed,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>maySkip);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EnqueueScrubBySignedSpeed(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>speed,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxSpeed,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>maySkip);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsBusy();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsStreamActive();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsStreamActive(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1a472e2484c39e6e56a4c486a7d779841d" kindref="member">token</ref>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="class_audio_i_o_1a313e20357b22f7adbbdd274ef1e2e84e" refkind="member"><highlight class="normal"><sp/><sp/><sp/>wxLongLong<sp/><ref refid="class_audio_i_o_1a313e20357b22f7adbbdd274ef1e2e84e" kindref="member">GetLastPlaybackTime</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLastPlaybackTimeMillis;<sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>MidiTime();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>audio<sp/>code<sp/>solves<sp/>the<sp/>problem<sp/>of<sp/>soloing/muting<sp/>tracks<sp/>by<sp/>scanning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>playback<sp/>tracks<sp/>on<sp/>every<sp/>call<sp/>to<sp/>the<sp/>audio<sp/>buffer<sp/>fill<sp/>routine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>do<sp/>the<sp/>same<sp/>for<sp/>Midi,<sp/>but<sp/>it<sp/>seems<sp/>wasteful<sp/>for<sp/>at<sp/>least<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>threads<sp/>to<sp/>be<sp/>frequently<sp/>polling<sp/>to<sp/>update<sp/>status.<sp/>This<sp/>could<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eliminated<sp/>(also<sp/>with<sp/>a<sp/>reduction<sp/>in<sp/>code<sp/>I<sp/>think)<sp/>by<sp/>updating<sp/>mHasSolo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>each<sp/>time<sp/>a<sp/>solo<sp/>button<sp/>is<sp/>activated<sp/>or<sp/>deactivated.<sp/>For<sp/>now,<sp/>I&apos;m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>going<sp/>to<sp/>do<sp/>this<sp/>polling<sp/>in<sp/>the<sp/>FillMidiBuffer<sp/>routine<sp/>to<sp/>localize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>changes<sp/>for<sp/>midi<sp/>to<sp/>the<sp/>midi<sp/>code,<sp/>but<sp/>I&apos;m<sp/>declaring<sp/>the<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>here<sp/>so<sp/>possibly<sp/>in<sp/>the<sp/>future,<sp/>Audio<sp/>code<sp/>can<sp/>use<sp/>it<sp/>too.<sp/>-RBD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/>mHasSolo;<sp/></highlight><highlight class="comment">//<sp/>is<sp/>any<sp/>playback<sp/>solo<sp/>button<sp/>pressed?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SetHasSolo(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasSolo);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetHasSolo()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mHasSolo;<sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetMidiPlaySpeed(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)<sp/>{<sp/>mMidiPlaySpeed<sp/>=<sp/>s<sp/>*<sp/>0.01;<sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsAudioTokenActive(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>token);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsMonitoring();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetPaused(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsPaused();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mixer<sp/>services<sp/>are<sp/>always<sp/>available.<sp/><sp/>If<sp/>no<sp/>stream<sp/>is<sp/>running,<sp/>these</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>methods<sp/>use<sp/>whatever<sp/>device<sp/>is<sp/>specified<sp/>by<sp/>the<sp/>preferences.<sp/><sp/>If<sp/>a</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>stream<sp/>*is*<sp/>running,<sp/>naturally<sp/>they<sp/>manipulate<sp/>the<sp/>mixer<sp/>associated</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>with<sp/>that<sp/>stream.<sp/><sp/>If<sp/>no<sp/>mixer<sp/>is<sp/>available,<sp/>output<sp/>is<sp/>emulated<sp/>and</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>input<sp/>is<sp/>stuck<sp/>at<sp/>1.0f<sp/>(a<sp/>gain<sp/>is<sp/>applied<sp/>to<sp/>output<sp/>samples).</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetMixer(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputSource);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetMixer(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputSource,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inputVolume,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>playbackVolume);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetMixer(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*inputSource,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*inputVolume,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*playbackVolume);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>InputMixerWorks();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>OutputMixerEmulated();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/>GetInputSourceNames();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HandleDeviceChange();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>wxArrayLong<sp/>GetSupportedPlaybackRates(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DevIndex<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref><sp/>=<sp/>0.0);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>wxArrayLong<sp/>GetSupportedCaptureRates(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>devIndex<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref><sp/>=<sp/>0.0);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>wxArrayLong<sp/>GetSupportedSampleRates(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>playDevice<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recDevice<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref><sp/>=<sp/>0.0);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetOptimalSupportedSampleRate();</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetStreamTime();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="class_audio_i_o_1a5735d00a230e2a59a9702dfbf1a8b85d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="class_audio_i_o_1a5735d00a230e2a59a9702dfbf1a8b85d" kindref="member">GetCaptureFormat</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mCaptureFormat;<sp/>}</highlight></codeline>
<codeline lineno="373" refid="class_audio_i_o_1a841f37644672ecb5ea445bfb52907c1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_audio_i_o_1a841f37644672ecb5ea445bfb52907c1f" kindref="member">GetNumCaptureChannels</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mNumCaptureChannels;<sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="class_audio_i_o_1a42f4cf4090548388aa1c762bb59778ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>StandardRates[];</highlight></codeline>
<codeline lineno="381" refid="class_audio_i_o_1a4d794f0244d6be2f833a6627cbfcdae8" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_audio_i_o_1a4d794f0244d6be2f833a6627cbfcdae8" kindref="member">NumStandardRates</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>GetDeviceInfo();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_audio_i_o_8h_1a52869f87b7f433c8848a4f2e90f31dfc" kindref="member">ValidateDeviceNames</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;play,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;rec);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>EXPERIMENTAL_AUTOMATED_INPUT_LEVEL_ADJUSTMENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AILAInitialize();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AILADisable();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AILAIsActive();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AILAProcess(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxPeak);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AILASetStartTime();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>AILAGetLastDecisionTime();</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsAvailable(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*projecT);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetCaptureMeter(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*project,<sp/><ref refid="class_meter" kindref="compound">Meter</ref><sp/>*meter);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetPlaybackMeter(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*project,<sp/><ref refid="class_meter" kindref="compound">Meter</ref><sp/>*meter);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetMeters();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetBestRate(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>capturing,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>playing,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sampleRate);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>StartPortAudioStream(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sampleRate,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPlaybackChannels,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCaptureChannels,</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/>captureFormat);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FillBuffers();</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PrepareMidiIterator(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>send<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref><sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>StartPortMidiStream();</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputEvent();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FillMidiBuffers();</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetNextEvent();</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AudacityMidiCallback();</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>AudioTime()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mT0<sp/>+<sp/>mNumFrames<sp/>/<sp/>mRate;<sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>PauseTime();</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>getCurrentTrackTime();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>long<sp/>CalculateMidiTimeStamp(double<sp/>time);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AllNotesOff();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetCommonlyAvailPlayback();</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetCommonlyAvailCapture();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getRecordDevIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;devName<sp/>=<sp/>wxEmptyString);</highlight></codeline>
<codeline lineno="483"><highlight class="preprocessor">#if<sp/>USE_PORTMIXER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getRecordSourceIndex(<ref refid="portmixer_8h_1a1928e1cfc2264146e581912ac5836c45" kindref="member">PxMixer</ref><sp/>*portMixer);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getPlayDevIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;devName<sp/>=<sp/>wxEmptyString);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RatesToTry[];</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumRatesToTry;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ReversedTime()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="505"><highlight class="keyword"><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mT1<sp/>&lt;<sp/>mT0;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>LimitStreamTime(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>absoluteTime)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>NormalizeStreamTime(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>absoluteTime)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StartStreamCleanup(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bOnlyBuffers<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>MIDI_PLAYBACK:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><ref refid="portmidi_8h_1a00ffab472a8cb21bd3511721c9474658" kindref="member">PmStream</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*mMidiStream;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLastPmError;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMidiLatency;<sp/></highlight><highlight class="comment">//<sp/>latency<sp/>value<sp/>for<sp/>PortMidi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSynthLatency;<sp/></highlight><highlight class="comment">//<sp/>latency<sp/>of<sp/>MIDI<sp/>synthesizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMidiPlaySpeed;<sp/></highlight><highlight class="comment">//<sp/>a<sp/>copy<sp/>of<sp/>TranscriptionToolBar::mPlaySpeed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>fields<sp/>are<sp/>used<sp/>to<sp/>synchronize<sp/>MIDI<sp/>with<sp/>audio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>mAudioCallbackOutputTime;<sp/></highlight><highlight class="comment">//<sp/>PortAudio&apos;s<sp/>outTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>mNumFrames;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>includes<sp/>pauses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>mNumPauseFrames;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>how<sp/>many<sp/>frames<sp/>of<sp/>zeros<sp/>inserted?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>mPauseTime;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pause<sp/>in<sp/>ms<sp/>if<sp/>no<sp/>audio<sp/>playback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>mMidiLoopOffset;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>total<sp/>of<sp/>backward<sp/>jumps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>mAudioFramesPerBuffer;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>mMidiPaused;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>by<sp/>Midi<sp/>process<sp/>to<sp/>record</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>pause<sp/>has<sp/>begun.<sp/>Pause<sp/>time<sp/>is<sp/>accumulated<sp/>in<sp/>mPauseTime.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>variable<sp/>is<sp/>shared<sp/>so<sp/>that<sp/>it<sp/>can<sp/>be<sp/>cleared<sp/>when<sp/>playback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>begins.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1aad5a663237745add3ab7fec40d5f2c87" kindref="member">Alg_seq_ptr</ref><sp/><sp/><sp/><sp/><sp/><sp/>mSeq;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1ae139466fdcd075a57d0c0c79e881f7e8" kindref="member">Alg_iterator_ptr</ref><sp/>mIterator;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1aeb8db009b4ffadef2e7ca0e4936f0307" kindref="member">Alg_event_ptr</ref><sp/><sp/><sp/><sp/>mNextEvent;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>next<sp/>event<sp/>to<sp/>play<sp/>(or<sp/>null)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNextEventTime;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>time<sp/>of<sp/>the<sp/>next<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(note<sp/>that<sp/>this<sp/>could<sp/>be<sp/>a<sp/>note&apos;s<sp/>time+duration)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_note_track" kindref="compound">NoteTrack</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*mNextEventTrack;<sp/></highlight><highlight class="comment">//<sp/>track<sp/>of<sp/>next<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMidiOutputComplete;<sp/></highlight><highlight class="comment">//<sp/>true<sp/>when<sp/>output<sp/>reaches<sp/>mT1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNextIsNoteOn;<sp/></highlight><highlight class="comment">//<sp/>is<sp/>the<sp/>next<sp/>event<sp/>a<sp/>note-off?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCnt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mMidiStreamActive<sp/>tells<sp/>when<sp/>mMidiStream<sp/>is<sp/>open<sp/>for<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMidiStreamActive;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>true,<sp/>mSendMidiState<sp/>means<sp/>send<sp/>only<sp/>updates,<sp/>not<sp/>note-on&apos;s,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>to<sp/>send<sp/>state<sp/>changes<sp/>that<sp/>precede<sp/>the<sp/>selected<sp/>notes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSendMidiState;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/>NoteTrackArray<sp/><sp/><sp/>mMidiPlaybackTracks;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_AUTOMATED_INPUT_LEVEL_ADJUSTMENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAILAActive;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAILAClipped;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAILATotalAnalysis;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAILAAnalysisCounter;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAILAMax;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAILAGoalPoint;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAILAGoalDelta;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAILAAnalysisTime;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAILALastStartTime;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAILAChangeFactor;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAILATopLevel;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAILAAnalysisEndTime;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAILAAbsolutStartTime;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>mAILALastChangeType;<sp/><sp/></highlight><highlight class="comment">//0<sp/>-<sp/>no<sp/>change,<sp/>1<sp/>-<sp/>increase<sp/>change,<sp/>2<sp/>-<sp/>decrease<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audio_thread" kindref="compound">AudioThread</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*mThread;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audio_thread" kindref="compound">AudioThread</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*mMidiThread;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_resample" kindref="compound">Resample</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**mResample;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_ring_buffer" kindref="compound">RingBuffer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**mCaptureBuffers;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track_array" kindref="compound">WaveTrackArray</ref><sp/><sp/><sp/><sp/><sp/>*mCaptureTracks;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_ring_buffer" kindref="compound">RingBuffer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**mPlaybackBuffers;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track_array" kindref="compound">WaveTrackArray</ref><sp/><sp/><sp/><sp/><sp/>*mPlaybackTracks;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_mixer" kindref="compound">Mixer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**mPlaybackMixers;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mStreamToken;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNextStreamToken;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFactor;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRate;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mT0;<sp/></highlight><highlight class="comment">//<sp/>playback<sp/>starts<sp/>at<sp/>offset<sp/>of<sp/>mT0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mT1;<sp/></highlight><highlight class="comment">//<sp/>and<sp/>ends<sp/>at<sp/>offset<sp/>of<sp/>mT1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTime;<sp/></highlight><highlight class="comment">//<sp/>current<sp/>time<sp/>position<sp/>during<sp/>playback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mWarpedTime;<sp/></highlight><highlight class="comment">//<sp/>current<sp/>time<sp/>after<sp/>warping,<sp/>starting<sp/>at<sp/>zero<sp/>(unlike<sp/>mTime)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mWarpedLength;<sp/></highlight><highlight class="comment">//<sp/>total<sp/>length<sp/>after<sp/>warping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSeek;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mPlaybackRingBufferSecs;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCaptureRingBufferSecs;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mPlaybackSamplesToCopy;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMinCaptureSecsToCopy;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mPaused;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*mPortStreamV19;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSoftwarePlaythrough;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mPauseRec;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSilenceLevel;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNumCaptureChannels;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNumPlaybackChannels;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCaptureFormat;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLostSamples;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAudioThreadShouldCallFillBuffersOnce;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAudioThreadFillBuffersLoopRunning;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAudioThreadFillBuffersLoopActive;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/>wxLongLong<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLastPlaybackTimeMillis;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMidiThreadFillBuffersLoopRunning;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMidiThreadFillBuffersLoopActive;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>mLastRecordingOffset;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLastPaError;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/><sp/><sp/><sp/>*mOwningProject;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_meter" kindref="compound">Meter</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*mInputMeter;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_meter" kindref="compound">Meter</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*mOutputMeter;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mUpdateMeters;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mUpdatingMeters;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>USE_PORTMIXER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><ref refid="portmixer_8h_1a1928e1cfc2264146e581912ac5836c45" kindref="member">PxMixer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*mPortMixer;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mPreviousHWPlaythrough;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_PORTMIXER<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEmulateMixerOutputVol;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInputMixerWorks;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMixerOutputVol;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PLAY_STRAIGHT,</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PLAY_LOOPED,</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_SCRUBBING_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PLAY_SCRUB,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mPlayMode;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCutPreviewGapStart;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCutPreviewGapLen;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_growable_sample_buffer" kindref="compound">GrowableSampleBuffer</ref><sp/>mSilentBuf;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audio_i_o_listener" kindref="compound">AudioIOListener</ref>*<sp/><sp/><sp/><sp/>mListener;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655" refid="class_audio_i_o_1a894b7c943c91bb34f845aeb117786dff" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_audio_thread" kindref="compound">AudioThread</ref>;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MidiThread;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_audio_i_o_8h_1a5c082d9ef3612f42a4a78edffdf2a0db" kindref="member">InitAudioIO</ref>();</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_audio_i_o_8h_1a362633315924afe19ab0fe0cf4bd32da" kindref="member">DeinitAudioIO</ref>();</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_time_track" kindref="compound">TimeTrack</ref><sp/>*mTimeTrack;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>cacheing<sp/>supported<sp/>sample<sp/>rates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mCachedPlaybackIndex;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>wxArrayLong<sp/>mCachedPlaybackRates;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mCachedCaptureIndex;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>wxArrayLong<sp/>mCachedCaptureRates;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>wxArrayLong<sp/>mCachedSampleRates;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mCachedBestRateIn;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mCachedBestRateOut;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_audio_i_o_8cpp_1a0d694f00df707ad21d421a1b29ad46ea" kindref="member">audacityAudioCallback</ref>(</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*inputBuffer,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*outputBuffer,</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesPerBuffer,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_callback_time_info" kindref="compound">PaStreamCallbackTimeInfo</ref><sp/>*timeInfo,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a55a005924bcfa0424594f4f65cd4ae82" kindref="member">PaStreamCallbackFlags</ref><sp/>statusFlags,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="xmlparse_8c_1a4b666535c828e23ccd16510a0a1a1943" kindref="member">userData</ref><sp/>);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serialize<sp/>main<sp/>thread<sp/>and<sp/>PortAudio<sp/>thread&apos;s<sp/>attempts<sp/>to<sp/>pause<sp/>and<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>state<sp/>used<sp/>by<sp/>the<sp/>third,<sp/>Audio<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/>wxMutex<sp/>mSuspendAudioThread;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_SCRUBBING_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_audio_i_o_1_1_scrub_queue" kindref="compound">ScrubQueue</ref>;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_audio_i_o_1_1_scrub_queue" kindref="compound">ScrubQueue</ref><sp/>*mScrubQueue;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mSilentScrub;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>mScrubDuration;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal">};</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.h"/>
  </compounddef>
</doxygen>
